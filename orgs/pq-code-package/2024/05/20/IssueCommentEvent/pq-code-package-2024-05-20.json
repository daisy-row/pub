{"id":"38520108342","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-20T06:03:13Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119729055","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2119729055","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2119729055,"node_id":"IC_kwDOLh-nxs5-WH-f","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-20T06:03:12Z","updated_at":"2024-05-20T06:03:12Z","author_association":"CONTRIBUTOR","body":"Ultimately, I would like to see at least:\r\n- C code is verified to not exhibit undefined behaviour (assuming to-be-documented preconditions)\r\n- ASM code is verified for functional correctness\r\n- Some argument is made why all code is constant-time","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119729055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-20T06:03:13Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38520460337","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/55","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/55/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/55/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/55/events","html_url":"https://github.com/pq-code-package/tsc/issues/55","id":2292611772,"node_id":"I_kwDOLNiASM6Ipnq8","number":55,"title":"Access to ARM github runners","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-05-13T11:56:49Z","updated_at":"2024-05-20T06:18:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently the open-quantum-safe team is using circleci to build arm code.\r\n\r\nGithub made ARM64 runners available this year. Though initially private beta (Feb-Jun), our organization has access . However we don't currently have funding for the usage.\r\n\r\nRelated:\r\n * [build issue in liboqs - where arm runners would help](https://github.com/open-quantum-safe/liboqs/issues/1789)\r\n * [Request to get funding for ARM runners at oqs tsc](https://github.com/open-quantum-safe/tsc/issues/25)\r\n * [Github private beta repo](https://github.com/github-early-access/arm-runners-beta) (restricted access)\r\n \r\n @mkannwischer @hanno-becker Would this be useful for our arm repos?\r\n \r\n If so we might be able to estimate usage & see if we can also raise with the PQCA TAC -- which has the option of requesting funding from the Governing board.","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/55/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/55/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2119746215","html_url":"https://github.com/pq-code-package/tsc/issues/55#issuecomment-2119746215","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/55","id":2119746215,"node_id":"IC_kwDOLNiASM5-WMKn","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-20T06:18:31Z","updated_at":"2024-05-20T06:18:31Z","author_association":"NONE","body":"I agree with @mkannwischer that we don't need Arm runners for functional testing -- qemu is good enough. We do need access to specific hardware (see the [README](https://github.com/pq-code-package/mlkem-c-aarch64)) for benchmarking, but it appears that github's AArch64 runners would not give that flexibility.","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2119746215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-20T06:18:32Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38522436432","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38","id":2299765274,"node_id":"PR_kwDOLh-nxs5voeHg","number":38,"title":"Vectorize Rejection Sampling","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-05-16T08:50:10Z","updated_at":"2024-05-20T07:35:29Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/38","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38.patch","merged_at":null},"body":"[//]: # (SPDX-License-Identifier: CC-BY-4.0)\n[//]: # (TODO Customize PR template)\n\n# Improve the performance of Rejection Sampling\n\nI have not benchmark this code, this code is refactored and cleaned up from my previous implementation of Kyber.\n\nIt's seem like we need to switch to CircleCI to have ARM-based runner. \n\n\n[//]: # (See https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository )\n\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\n\n<!-- Please answer the following questions to help manage version and changes across projects. -->\n\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\n\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119853047","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38#issuecomment-2119853047","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38","id":2119853047,"node_id":"IC_kwDOLh-nxs5-WmP3","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-20T07:35:28Z","updated_at":"2024-05-20T07:35:28Z","author_association":"CONTRIBUTOR","body":"@cothan @mkannwischer This PR reminds me that we should discuss intrinsics vs. ASM.\r\n\r\nAs hinted at in the README, my preference is to write 'clean' ASM and automatically micro-optimize it, e.g. using SLOTHY. The main reasons are: (1) _Assurance:_ There is more tooling for the verification of ASM than Intrinsics, at least to my knowledge. Moreover, verification can be split into separate verification of the clean code and the micro-optimizations. (2) _Performance:_ Past experience shows that the best implementations are obtained by writing ASM by hand. Moreover, by splitting development into manual writing of clean code and automatic micro-optimization, development time should not be much higher than when writing intrinsics (This may be false in general if there are a lot of stack spills, but this is not the case for MLKEM).\r\n\r\nI would therefore propose that we do not use intrinsics but clean ASM throughout, including this PR. @cothan Would you be willing to port your intrinsics code to ASM? Might be a useful learning experience as well.\r\n\r\nThoughts?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119853047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-20T07:35:29Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38522529926","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-20T07:38:35Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119857678","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2119857678","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2119857678,"node_id":"IC_kwDOLh-nxs5-WnYO","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-20T07:38:34Z","updated_at":"2024-05-20T07:38:34Z","author_association":"CONTRIBUTOR","body":"@planetf1 Leaving aside the benchmarking platforms for which the maintainers have development boards, we would need budget for AWS EC2 instances (Graviton2, Graviton3, Apple M1) for benchmarking and CI. Is there precedent for how to get funding for this in PQCA/LF?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119857678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-20T07:38:35Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38523211761","type":"IssueCommentEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-20T08:01:47Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119893986","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2119893986","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2119893986,"node_id":"IC_kwDOLh-nxs5-WwPi","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"created_at":"2024-05-20T08:01:45Z","updated_at":"2024-05-20T08:01:45Z","author_association":"NONE","body":"The process in general would be to raise the issue at the TSC (this becomes more relevant when there are more projects so we can consolidate & ensure there's awareness, but given the active projects are working together less of an issue).\r\n\r\nThen we need to raise it with the PQCA TAC for general review, and they then either approve (if within existing budget) or raise a request with the governing board (if not).\r\n\r\nSounds like administrivia, but apart from the last step I think we can do quickly. Also it's my broad understanding, we're just getting started. I do join all the PQCA meetings \r\n\r\nDo you have an estimate on resource usage for the AWS EC2 instances ?\r\nAny thoughts on how this may grow over time (so we plan for say a year) ?\r\nAre there alternatives to EC2 (we may be asked)?\r\nWhen do you need it (yesterday?)\r\nWhat's the impact if you don't have it?\r\n\r\nThere's a PQCA TAC on Wed, so if we can get info together for that I can add an agenda item to the discussion","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119893986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-20T08:01:47Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38524510169","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-20T08:45:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119970560","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2119970560","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2119970560,"node_id":"IC_kwDOLh-nxs5-XC8A","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-20T08:45:47Z","updated_at":"2024-05-20T08:45:47Z","author_association":"CONTRIBUTOR","body":"> Do you have an estimate on resource usage for the AWS EC2 instances ?\r\n\r\nSome rough thoughts:\r\n\r\nWe'd want to benchmark branches and PR revisions. Every individual benchmark should be fast, I'd imagine a few minutes. Therefore, a single EC2 instance per type should be enough to cover CI demands initially, even with a fair amount of PR activity (which we haven't yet reached).\r\n\r\nFollowing https://aws.amazon.com/ec2/pricing/on-demand/, a Graviton3 instance (c7g/xlarge) is currently $0.1445/hr, Graviton2 (c6g/xlarge) is currently $0.136/hr. If the instances ran 24/7, this would amount to $209/month. The true cost should be much lower, however, since we are unlikely to ever reach a level of activity soon that would keep benchmarking CI busy permanently -- still, the above gives an upper bound for Graviton benchmarking.\r\n\r\nThere is some flexibility in the choice of instance size (medium, large, xlarge, {2,4,8,16}xlarge) -- the above is for xlarge instances with 4 vCPUs, allowing for fast build times. Instances with 1 vCPU would be cheaper, and while the build would be slower, they would likely be equally suitable for benchmarking since all our code is single-threaded.\r\n\r\nThis does not yet take into account potential M1 instances.\r\n\r\n> Any thoughts on how this may grow over time (so we plan for say a year) ?\r\n\r\nThe demand would grow with the frequency with which we make updates to PRs, so hopefully it would grow over time. However, a single instance per type should remain sufficient to cover our needs for the foreseeable future.\r\n\r\n> Are there alternatives to EC2 (we may be asked)?\r\n\r\nWe have other benchmarking targets independent of EC2, but Graviton2/3 are part of EC2.\r\n\r\n> When do you need it (yesterday?)\r\n\r\nWhen we start optimizing MLKEM-C-AArch64 for performance -- in the coming weeks I'd suppose (the first PR to this effect is #38).\r\n\r\n> What's the impact if you don't have it?\r\n\r\nWe have to conduct ad-hoc measurements for our PRs. I would imagine this effectively leads to incomplete benchmarking information per PR, depending on what board/EC2 access the respective maintainer has.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2119970560/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-20T08:45:48Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38527591630","type":"IssueCommentEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/31","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/31/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/31/events","html_url":"https://github.com/pq-code-package/tsc/issues/31","id":2182681006,"node_id":"I_kwDOLNiASM6CGRGu","number":31,"title":"Arrange next hackathon","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"assignees":[{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2024-03-12T21:10:48Z","updated_at":"2024-05-20T10:26:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I suggest we consider running another hackathon.\r\n\r\nWe can discuss what went well/not so well, whether it's worth running another one, and define specific objectives.\r\n\r\nIt may include any of\r\n - ongoing onboarding \r\n - more focus on ci/cd\r\n - 'pipelines' between repos / reuse\r\n - consistency \r\n -docs\r\n.....\r\n\r\nI think it could be useful and can volunteer to setup/arrange if the TSC concurs.","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/31/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/31/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2120154946","html_url":"https://github.com/pq-code-package/tsc/issues/31#issuecomment-2120154946","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/31","id":2120154946,"node_id":"IC_kwDOLNiASM5-Xv9C","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"created_at":"2024-05-20T10:26:43Z","updated_at":"2024-05-20T10:26:43Z","author_association":"CONTRIBUTOR","body":"Suggestion - hackathons for specific implementation to encourage more contributors on an implementation","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2120154946/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-20T10:26:44Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38533791053","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38","id":2299765274,"node_id":"PR_kwDOLh-nxs5voeHg","number":38,"title":"Vectorize Rejection Sampling","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-05-16T08:50:10Z","updated_at":"2024-05-20T13:50:26Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/38","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38.patch","merged_at":null},"body":"[//]: # (SPDX-License-Identifier: CC-BY-4.0)\n[//]: # (TODO Customize PR template)\n\n# Improve the performance of Rejection Sampling\n\nI have not benchmark this code, this code is refactored and cleaned up from my previous implementation of Kyber.\n\nIt's seem like we need to switch to CircleCI to have ARM-based runner. \n\n\n[//]: # (See https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository )\n\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\n\n<!-- Please answer the following questions to help manage version and changes across projects. -->\n\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\n\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2120504972","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38#issuecomment-2120504972","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38","id":2120504972,"node_id":"IC_kwDOLh-nxs5-ZFaM","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-05-20T13:50:24Z","updated_at":"2024-05-20T13:50:24Z","author_association":"CONTRIBUTOR","body":"Hi @hanno-becker , \r\n\r\nGood idea. Originally this function was implemented in Intrinsic since it's quicker for me to debug in my VSCode. I Don't mind writing ASM at all. I will port this implementation to ASM. Do we have a Python template to generate ASM that I can take look at?\r\n ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2120504972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-20T13:50:26Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38534046000","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38","id":2299765274,"node_id":"PR_kwDOLh-nxs5voeHg","number":38,"title":"Vectorize Rejection Sampling","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2024-05-16T08:50:10Z","updated_at":"2024-05-20T13:58:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/38","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38.patch","merged_at":null},"body":"[//]: # (SPDX-License-Identifier: CC-BY-4.0)\n[//]: # (TODO Customize PR template)\n\n# Improve the performance of Rejection Sampling\n\nI have not benchmark this code, this code is refactored and cleaned up from my previous implementation of Kyber.\n\nIt's seem like we need to switch to CircleCI to have ARM-based runner. \n\n\n[//]: # (See https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository )\n\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\n\n<!-- Please answer the following questions to help manage version and changes across projects. -->\n\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\n\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2120519526","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/38#issuecomment-2120519526","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/38","id":2120519526,"node_id":"IC_kwDOLh-nxs5-ZI9m","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-20T13:58:11Z","updated_at":"2024-05-20T13:58:11Z","author_association":"CONTRIBUTOR","body":"@cothan I tend to write ASM by hand, but making extensive use of `.req` and `.macro` directives to keep things modular and readable. We have plenty of examples in the [SLOTHY](https://github.com/slothy-optimizer/slothy) repo.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2120519526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-20T13:58:12Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
