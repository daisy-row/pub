{"id":"38228945376","type":"IssueCommentEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/13","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/13/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/13/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/13/events","html_url":"https://github.com/pq-code-package/tsc/issues/13","id":2144343430,"node_id":"I_kwDOLNiASM5_0BWG","number":13,"title":"Create documentation for pq cp general info, projects summary and processes,","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-02-20T13:07:47Z","updated_at":"2024-05-09T10:15:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As we build up the pqca project I think we should start documenting our processes\r\n\r\nFor example #11 discusses how repos may be named - others relate to codes of conduct, security.\r\n\r\nWhilst we have the external website at https://pqca.org/ , I'm thinking of more operational/developer type information.\r\nEach project will also have detailed docs, and in some cases established documentation sites.\r\nI think we have another set of content in between where we document how the overall PQCA project is being run, what it offers, conventions & standards/ what our processes are etc.\r\n\r\nA few approaches I can think of include\r\n - [Github pages](https://pages.github.com/) ([mkdocs](https://www.mkdocs.org/) can add nicer formatting to plain github markdown, and there are various other options too) - As a developer I like this approach as it feels natural\r\n - Wiki ([github](https://docs.github.com/en/communities/documenting-your-project-with-wikis/about-wikis) or other) - this can work better for some non-developers (to which I include anyone creating content including docs, tests, ci etc) ,though I feel they are less likely to write content here\r\n - Website - where? LF? I'm far less comfortable with this\r\n \r\n I think it would be useful to get something up asap - even if only temporary ","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/13/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/13/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2102375165","html_url":"https://github.com/pq-code-package/tsc/issues/13#issuecomment-2102375165","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/13","id":2102375165,"node_id":"IC_kwDOLNiASM59T7L9","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"created_at":"2024-05-09T10:15:24Z","updated_at":"2024-05-09T10:15:24Z","author_association":"CONTRIBUTOR","body":"Further updates have been made to the docs site in an effort to try and build an initial structure","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2102375165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-09T10:15:25Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38229348696","type":"IssueCommentEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/47","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/47/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/47/events","html_url":"https://github.com/pq-code-package/tsc/pull/47","id":2282228030,"node_id":"PR_kwDOLNiASM5utUgK","number":47,"title":"Add Hanno Becker to TSC members","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-05-07T04:07:21Z","updated_at":"2024-05-09T10:29:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/tsc/pulls/47","html_url":"https://github.com/pq-code-package/tsc/pull/47","diff_url":"https://github.com/pq-code-package/tsc/pull/47.diff","patch_url":"https://github.com/pq-code-package/tsc/pull/47.patch","merged_at":null},"body":"I'd like to propose Hanno Becker from AWS as an additional TSC member. He is going to join me in maintaining https://github.com/pq-code-package/mlkem-c-aarch64.","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/47/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/47/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2102397724","html_url":"https://github.com/pq-code-package/tsc/pull/47#issuecomment-2102397724","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/47","id":2102397724,"node_id":"IC_kwDOLNiASM59UAsc","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"created_at":"2024-05-09T10:29:20Z","updated_at":"2024-05-09T10:29:20Z","author_association":"CONTRIBUTOR","body":"Thanks @mkannwischer - as we startup the TSC, the intent is to have all the initial repo owners as TSC members - I too agree with this proposal. We plan to confirm the initial TSC list on the kickoff call today","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2102397724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-09T10:29:21Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38236785964","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/33","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/33/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/33/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/33/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/33","id":2283654694,"node_id":"I_kwDOLh-nxs6IHc4m","number":33,"title":"Optimal number of Keccak-f1600 lanes","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"assignees":[{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2024-05-07T15:27:11Z","updated_at":"2024-05-09T14:43:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Optimal number of `Keccak-f1600` lanes \r\n\r\nSHAKE128 function is used in `gen_matrix` function with `KYBER_K = 2,3,4`. \r\n\r\nHere is the C reference implementation:\r\n```c\r\n    for (i = 0; i < KYBER_K; i++) {\r\n        for (j = 0; j < KYBER_K; j++) {\r\n            if (transposed) {\r\n                xof_absorb(&state, seed, i, j);\r\n            } else {\r\n                xof_absorb(&state, seed, j, i);\r\n            }\r\n\r\n            xof_squeezeblocks(buf, GEN_MATRIX_NBLOCKS, &state);\r\n            buflen = GEN_MATRIX_NBLOCKS * XOF_BLOCKBYTES;\r\n            ctr = rej_uniform(a[i].vec[j].coeffs, KYBER_N, buf, buflen);\r\n```\r\n\r\nThe number of `xof_absorb` (`SHAKE128_Absorb`) are `KYBER_K x KYBER_K`. Thus, the two for loops will need: \r\n- 4 when `KYBER_K = 2`.\r\n- 9 when `KYBER_K = 3`.\r\n- 16 when `KYBER_K = 4`. \r\n\r\nThe output state of `xof_absorb` will be used in `xof_sqeezeblock` and send to sampling function `reject_uniform()`.\r\nWhen the counter of `reject_uniform()` does not meet the size of vector KYBER_N (256), an additional squeeze is needed until the sampling fulfill the vector KYBER_N. \r\n\r\n```c\r\n        while (ctr < KYBER_N) {\r\n                off = buflen % 3;\r\n                for (k = 0; k < off; k++) {\r\n                    buf[k] = buf[buflen - off + k];\r\n                }\r\n                xof_squeezeblocks(buf + off, 1, &state);\r\n                buflen = off + XOF_BLOCKBYTES;\r\n                ctr += rej_uniform(a[i].vec[j].coeffs + ctr, KYBER_N - ctr, buf, buflen);\r\n            }\r\n```\r\n\r\nAccording to Table 1 in [Hanno Becker and Matthias Kannwischer paper](https://kannwischer.eu/papers/2022_armv8keccak.pdf)\r\n\r\nIt shows: \r\n\r\n- x2 (2 times Keccak in a single call) is not optimal. \r\n- x3 (3 times Keccak in a single call) is better than x2, suitable for `KYBER_K = 3`.\r\n- x4 (4 times Keccak in a single call) is better than x2, suitable for `KYBER_K = 2, 4`. \r\n\r\nOf course, the number are varies depend on the ARM processor, the relative ranking between x2-x3, x2-x4 stay the same. \r\nI had my benchmark in the past in Apple M1 shows that `x2` is better than `x4`, but the different is somewhat small, and the differences contribute very little to the overall speed-up of Kyber on Apple M1. So I still think using `x4` is optimal for many ARM CPUs. \r\n\r\nMy conclusion: \r\n- `KYBER_K = 2,4`, we use x4. \r\n- `KYBER_K = 3`, we use x3.\r\n\r\nWhat do you think? @mkannwischer @hanno \r\n\r\n## Optimal memory `Keccak-f1600` layout:\r\n\r\nClosely related to the implementation of Keccak-f1600, the memory layout will help make the load/store easier/faster. \r\nTwo choices of memory layout: \r\n\r\n1. Vector style: Vector 1 | Vector 2 .... as in the default C implementation. To load prepare the memory for Keccak, one must cover it to lane style, to store as vector style, one must convert from lane style back to vector style.\r\n2. Lane style. There is no need to prepare the memory, but for the case we need vector style, we will need additional function to convert from lane style to vector style (which can be embedded in other function calls).\r\n  a. x3: `Line 1 | Line 2 | Line 3 | Line 1 | Line 2 | Line 3 | .. and repeat`\r\n  b. x4: `Line 1 | Line 2 | Line 3 | Line 4 | Line 1 | Line 2 | Line 3 | Line 4 | ... and repeat`.\r\n\r\nThe 2. approach seem optimal to me. What do you think? @mkannwischer @hanno-becker \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/33/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/33/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2102803690","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/33#issuecomment-2102803690","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/33","id":2102803690,"node_id":"IC_kwDOLh-nxs59Vjzq","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-09T14:43:31Z","updated_at":"2024-05-09T14:43:31Z","author_association":"CONTRIBUTOR","body":"Thanks @cothan!\r\n\r\nI agree that optimal performance may require different choices of N in the N-way Keccak permutation, but for the sake of progress I'd suggest we start with the fixed choice of N=4 and see how that goes. What do you think, @cothan @mkannwischer?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2102803690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-09T14:43:33Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38248754233","type":"IssueCommentEvent","actor":{"id":23340773,"login":"ashman-p","display_login":"ashman-p","gravatar_id":"","url":"https://api.github.com/users/ashman-p","avatar_url":"https://avatars.githubusercontent.com/u/23340773?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/29","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/29/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/29/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/29/events","html_url":"https://github.com/pq-code-package/tsc/issues/29","id":2182259088,"node_id":"I_kwDOLNiASM6CEqGQ","number":29,"title":"ML-KEM Test Vectors","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2024-03-12T17:22:24Z","updated_at":"2024-05-09T22:28:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"This a request to create a repo for ML-KEM test vectors.\r\nA potential source is https://github.com/C2SP/CCTV/tree/main/ML-KEM pending how the CC0 license check works out.\r\n\r\nIt is likely that there could multiple sources.","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/29/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/29/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2103547787","html_url":"https://github.com/pq-code-package/tsc/issues/29#issuecomment-2103547787","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/29","id":2103547787,"node_id":"IC_kwDOLNiASM59YZeL","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"created_at":"2024-05-09T22:28:41Z","updated_at":"2024-05-09T22:28:41Z","author_association":"NONE","body":"This serves as an alternative proposal for accessing test vectors for ML-KEM and future ML-DSA.\r\nThe proposal is to create a test harness that interfaces to NIST's demo test server which creates test vectors for various algorithms. This would allow various checks for compliance with the appropriate standards. \r\n\r\nThe harness connects to the NIST server, registers the algorithm and capabilities to test. The test server in response generates test vectors which are delivered to the unit under test. Test results to the corresponding session are returned to the server which the server gives an assessment.\r\n\r\nWe have the option of storing the test vectors and reuse them for static (KAT-like) tests.\r\nPlease give feedback on the idea.\r\nWhere would such a harness be stored? In its own repo?\r\nThis would require some input from the LF because it would need credentials for connecting to NIST. \r\nI will reach out the Ry and Naomi in parallel concerning credentials needed. \r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2103547787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-09T22:28:42Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
