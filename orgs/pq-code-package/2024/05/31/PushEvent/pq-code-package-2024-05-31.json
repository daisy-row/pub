{"id":"38896815743","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18678880011,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"7477f42025a9ce0b1e75a74488c4d4ae6548ad43","before":"30986d2a7814a4a4b5f9d710db0e402764f558bf","commits":[{"sha":"7477f42025a9ce0b1e75a74488c4d4ae6548ad43","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"CBMC: Demonstrate use of CBMC in example of poly_compress\n\nC code in MLKEM-C-AArch64 should be free of undefined behaviour.\nThe C Bounded Model Checker (CBMC) is a tool which can prove absence\nof various classes of undefined behaviour.\n\nThis commit is a first step towards using CBMC to harden MLKEM-C-AArch64.\n\n- Setup CBMC boilerplate using cbmc-starter-kit: All proof harnesses,\n  scripts and Makefiles needed to run CBMC are in the `cbmc/` directory.\n  Harnesses are organized by the (main) function to which they apply,\n  and stored in separate directories with the name of the function.\n- Demonstrate the use of CBMC in the example of the decompression funcion\n  `poly_decompress`: Specify (in natural language, in a function contract,\n  and in the test harness) that the coefficients in the output polynomial\n  of this function are unsigned canonical.\n- Guided by CBMC, make smaller changes to `poly_decompress` to avoid\n  integer truncation warnings. The previous code did _not_ trigger\n  undefined behaviour to my understanding (signed -> unsigned conversions\n  are always defined), but it is arguably still better style to make\n  truncations explicit.\n\nTo run the `poly_decompress` proofs along:\n\n```\ncd cbmc/proofs/poly_decompress\nmake\n```\n\nTo run all CBMC tests (only `poly_decompress` so far, but more will\nhopefully be added) and print a summary,\n\n```\ncd cbmc/proofs\nKYBER_K={2,3,4} run-cbmc-proofs.py --summarize\n```\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/7477f42025a9ce0b1e75a74488c4d4ae6548ad43"}]},"public":true,"created_at":"2024-05-31T19:43:38Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38896999745","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18678967189,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"952348947cc73df7796a41e83047e1fe1f0d4771","before":"7477f42025a9ce0b1e75a74488c4d4ae6548ad43","commits":[{"sha":"952348947cc73df7796a41e83047e1fe1f0d4771","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"CBMC: Demonstrate use of CBMC in example of poly_compress\n\nC code in MLKEM-C-AArch64 should be free of undefined behaviour.\nThe C Bounded Model Checker (CBMC) is a tool which can prove absence\nof various classes of undefined behaviour.\n\nThis commit is a first step towards using CBMC to harden MLKEM-C-AArch64.\n\n- Setup CBMC boilerplate using cbmc-starter-kit: All proof harnesses,\n  scripts and Makefiles needed to run CBMC are in the `cbmc/` directory.\n  Harnesses are organized by the (main) function to which they apply,\n  and stored in separate directories with the name of the function.\n- Demonstrate the use of CBMC in the example of the decompression funcion\n  `poly_decompress`: Specify (in natural language, in a function contract,\n  and in the test harness) that the coefficients in the output polynomial\n  of this function are unsigned canonical.\n- Guided by CBMC, make smaller changes to `poly_decompress` to avoid\n  integer truncation warnings. The previous code did _not_ trigger\n  undefined behaviour to my understanding (signed -> unsigned conversions\n  are always defined), but it is arguably still better style to make\n  truncations explicit.\n\nTo run the `poly_decompress` proofs along:\n\n```\ncd cbmc/proofs/poly_decompress\nmake\n```\n\nTo run all CBMC tests (only `poly_decompress` so far, but more will\nhopefully be added) and print a summary,\n\n```\ncd cbmc/proofs\nKYBER_K={2,3,4} run-cbmc-proofs.py --summarize\n```\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/952348947cc73df7796a41e83047e1fe1f0d4771"}]},"public":true,"created_at":"2024-05-31T19:52:12Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897015130","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18678974476,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"738a83583963fc5786ac593a4c57cb19cb2b6d62","before":"952348947cc73df7796a41e83047e1fe1f0d4771","commits":[{"sha":"738a83583963fc5786ac593a4c57cb19cb2b6d62","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"CBMC: Demonstrate use of CBMC in example of poly_compress\n\nC code in MLKEM-C-AArch64 should be free of undefined behaviour.\nThe C Bounded Model Checker (CBMC) is a tool which can prove absence\nof various classes of undefined behaviour.\n\nThis commit is a first step towards using CBMC to harden MLKEM-C-AArch64.\n\n- Setup CBMC boilerplate using cbmc-starter-kit: All proof harnesses,\n  scripts and Makefiles needed to run CBMC are in the `cbmc/` directory.\n  Harnesses are organized by the (main) function to which they apply,\n  and stored in separate directories with the name of the function.\n- Demonstrate the use of CBMC in the example of the decompression funcion\n  `poly_decompress`: Specify (in natural language, in a function contract,\n  and in the test harness) that the coefficients in the output polynomial\n  of this function are unsigned canonical.\n- Guided by CBMC, make smaller changes to `poly_decompress` to avoid\n  integer truncation warnings. The previous code did _not_ trigger\n  undefined behaviour to my understanding (signed -> unsigned conversions\n  are always defined), but it is arguably still better style to make\n  truncations explicit.\n\nTo run the `poly_decompress` proofs along:\n\n```\ncd cbmc/proofs/poly_decompress\nmake\n```\n\nTo run all CBMC tests (only `poly_decompress` so far, but more will\nhopefully be added) and print a summary,\n\n```\ncd cbmc/proofs\nKYBER_K={2,3,4} run-cbmc-proofs.py --summarize\n```\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/738a83583963fc5786ac593a4c57cb19cb2b6d62"}]},"public":true,"created_at":"2024-05-31T19:52:58Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897201075","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679062885,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"4d651fffa1904f18e6682b4364bb657c66f57bd8","before":"738a83583963fc5786ac593a4c57cb19cb2b6d62","commits":[{"sha":"4d651fffa1904f18e6682b4364bb657c66f57bd8","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"CBMC: Demonstrate use of CBMC in example of poly_compress\n\nC code in MLKEM-C-AArch64 should be free of undefined behaviour.\nThe C Bounded Model Checker (CBMC) is a tool which can prove absence\nof various classes of undefined behaviour.\n\nThis commit is a first step towards using CBMC to harden MLKEM-C-AArch64.\n\n- Setup CBMC boilerplate using cbmc-starter-kit: All proof harnesses,\n  scripts and Makefiles needed to run CBMC are in the `cbmc/` directory.\n  Harnesses are organized by the (main) function to which they apply,\n  and stored in separate directories with the name of the function.\n- Demonstrate the use of CBMC in the example of the decompression funcion\n  `poly_decompress`: Specify (in natural language, in a function contract,\n  and in the test harness) that the coefficients in the output polynomial\n  of this function are unsigned canonical.\n- Guided by CBMC, make smaller changes to `poly_decompress` to avoid\n  integer truncation warnings. The previous code did _not_ trigger\n  undefined behaviour to my understanding (signed -> unsigned conversions\n  are always defined), but it is arguably still better style to make\n  truncations explicit.\n\nTo run the `poly_decompress` proofs along:\n\n```\ncd cbmc/proofs/poly_decompress\nmake\n```\n\nTo run all CBMC tests (only `poly_decompress` so far, but more will\nhopefully be added) and print a summary,\n\n```\ncd cbmc/proofs\nKYBER_K={2,3,4} run-cbmc-proofs.py --summarize\n```\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/4d651fffa1904f18e6682b4364bb657c66f57bd8"}]},"public":true,"created_at":"2024-05-31T20:01:40Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897248880","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679086806,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"bfc86b8255412cd955ca36ca47ef64b493fa602a","before":"4d651fffa1904f18e6682b4364bb657c66f57bd8","commits":[{"sha":"bfc86b8255412cd955ca36ca47ef64b493fa602a","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"CBMC: Demonstrate use of CBMC in example of poly_compress\n\nC code in MLKEM-C-AArch64 should be free of undefined behaviour.\nThe C Bounded Model Checker (CBMC) is a tool which can prove absence\nof various classes of undefined behaviour.\n\nThis commit is a first step towards using CBMC to harden MLKEM-C-AArch64.\n\n- Setup CBMC boilerplate using cbmc-starter-kit: All proof harnesses,\n  scripts and Makefiles needed to run CBMC are in the `cbmc/` directory.\n  Harnesses are organized by the (main) function to which they apply,\n  and stored in separate directories with the name of the function.\n- Demonstrate the use of CBMC in the example of the decompression funcion\n  `poly_decompress`: Specify (in natural language, in a function contract,\n  and in the test harness) that the coefficients in the output polynomial\n  of this function are unsigned canonical.\n- Guided by CBMC, make smaller changes to `poly_decompress` to avoid\n  integer truncation warnings. The previous code did _not_ trigger\n  undefined behaviour to my understanding (signed -> unsigned conversions\n  are always defined), but it is arguably still better style to make\n  truncations explicit.\n\nTo run the `poly_decompress` proofs along:\n\n```\ncd cbmc/proofs/poly_decompress\nmake\n```\n\nTo run all CBMC tests (only `poly_decompress` so far, but more will\nhopefully be added) and print a summary,\n\n```\ncd cbmc/proofs\nKYBER_K={2,3,4} run-cbmc-proofs.py --summarize\n```\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/bfc86b8255412cd955ca36ca47ef64b493fa602a"}]},"public":true,"created_at":"2024-05-31T20:03:54Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897386680","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679153575,"size":9,"distinct_size":7,"ref":"refs/heads/cbmc","head":"b77aafb47d9cdff1c5cea2732a55abbe242aae27","before":"bfc86b8255412cd955ca36ca47ef64b493fa602a","commits":[{"sha":"05226a4b7ec8454d438dec6f9818800b467459e3","author":{"email":"matthias@kannwischer.eu","name":"Matthias J. Kannwischer"},"message":"Update CODEOWNERS, PR template (#41)\n\n* Update CODEOWNERS\r\n\r\nSigned-off-by: Matthias J. Kannwischer <matthias@kannwischer.eu>\r\n\r\n* Update pull_request_template.md\r\n\r\nSigned-off-by: Matthias J. Kannwischer <matthias@kannwischer.eu>\r\n\r\n---------\r\n\r\nSigned-off-by: Matthias J. Kannwischer <matthias@kannwischer.eu>","distinct":false,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/05226a4b7ec8454d438dec6f9818800b467459e3"},{"sha":"ca8031bad18fdc054ed43b2b709fb9d4e07e1888","author":{"email":"matthias@kannwischer.eu","name":"Matthias J. Kannwischer"},"message":"Automatically check for SPDX headers and linting (#40)","distinct":false,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/ca8031bad18fdc054ed43b2b709fb9d4e07e1888"},{"sha":"f96221bb8232c485a4a22e3418b27e6bdd95adfb","author":{"email":"15379156+potsrevennil@users.noreply.github.com","name":"Thing-han, Lim"},"message":"refactor nix configuration\n\nMove scripts into scripts/ folder\nUpdated nix configuration according to what have been done in mlkem-c-embedded\n\nSigned-off-by: Thing-han, Lim <15379156+potsrevennil@users.noreply.github.com>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/f96221bb8232c485a4a22e3418b27e6bdd95adfb"},{"sha":"f28372cf91574a6f82c8645b1543071b25ff97ab","author":{"email":"15379156+potsrevennil@users.noreply.github.com","name":"Thing-han, Lim"},"message":"use macos-latest(arm64) as ci runner\n\nSigned-off-by: Thing-han, Lim <15379156+potsrevennil@users.noreply.github.com>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/f28372cf91574a6f82c8645b1543071b25ff97ab"},{"sha":"08bfb6419435d04d5798ea01776fb1d110067cbb","author":{"email":"15379156+potsrevennil@users.noreply.github.com","name":"Thing-han, Lim"},"message":"Add summary for github action\n\nSigned-off-by: Thing-han, Lim <15379156+potsrevennil@users.noreply.github.com>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/08bfb6419435d04d5798ea01776fb1d110067cbb"},{"sha":"6b612d2d5187b04060e9e24253588f63c5af5963","author":{"email":"15379156+potsrevennil@users.noreply.github.com","name":"Thing-han, Lim"},"message":"specify installing arm64 gcc in nix\n\nSigned-off-by: Thing-han, Lim <15379156+potsrevennil@users.noreply.github.com>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/6b612d2d5187b04060e9e24253588f63c5af5963"},{"sha":"c04d057b9760d2db6b9cd32fe769790b01e94a59","author":{"email":"15379156+potsrevennil@users.noreply.github.com","name":"Thing-han, Lim"},"message":"ignore gcc for x86-64 for now and let aarch64-darwin use native clang\n\nSigned-off-by: Thing-han, Lim <15379156+potsrevennil@users.noreply.github.com>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/c04d057b9760d2db6b9cd32fe769790b01e94a59"},{"sha":"1a3a2bb98d62ace89497fcacd49f64128b598c91","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"CBMC: Demonstrate use of CBMC in example of poly_compress\n\nC code in MLKEM-C-AArch64 should be free of undefined behaviour.\nThe C Bounded Model Checker (CBMC) is a tool which can prove absence\nof various classes of undefined behaviour.\n\nThis commit is a first step towards using CBMC to harden MLKEM-C-AArch64.\n\n- Setup CBMC boilerplate using cbmc-starter-kit: All proof harnesses,\n  scripts and Makefiles needed to run CBMC are in the `cbmc/` directory.\n  Harnesses are organized by the (main) function to which they apply,\n  and stored in separate directories with the name of the function.\n- Demonstrate the use of CBMC in the example of the decompression funcion\n  `poly_decompress`: Specify (in natural language, in a function contract,\n  and in the test harness) that the coefficients in the output polynomial\n  of this function are unsigned canonical.\n- Guided by CBMC, make smaller changes to `poly_decompress` to avoid\n  integer truncation warnings. The previous code did _not_ trigger\n  undefined behaviour to my understanding (signed -> unsigned conversions\n  are always defined), but it is arguably still better style to make\n  truncations explicit.\n\nTo run the `poly_decompress` proofs along:\n\n```\ncd cbmc/proofs/poly_decompress\nmake\n```\n\nTo run all CBMC tests (only `poly_decompress` so far, but more will\nhopefully be added) and print a summary,\n\n```\ncd cbmc/proofs\nKYBER_K={2,3,4} run-cbmc-proofs.py --summarize\n```\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/1a3a2bb98d62ace89497fcacd49f64128b598c91"},{"sha":"b77aafb47d9cdff1c5cea2732a55abbe242aae27","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"Add CBMC to CI","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/b77aafb47d9cdff1c5cea2732a55abbe242aae27"}]},"public":true,"created_at":"2024-05-31T20:10:14Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897395489","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679157906,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"478ccd2ba7443719b3a43b694d3291b9886a7a28","before":"b77aafb47d9cdff1c5cea2732a55abbe242aae27","commits":[{"sha":"478ccd2ba7443719b3a43b694d3291b9886a7a28","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"Add CBMC to CI\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/478ccd2ba7443719b3a43b694d3291b9886a7a28"}]},"public":true,"created_at":"2024-05-31T20:10:38Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897445486","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679182196,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"1bc4cdbd21fdde1761c86a8d72693bba92c3586d","before":"478ccd2ba7443719b3a43b694d3291b9886a7a28","commits":[{"sha":"1bc4cdbd21fdde1761c86a8d72693bba92c3586d","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"Add CBMC to CI\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/1bc4cdbd21fdde1761c86a8d72693bba92c3586d"}]},"public":true,"created_at":"2024-05-31T20:12:50Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897534933","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679224532,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"3c03a48db17b189d4e895e3f90d88e8479140b60","before":"1bc4cdbd21fdde1761c86a8d72693bba92c3586d","commits":[{"sha":"3c03a48db17b189d4e895e3f90d88e8479140b60","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"Add CBMC to CI\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/3c03a48db17b189d4e895e3f90d88e8479140b60"}]},"public":true,"created_at":"2024-05-31T20:16:50Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897601372","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679257075,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"d68a755b14d4e9927a99b58033a4139d8f2a893d","before":"3c03a48db17b189d4e895e3f90d88e8479140b60","commits":[{"sha":"d68a755b14d4e9927a99b58033a4139d8f2a893d","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"Add CBMC to CI\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/d68a755b14d4e9927a99b58033a4139d8f2a893d"}]},"public":true,"created_at":"2024-05-31T20:19:52Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897874946","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679392059,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"341f6e9141b643c5b8d816b277ea05e6da33f078","before":"d68a755b14d4e9927a99b58033a4139d8f2a893d","commits":[{"sha":"341f6e9141b643c5b8d816b277ea05e6da33f078","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"Add CBMC to CI\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/341f6e9141b643c5b8d816b277ea05e6da33f078"}]},"public":true,"created_at":"2024-05-31T20:32:47Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38897978642","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679443969,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"7da476d1c85c5c3ff893e1e0b6eb134385ec694b","before":"341f6e9141b643c5b8d816b277ea05e6da33f078","commits":[{"sha":"7da476d1c85c5c3ff893e1e0b6eb134385ec694b","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"Add CBMC to CI\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/7da476d1c85c5c3ff893e1e0b6eb134385ec694b"}]},"public":true,"created_at":"2024-05-31T20:37:45Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38898058327","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679481323,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"bd67830952bbc78f44d4845e342bbe4b088972af","before":"7da476d1c85c5c3ff893e1e0b6eb134385ec694b","commits":[{"sha":"bd67830952bbc78f44d4845e342bbe4b088972af","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"Add CBMC to CI\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/bd67830952bbc78f44d4845e342bbe4b088972af"}]},"public":true,"created_at":"2024-05-31T20:41:36Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38898128951","type":"PushEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"repository_id":773826502,"push_id":18679513233,"size":1,"distinct_size":1,"ref":"refs/heads/cbmc","head":"6def936926e3e1835b01b55fbad8907efca8caef","before":"bd67830952bbc78f44d4845e342bbe4b088972af","commits":[{"sha":"6def936926e3e1835b01b55fbad8907efca8caef","author":{"email":"beckphan@amazon.co.uk","name":"Hanno Becker"},"message":"Add CBMC to CI\n\nSigned-off-by: Hanno Becker <beckphan@amazon.co.uk>","distinct":true,"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/commits/6def936926e3e1835b01b55fbad8907efca8caef"}]},"public":true,"created_at":"2024-05-31T20:44:59Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
