{"id":"38590894887","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-22T03:47:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123813613","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2123813613","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2123813613,"node_id":"IC_kwDOLh-nxs5-ltLt","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-22T03:47:13Z","updated_at":"2024-05-22T03:47:13Z","author_association":"CONTRIBUTOR","body":"We don't have to sort the _how_ at this point, only agree on _what_ we want to achieve.\r\n\r\nIn the interest of progress, I think @mkannwischer points above make sense. At the same time, I don't think we qualify as \"high assurance\" and \"production-ready\" if we don't handle functional correctness of at least the assembly. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123813613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-22T03:47:15Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38592606963","type":"IssueCommentEvent","actor":{"id":22537733,"login":"rod-chapman","display_login":"rod-chapman","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","avatar_url":"https://avatars.githubusercontent.com/u/22537733?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-22T05:28:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123894581","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2123894581","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2123894581,"node_id":"IC_kwDOLh-nxs5-mA81","user":{"login":"rod-chapman","id":22537733,"node_id":"MDQ6VXNlcjIyNTM3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/22537733?v=4","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","html_url":"https://github.com/rod-chapman","followers_url":"https://api.github.com/users/rod-chapman/followers","following_url":"https://api.github.com/users/rod-chapman/following{/other_user}","gists_url":"https://api.github.com/users/rod-chapman/gists{/gist_id}","starred_url":"https://api.github.com/users/rod-chapman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rod-chapman/subscriptions","organizations_url":"https://api.github.com/users/rod-chapman/orgs","repos_url":"https://api.github.com/users/rod-chapman/repos","events_url":"https://api.github.com/users/rod-chapman/events{/privacy}","received_events_url":"https://api.github.com/users/rod-chapman/received_events","type":"User","site_admin":false},"created_at":"2024-05-22T05:28:27Z","updated_at":"2024-05-22T05:28:27Z","author_association":"NONE","body":"I concur with Hanno. To expand a little, reasonable targets for formal (static) verification would be:\r\n1. Absence of undefined behaviour.\r\n2. Absence of all other memory- and type-safety defects, including arithmetic overflows.\r\n3. Absence of dependence on unspecified behaviour (e.g. no dependence on expression evaluation order).\r\n\r\nThese are basic targets that must come first before other, more advanced proofs could be attempted.\r\n\r\n(PS.. allow me to introduce myself: I am Rod, colleague of Hanno at AWS. I am responsible for the LibMLKEM SPARK/Ada implementation and its proof.)\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123894581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-22T05:28:28Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38592875315","type":"IssueCommentEvent","actor":{"id":3984960,"login":"mkannwischer","display_login":"mkannwischer","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","avatar_url":"https://avatars.githubusercontent.com/u/3984960?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-22T05:42:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123908315","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2123908315","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2123908315,"node_id":"IC_kwDOLh-nxs5-mETb","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"created_at":"2024-05-22T05:42:19Z","updated_at":"2024-05-22T05:42:19Z","author_association":"CONTRIBUTOR","body":"Thanks @rod-chapman! \r\n\r\nWould you see these basic targets as required for any kind of deployment, or do you see value in having a fast implementations first and adding these (basic) proofs later? ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123908315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-22T05:42:20Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38593050977","type":"IssueCommentEvent","actor":{"id":3984960,"login":"mkannwischer","display_login":"mkannwischer","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","avatar_url":"https://avatars.githubusercontent.com/u/3984960?"},"repo":{"id":770992871,"name":"pq-code-package/mlkem-c-embedded","url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-embedded/issues/34","id":2280182127,"node_id":"I_kwDOLfRq586H6NFv","number":34,"title":"Add flag to tests scripts to specfic tty device","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"potsrevennil","id":15379156,"node_id":"MDQ6VXNlcjE1Mzc5MTU2","avatar_url":"https://avatars.githubusercontent.com/u/15379156?v=4","gravatar_id":"","url":"https://api.github.com/users/potsrevennil","html_url":"https://github.com/potsrevennil","followers_url":"https://api.github.com/users/potsrevennil/followers","following_url":"https://api.github.com/users/potsrevennil/following{/other_user}","gists_url":"https://api.github.com/users/potsrevennil/gists{/gist_id}","starred_url":"https://api.github.com/users/potsrevennil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/potsrevennil/subscriptions","organizations_url":"https://api.github.com/users/potsrevennil/orgs","repos_url":"https://api.github.com/users/potsrevennil/repos","events_url":"https://api.github.com/users/potsrevennil/events{/privacy}","received_events_url":"https://api.github.com/users/potsrevennil/received_events","type":"User","site_admin":false},"assignees":[{"login":"potsrevennil","id":15379156,"node_id":"MDQ6VXNlcjE1Mzc5MTU2","avatar_url":"https://avatars.githubusercontent.com/u/15379156?v=4","gravatar_id":"","url":"https://api.github.com/users/potsrevennil","html_url":"https://github.com/potsrevennil","followers_url":"https://api.github.com/users/potsrevennil/followers","following_url":"https://api.github.com/users/potsrevennil/following{/other_user}","gists_url":"https://api.github.com/users/potsrevennil/gists{/gist_id}","starred_url":"https://api.github.com/users/potsrevennil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/potsrevennil/subscriptions","organizations_url":"https://api.github.com/users/potsrevennil/orgs","repos_url":"https://api.github.com/users/potsrevennil/repos","events_url":"https://api.github.com/users/potsrevennil/events{/privacy}","received_events_url":"https://api.github.com/users/potsrevennil/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2024-05-06T06:55:54Z","updated_at":"2024-05-22T05:51:35Z","closed_at":"2024-05-22T05:51:34Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/34/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/comments/2123916833","html_url":"https://github.com/pq-code-package/mlkem-c-embedded/issues/34#issuecomment-2123916833","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/34","id":2123916833,"node_id":"IC_kwDOLfRq585-mGYh","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"created_at":"2024-05-22T05:51:34Z","updated_at":"2024-05-22T05:51:34Z","author_association":"CONTRIBUTOR","body":"Resolved by #40 ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/comments/2123916833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-22T05:51:36Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38593091628","type":"IssueCommentEvent","actor":{"id":22537733,"login":"rod-chapman","display_login":"rod-chapman","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","avatar_url":"https://avatars.githubusercontent.com/u/22537733?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-22T05:53:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123918862","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2123918862","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2123918862,"node_id":"IC_kwDOLh-nxs5-mG4O","user":{"login":"rod-chapman","id":22537733,"node_id":"MDQ6VXNlcjIyNTM3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/22537733?v=4","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","html_url":"https://github.com/rod-chapman","followers_url":"https://api.github.com/users/rod-chapman/followers","following_url":"https://api.github.com/users/rod-chapman/following{/other_user}","gists_url":"https://api.github.com/users/rod-chapman/gists{/gist_id}","starred_url":"https://api.github.com/users/rod-chapman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rod-chapman/subscriptions","organizations_url":"https://api.github.com/users/rod-chapman/orgs","repos_url":"https://api.github.com/users/rod-chapman/repos","events_url":"https://api.github.com/users/rod-chapman/events{/privacy}","received_events_url":"https://api.github.com/users/rod-chapman/received_events","type":"User","site_admin":false},"created_at":"2024-05-22T05:53:37Z","updated_at":"2024-05-22T05:53:37Z","author_association":"NONE","body":"Basic proofs of all the C code would be a good starting point, and should come first. Additional proofs of optimized assembly code can come later as and when needed.\r\n\r\n(There are some additional full correctness proofs in my SPARK code, for example ... the correctness of \"*\" (mod Q) on Zq for example.)","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123918862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-22T05:53:38Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38614369685","type":"IssueCommentEvent","actor":{"id":466142,"login":"ryjones","display_login":"ryjones","gravatar_id":"","url":"https://api.github.com/users/ryjones","avatar_url":"https://avatars.githubusercontent.com/u/466142?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-22T16:07:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2125170375","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2125170375","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2125170375,"node_id":"IC_kwDOLh-nxs5-q4bH","user":{"login":"ryjones","id":466142,"node_id":"MDQ6VXNlcjQ2NjE0Mg==","avatar_url":"https://avatars.githubusercontent.com/u/466142?v=4","gravatar_id":"","url":"https://api.github.com/users/ryjones","html_url":"https://github.com/ryjones","followers_url":"https://api.github.com/users/ryjones/followers","following_url":"https://api.github.com/users/ryjones/following{/other_user}","gists_url":"https://api.github.com/users/ryjones/gists{/gist_id}","starred_url":"https://api.github.com/users/ryjones/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryjones/subscriptions","organizations_url":"https://api.github.com/users/ryjones/orgs","repos_url":"https://api.github.com/users/ryjones/repos","events_url":"https://api.github.com/users/ryjones/events{/privacy}","received_events_url":"https://api.github.com/users/ryjones/received_events","type":"User","site_admin":false},"created_at":"2024-05-22T16:07:38Z","updated_at":"2024-05-22T16:07:38Z","author_association":"CONTRIBUTOR","body":"If Graviton is a requirement, it looks like AWS is the only provider. BuildJet arm builders are something I can do quickly. AWS will take more work. GitHub offers mac arm runners as well.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2125170375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-22T16:07:40Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
