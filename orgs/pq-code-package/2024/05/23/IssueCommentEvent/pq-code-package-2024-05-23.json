{"id":"38636868333","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-23T08:57:45Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2126586831","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2126586831","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2126586831,"node_id":"IC_kwDOLh-nxs5-wSPP","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T08:57:44Z","updated_at":"2024-05-23T08:57:44Z","author_association":"CONTRIBUTOR","body":"@ryjones Do we know what hardware underlies the native BuildJet arm builders?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2126586831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T08:57:45Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38640042105","type":"IssueCommentEvent","actor":{"id":466142,"login":"ryjones","display_login":"ryjones","gravatar_id":"","url":"https://api.github.com/users/ryjones","avatar_url":"https://avatars.githubusercontent.com/u/466142?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-23T10:29:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2126767414","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2126767414","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2126767414,"node_id":"IC_kwDOLh-nxs5-w-U2","user":{"login":"ryjones","id":466142,"node_id":"MDQ6VXNlcjQ2NjE0Mg==","avatar_url":"https://avatars.githubusercontent.com/u/466142?v=4","gravatar_id":"","url":"https://api.github.com/users/ryjones","html_url":"https://github.com/ryjones","followers_url":"https://api.github.com/users/ryjones/followers","following_url":"https://api.github.com/users/ryjones/following{/other_user}","gists_url":"https://api.github.com/users/ryjones/gists{/gist_id}","starred_url":"https://api.github.com/users/ryjones/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryjones/subscriptions","organizations_url":"https://api.github.com/users/ryjones/orgs","repos_url":"https://api.github.com/users/ryjones/repos","events_url":"https://api.github.com/users/ryjones/events{/privacy}","received_events_url":"https://api.github.com/users/ryjones/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T10:29:14Z","updated_at":"2024-05-23T10:29:14Z","author_association":"CONTRIBUTOR","body":"@hanno-becker it looks like AWS is the only source for graviton. So let's do it bit by bit, get what we can and add AWS later (by later, I mean weeks or a month, not months).\r\n\r\nThe thing with AWS is I need to get those resources under the MSA that LF has with Amazon, which takes some paper shuffling.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2126767414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T10:29:15Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38640464067","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-23T10:42:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2126792541","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2126792541","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2126792541,"node_id":"IC_kwDOLh-nxs5-xEdd","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T10:42:21Z","updated_at":"2024-05-23T10:42:21Z","author_association":"CONTRIBUTOR","body":"@ryjones Sounds good to me.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2126792541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T10:42:22Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38642449224","type":"IssueCommentEvent","actor":{"id":148360,"login":"tfaoliveira","display_login":"tfaoliveira","gravatar_id":"","url":"https://api.github.com/users/tfaoliveira","avatar_url":"https://avatars.githubusercontent.com/u/148360?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/4","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/events","html_url":"https://github.com/pq-code-package/tsc/issues/4","id":2116652422,"node_id":"I_kwDOLNiASM5-KY2G","number":4,"title":"Determine any cross-implementation API requirements","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-02-03T19:33:38Z","updated_at":"2024-05-23T11:45:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2126905904","html_url":"https://github.com/pq-code-package/tsc/issues/4#issuecomment-2126905904","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4","id":2126905904,"node_id":"IC_kwDOLNiASM5-xgIw","user":{"login":"tfaoliveira","id":148360,"node_id":"MDQ6VXNlcjE0ODM2MA==","avatar_url":"https://avatars.githubusercontent.com/u/148360?v=4","gravatar_id":"","url":"https://api.github.com/users/tfaoliveira","html_url":"https://github.com/tfaoliveira","followers_url":"https://api.github.com/users/tfaoliveira/followers","following_url":"https://api.github.com/users/tfaoliveira/following{/other_user}","gists_url":"https://api.github.com/users/tfaoliveira/gists{/gist_id}","starred_url":"https://api.github.com/users/tfaoliveira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tfaoliveira/subscriptions","organizations_url":"https://api.github.com/users/tfaoliveira/orgs","repos_url":"https://api.github.com/users/tfaoliveira/repos","events_url":"https://api.github.com/users/tfaoliveira/events{/privacy}","received_events_url":"https://api.github.com/users/tfaoliveira/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T11:45:21Z","updated_at":"2024-05-23T11:45:21Z","author_association":"NONE","body":"\r\nI agree with Matthias. In addition to that, I propose to use extended names for the function arguments. I think it improves usability and reduces the chances of misusage.\r\n\r\n```\r\nint pqcp_mlkem768_keypair_derand(\r\n  uint8_t *public_key,\r\n  uint8_t *secret_key,\r\n  const uint8_t *keypair_coins\r\n);\r\n\r\nint pqcp_mlkem768_keypair(\r\n  uint8_t *public_key,\r\n  uint8_t *secret_key\r\n);\r\n\r\nint pqcp_mlkem768_enc_derand(\r\n  uint8_t *ciphertext,\r\n  uint8_t *shared_secret,\r\n  const uint8_t *public_key,\r\n  const uint8_t *enc_coins\r\n);\r\n\r\nint pqcp_mlkem768_enc(\r\n  uint8_t *ciphertext,\r\n  uint8_t *shared_secret,\r\n  const uint8_t *public_key\r\n);\r\n\r\nint pqcp_mlkem768_dec(\r\n  uint8_t *shared_secret,\r\n  const uint8_t *ciphertext,\r\n  const uint8_t *secret_key\r\n);\r\n```\r\n\r\n---\r\n\r\nRegarding corresponding header files here is what is currently in use for libjade: [api.h](https://github.com/formosa-crypto/libjade/blob/main/src/crypto_kem/mlkem/mlkem768/amd64/avx2/include/api.h)\r\n\r\nIt is similar to other projects as well.\r\n\r\n---\r\n\r\nRegarding namespacing and code organization: should we include, for instance, `ref`, `avx2`, `amd64`/`x86_64`/`x64`, or `armv7m` in the function names to identify, in more detail, the function and avoid misusages? \r\n\r\nCurrently, in libjade, the name of each exposed function is the full implementation path — an example [here](https://github.com/formosa-crypto/libjade/blob/3ac36208f2700035f33d081c08ed9b5a8387c51e/src/crypto_kem/mlkem/mlkem768/amd64/avx2/kem.jazz#L3).  \r\n\r\nIn the context of `amd64`, with which I'm most familiar, I think it is important that each implementation is distributed with an extra file stating which CPU extensions the implementation requires (if applicable: Jasmin/assembly implementations). For example, Keccak permutation using the `andn` instruction (defined in `BMI1` extension) can be significantly faster (up to 20% IIRC). I think some CPU with support for AVX2 do not have BMI1. In any case, it might be excessive to include the full set of CPU extensions that an implementation requires in the corresponding function names (note: current mlkem768 requires BMI1 as it uses the non-AVX2 keccak permutation as well).\r\n\r\n---\r\n\r\nRegarding derandomized API's, they have the advantage of greatly simplifying known answer tests: \r\n* Some of these tests: https://groups.google.com/a/list.nist.gov/g/pqc-forum/c/aCAX-2QrUFw/m/hy5gwcESAAAJ\r\n* Were integrated here, using derand functions: https://github.com/formosa-crypto/libjade/blob/main/test/crypto_kem/test_vectors.c","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2126905904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T11:45:23Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38643120014","type":"IssueCommentEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/4","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/events","html_url":"https://github.com/pq-code-package/tsc/issues/4","id":2116652422,"node_id":"I_kwDOLNiASM5-KY2G","number":4,"title":"Determine any cross-implementation API requirements","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-02-03T19:33:38Z","updated_at":"2024-05-23T12:06:10Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2126944318","html_url":"https://github.com/pq-code-package/tsc/issues/4#issuecomment-2126944318","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4","id":2126944318,"node_id":"IC_kwDOLNiASM5-xpg-","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T12:06:09Z","updated_at":"2024-05-23T12:06:09Z","author_association":"CONTRIBUTOR","body":"I'm a newbie to MK-KEM so forgive any nonsensical input \r\n\r\nStaying close to the standard/reference implementation make sense..\r\n\r\n* internal vs derand\r\n\r\n NIST uses _internal for the derand functions since they are geared to testing rather than consumer use. This seems to make the scope/usage clearer.\r\n \r\n In the proposal here they are 'first class'. Is this because we expect that in practice those will be used by consumers? is this because we'd seen the need to do this in NSS?\r\n \r\n * which implementation/namespace\r\n \r\n The current functions are prefixed with \r\n pqcp_mlkem512_ref_\r\n \r\n I can see this was done for\r\n  - our project (pqcp)\r\n  - what algorithm (mlkem512)\r\n  - which implementation (ref)\r\n  \r\n  Given this\r\n  \r\n We will have a number of 'ref' implementations varying (I assume) by the nature of their optimizations (and in pqcp we have embedded and aarch64)\r\n  \r\n How much of this should be exposed at the API. Any change between implementation will require code changes from the consumer, so are no longer 'drop in' replacements.\r\n \r\n I presume why the proposal here with this prefix is that it remains the same for all of the implementations within pqcp that are implemented in a particular language therefore allowing swapping between them.\r\n \r\n (Accept that with other languages such as go, java etc the namespacing at function level is not needed due to package definitions)\r\n \r\n * More info\r\n \r\n As a followup to the point above about what explicit instruction support is needed for a particular implementation - is there a need to be able to query this at runtime - it to expose a discovery api that amongst other things would report some specifics about the implementation actually being called?\r\n\r\n \r\n ","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2126944318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T12:06:11Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38643153996","type":"IssueCommentEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/44","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/44/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/44/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/44/events","html_url":"https://github.com/pq-code-package/tsc/issues/44","id":2245871196,"node_id":"I_kwDOLNiASM6F3UZc","number":44,"title":"Arrange TSC kickoff meeting","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"assignees":[{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false}],"milestone":null,"comments":18,"created_at":"2024-04-16T12:03:04Z","updated_at":"2024-05-23T12:07:10Z","closed_at":"2024-05-23T12:07:10Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We now have a proposed list of initial TSC members in #1\r\n\r\nA kickoff meeting now needs to be arranged.\r\n\r\nPlease can all initial TSC members review and comment on the:\r\n* [proposed agenda ](https://github.com/pq-code-package/tsc/pull/43)\r\n* [suitable days/times](https://www.when2meet.com/?24641314-158Zj)\r\n\r\nOnce we have the kickoff we can iterate on this to get sorted on an ongoing basis\r\n\r\n@mbbarbosa @mkannwischer @dstebila @franziskuskiefer \r\nAlso fyi @hartm @ryjones interested in your feedback from how other TSCs have launched.","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/44/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/44/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2126946318","html_url":"https://github.com/pq-code-package/tsc/issues/44#issuecomment-2126946318","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/44","id":2126946318,"node_id":"IC_kwDOLNiASM5-xqAO","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T12:07:10Z","updated_at":"2024-05-23T12:07:10Z","author_association":"CONTRIBUTOR","body":"Closing as this was held","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2126946318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T12:07:12Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38650720701","type":"IssueCommentEvent","actor":{"id":22537733,"login":"rod-chapman","display_login":"rod-chapman","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","avatar_url":"https://avatars.githubusercontent.com/u/22537733?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-23T15:17:56Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127403501","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2127403501","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2127403501,"node_id":"IC_kwDOLh-nxs5-zZnt","user":{"login":"rod-chapman","id":22537733,"node_id":"MDQ6VXNlcjIyNTM3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/22537733?v=4","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","html_url":"https://github.com/rod-chapman","followers_url":"https://api.github.com/users/rod-chapman/followers","following_url":"https://api.github.com/users/rod-chapman/following{/other_user}","gists_url":"https://api.github.com/users/rod-chapman/gists{/gist_id}","starred_url":"https://api.github.com/users/rod-chapman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rod-chapman/subscriptions","organizations_url":"https://api.github.com/users/rod-chapman/orgs","repos_url":"https://api.github.com/users/rod-chapman/repos","events_url":"https://api.github.com/users/rod-chapman/events{/privacy}","received_events_url":"https://api.github.com/users/rod-chapman/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T15:17:54Z","updated_at":"2024-05-23T15:17:54Z","author_association":"NONE","body":"One concern I have is that there appears to be repetition of C code across all our proposed repositories? Why? I see no need at all to have the same C code repeated and/or copied across several repo's. The non-time-critical stuff should identical for all platforms anyway.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127403501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T15:17:56Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38650837877","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-23T15:20:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127410309","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2127410309","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2127410309,"node_id":"IC_kwDOLh-nxs5-zbSF","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T15:20:51Z","updated_at":"2024-05-23T15:20:51Z","author_association":"CONTRIBUTOR","body":"@rod-chapman I agree that a shared C code base is preferred, but it is TBD if it can be achieved. For example, the AArch64 repository will require changes to the C code when introducing the batched Keccak API.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127410309/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T15:20:52Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38651098877","type":"IssueCommentEvent","actor":{"id":22537733,"login":"rod-chapman","display_login":"rod-chapman","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","avatar_url":"https://avatars.githubusercontent.com/u/22537733?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-23T15:28:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127425428","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2127425428","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2127425428,"node_id":"IC_kwDOLh-nxs5-ze-U","user":{"login":"rod-chapman","id":22537733,"node_id":"MDQ6VXNlcjIyNTM3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/22537733?v=4","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","html_url":"https://github.com/rod-chapman","followers_url":"https://api.github.com/users/rod-chapman/followers","following_url":"https://api.github.com/users/rod-chapman/following{/other_user}","gists_url":"https://api.github.com/users/rod-chapman/gists{/gist_id}","starred_url":"https://api.github.com/users/rod-chapman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rod-chapman/subscriptions","organizations_url":"https://api.github.com/users/rod-chapman/orgs","repos_url":"https://api.github.com/users/rod-chapman/repos","events_url":"https://api.github.com/users/rod-chapman/events{/privacy}","received_events_url":"https://api.github.com/users/rod-chapman/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T15:28:14Z","updated_at":"2024-05-23T15:28:14Z","author_association":"NONE","body":"\"Batched\" or \"not batched\" is an implementation detail. Surely, the API should be the same regardless... ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127425428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T15:28:16Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38651258913","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-23T15:32:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127434993","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2127434993","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2127434993,"node_id":"IC_kwDOLh-nxs5-zhTx","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T15:32:49Z","updated_at":"2024-05-23T15:32:49Z","author_association":"CONTRIBUTOR","body":"Yes, but I thought you're talking about the C code, which is part of the implementation.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127434993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T15:32:50Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38658261530","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-23T19:25:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127874795","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2127874795","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2127874795,"node_id":"IC_kwDOLh-nxs5-1Mrr","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T19:25:08Z","updated_at":"2024-05-23T19:25:08Z","author_association":"CONTRIBUTOR","body":"@ryjones \r\n\r\n> BuildJet arm builders are something I can do quickly.\r\n\r\nI think for testing and dynamic analysis that might still be useful. Can you help us / give us some pointers on how to use BuildJet arm runners?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127874795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T19:25:09Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38659995400","type":"IssueCommentEvent","actor":{"id":466142,"login":"ryjones","display_login":"ryjones","gravatar_id":"","url":"https://api.github.com/users/ryjones","avatar_url":"https://avatars.githubusercontent.com/u/466142?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-23T20:34:05Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127973511","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2127973511","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2127973511,"node_id":"IC_kwDOLh-nxs5-1kyH","user":{"login":"ryjones","id":466142,"node_id":"MDQ6VXNlcjQ2NjE0Mg==","avatar_url":"https://avatars.githubusercontent.com/u/466142?v=4","gravatar_id":"","url":"https://api.github.com/users/ryjones","html_url":"https://github.com/ryjones","followers_url":"https://api.github.com/users/ryjones/followers","following_url":"https://api.github.com/users/ryjones/following{/other_user}","gists_url":"https://api.github.com/users/ryjones/gists{/gist_id}","starred_url":"https://api.github.com/users/ryjones/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryjones/subscriptions","organizations_url":"https://api.github.com/users/ryjones/orgs","repos_url":"https://api.github.com/users/ryjones/repos","events_url":"https://api.github.com/users/ryjones/events{/privacy}","received_events_url":"https://api.github.com/users/ryjones/received_events","type":"User","site_admin":false},"created_at":"2024-05-23T20:34:04Z","updated_at":"2024-05-23T20:34:04Z","author_association":"CONTRIBUTOR","body":"@hanno-becker Once approved, I will connect them to the org and you can use them like any other runner. [Here are the docs.](https://buildjet.com/for-github-actions/docs/getting-started/run-your-first-workflow)","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2127973511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-23T20:34:05Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
