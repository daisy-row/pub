{"id":"38552661345","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-21T03:36:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121661753","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2121661753","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2121661753,"node_id":"IC_kwDOLh-nxs5-df05","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T03:36:24Z","updated_at":"2024-05-21T03:36:24Z","author_association":"CONTRIBUTOR","body":"@mkannwischer @cothan Thoughts?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121661753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T03:36:24Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38552680067","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/26","id":2209744949,"node_id":"I_kwDOLh-nxs6Dtgg1","number":26,"title":"Enforce SPDX check ","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-03-27T03:30:41Z","updated_at":"2024-05-21T03:37:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"SPDX should be automatically enforced in Github Actions. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121662779","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/26#issuecomment-2121662779","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26","id":2121662779,"node_id":"IC_kwDOLh-nxs5-dgE7","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T03:37:37Z","updated_at":"2024-05-21T03:37:37Z","author_association":"CONTRIBUTOR","body":"@mkannwischer Can this be closed, then?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121662779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T03:37:38Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38552956545","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/27","id":2211098787,"node_id":"I_kwDOLh-nxs6DyrCj","number":27,"title":"Add cross-compilation and tests using qemu","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-03-27T15:24:17Z","updated_at":"2024-05-21T03:56:45Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/22 adds native test.\r\n\r\nIn addition to that I'd like to add support for cross-compilation and testing in qemu. That should also allow running the tests in the Github CI. \r\nWe do have something similar in https://github.com/slothy-optimizer/pqax that could give some inspriation. \r\nThere is CI there too: https://github.com/slothy-optimizer/pqax/pull/4","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121676337","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/27#issuecomment-2121676337","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27","id":2121676337,"node_id":"IC_kwDOLh-nxs5-djYx","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T03:56:44Z","updated_at":"2024-05-21T03:56:44Z","author_association":"CONTRIBUTOR","body":"Once we integrate AArch64 assembly, #22 will need _updating_ rather than amending, right?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121676337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T03:56:45Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38553032898","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-21T04:01:53Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121680252","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2121680252","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2121680252,"node_id":"IC_kwDOLh-nxs5-dkV8","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T04:01:53Z","updated_at":"2024-05-21T04:01:53Z","author_association":"CONTRIBUTOR","body":"@planetf1 I am not in a position to make promises, but one could also apply for cloud credits from AWS (https://aws.amazon.com/government-education/research-and-technical-computing/cloud-credit-for-research/). ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121680252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T04:01:54Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38557674420","type":"IssueCommentEvent","actor":{"id":3984960,"login":"mkannwischer","display_login":"mkannwischer","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","avatar_url":"https://avatars.githubusercontent.com/u/3984960?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-21T07:25:55Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121937522","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2121937522","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2121937522,"node_id":"IC_kwDOLh-nxs5-ejJy","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T07:25:55Z","updated_at":"2024-05-21T07:25:55Z","author_association":"CONTRIBUTOR","body":"What do you mean by \"ASM code is verified for functional correctness\"? You mean by passing testvectors?\r\nI think we need to distinguish between the ultimate goal and the initial goal for a first release. \r\nInitially, I'd aim for no formal verification, i.e., likely the lowest assurance level of the PQCP\r\nThis would aim to \r\n - keygen/encaps/decaps tested against official testvectors and extended testvectors (supplied through a separate PQCP project)\r\n - Each function implemented in assembly is tested against testvectors\r\n - Make use of static and dynamic analysis to make sure there is no UB/out-of/bounds memory access and such \r\n - Automated tests for checking constant-time behavior (e.g., ct-grind or similar) - this may include scanning for instructions that have data-dependent timing\r\n - External code audits \r\n \r\nAll of the tests should be integrated into CI. \r\nFor the code audits there is going to be a process to go through in the PQCA. There is some budget for this in the PQCA and we need to talk to the TAC to get this started. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2121937522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T07:25:56Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38559385201","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-21T08:16:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122037993","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2122037993","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2122037993,"node_id":"IC_kwDOLh-nxs5-e7rp","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T08:16:22Z","updated_at":"2024-05-21T08:16:22Z","author_association":"CONTRIBUTOR","body":">What do you mean by \"ASM code is verified for functional correctness\"? You mean by passing testvectors?\r\n\r\nNo, I meant formal verification against a specification on the basis of some architecture model.\r\n\r\n> I think we need to distinguish between the ultimate goal and the initial goal for a first release.\r\n\r\nAgreed. I described above what I would like to see as the mid-term assurance level for this repository, but not necessarily as the baseline upon first release. We should clarify at the next TSC meeting what we're talking about.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122037993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T08:16:24Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38561070012","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-21T09:03:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122133896","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2122133896","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2122133896,"node_id":"IC_kwDOLh-nxs5-fTGI","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T09:03:31Z","updated_at":"2024-05-21T09:03:31Z","author_association":"CONTRIBUTOR","body":"I don't know much about formal verification, at our first release we can use some model checker to verify the code. \r\nI'm learning how to use [CBMC](https://github.com/diffblue/cbmc), but I'm not sure if it can check SIMD instructions. I will try soon. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122133896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T09:03:32Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38561257412","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/26","id":2209744949,"node_id":"I_kwDOLh-nxs6Dtgg1","number":26,"title":"Enforce SPDX check ","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-03-27T03:30:41Z","updated_at":"2024-05-21T09:08:45Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"SPDX should be automatically enforced in Github Actions. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122144674","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/26#issuecomment-2122144674","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26","id":2122144674,"node_id":"IC_kwDOLh-nxs5-fVui","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T09:08:43Z","updated_at":"2024-05-21T09:08:43Z","author_association":"CONTRIBUTOR","body":"ah, this has not done in `mlkem-c-aarch64`. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122144674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T09:08:45Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38561778510","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/26","id":2209744949,"node_id":"I_kwDOLh-nxs6Dtgg1","number":26,"title":"Enforce SPDX check ","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-03-27T03:30:41Z","updated_at":"2024-05-21T09:23:13Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"SPDX should be automatically enforced in Github Actions. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122173607","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/26#issuecomment-2122173607","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/26","id":2122173607,"node_id":"IC_kwDOLh-nxs5-fcyn","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T09:23:12Z","updated_at":"2024-05-21T09:23:12Z","author_association":"CONTRIBUTOR","body":"@cothan Right, I misread. Can you port https://github.com/pq-code-package/mlkem-c-embedded/pull/29?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122173607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T09:23:13Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38566909107","type":"IssueCommentEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-21T11:57:41Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122469388","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2122469388","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2122469388,"node_id":"IC_kwDOLh-nxs5-glAM","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T11:57:39Z","updated_at":"2024-05-21T11:57:39Z","author_association":"NONE","body":"> @planetf1 I am not in a position to make promises, but one could also apply for cloud credits from AWS ([aws.amazon.com/government-education/research-and-technical-computing/cloud-credit-for-research](https://aws.amazon.com/government-education/research-and-technical-computing/cloud-credit-for-research/)).\r\n\r\nThanks @hanno-becker From a quick scan of that page it seems targeted at individual researchers at academic institutions. Whilst this forms part of the community working on projects in pqca, we also have a foundation (with funding from commercial organizations), as well as contributors working for commercial orgs.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122469388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T11:57:41Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38567192888","type":"IssueCommentEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34","id":2288924537,"node_id":"I_kwDOLh-nxs6Ibjd5","number":34,"title":"Automate benchmarking and add to CI","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2024-05-10T04:51:20Z","updated_at":"2024-05-21T12:06:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Depends on: #28 \r\n\r\nAcceptance criteria:\r\n* Automated benchmarking of MLKEM-C-AArch64 implementations on the listed platforms (see [README](https://github.com/pq-code-package/mlkem-c-aarch64)) is available and can be run by maintainers and by CI. \r\n* Automated benchmarking is added to CI.\r\n\r\nSteps:\r\n- [ ] Plan access to various benchmarking platforms. For some, the maintainers own boards with the right CPU, but we need to figure how we want to access them remotely from CI. For others, such as Graviton instances, we likely need to setup EC2 accounts.\r\n- [ ] Provide scripts for running benchmarks and preparing results\r\n- [ ] Add benchmarking to CI","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122485909","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/34#issuecomment-2122485909","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/34","id":2122485909,"node_id":"IC_kwDOLh-nxs5-gpCV","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T12:06:21Z","updated_at":"2024-05-21T12:06:21Z","author_association":"NONE","body":"Thanks for all the info on EC2 - do you think GitHub arm runners would be an alternative? As good? nearly as good? Not very good? ....\r\n\r\nJust asking as I know that topic is already floated, and the Linux Foundation has been working with Github on enterprise access, plus already funds usage on other projects.\r\n\r\nMany questions on this - as it's not quite publicly available yet, and I've not seen machine specs - but can find out.\r\n\r\nI do think proper integration into CI with the resource behind it is important for an implementation that's focussed on performance - manual just adds scope for errors/inconsistency and much harder to spot regressions which a run after each merge allows even automated checking of performance regression (perhaps, with some bounds, given virtual platforms)\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122485909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T12:06:23Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38567427755","type":"IssueCommentEvent","actor":{"id":3984960,"login":"mkannwischer","display_login":"mkannwischer","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","avatar_url":"https://avatars.githubusercontent.com/u/3984960?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-21T12:13:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122498439","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2122498439","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2122498439,"node_id":"IC_kwDOLh-nxs5-gsGH","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T12:13:30Z","updated_at":"2024-05-21T12:13:30Z","author_association":"CONTRIBUTOR","body":"[CBMC](https://github.com/diffblue/cbmc) would only be useful for the C sources, right? \r\nI think there is still plenty of functions that are going to stay in C as they are not performance critical for which this is going to be useful. Those are likely the same functions that can be shared with other implementations within the PQCP. \r\nIn case we are considering to use CBMC, I think we should discuss this in the TSC as well to make sure everyone is on-board with that.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122498439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T12:13:32Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38567947133","type":"IssueCommentEvent","actor":{"id":3984960,"login":"mkannwischer","display_login":"mkannwischer","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","avatar_url":"https://avatars.githubusercontent.com/u/3984960?"},"repo":{"id":770992871,"name":"pq-code-package/mlkem-c-embedded","url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-embedded/issues/37","id":2296690529,"node_id":"I_kwDOLfRq586I5Ldh","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6681582665,"node_id":"LA_kwDOLfRq588AAAABjkDcSQ","url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-05-15T01:53:34Z","updated_at":"2024-05-21T12:28:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/comments/2122524960","html_url":"https://github.com/pq-code-package/mlkem-c-embedded/issues/37#issuecomment-2122524960","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/37","id":2122524960,"node_id":"IC_kwDOLfRq585-gykg","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T12:28:49Z","updated_at":"2024-05-21T12:28:49Z","author_association":"CONTRIBUTOR","body":"Here is a draft of a definition of what I would aim for for a first release of mlkem-c-embedded\r\n- Automated checking of positive and negative testvectors  (NISTKAT + PQCP KAT) \r\n- Automated static sanitizers\r\n- Automated check for data-dependent timing instructions\r\n- External code audit\r\n\r\nAll automated tests should be performed for all target architectures and ideally be performed both on the emulated and actual hardware platforms (if applicable). \r\nFor the code audits there is going to be a process to go through in the PQCA. There is some budget for this in the PQCA and we need to talk to the TAC to get this started.\r\n\r\nAlso see: https://github.com/pq-code-package/mlkem-c-aarch64/issues/37\r\nCompared to the AArch64 repo, it's likely going to be harder to perform any kind of dynamic analysis as you can't run valgrind. \r\n\r\nAny thoughts on this @rpls?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-embedded/issues/comments/2122524960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T12:28:50Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38568567311","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-21T12:46:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122557693","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2122557693","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2122557693,"node_id":"IC_kwDOLh-nxs5-g6j9","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T12:46:22Z","updated_at":"2024-05-21T12:46:22Z","author_association":"CONTRIBUTOR","body":"CBMC will be a useful tool for verifying the absence of certain classes of undefined behaviour in the C sources. One can also specify custom assertions and have CBMC attempt to prove those, but I can't say off-hand if this would we practical for the functional specifications encountered in MLKEM, esp. modular arithmetic.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122557693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T12:46:23Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38568683658","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-21T12:49:33Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122563377","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2122563377","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2122563377,"node_id":"IC_kwDOLh-nxs5-g78x","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T12:49:32Z","updated_at":"2024-05-21T12:49:32Z","author_association":"CONTRIBUTOR","body":"> In case we are considering to use CBMC, I think we should discuss this in the TSC as well to make sure everyone is on-board with that.\r\n\r\nI don't object to bringing this up, but it's not urgent, and ultimately our choice, isn't it?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2122563377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T12:49:33Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38569018083","type":"IssueCommentEvent","actor":{"id":3984960,"login":"mkannwischer","display_login":"mkannwischer","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","avatar_url":"https://avatars.githubusercontent.com/u/3984960?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/4","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/events","html_url":"https://github.com/pq-code-package/tsc/issues/4","id":2116652422,"node_id":"I_kwDOLNiASM5-KY2G","number":4,"title":"Determine any cross-implementation API requirements","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-02-03T19:33:38Z","updated_at":"2024-05-21T12:58:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2122580645","html_url":"https://github.com/pq-code-package/tsc/issues/4#issuecomment-2122580645","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/4","id":2122580645,"node_id":"IC_kwDOLNiASM5-hAKl","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T12:58:41Z","updated_at":"2024-05-21T12:58:41Z","author_association":"CONTRIBUTOR","body":"I propose that we use the following common KEM API (following what's currently in the ML-KEM reference implementation): \r\n```c\r\nint pqcp_mlkem512_ref_keypair_derand(uint8_t *pk, uint8_t *sk, const uint8_t *coins);\r\nint pqcp_mlkem512_ref_keypair(uint8_t *pk, uint8_t *sk);\r\nint pqcp_mlkem512_ref_enc_derand(uint8_t *ct, uint8_t *ss, const uint8_t *pk, const uint8_t *coins);\r\nint pqcp_mlkem512_ref_enc(uint8_t *ct, uint8_t *ss, const uint8_t *pk);\r\nint pqcp_mlkem512_ref_dec(uint8_t *ss, const uint8_t *ct, const uint8_t *sk);\r\n```\r\n\r\nThe namespacing can be dropped for languages where it's done differently. \r\nmlkem512 is to be replaced by the corresponding parameter set and ref can be replaced by an identifier of the implementation. This follows what NIST wants to see: https://groups.google.com/a/list.nist.gov/g/pqc-forum/c/Mf2kemwwreY/m/KArjoIhxAQAJ.\r\nThe `keypair` and `enc` wrappers basically just fill the coins with `randombytes()` (64 bytes for keypair, 32 bytes for enc) and then call the derandomized versions.\r\n\r\n(I'm assuming here that NIST is not going to change their mind about having those de-randomized APIs. I  personally don't think there is a technical need for these because replacing the `randombytes()` implementation with a deterministic one for testing works just as well as Daniel J. Bernstein argues in the thread. We've had good experience with that approach in the [PQClean](https://github.com/PQClean/PQClean) and also [pqm4](https://github.com/mupq/pqm4).)\r\n\r\nThis API is already being used by https://github.com/pq-code-package/mlkem-c-embedded and https://github.com/pq-code-package/mlkem-c-aarch64 as those are based on the reference implementations.\r\n\r\nFor the saving code size, it may be useful for some target platforms to have dynamic parameter selection. \r\nIn that case, I would additionally allow an API with an additional parameter selecting the parameter set. Something like this would work: \r\n\r\n```c\r\nenum {\r\n    MLKEM512  = 0,\r\n    MLKEM768  = 1,\r\n    MLKEM1024 = 2\r\n};\r\n\r\nint pqcp_mlkem_ref_keypair_derand(uint8_t *pk, uint8_t *sk, const uint8_t *coins, int param);\r\nint pqcp_mlkem_ref_keypair(uint8_t *pk, uint8_t *sk, int param);\r\nint pqcp_mlkem_ref_enc_derand(uint8_t *ct, uint8_t *ss, const uint8_t *pk, const uint8_t *coins, int param);\r\nint pqcp_mlkem_ref_enc(uint8_t *ct, uint8_t *ss, const uint8_t *pk, int param);\r\nint pqcp_mlkem_ref_dec(uint8_t *ss, const uint8_t *ct, const uint8_t *sk, int param);\r\n```","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2122580645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T12:58:43Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"38583932351","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37","id":2296691746,"node_id":"I_kwDOLh-nxs6I5Lwi","number":37,"title":"Assurance Level","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250796,"node_id":"LA_kwDOLh-nxs8AAAABj8iGbA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/documentation","name":"documentation","color":"0075ca","default":true,"description":"Improvements or additions to documentation"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2024-05-15T01:54:51Z","updated_at":"2024-05-21T20:58:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"According to the [PQCP charter,](https://github.com/pq-code-package/tsc/blob/main/charter/charter-2024-01-29.pdf) the goal for projects within PQCP is to \r\n_build high-assurance production-ready software implementations of forthcoming post-quantum cryptography standards, starting with the ML-KEM algorithm_\r\n\r\nDuring the first [PQCP TSC meeting](https://github.com/pq-code-package/tsc/pull/53) it was discussed that we should be more explicit on what we mean by **high-assurance production-ready**. This differs between different sub-projects of PQCP and it would be good to come up with some assurance levels to unify between different project. \r\nFor the next TSC meeting (May 23), each sub-project should document the corresponding interpretation of high-assurance production-ready and document the intended level of assurance.\r\n\r\nLet's discuss here. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123431436","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/37#issuecomment-2123431436","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/37","id":2123431436,"node_id":"IC_kwDOLh-nxs5-kP4M","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-05-21T20:58:38Z","updated_at":"2024-05-21T20:58:38Z","author_association":"CONTRIBUTOR","body":"Honestly, I have no idea what can and what cannot work in formal verification for ML-KEM. So my opinion about high assurance tool set is naive. I can learn from your PRs. \r\nDefinitely, it CBMC isn't our ultimately choice, even the pure C implementation has to deal with modular arithmetic correctness so it may not be the only tool we use. But again, I have no idea and no background in formal. So @hanno-becker  and @mkannwischer  please take the lead. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2123431436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-05-21T20:58:39Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
