{"id":"39138757852","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","id":2342461362,"node_id":"PR_kwDOLh-nxs5x5pXl","number":51,"title":"Add NEON `poly_frommsg` and `poly_tomsg`","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-06-09T19:55:27Z","updated_at":"2024-06-10T03:12:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/51","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.patch","merged_at":null},"body":"Signed-off-by: Duc Tri Nguyen <dnguye69@gmu.edu>\n\n[//]: # (SPDX-License-Identifier: CC-BY-4.0)\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\nBased on #47. Please review #47 first. \n\nThere is a constant time problem with `poly_tomsg` and `poly_frommsg`. Thus, we either have to match the C implementation with the updated C code or write our own the vectorize constant time version. \n\nThis PR implement vectorize constant time of `poly_frommsg` and `poly_tomsg`. \n\n\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\n\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review. -->\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157112949","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51#issuecomment-2157112949","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","id":2157112949,"node_id":"IC_kwDOLh-nxs6Aku51","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T03:12:11Z","updated_at":"2024-06-10T03:12:11Z","author_association":"CONTRIBUTOR","body":"@cothan I generally think that only the most performance or security sensitive routines should be replaced by assembly -- it is an overhead in terms of work, verification and maintenance.\r\n\r\nHave you measured the relative performance of `poly_frommsg` and `poly_tomsg` in the overall context of MLKEM?\r\n\r\nAs for porting https://github.com/pq-crystals/kyber/commit/9b8d30698a3e7449aeb34e62339d4176f11e3c6c, I'd be more inclined to have a small library of constant-time stubs like `cmov_int16` so we can be sure that the compiler does not fiddle with it.\r\n\r\n@mkannwischer What are your thoughts?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157112949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T03:12:12Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39138913740","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/39","id":2309604745,"node_id":"I_kwDOLh-nxs6JqcWJ","number":39,"title":"Explore the use of CBMC","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-05-22T05:29:11Z","updated_at":"2024-06-10T03:23:36Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Relates to: #37 \r\n\r\n[CBMC](https://github.com/diffblue/cbmc) can be used to verify the absence of certain classes of undefined behaviour in C programs. This issue asks for an exploration of the potential use of CBMC for hardening of mlkem-c-aarch64.\r\n\r\nAcceptance criteria:\r\n* PR opened illustrating the use of CBMC for one or more selected C functions in mlkem-c-aarch64.\r\n* Decision made on whether to use CBMC for wider parts of mlkem-c-aarch64.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157122285","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/39#issuecomment-2157122285","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39","id":2157122285,"node_id":"IC_kwDOLh-nxs6AkxLt","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T03:23:35Z","updated_at":"2024-06-10T03:23:35Z","author_association":"CONTRIBUTOR","body":"@mkannwischer @cothan Can you give CBMC a go and make sure you can reproduce the proofs? We should all be able to write / [have CBMC] prove simple specs.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157122285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T03:23:37Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39138953836","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/35","id":2288929781,"node_id":"I_kwDOLh-nxs6Ibkv1","number":35,"title":"Add internal interface to 4-way Keccak and implement C-fallback","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-05-10T04:56:27Z","updated_at":"2024-06-10T03:26:17Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Partly implements: #33 \r\n\r\nAcceptance criteria:\r\n- [ ] The reference implementation is modified to leverage an internal C interface to a 4-way parallel Keccak permutation.\r\n- [ ] The interface is implemented by fallback to the standard 1-way Keccak permutation in C.\r\n\r\nAdding AArch64 assembly for 4-way parallel Keccak is _not_ part of this issue.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157125907","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/35#issuecomment-2157125907","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35","id":2157125907,"node_id":"IC_kwDOLh-nxs6AkyET","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T03:26:17Z","updated_at":"2024-06-10T03:26:17Z","author_association":"CONTRIBUTOR","body":"@cothan Do you have time to give this some thought?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157125907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T03:26:18Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39138983943","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","id":2342461362,"node_id":"PR_kwDOLh-nxs5x5pXl","number":51,"title":"Add NEON `poly_frommsg` and `poly_tomsg`","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-06-09T19:55:27Z","updated_at":"2024-06-10T03:28:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/51","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.patch","merged_at":null},"body":"Signed-off-by: Duc Tri Nguyen <dnguye69@gmu.edu>\n\n[//]: # (SPDX-License-Identifier: CC-BY-4.0)\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\nBased on #47. Please review #47 first. \n\nThere is a constant time problem with `poly_tomsg` and `poly_frommsg`. Thus, we either have to match the C implementation with the updated C code or write our own the vectorize constant time version. \n\nThis PR implement vectorize constant time of `poly_frommsg` and `poly_tomsg`. \n\n\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\n\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review. -->\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157129600","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51#issuecomment-2157129600","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","id":2157129600,"node_id":"IC_kwDOLh-nxs6Aky-A","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T03:28:11Z","updated_at":"2024-06-10T03:28:11Z","author_association":"CONTRIBUTOR","body":"@hanno-becker , I have not measured the performance. I think `poly_frommsg` and `poly_tomsg` are insignificant in terms of performance. But at least we don't have to rely on compiler optimization. \r\nThis implementation does not vectorize `cmov_int16`. Although I use a vectorize comparison instruction. I check, they have fixed latency (3 on Cortex A-72) and good throughput (2 on Cortex-A72). ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157129600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T03:28:12Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39139101968","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/35","id":2288929781,"node_id":"I_kwDOLh-nxs6Ibkv1","number":35,"title":"Add internal interface to 4-way Keccak and implement C-fallback","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-05-10T04:56:27Z","updated_at":"2024-06-10T03:36:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Partly implements: #33 \r\n\r\nAcceptance criteria:\r\n- [ ] The reference implementation is modified to leverage an internal C interface to a 4-way parallel Keccak permutation.\r\n- [ ] The interface is implemented by fallback to the standard 1-way Keccak permutation in C.\r\n\r\nAdding AArch64 assembly for 4-way parallel Keccak is _not_ part of this issue.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157138572","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/35#issuecomment-2157138572","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/35","id":2157138572,"node_id":"IC_kwDOLh-nxs6Ak1KM","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T03:36:20Z","updated_at":"2024-06-10T03:36:20Z","author_association":"CONTRIBUTOR","body":"I made a version of `gen_matrix` work at compile time for Keccak x3 and x4 based on the defined `KECCAK_WAY`. \r\n\r\nThe idea is naive, I consider the matrix in `gen_matrix` as 1d array, apply KECCAK_WAY, and feed to `rej_uniform`. For the number of left over vectors less than KECCAK_WAY will fall back to 1-way Keccak version (can use switch/case to select the best left over x2, x3, x4...etc). \r\n\r\nIs it something worthwhile to implement? \r\nI think the interface you want would be some abstract API on top of x2,....x8-way Keccak at runtime. ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157138572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T03:36:21Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39139133731","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47","id":2332452446,"node_id":"PR_kwDOLh-nxs5xXrZT","number":47,"title":"Add NEON assembly for rejection sampling","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2024-06-04T03:25:24Z","updated_at":"2024-06-10T03:38:53Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/47","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47.patch","merged_at":null},"body":"[//]: # (SPDX-License-Identifier: CC-BY-4.0)\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nImprove the performance of Rejection Sampling. \r\n\r\nI should re-arrange the instructions, but I think when we have SLOTHY figures our the best instruction sequences, so I left it as future work. \r\n\r\nPerformance improvement: average 8%. \r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review. -->\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157140299","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47#issuecomment-2157140299","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47","id":2157140299,"node_id":"IC_kwDOLh-nxs6Ak1lL","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T03:38:52Z","updated_at":"2024-06-10T03:38:52Z","author_association":"CONTRIBUTOR","body":"Okay, after I removed the `simd_memcpy` and replace with `memcpy`. It works on Mac. \r\nI can't wrap my head why the `arm64` version land on the `#ifdef __APPLE_` branch and take on `_memcpy` while on Linux. \r\n@.@ I need to investigate why the compiler on `arm64` land on `__APPLE__` branch. \r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157140299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T03:38:53Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39139328189","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47","id":2332452446,"node_id":"PR_kwDOLh-nxs5xXrZT","number":47,"title":"Add NEON assembly for rejection sampling","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2024-06-04T03:25:24Z","updated_at":"2024-06-10T03:54:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/47","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47.patch","merged_at":null},"body":"[//]: # (SPDX-License-Identifier: CC-BY-4.0)\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nImprove the performance of Rejection Sampling. \r\n\r\nI should re-arrange the instructions, but I think when we have SLOTHY figures our the best instruction sequences, so I left it as future work. \r\n\r\nPerformance improvement: average 8%. \r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review. -->\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157151510","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/47#issuecomment-2157151510","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/47","id":2157151510,"node_id":"IC_kwDOLh-nxs6Ak4UW","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T03:54:31Z","updated_at":"2024-06-10T03:54:31Z","author_association":"CONTRIBUTOR","body":"Okay, I know why. The assembly extension must be capital. `.S` instead of `.s`. :(( https://stackoverflow.com/a/30327226 ","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157151510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T03:54:32Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39139581828","type":"IssueCommentEvent","actor":{"id":3984960,"login":"mkannwischer","display_login":"mkannwischer","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","avatar_url":"https://avatars.githubusercontent.com/u/3984960?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","id":2342461362,"node_id":"PR_kwDOLh-nxs5x5pXl","number":51,"title":"Add NEON `poly_frommsg` and `poly_tomsg`","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-06-09T19:55:27Z","updated_at":"2024-06-10T04:12:13Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/51","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.patch","merged_at":null},"body":"Signed-off-by: Duc Tri Nguyen <dnguye69@gmu.edu>\n\n[//]: # (SPDX-License-Identifier: CC-BY-4.0)\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\nBased on #47. Please review #47 first. \n\nThere is a constant time problem with `poly_tomsg` and `poly_frommsg`. Thus, we either have to match the C implementation with the updated C code or write our own the vectorize constant time version. \n\nThis PR implement vectorize constant time of `poly_frommsg` and `poly_tomsg`. \n\n\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\n\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review. -->\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157168263","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51#issuecomment-2157168263","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","id":2157168263,"node_id":"IC_kwDOLh-nxs6Ak8aH","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T04:12:12Z","updated_at":"2024-06-10T04:12:12Z","author_association":"CONTRIBUTOR","body":"> @mkannwischer What are your thoughts?\r\n\r\nI agree. We should only introduce assembly when there is a good reason to do so. If the reason is protection against timing attacks, then we should use very tiny functions that we can all manually inspect to make sure they are correct. \r\nIf the reason is performance, we should first perform some benchmarks. I don't recall `poly_frommsg` and `poly_tomsg` to be very expensive functions. If we decide to introduce assembly, we need to keep in mind that this will come with significant verification effort down the line.\r\n\r\nI support adding a `cmov_int16` function in assembly for implementing `poly_frommsg`\r\nFor `poly_tomsg`, there now is robust C code that does not have the KyberSlash vulnerability. That can probably stay in C.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157168263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T04:12:13Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39140318348","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","id":2342461362,"node_id":"PR_kwDOLh-nxs5x5pXl","number":51,"title":"Add NEON `poly_frommsg` and `poly_tomsg`","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-06-09T19:55:27Z","updated_at":"2024-06-10T04:56:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/51","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.patch","merged_at":null},"body":"Signed-off-by: Duc Tri Nguyen <dnguye69@gmu.edu>\n\n[//]: # (SPDX-License-Identifier: CC-BY-4.0)\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\nBased on #47. Please review #47 first. \n\nThere is a constant time problem with `poly_tomsg` and `poly_frommsg`. Thus, we either have to match the C implementation with the updated C code or write our own the vectorize constant time version. \n\nThis PR implement vectorize constant time of `poly_frommsg` and `poly_tomsg`. \n\n\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\n\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review. -->\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157268199","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51#issuecomment-2157268199","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","id":2157268199,"node_id":"IC_kwDOLh-nxs6AlUzn","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T04:56:20Z","updated_at":"2024-06-10T04:56:20Z","author_association":"CONTRIBUTOR","body":"I have implemented a constant-time version of `poly_frommsg` and `poly_tomsg`. According to ARM documentation, all the instructions used have fixed latency, which suggests they are constant time.\r\n\r\nRegarding correctness, I'm unsure if CBMC can verify ASM. Essentially, the results can be checked by brute-forcing the entire `int16_t` space and comparing it with the C version. `poly_frommsg` maps `1 bit` to `int16_t`, and `poly_tomsg` maps `int16_t` to `1 bit`. The mapping is one-to-one, so brute-force checking is straightforward.\r\n\r\nReverting to `cmove_int6` is acceptable, but like other methods, it relies on the compiler, hoping it performs correctly. I don't know, fighting with compiler is the fight perhaps we never win. I believe developing our own version is a better approach.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157268199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T04:56:21Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39140726565","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","id":2342461362,"node_id":"PR_kwDOLh-nxs5x5pXl","number":51,"title":"Add NEON `poly_frommsg` and `poly_tomsg`","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-06-09T19:55:27Z","updated_at":"2024-06-10T05:20:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/51","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51.patch","merged_at":null},"body":"Signed-off-by: Duc Tri Nguyen <dnguye69@gmu.edu>\n\n[//]: # (SPDX-License-Identifier: CC-BY-4.0)\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\nBased on #47. Please review #47 first. \n\nThere is a constant time problem with `poly_tomsg` and `poly_frommsg`. Thus, we either have to match the C implementation with the updated C code or write our own the vectorize constant time version. \n\nThis PR implement vectorize constant time of `poly_frommsg` and `poly_tomsg`. \n\n\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\n\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review. -->\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157291209","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/51#issuecomment-2157291209","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/51","id":2157291209,"node_id":"IC_kwDOLh-nxs6AlabJ","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T05:20:45Z","updated_at":"2024-06-10T05:20:45Z","author_association":"CONTRIBUTOR","body":"> Reverting to cmove_int6 is acceptable, but like other methods, it relies on the compiler, hoping it performs correctly. I don't know, fighting with compiler is the fight perhaps we never win. I believe developing our own version is a better approach.\r\n\r\nNo, the idea is to provide C interfaces to critical stubs like `cmove_int16`, but then provide dedicated ASM for them to avoid any doubt about overly clever compilers.\r\n\r\nI don't see a benefit of adding ASM for all of `poly_tomsg/poly_frommsg`.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2157291209/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T05:20:46Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39147409327","type":"IssueCommentEvent","actor":{"id":128089339,"login":"clowarden[bot]","display_login":"clowarden","gravatar_id":"","url":"https://api.github.com/users/clowarden[bot]","avatar_url":"https://avatars.githubusercontent.com/u/128089339?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/67","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/67/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/67/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/67/events","html_url":"https://github.com/pq-code-package/tsc/pull/67","id":2338415793,"node_id":"PR_kwDOLNiASM5xsKcf","number":67,"title":"Update config.yaml","user":{"login":"ydoroz","id":169682635,"node_id":"U_kgDOCh0myw","avatar_url":"https://avatars.githubusercontent.com/u/169682635?v=4","gravatar_id":"","url":"https://api.github.com/users/ydoroz","html_url":"https://github.com/ydoroz","followers_url":"https://api.github.com/users/ydoroz/followers","following_url":"https://api.github.com/users/ydoroz/following{/other_user}","gists_url":"https://api.github.com/users/ydoroz/gists{/gist_id}","starred_url":"https://api.github.com/users/ydoroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ydoroz/subscriptions","organizations_url":"https://api.github.com/users/ydoroz/orgs","repos_url":"https://api.github.com/users/ydoroz/repos","events_url":"https://api.github.com/users/ydoroz/events{/privacy}","received_events_url":"https://api.github.com/users/ydoroz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-06-06T14:32:17Z","updated_at":"2024-06-10T09:09:12Z","closed_at":"2024-06-10T09:08:41Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/tsc/pulls/67","html_url":"https://github.com/pq-code-package/tsc/pull/67","diff_url":"https://github.com/pq-code-package/tsc/pull/67.diff","patch_url":"https://github.com/pq-code-package/tsc/pull/67.patch","merged_at":"2024-06-10T09:08:41Z"},"body":null,"reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/67/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/67/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2157781982","html_url":"https://github.com/pq-code-package/tsc/pull/67#issuecomment-2157781982","issue_url":"https://api.github.com/repos/pq-code-package/tsc/issues/67","id":2157781982,"node_id":"IC_kwDOLNiASM6AnSPe","user":{"login":"clowarden[bot]","id":128089339,"node_id":"BOT_kgDOB6J8-w","avatar_url":"https://avatars.githubusercontent.com/in/306394?v=4","gravatar_id":"","url":"https://api.github.com/users/clowarden%5Bbot%5D","html_url":"https://github.com/apps/clowarden","followers_url":"https://api.github.com/users/clowarden%5Bbot%5D/followers","following_url":"https://api.github.com/users/clowarden%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/clowarden%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/clowarden%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clowarden%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/clowarden%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/clowarden%5Bbot%5D/repos","events_url":"https://api.github.com/users/clowarden%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/clowarden%5Bbot%5D/received_events","type":"Bot","site_admin":false},"created_at":"2024-06-10T09:09:10Z","updated_at":"2024-06-10T09:09:10Z","author_association":"NONE","body":"## Reconciliation completed\n\n#### ✅ The reconciliation completed successfully and all changes have been applied across the services!\n\n## Changes applied\n    \n### Github\n\n- **ydoroz** is now a member of team **pqcp-contributors**\n- team **pqcp-tsc-maintainers** has been *removed* from repository **.github**\n- team **pqcp-tsc** has been *removed* from repository **.github**\n- team **pqcp-tsc** has been *removed* from repository **documentation**\n- team **pqcp-tsc-maintainers** has been *removed* from repository **documentation**\n- team **pqcp-tsc** has been *removed* from repository **mlkem-c-aarch64**\n- team **pqcp-tsc-maintainers** has been *removed* from repository **mlkem-c-aarch64**\n- team **pqcp-tsc** has been *removed* from repository **mlkem-c-embedded**\n- team **pqcp-tsc-maintainers** has been *removed* from repository **mlkem-c-embedded**\n- team **pqcp-tsc-maintainers** has been *removed* from repository **mlkem-c-generic**\n- team **pqcp-tsc** has been *removed* from repository **mlkem-c-generic**\n- team **pqcp-tsc** has been *removed* from repository **mlkem-libjade**\n- team **pqcp-tsc-maintainers** has been *removed* from repository **mlkem-libjade**\n- team **pqcp-tsc** has been *removed* from repository **mlkem-rust-libcrux**\n- team **pqcp-tsc-maintainers** has been *removed* from repository **mlkem-rust-libcrux**\n- team **pqcp-tsc-maintainers** has been *removed* from repository **pq-code-package-hackathon**\n- team **pqcp-tsc** has been *removed* from repository **pq-code-package-hackathon**\n- team **pqcp-tsc** has been *removed* from repository **template-code**\n- team **pqcp-tsc-maintainers** has been *removed* from repository **template-code**\n    ","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/comments/2157781982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":{"id":306394,"slug":"clowarden","node_id":"A_kwHOAM1Res4ABKza","owner":{"login":"cncf","id":13455738,"node_id":"MDEyOk9yZ2FuaXphdGlvbjEzNDU1NzM4","avatar_url":"https://avatars.githubusercontent.com/u/13455738?v=4","gravatar_id":"","url":"https://api.github.com/users/cncf","html_url":"https://github.com/cncf","followers_url":"https://api.github.com/users/cncf/followers","following_url":"https://api.github.com/users/cncf/following{/other_user}","gists_url":"https://api.github.com/users/cncf/gists{/gist_id}","starred_url":"https://api.github.com/users/cncf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cncf/subscriptions","organizations_url":"https://api.github.com/users/cncf/orgs","repos_url":"https://api.github.com/users/cncf/repos","events_url":"https://api.github.com/users/cncf/events{/privacy}","received_events_url":"https://api.github.com/users/cncf/received_events","type":"Organization","site_admin":false},"name":"CLOWarden","description":"","external_url":"https://clowarden.io","html_url":"https://github.com/apps/clowarden","created_at":"2023-03-16T19:00:49Z","updated_at":"2023-07-20T06:00:09Z","permissions":{"administration":"write","checks":"write","contents":"read","members":"write","metadata":"read","organization_administration":"write","pull_requests":"write"},"events":["pull_request"]}}},"public":true,"created_at":"2024-06-10T09:09:12Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39167521659","type":"IssueCommentEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53","id":2344603315,"node_id":"PR_kwDOLh-nxs5yA8bx","number":53,"title":"Introduce common coeff_signed_to_unsigned function in poly.c","user":{"login":"rod-chapman","id":22537733,"node_id":"MDQ6VXNlcjIyNTM3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/22537733?v=4","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","html_url":"https://github.com/rod-chapman","followers_url":"https://api.github.com/users/rod-chapman/followers","following_url":"https://api.github.com/users/rod-chapman/following{/other_user}","gists_url":"https://api.github.com/users/rod-chapman/gists{/gist_id}","starred_url":"https://api.github.com/users/rod-chapman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rod-chapman/subscriptions","organizations_url":"https://api.github.com/users/rod-chapman/orgs","repos_url":"https://api.github.com/users/rod-chapman/repos","events_url":"https://api.github.com/users/rod-chapman/events{/privacy}","received_events_url":"https://api.github.com/users/rod-chapman/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-06-10T18:45:14Z","updated_at":"2024-06-10T18:54:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/53","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53.patch","merged_at":null},"body":"This PR introduces a common \"coeff_signed_to_unsigned()\" function in poly.c, its contracts and verification thereof using CBMC. This function reduces repetition of the same idiom in poly.c and simplifies the calling code in poly_compress() and other functions.\r\n\r\nAdditionally, this PR adds contract-based proof of scalar_compress_q_16 and scalar_compress_q_32\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2159078902","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53#issuecomment-2159078902","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53","id":2159078902,"node_id":"IC_kwDOLh-nxs6AsO32","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T18:54:39Z","updated_at":"2024-06-10T18:54:39Z","author_association":"CONTRIBUTOR","body":"@rod-chapman You need DCO's for the CI to be happy.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2159078902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T18:54:40Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39167595738","type":"IssueCommentEvent","actor":{"id":22537733,"login":"rod-chapman","display_login":"rod-chapman","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","avatar_url":"https://avatars.githubusercontent.com/u/22537733?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53","id":2344603315,"node_id":"PR_kwDOLh-nxs5yA8bx","number":53,"title":"Introduce common coeff_signed_to_unsigned function in poly.c","user":{"login":"rod-chapman","id":22537733,"node_id":"MDQ6VXNlcjIyNTM3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/22537733?v=4","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","html_url":"https://github.com/rod-chapman","followers_url":"https://api.github.com/users/rod-chapman/followers","following_url":"https://api.github.com/users/rod-chapman/following{/other_user}","gists_url":"https://api.github.com/users/rod-chapman/gists{/gist_id}","starred_url":"https://api.github.com/users/rod-chapman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rod-chapman/subscriptions","organizations_url":"https://api.github.com/users/rod-chapman/orgs","repos_url":"https://api.github.com/users/rod-chapman/repos","events_url":"https://api.github.com/users/rod-chapman/events{/privacy}","received_events_url":"https://api.github.com/users/rod-chapman/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-06-10T18:45:14Z","updated_at":"2024-06-10T18:57:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/53","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53.patch","merged_at":null},"body":"This PR introduces a common \"coeff_signed_to_unsigned()\" function in poly.c, its contracts and verification thereof using CBMC. This function reduces repetition of the same idiom in poly.c and simplifies the calling code in poly_compress() and other functions.\r\n\r\nAdditionally, this PR adds contract-based proof of scalar_compress_q_16 and scalar_compress_q_32\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2159084645","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53#issuecomment-2159084645","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53","id":2159084645,"node_id":"IC_kwDOLh-nxs6AsQRl","user":{"login":"rod-chapman","id":22537733,"node_id":"MDQ6VXNlcjIyNTM3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/22537733?v=4","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","html_url":"https://github.com/rod-chapman","followers_url":"https://api.github.com/users/rod-chapman/followers","following_url":"https://api.github.com/users/rod-chapman/following{/other_user}","gists_url":"https://api.github.com/users/rod-chapman/gists{/gist_id}","starred_url":"https://api.github.com/users/rod-chapman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rod-chapman/subscriptions","organizations_url":"https://api.github.com/users/rod-chapman/orgs","repos_url":"https://api.github.com/users/rod-chapman/repos","events_url":"https://api.github.com/users/rod-chapman/events{/privacy}","received_events_url":"https://api.github.com/users/rod-chapman/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T18:57:19Z","updated_at":"2024-06-10T18:57:19Z","author_association":"NONE","body":"What's a DCO?","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2159084645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T18:57:20Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39168173494","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53","id":2344603315,"node_id":"PR_kwDOLh-nxs5yA8bx","number":53,"title":"Introduce common coeff_signed_to_unsigned function in poly.c","user":{"login":"rod-chapman","id":22537733,"node_id":"MDQ6VXNlcjIyNTM3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/22537733?v=4","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","html_url":"https://github.com/rod-chapman","followers_url":"https://api.github.com/users/rod-chapman/followers","following_url":"https://api.github.com/users/rod-chapman/following{/other_user}","gists_url":"https://api.github.com/users/rod-chapman/gists{/gist_id}","starred_url":"https://api.github.com/users/rod-chapman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rod-chapman/subscriptions","organizations_url":"https://api.github.com/users/rod-chapman/orgs","repos_url":"https://api.github.com/users/rod-chapman/repos","events_url":"https://api.github.com/users/rod-chapman/events{/privacy}","received_events_url":"https://api.github.com/users/rod-chapman/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-06-10T18:45:14Z","updated_at":"2024-06-10T19:19:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/pulls/53","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53","diff_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53.diff","patch_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53.patch","merged_at":null},"body":"This PR introduces a common \"coeff_signed_to_unsigned()\" function in poly.c, its contracts and verification thereof using CBMC. This function reduces repetition of the same idiom in poly.c and simplifies the calling code in poly_compress() and other functions.\r\n\r\nAdditionally, this PR adds contract-based proof of scalar_compress_q_16 and scalar_compress_q_32\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2159119865","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/53#issuecomment-2159119865","issue_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/53","id":2159119865,"node_id":"IC_kwDOLh-nxs6AsY35","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-06-10T19:19:05Z","updated_at":"2024-06-10T19:19:05Z","author_association":"CONTRIBUTOR","body":"Hi @rod-chapman , Thanks for the PR. the DCO is agreement to contribute, so it needs your signature. \r\nYou need to sign off your commit `git commit -s -m \"my commit\"` with your GPG key. \r\nWhen you click to the Details it shows what you need to do: https://github.com/pq-code-package/mlkem-c-aarch64/pull/53/checks?check_run_id=26040102532 \r\n\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/comments/2159119865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-10T19:19:06Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
