{"id":"39344516217","type":"IssuesEvent","actor":{"id":22185577,"login":"vincentvbh","display_login":"vincentvbh","gravatar_id":"","url":"https://api.github.com/users/vincentvbh","avatar_url":"https://avatars.githubusercontent.com/u/22185577?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/63","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/63/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/63/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/63/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/63","id":2356092838,"node_id":"I_kwDOLh-nxs6Mbx-m","number":63,"title":"Regarding the definition of \"Assurance\"","user":{"login":"vincentvbh","id":22185577,"node_id":"MDQ6VXNlcjIyMTg1NTc3","avatar_url":"https://avatars.githubusercontent.com/u/22185577?v=4","gravatar_id":"","url":"https://api.github.com/users/vincentvbh","html_url":"https://github.com/vincentvbh","followers_url":"https://api.github.com/users/vincentvbh/followers","following_url":"https://api.github.com/users/vincentvbh/following{/other_user}","gists_url":"https://api.github.com/users/vincentvbh/gists{/gist_id}","starred_url":"https://api.github.com/users/vincentvbh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vincentvbh/subscriptions","organizations_url":"https://api.github.com/users/vincentvbh/orgs","repos_url":"https://api.github.com/users/vincentvbh/repos","events_url":"https://api.github.com/users/vincentvbh/events{/privacy}","received_events_url":"https://api.github.com/users/vincentvbh/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-06-17T00:45:35Z","updated_at":"2024-06-17T00:45:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Dear MLKEM-C-AARCH64 maintainers,\r\n\r\nI think the definition of \"Assurance\" doesn't reflect the state-of-the-art development in the literature.\r\n\"Clean\" is not a necessity for a program to be amenable to verification. There are continuous efforts to formally verify high-performance, highly complicated (extensively shuffled), manually written, and highly scalable (in the case of power-of-two-size NTT/iNTT) assembly code.\r\n\r\nIn the second item of \"tensions\",\r\nit says \"Optimal code is complex (e.g. relying on handwritten assembly), impeding maintainenance and amenability for audit or verification.\" (maintainenance -> maintenance). This was already resolved for some of the frequently used operations, such as Keccak permutation by https://eprint.iacr.org/2023/1861, and NTT by https://tches.iacr.org/index.php/TCHES/article/view/9838.\r\n\r\nRecently, the latest manually shuffled NTT/iNTT for Kyber (https://github.com/neon-ntt/neon-ntt/blob/master/kyber768/ntt/__asm_NTT.S) has been formally verified with the tool CryptoLine. See https://github.com/fmlab-iis/cryptoline/commit/1e0173c2a3e662961f71f707c6623c3abc19515c. \r\nReadability for the general audience is not a requirement for formal verification (I'm sure that the resulting programs are readable for the authors if they put effort into structuring the extensively optimized assembly programs). This is one of the goals of CryptoLine: formally verifying assembly programs optimized \"in the wild.\" \r\nAs for maintenance, you don't have to worry about that. I'm the author of the latest NTT/iNTT for Kyber and I only spent two afternoons on shuffling (the resulting programs perform comparably to the programs by SLOTHY on Cortex-A72 and Apple M1 Pro). \r\n\r\nI believe users of this repository should be informed about the above, so they don't have to worry about something that is already addressed.\r\n\r\nVincent\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/63/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/63/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2024-06-17T00:45:37Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39347518154","type":"IssuesEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/39","id":2309604745,"node_id":"I_kwDOLh-nxs6JqcWJ","number":39,"title":"Explore the use of CBMC","user":{"login":"hanno-becker","id":26892988,"node_id":"MDQ6VXNlcjI2ODkyOTg4","avatar_url":"https://avatars.githubusercontent.com/u/26892988?v=4","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","html_url":"https://github.com/hanno-becker","followers_url":"https://api.github.com/users/hanno-becker/followers","following_url":"https://api.github.com/users/hanno-becker/following{/other_user}","gists_url":"https://api.github.com/users/hanno-becker/gists{/gist_id}","starred_url":"https://api.github.com/users/hanno-becker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hanno-becker/subscriptions","organizations_url":"https://api.github.com/users/hanno-becker/orgs","repos_url":"https://api.github.com/users/hanno-becker/repos","events_url":"https://api.github.com/users/hanno-becker/events{/privacy}","received_events_url":"https://api.github.com/users/hanno-becker/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-05-22T05:29:11Z","updated_at":"2024-06-17T04:18:16Z","closed_at":"2024-06-17T04:18:15Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Relates to: #37 \r\n\r\n[CBMC](https://github.com/diffblue/cbmc) can be used to verify the absence of certain classes of undefined behaviour in C programs. This issue asks for an exploration of the potential use of CBMC for hardening of mlkem-c-aarch64.\r\n\r\nAcceptance criteria:\r\n* PR opened illustrating the use of CBMC for one or more selected C functions in mlkem-c-aarch64.\r\n* Decision made on whether to use CBMC for wider parts of mlkem-c-aarch64.","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/39/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2024-06-17T04:18:16Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39352668273","type":"IssuesEvent","actor":{"id":26892988,"login":"hanno-becker","display_login":"hanno-becker","gravatar_id":"","url":"https://api.github.com/users/hanno-becker","avatar_url":"https://avatars.githubusercontent.com/u/26892988?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/27","id":2211098787,"node_id":"I_kwDOLh-nxs6DyrCj","number":27,"title":"Setup native and emulated test CI","user":{"login":"mkannwischer","id":3984960,"node_id":"MDQ6VXNlcjM5ODQ5NjA=","avatar_url":"https://avatars.githubusercontent.com/u/3984960?v=4","gravatar_id":"","url":"https://api.github.com/users/mkannwischer","html_url":"https://github.com/mkannwischer","followers_url":"https://api.github.com/users/mkannwischer/followers","following_url":"https://api.github.com/users/mkannwischer/following{/other_user}","gists_url":"https://api.github.com/users/mkannwischer/gists{/gist_id}","starred_url":"https://api.github.com/users/mkannwischer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkannwischer/subscriptions","organizations_url":"https://api.github.com/users/mkannwischer/orgs","repos_url":"https://api.github.com/users/mkannwischer/repos","events_url":"https://api.github.com/users/mkannwischer/events{/privacy}","received_events_url":"https://api.github.com/users/mkannwischer/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-03-27T15:24:17Z","updated_at":"2024-06-17T08:10:13Z","closed_at":"2024-06-17T08:10:13Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"https://github.com/pq-code-package/mlkem-c-aarch64/pull/22 adds native test.\r\n\r\nIn addition to that I'd like to add support for cross-compilation and testing in qemu. That should also allow running the tests in the Github CI. \r\nWe do have something similar in https://github.com/slothy-optimizer/pqax that could give some inspriation. \r\nThere is CI there too: https://github.com/slothy-optimizer/pqax/pull/4","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/27/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2024-06-17T08:10:14Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39361131759","type":"IssuesEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":752386120,"name":"pq-code-package/tsc","url":"https://api.github.com/repos/pq-code-package/tsc"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/74","repository_url":"https://api.github.com/repos/pq-code-package/tsc","labels_url":"https://api.github.com/repos/pq-code-package/tsc/issues/74/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/tsc/issues/74/comments","events_url":"https://api.github.com/repos/pq-code-package/tsc/issues/74/events","html_url":"https://github.com/pq-code-package/tsc/issues/74","id":2357247421,"node_id":"I_kwDOLNiASM6MgL29","number":74,"title":"Planning for a first release","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-06-17T12:38:45Z","updated_at":"2024-06-17T12:38:45Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Opening up to track planning towards our first release of pq-code-package.\r\n\r\nWhat might the initial release look like?\r\nWhat other issues do we need to resolve first?\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/tsc/issues/74/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/tsc/issues/74/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2024-06-17T12:38:46Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
{"id":"39369018357","type":"IssuesEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":773826502,"name":"pq-code-package/mlkem-c-aarch64","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/59","repository_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64","labels_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/59/labels{/name}","comments_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/59/comments","events_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/59/events","html_url":"https://github.com/pq-code-package/mlkem-c-aarch64/issues/59","id":2350964817,"node_id":"I_kwDOLh-nxs6MIOBR","number":59,"title":"Can we use bsd brace style please for compatibility with CBMC contracts?","user":{"login":"rod-chapman","id":22537733,"node_id":"MDQ6VXNlcjIyNTM3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/22537733?v=4","gravatar_id":"","url":"https://api.github.com/users/rod-chapman","html_url":"https://github.com/rod-chapman","followers_url":"https://api.github.com/users/rod-chapman/followers","following_url":"https://api.github.com/users/rod-chapman/following{/other_user}","gists_url":"https://api.github.com/users/rod-chapman/gists{/gist_id}","starred_url":"https://api.github.com/users/rod-chapman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rod-chapman/subscriptions","organizations_url":"https://api.github.com/users/rod-chapman/orgs","repos_url":"https://api.github.com/users/rod-chapman/repos","events_url":"https://api.github.com/users/rod-chapman/events{/privacy}","received_events_url":"https://api.github.com/users/rod-chapman/received_events","type":"User","site_admin":false},"labels":[{"id":6707250812,"node_id":"LA_kwDOLh-nxs8AAAABj8iGfA","url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2024-06-13T12:01:49Z","updated_at":"2024-06-17T16:23:41Z","closed_at":"2024-06-17T16:23:40Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I would like to propose that we switch astyle's indenting mode from \"google\" to \"bsd\".\r\n\r\nThe \"google\" style places the opening brace on the same line as the preceeding construct, so it appears on the same line as the final term of a loop invariant contract for CBMC. For example, formatting poly.c yields:\r\n\r\n```\r\n    for (size_t i = 0; i < KYBER_N / 8; i++)\r\n        __CPROVER_assigns(i, u, __CPROVER_object_whole(t), __CPROVER_object_whole(r))\r\n        __CPROVER_loop_invariant(i <= KYBER_N) {\r\n```\r\nwhich makes it hard to edit the invariant without accidentially losing or mis-placing the opening brace.\r\n\r\nWith \"bsd\" style, this comes out as:\r\n\r\n```\r\n    for (size_t i = 0; i < KYBER_N / 8; i++)\r\n        __CPROVER_assigns(i, u, __CPROVER_object_whole(t), __CPROVER_object_whole(r))\r\n        __CPROVER_loop_invariant(i <= KYBER_N)\r\n    {\r\n```\r\nso that lines of the invariant can be added, removed or edited without fear of damaging the location of the brace.\r\n","reactions":{"url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/59/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/pq-code-package/mlkem-c-aarch64/issues/59/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2024-06-17T16:23:41Z","org":{"id":158063050,"login":"pq-code-package","gravatar_id":"","url":"https://api.github.com/orgs/pq-code-package","avatar_url":"https://avatars.githubusercontent.com/u/158063050?"}}
