{"id":"6758219599","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179","id":265927415,"number":179,"title":"Enabled and documented building on ARM32 (Raspberry Pi).","user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-10-16T21:48:58Z","updated_at":"2017-10-24T13:35:16Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/179","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/179.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/179.patch"},"body":"*** NOT READY FOR MERGE -- FEEDBACK NEEDED ***\r\n\r\nEnabled and documented building on ARM32 (tested on Raspberry Pi).\r\n\r\nA '#defined ARM' in ds_benchmark.h must be removed before merging this branch. We need to decide how to define it: an option to configure passed down to the makefile? Auto-detected by the build system (suggestions?) \r\n\r\nI think an explicit ARCH=ARM/Linux/Windows/Android target would be useful since we are starting to support multiple environments. Thoughts?"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/338991898","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179#issuecomment-338991898","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179","id":338991898,"user":{"login":"dstebila","id":8843219,"avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2017-10-24T13:35:16Z","updated_at":"2017-10-24T13:35:16Z","author_association":"OWNER","body":"I agree that adding ifdefs pollutes the code.  We already should have macros for each algorithm, which correspond to the --disable-*/--enable-* configure-time options.  What if we had a header file somewhere which mapped platform pre-processor macros like __arm__ onto our macros for each algorithm?  Then the main source code files would still only have a single algorithm-specific ifdef around them, but we'd still get automatic platform selection as well."}},"public":true,"created_at":"2017-10-24T13:35:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6758277116","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-24T13:45:18Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/338995034","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-338995034","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":338995034,"user":{"login":"dstebila","id":8843219,"avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2017-10-24T13:45:18Z","updated_at":"2017-10-24T13:45:18Z","author_association":"OWNER","body":"I just re-ran the build and the \"nuget\" error went away.  The build is now failing with a compiler warning/error, which I think is actually legit:\r\n\r\n```\r\nkex_sidh_cln16.c\r\nc:\\projects\\liboqs\\src\\kex_sidh_cln16\\kex_sidh_cln16.c(63): error C2220: warning treated as error - no 'object' file generated [C:\\projects\\liboqs\\VisualStudio\\oqs\\oqs.vcxproj]\r\nc:\\projects\\liboqs\\src\\kex_sidh_cln16\\kex_sidh_cln16.c(63): warning C4090: '=': different 'const' qualifiers [C:\\projects\\liboqs\\VisualStudio\\oqs\\oqs.vcxproj]\r\n```"}},"public":true,"created_at":"2017-10-24T13:45:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6758531246","type":"IssueCommentEvent","actor":{"id":31660200,"login":"mvd-ows","display_login":"mvd-ows","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","avatar_url":"https://avatars.githubusercontent.com/u/31660200?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-24T14:28:14Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/339009298","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-339009298","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":339009298,"user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"created_at":"2017-10-24T14:28:14Z","updated_at":"2017-10-24T14:28:14Z","author_association":"CONTRIBUTOR","body":"Thanks, I will look into it."}},"public":true,"created_at":"2017-10-24T14:28:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6760109727","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179","id":265927415,"number":179,"title":"Enabled and documented building on ARM32 (Raspberry Pi).","user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-10-16T21:48:58Z","updated_at":"2017-10-24T19:26:38Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/179","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/179.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/179.patch"},"body":"*** NOT READY FOR MERGE -- FEEDBACK NEEDED ***\r\n\r\nEnabled and documented building on ARM32 (tested on Raspberry Pi).\r\n\r\nA '#defined ARM' in ds_benchmark.h must be removed before merging this branch. We need to decide how to define it: an option to configure passed down to the makefile? Auto-detected by the build system (suggestions?) \r\n\r\nI think an explicit ARCH=ARM/Linux/Windows/Android target would be useful since we are starting to support multiple environments. Thoughts?"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/339103753","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179#issuecomment-339103753","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179","id":339103753,"user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2017-10-24T19:26:38Z","updated_at":"2017-10-24T19:26:38Z","author_association":"CONTRIBUTOR","body":"The suggested `__arm__` macro works. I also re-tested the disabled schemes, and they work if aes-ni is disabled. I'm happy to merge this as-is, and maybe create another work item to clean up the build system as you propose, @dstebila."}},"public":true,"created_at":"2017-10-24T19:26:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6760183102","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-24T19:42:51Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/339108137","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-339108137","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":339108137,"user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2017-10-24T19:42:51Z","updated_at":"2017-10-24T19:42:51Z","author_association":"CONTRIBUTOR","body":"You can fix the warning on Windows by adding 4090 to the pragma directive at the top of the kex_sidh_cln16.c file: `#pragma warning(disable : 4047 4090)`. This will remove the warning-turned-into-an-error on line `k->named_parameters = compressed ? CompressedP751 : P751;` (Visual Studio doesn't like this assignment of const values)."}},"public":true,"created_at":"2017-10-24T19:42:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6760350395","type":"IssueCommentEvent","actor":{"id":31660200,"login":"mvd-ows","display_login":"mvd-ows","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","avatar_url":"https://avatars.githubusercontent.com/u/31660200?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-24T20:19:07Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/339118254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-339118254","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":339118254,"user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"created_at":"2017-10-24T20:19:07Z","updated_at":"2017-10-24T20:19:07Z","author_association":"CONTRIBUTOR","body":"Thank you, that may be the quickest fix for now. I realize const correctness isn't a thing in C, but I would have preferred to change the definition of `OQS_KEX` in `kex.h`. Right now it's saying \"I will happily point to algorithm names and parameters but only if they reside in a writable page.\""}},"public":true,"created_at":"2017-10-24T20:19:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6760385702","type":"IssueCommentEvent","actor":{"id":31660200,"login":"mvd-ows","display_login":"mvd-ows","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","avatar_url":"https://avatars.githubusercontent.com/u/31660200?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-24T20:26:46Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/339120360","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-339120360","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":339120360,"user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"created_at":"2017-10-24T20:26:46Z","updated_at":"2017-10-24T20:26:46Z","author_association":"CONTRIBUTOR","body":"I see you have already disabled a warning for the whole of this file. I usually disable warnings only for the section of code that needs it. Would that be acceptable or should I add to the list at the top?"}},"public":true,"created_at":"2017-10-24T20:26:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6760470856","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-24T20:45:02Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/339125381","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-339125381","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":339125381,"user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2017-10-24T20:45:02Z","updated_at":"2017-10-24T20:45:02Z","author_association":"CONTRIBUTOR","body":"You can certainly isolate only the affected code."}},"public":true,"created_at":"2017-10-24T20:45:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6760621943","type":"IssueCommentEvent","actor":{"id":31660200,"login":"mvd-ows","display_login":"mvd-ows","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","avatar_url":"https://avatars.githubusercontent.com/u/31660200?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-24T21:18:22Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/339134809","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-339134809","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":339134809,"user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"created_at":"2017-10-24T21:18:22Z","updated_at":"2017-10-24T21:18:22Z","author_association":"CONTRIBUTOR","body":"I ended up using your suggested fix. Isolating the code became too bloated for pragma-warning-push-disable-pop since that required two if-def sections. And pragma-warning-suppress would suppress only for the #endif tag so that also wasn't an option."}},"public":true,"created_at":"2017-10-24T21:18:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
