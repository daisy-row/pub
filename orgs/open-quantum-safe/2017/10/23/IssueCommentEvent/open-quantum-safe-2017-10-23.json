{"id":"6752572821","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179","id":265927415,"number":179,"title":"Enabled and documented building on ARM32 (Raspberry Pi).","user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-10-16T21:48:58Z","updated_at":"2017-10-23T13:51:58Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/179","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/179.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/179.patch"},"body":"*** NOT READY FOR MERGE -- FEEDBACK NEEDED ***\r\n\r\nEnabled and documented building on ARM32 (tested on Raspberry Pi).\r\n\r\nA '#defined ARM' in ds_benchmark.h must be removed before merging this branch. We need to decide how to define it: an option to configure passed down to the makefile? Auto-detected by the build system (suggestions?) \r\n\r\nI think an explicit ARCH=ARM/Linux/Windows/Android target would be useful since we are starting to support multiple environments. Thoughts?"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/338665790","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179#issuecomment-338665790","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179","id":338665790,"user":{"login":"dstebila","id":8843219,"avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2017-10-23T13:51:58Z","updated_at":"2017-10-23T13:51:58Z","author_association":"OWNER","body":"It looks like the preprocessor macros `__arm__` (for ARM 32) and `__aarch64__` are defined in both the GNU preprocessor (https://sourceforge.net/p/predef/wiki/Architectures/) and clang (https://stackoverflow.com/questions/23934862/what-predefined-macro-can-i-use-to-detect-the-target-architecture-in-clang#23969845).  That should be reliable enough for the relevant part of ds_benchmark.h.\r\n\r\nAs for disabling certain ciphers on ARM, do you think we should continue to demand that they be turned off via configure, or should we wrap the entire implementation of those algorithms in platform-specific ifdefs using the macros above?"}},"public":true,"created_at":"2017-10-23T13:51:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6752617033","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-23T13:59:39Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/338668066","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-338668066","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":338668066,"user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2017-10-23T13:59:39Z","updated_at":"2017-10-23T13:59:39Z","author_association":"CONTRIBUTOR","body":"@dstebila, this is ready to merge. I think the update to the Travis script you did last week will fix the Travis failures here. Can the test be re-run?"}},"public":true,"created_at":"2017-10-23T13:59:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6752644225","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179","id":265927415,"number":179,"title":"Enabled and documented building on ARM32 (Raspberry Pi).","user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-16T21:48:58Z","updated_at":"2017-10-23T14:04:25Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/179","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/179.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/179.patch"},"body":"*** NOT READY FOR MERGE -- FEEDBACK NEEDED ***\r\n\r\nEnabled and documented building on ARM32 (tested on Raspberry Pi).\r\n\r\nA '#defined ARM' in ds_benchmark.h must be removed before merging this branch. We need to decide how to define it: an option to configure passed down to the makefile? Auto-detected by the build system (suggestions?) \r\n\r\nI think an explicit ARCH=ARM/Linux/Windows/Android target would be useful since we are starting to support multiple environments. Thoughts?"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/338669614","html_url":"https://github.com/open-quantum-safe/liboqs/pull/179#issuecomment-338669614","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/179","id":338669614,"user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2017-10-23T14:04:25Z","updated_at":"2017-10-23T14:04:25Z","author_association":"CONTRIBUTOR","body":"Ok, I'll look into using these macros. As for the disabled ciphers; it would be nice if we could define the --disable-* parameters automatically; I feel like adding ifdefs pollutes the code unnecessarily; is that possible? Note also that I greedily disabled the schemes that failed to compile. Maybe they can also be fixed to support arm; I'll take a closer look."}},"public":true,"created_at":"2017-10-23T14:04:25Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6752936848","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-23T14:54:12Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/338685732","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-338685732","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":338685732,"user":{"login":"dstebila","id":8843219,"avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2017-10-23T14:54:12Z","updated_at":"2017-10-23T14:54:12Z","author_association":"OWNER","body":"I'm now getting an error in AppVeyor for this.  Does anyone know what this means?\r\n\r\n```\r\nPackage source with Name: nuget.org removed successfully.\r\nnuget : The name specified has already been added to the list of available package sources. Please provide a unique name.\r\nAt line:1 char:104\r\n+ ...  nuget.org; nuget sources add -name nuget.org -source https://www.nug ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (The name specif... a unique name.:String) [], RemoteException\r\n    + FullyQualifiedErrorId : NativeCommandError\r\n \r\ngit clone -q https://github.com/open-quantum-safe/liboqs.git C:\\projects\\liboqs\r\n\r\n```"}},"public":true,"created_at":"2017-10-23T14:54:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6754093051","type":"IssueCommentEvent","actor":{"id":28763519,"login":"nthuemmel","display_login":"nthuemmel","gravatar_id":"","url":"https://api.github.com/users/nthuemmel","avatar_url":"https://avatars.githubusercontent.com/u/28763519?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/182","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/182/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/182/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/182/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/182","id":267227100,"number":182,"title":"Added VisualStudio DLL build configurations","user":{"login":"nthuemmel","id":28763519,"avatar_url":"https://avatars1.githubusercontent.com/u/28763519?v=4","gravatar_id":"","url":"https://api.github.com/users/nthuemmel","html_url":"https://github.com/nthuemmel","followers_url":"https://api.github.com/users/nthuemmel/followers","following_url":"https://api.github.com/users/nthuemmel/following{/other_user}","gists_url":"https://api.github.com/users/nthuemmel/gists{/gist_id}","starred_url":"https://api.github.com/users/nthuemmel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nthuemmel/subscriptions","organizations_url":"https://api.github.com/users/nthuemmel/orgs","repos_url":"https://api.github.com/users/nthuemmel/repos","events_url":"https://api.github.com/users/nthuemmel/events{/privacy}","received_events_url":"https://api.github.com/users/nthuemmel/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-20T16:11:40Z","updated_at":"2017-10-23T18:40:30Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/182","html_url":"https://github.com/open-quantum-safe/liboqs/pull/182","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/182.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/182.patch"},"body":"As in the current master branch, the Visual Studio build files only allow the creation of static libraries and statically linked executables. Since I needed bindings for other languages (such as Java), which in turn required dynamic linking libraries (DLLs), I added DLL build configurations to the Visual Studio solution.\r\n\r\nAll build configurations (DLL and non-DLL builds, x86 and x64) have been tested with the standard settings using Visual Studio 2013 on a 64-bit Windows 7. I have updated my changes to be on-par with the latest Visual Studio build file changes of commit 40ffb4eb38bc80ecd6d1e42848ed7145a2e49946 and squashed them for better readabilty.\r\n\r\nAdditional changes which were required to get the DLL builds working:\r\n\r\n* Added inline preprocessor definition to VisualStudio project file - this allows compilation with older versions of VisualStudio (e.g. 2013) which do not support the C99 inline keyword\r\n* Removed newhope.c from VisualStudio build files, as it is already included in kex_rlwe_newhope.c and will lead to multiple symbol definition errors in shared library builds\r\n* Added ENABLE_CODE_MCBITS guard to kex_code_mcbits.c to protect against missing symbol definition errors in VisualStudio shared library builds\r\n* Added VisualStudio shared library exports file dll.def, including the necessary core functions to use oqs from applications\r\n* Also export free when building Windows DLLs - this is important as the correct runtime library has to be used to free memory allocated by the OQS library. Applications may be using multiple runtime libraries or memory managers, calling the wrong free will result in memory corruption or segfault"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/338756806","html_url":"https://github.com/open-quantum-safe/liboqs/pull/182#issuecomment-338756806","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/182","id":338756806,"user":{"login":"nthuemmel","id":28763519,"avatar_url":"https://avatars1.githubusercontent.com/u/28763519?v=4","gravatar_id":"","url":"https://api.github.com/users/nthuemmel","html_url":"https://github.com/nthuemmel","followers_url":"https://api.github.com/users/nthuemmel/followers","following_url":"https://api.github.com/users/nthuemmel/following{/other_user}","gists_url":"https://api.github.com/users/nthuemmel/gists{/gist_id}","starred_url":"https://api.github.com/users/nthuemmel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nthuemmel/subscriptions","organizations_url":"https://api.github.com/users/nthuemmel/orgs","repos_url":"https://api.github.com/users/nthuemmel/repos","events_url":"https://api.github.com/users/nthuemmel/events{/privacy}","received_events_url":"https://api.github.com/users/nthuemmel/received_events","type":"User","site_admin":false},"created_at":"2017-10-23T18:40:30Z","updated_at":"2017-10-23T18:40:30Z","author_association":"NONE","body":"Thanks for the feedback and the newline fix!"}},"public":true,"created_at":"2017-10-23T18:40:30Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6754213091","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","id":266499287,"number":181,"title":"Properly separate SIDH CLN16 from SIDH CLN16 compressed","user":{"login":"mvd-ows","id":31660200,"avatar_url":"https://avatars0.githubusercontent.com/u/31660200?v=4","gravatar_id":"","url":"https://api.github.com/users/mvd-ows","html_url":"https://github.com/mvd-ows","followers_url":"https://api.github.com/users/mvd-ows/followers","following_url":"https://api.github.com/users/mvd-ows/following{/other_user}","gists_url":"https://api.github.com/users/mvd-ows/gists{/gist_id}","starred_url":"https://api.github.com/users/mvd-ows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvd-ows/subscriptions","organizations_url":"https://api.github.com/users/mvd-ows/orgs","repos_url":"https://api.github.com/users/mvd-ows/repos","events_url":"https://api.github.com/users/mvd-ows/events{/privacy}","received_events_url":"https://api.github.com/users/mvd-ows/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-18T13:46:28Z","updated_at":"2017-10-23T19:05:48Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/181","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/181.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/181.patch"},"body":"This change will allow a user of the library to specify a SIDH CLN16 variant without worrying about parameters. In the previous code you had to get the algorithm and parameter combination right, and you could even specify the compressed variant and (accidentally) override it by not pairing with the right parameter."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/338764064","html_url":"https://github.com/open-quantum-safe/liboqs/pull/181#issuecomment-338764064","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/181","id":338764064,"user":{"login":"christianpaquin","id":16247285,"avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2017-10-23T19:05:48Z","updated_at":"2017-10-23T19:05:48Z","author_association":"CONTRIBUTOR","body":"Do we get this error on all new PRs or just here?"}},"public":true,"created_at":"2017-10-23T19:05:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
