{"id":"5200688160","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/91","id":202695252,"number":91,"title":"Simplify KEX API","user":{"login":"dstebila","id":8843219,"avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=3","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-01-24T00:53:30Z","updated_at":"2017-01-24T00:53:37Z","closed_at":null,"body":"I was talking with Dan Bernstein at Real World Crypto, and he had some suggestions about our KEX API, some of which carry forward into the design of a signature API.\r\n\r\nSome of his comments (my wording) were:\r\n\r\n1. the API should not require malloc's (in other words, callers pass in byte arrays of appropriate size, rather than the callee allocating it)\r\n2. make the API as close to Supercop / NIST as possible to make it easier for people to submit\r\n3. having the OQS_KEX or OQS_SIGN data structure is an extra hurdle for people wanting to submit\r\n4. avoid passing the OQS_KEX or OQS_SIGN data structures down multiple levels of the stack\r\n5. every input should be byte strings (i.e., don't use void * for private keys)\r\n6. don't pass a random number generator down, instead rely on a global random number generator function like random_bytes\r\n7. don't have functions representing \"families of schemes\" parameterized by different values, instead have each function correspond to one scheme\r\n\r\nMy opinions:\r\n\r\n1. okay\r\n2. okay\r\n3. I would like to have the OQS_KEX or OQS_SIGN data structure for a few reasons: still maintaining a generic high level API that is parameterized by the scheme, and to include metadata such as key sizes and security levels\r\n4. okay\r\n5. For ephemeral/passive key exchange where the private key is only used once, I think void * is okay, but for schemes with long-term keys, each scheme would have to provide an explicit serialization/deserialization that the caller has to make use of; so I think for signatures byte strings is simpler (and matches Supercop / NIST)\r\n6. It's not clear to me how to do transforms based on determinism for KEMs if you don't pass an RNG down. But then again it's also not clear to me how to do such transforms even if you do pass an RNG down. Thoughts?\r\n7. Probably would simplify the API."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/274667555","html_url":"https://github.com/open-quantum-safe/liboqs/issues/91#issuecomment-274667555","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91","id":274667555,"user":{"login":"dstebila","id":8843219,"avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=3","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2017-01-24T00:53:37Z","updated_at":"2017-01-24T00:53:37Z","body":"See also #90 "}},"public":true,"created_at":"2017-01-24T00:53:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"5202234244","type":"IssueCommentEvent","actor":{"id":65081,"login":"jjl","display_login":"jjl","gravatar_id":"","url":"https://api.github.com/users/jjl","avatar_url":"https://avatars.githubusercontent.com/u/65081?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/91","id":202695252,"number":91,"title":"Simplify KEX API","user":{"login":"dstebila","id":8843219,"avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=3","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-01-24T00:53:30Z","updated_at":"2017-01-24T08:51:28Z","closed_at":null,"body":"I was talking with Dan Bernstein at Real World Crypto, and he had some suggestions about our KEX API, some of which carry forward into the design of a signature API.\r\n\r\nSome of his comments (my wording) were:\r\n\r\n1. the API should not require malloc's (in other words, callers pass in byte arrays of appropriate size, rather than the callee allocating it)\r\n2. make the API as close to Supercop / NIST as possible to make it easier for people to submit\r\n3. having the OQS_KEX or OQS_SIGN data structure is an extra hurdle for people wanting to submit\r\n4. avoid passing the OQS_KEX or OQS_SIGN data structures down multiple levels of the stack\r\n5. every input should be byte strings (i.e., don't use void * for private keys)\r\n6. don't pass a random number generator down, instead rely on a global random number generator function like random_bytes\r\n7. don't have functions representing \"families of schemes\" parameterized by different values, instead have each function correspond to one scheme\r\n\r\nMy opinions:\r\n\r\n1. okay\r\n2. okay\r\n3. I would like to have the OQS_KEX or OQS_SIGN data structure for a few reasons: still maintaining a generic high level API that is parameterized by the scheme, and to include metadata such as key sizes and security levels\r\n4. okay\r\n5. For ephemeral/passive key exchange where the private key is only used once, I think void * is okay, but for schemes with long-term keys, each scheme would have to provide an explicit serialization/deserialization that the caller has to make use of; so I think for signatures byte strings is simpler (and matches Supercop / NIST)\r\n6. It's not clear to me how to do transforms based on determinism for KEMs if you don't pass an RNG down. But then again it's also not clear to me how to do such transforms even if you do pass an RNG down. Thoughts?\r\n7. Probably would simplify the API."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/274744037","html_url":"https://github.com/open-quantum-safe/liboqs/issues/91#issuecomment-274744037","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91","id":274744037,"user":{"login":"jjl","id":65081,"avatar_url":"https://avatars.githubusercontent.com/u/65081?v=3","gravatar_id":"","url":"https://api.github.com/users/jjl","html_url":"https://github.com/jjl","followers_url":"https://api.github.com/users/jjl/followers","following_url":"https://api.github.com/users/jjl/following{/other_user}","gists_url":"https://api.github.com/users/jjl/gists{/gist_id}","starred_url":"https://api.github.com/users/jjl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjl/subscriptions","organizations_url":"https://api.github.com/users/jjl/orgs","repos_url":"https://api.github.com/users/jjl/repos","events_url":"https://api.github.com/users/jjl/events{/privacy}","received_events_url":"https://api.github.com/users/jjl/received_events","type":"User","site_admin":false},"created_at":"2017-01-24T08:51:28Z","updated_at":"2017-01-24T08:51:28Z","body":"Largely agree with all of this, but mostly for different reasons. I've started wrapping oqs in a c++ api and most of these things made it more difficult than it could have been. The existing API as it stands is not the easiest (at least from c++) to integrate with other crypto (e.g. HMAC). Making everything byte strings would be a good start.\r\n\r\nThe two major problems I see are:\r\n- we currently don't have a way to easily tell what the size of the buffer we need to allocate for a key or message is, so we'll need to construct one\r\n- moving to a global RNG makes it difficult to fake input during testing and replay against an RNG state etc."}},"public":true,"created_at":"2017-01-24T08:51:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"5202247005","type":"IssueCommentEvent","actor":{"id":65081,"login":"jjl","display_login":"jjl","gravatar_id":"","url":"https://api.github.com/users/jjl","avatar_url":"https://avatars.githubusercontent.com/u/65081?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/91","id":202695252,"number":91,"title":"Simplify KEX API","user":{"login":"dstebila","id":8843219,"avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=3","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-01-24T00:53:30Z","updated_at":"2017-01-24T08:54:16Z","closed_at":null,"body":"I was talking with Dan Bernstein at Real World Crypto, and he had some suggestions about our KEX API, some of which carry forward into the design of a signature API.\r\n\r\nSome of his comments (my wording) were:\r\n\r\n1. the API should not require malloc's (in other words, callers pass in byte arrays of appropriate size, rather than the callee allocating it)\r\n2. make the API as close to Supercop / NIST as possible to make it easier for people to submit\r\n3. having the OQS_KEX or OQS_SIGN data structure is an extra hurdle for people wanting to submit\r\n4. avoid passing the OQS_KEX or OQS_SIGN data structures down multiple levels of the stack\r\n5. every input should be byte strings (i.e., don't use void * for private keys)\r\n6. don't pass a random number generator down, instead rely on a global random number generator function like random_bytes\r\n7. don't have functions representing \"families of schemes\" parameterized by different values, instead have each function correspond to one scheme\r\n\r\nMy opinions:\r\n\r\n1. okay\r\n2. okay\r\n3. I would like to have the OQS_KEX or OQS_SIGN data structure for a few reasons: still maintaining a generic high level API that is parameterized by the scheme, and to include metadata such as key sizes and security levels\r\n4. okay\r\n5. For ephemeral/passive key exchange where the private key is only used once, I think void * is okay, but for schemes with long-term keys, each scheme would have to provide an explicit serialization/deserialization that the caller has to make use of; so I think for signatures byte strings is simpler (and matches Supercop / NIST)\r\n6. It's not clear to me how to do transforms based on determinism for KEMs if you don't pass an RNG down. But then again it's also not clear to me how to do such transforms even if you do pass an RNG down. Thoughts?\r\n7. Probably would simplify the API."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/274744668","html_url":"https://github.com/open-quantum-safe/liboqs/issues/91#issuecomment-274744668","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/91","id":274744668,"user":{"login":"jjl","id":65081,"avatar_url":"https://avatars.githubusercontent.com/u/65081?v=3","gravatar_id":"","url":"https://api.github.com/users/jjl","html_url":"https://github.com/jjl","followers_url":"https://api.github.com/users/jjl/followers","following_url":"https://api.github.com/users/jjl/following{/other_user}","gists_url":"https://api.github.com/users/jjl/gists{/gist_id}","starred_url":"https://api.github.com/users/jjl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjl/subscriptions","organizations_url":"https://api.github.com/users/jjl/orgs","repos_url":"https://api.github.com/users/jjl/repos","events_url":"https://api.github.com/users/jjl/events{/privacy}","received_events_url":"https://api.github.com/users/jjl/received_events","type":"User","site_admin":false},"created_at":"2017-01-24T08:54:16Z","updated_at":"2017-01-24T08:54:16Z","body":"Oh and i think the named parameters string should go at the minimum - so far as i can tell it's only used for frodo and we only support one set of parameters for it anyway."}},"public":true,"created_at":"2017-01-24T08:54:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
