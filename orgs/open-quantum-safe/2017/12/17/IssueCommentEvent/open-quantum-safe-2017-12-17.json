{"id":"6999536605","type":"IssueCommentEvent","actor":{"id":1345502,"login":"tlepoint","display_login":"tlepoint","gravatar_id":"","url":"https://api.github.com/users/tlepoint","avatar_url":"https://avatars.githubusercontent.com/u/1345502?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/200","id":281906219,"number":200,"title":"Possible problem with Kyber public key generation","user":{"login":"Steppenwolfe65","id":8007343,"avatar_url":"https://avatars0.githubusercontent.com/u/8007343?v=4","gravatar_id":"","url":"https://api.github.com/users/Steppenwolfe65","html_url":"https://github.com/Steppenwolfe65","followers_url":"https://api.github.com/users/Steppenwolfe65/followers","following_url":"https://api.github.com/users/Steppenwolfe65/following{/other_user}","gists_url":"https://api.github.com/users/Steppenwolfe65/gists{/gist_id}","starred_url":"https://api.github.com/users/Steppenwolfe65/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Steppenwolfe65/subscriptions","organizations_url":"https://api.github.com/users/Steppenwolfe65/orgs","repos_url":"https://api.github.com/users/Steppenwolfe65/repos","events_url":"https://api.github.com/users/Steppenwolfe65/events{/privacy}","received_events_url":"https://api.github.com/users/Steppenwolfe65/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"tlepoint","id":1345502,"avatar_url":"https://avatars3.githubusercontent.com/u/1345502?v=4","gravatar_id":"","url":"https://api.github.com/users/tlepoint","html_url":"https://github.com/tlepoint","followers_url":"https://api.github.com/users/tlepoint/followers","following_url":"https://api.github.com/users/tlepoint/following{/other_user}","gists_url":"https://api.github.com/users/tlepoint/gists{/gist_id}","starred_url":"https://api.github.com/users/tlepoint/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlepoint/subscriptions","organizations_url":"https://api.github.com/users/tlepoint/orgs","repos_url":"https://api.github.com/users/tlepoint/repos","events_url":"https://api.github.com/users/tlepoint/events{/privacy}","received_events_url":"https://api.github.com/users/tlepoint/received_events","type":"User","site_admin":false},"assignees":[{"login":"tlepoint","id":1345502,"avatar_url":"https://avatars3.githubusercontent.com/u/1345502?v=4","gravatar_id":"","url":"https://api.github.com/users/tlepoint","html_url":"https://github.com/tlepoint","followers_url":"https://api.github.com/users/tlepoint/followers","following_url":"https://api.github.com/users/tlepoint/following{/other_user}","gists_url":"https://api.github.com/users/tlepoint/gists{/gist_id}","starred_url":"https://api.github.com/users/tlepoint/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlepoint/subscriptions","organizations_url":"https://api.github.com/users/tlepoint/orgs","repos_url":"https://api.github.com/users/tlepoint/repos","events_url":"https://api.github.com/users/tlepoint/events{/privacy}","received_events_url":"https://api.github.com/users/tlepoint/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2017-12-13T21:40:20Z","updated_at":"2017-12-17T19:43:51Z","closed_at":null,"author_association":"NONE","body":"Hi,\r\nI've noticed what might be a bug in the Kyber public key generation. \r\nIn the (indcpa.c) gen_matrix function, the three coefficient arrays (a) that are generated, appear to be identical. An incrementing domain code is used to initialize Keccak's state to unique values inside the inner loop, and a different domain code should yield a completely different output from SHAKE, even with the same seed, but in this case, the coefficient arrays produced are all identical. \r\nI have traced this to the (sha3.c) OQS_SHA3_cshake128_simple_absorb function. That function adds the domain code to the first state member, transforms the state, and then calls the keccak_absorb function, passing in the modified state. At the top of keccak_absorb, the state is *zeroed*, in effect, erasing the permuted domain code from the state, and hence the identical output is generated.\r\nCan someone confirm this?"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/352280113","html_url":"https://github.com/open-quantum-safe/liboqs/issues/200#issuecomment-352280113","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200","id":352280113,"user":{"login":"tlepoint","id":1345502,"avatar_url":"https://avatars3.githubusercontent.com/u/1345502?v=4","gravatar_id":"","url":"https://api.github.com/users/tlepoint","html_url":"https://github.com/tlepoint","followers_url":"https://api.github.com/users/tlepoint/followers","following_url":"https://api.github.com/users/tlepoint/following{/other_user}","gists_url":"https://api.github.com/users/tlepoint/gists{/gist_id}","starred_url":"https://api.github.com/users/tlepoint/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlepoint/subscriptions","organizations_url":"https://api.github.com/users/tlepoint/orgs","repos_url":"https://api.github.com/users/tlepoint/repos","events_url":"https://api.github.com/users/tlepoint/events{/privacy}","received_events_url":"https://api.github.com/users/tlepoint/received_events","type":"User","site_admin":false},"created_at":"2017-12-17T19:43:51Z","updated_at":"2017-12-17T19:43:51Z","author_association":"MEMBER","body":"I confirm the bug, congrats for catching it. It's probably my mistake when integrating... \r\nI'll work soon on integrating the new version of Kyber (submitted to NIST) which no longer use cSHAKE, so it should get rid of the bug."}},"public":true,"created_at":"2017-12-17T19:43:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"6999715911","type":"IssueCommentEvent","actor":{"id":8007343,"login":"Steppenwolfe65","display_login":"Steppenwolfe65","gravatar_id":"","url":"https://api.github.com/users/Steppenwolfe65","avatar_url":"https://avatars.githubusercontent.com/u/8007343?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/200","id":281906219,"number":200,"title":"Possible problem with Kyber public key generation","user":{"login":"Steppenwolfe65","id":8007343,"avatar_url":"https://avatars0.githubusercontent.com/u/8007343?v=4","gravatar_id":"","url":"https://api.github.com/users/Steppenwolfe65","html_url":"https://github.com/Steppenwolfe65","followers_url":"https://api.github.com/users/Steppenwolfe65/followers","following_url":"https://api.github.com/users/Steppenwolfe65/following{/other_user}","gists_url":"https://api.github.com/users/Steppenwolfe65/gists{/gist_id}","starred_url":"https://api.github.com/users/Steppenwolfe65/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Steppenwolfe65/subscriptions","organizations_url":"https://api.github.com/users/Steppenwolfe65/orgs","repos_url":"https://api.github.com/users/Steppenwolfe65/repos","events_url":"https://api.github.com/users/Steppenwolfe65/events{/privacy}","received_events_url":"https://api.github.com/users/Steppenwolfe65/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"tlepoint","id":1345502,"avatar_url":"https://avatars3.githubusercontent.com/u/1345502?v=4","gravatar_id":"","url":"https://api.github.com/users/tlepoint","html_url":"https://github.com/tlepoint","followers_url":"https://api.github.com/users/tlepoint/followers","following_url":"https://api.github.com/users/tlepoint/following{/other_user}","gists_url":"https://api.github.com/users/tlepoint/gists{/gist_id}","starred_url":"https://api.github.com/users/tlepoint/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlepoint/subscriptions","organizations_url":"https://api.github.com/users/tlepoint/orgs","repos_url":"https://api.github.com/users/tlepoint/repos","events_url":"https://api.github.com/users/tlepoint/events{/privacy}","received_events_url":"https://api.github.com/users/tlepoint/received_events","type":"User","site_admin":false},"assignees":[{"login":"tlepoint","id":1345502,"avatar_url":"https://avatars3.githubusercontent.com/u/1345502?v=4","gravatar_id":"","url":"https://api.github.com/users/tlepoint","html_url":"https://github.com/tlepoint","followers_url":"https://api.github.com/users/tlepoint/followers","following_url":"https://api.github.com/users/tlepoint/following{/other_user}","gists_url":"https://api.github.com/users/tlepoint/gists{/gist_id}","starred_url":"https://api.github.com/users/tlepoint/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tlepoint/subscriptions","organizations_url":"https://api.github.com/users/tlepoint/orgs","repos_url":"https://api.github.com/users/tlepoint/repos","events_url":"https://api.github.com/users/tlepoint/events{/privacy}","received_events_url":"https://api.github.com/users/tlepoint/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2017-12-13T21:40:20Z","updated_at":"2017-12-17T21:45:37Z","closed_at":null,"author_association":"NONE","body":"Hi,\r\nI've noticed what might be a bug in the Kyber public key generation. \r\nIn the (indcpa.c) gen_matrix function, the three coefficient arrays (a) that are generated, appear to be identical. An incrementing domain code is used to initialize Keccak's state to unique values inside the inner loop, and a different domain code should yield a completely different output from SHAKE, even with the same seed, but in this case, the coefficient arrays produced are all identical. \r\nI have traced this to the (sha3.c) OQS_SHA3_cshake128_simple_absorb function. That function adds the domain code to the first state member, transforms the state, and then calls the keccak_absorb function, passing in the modified state. At the top of keccak_absorb, the state is *zeroed*, in effect, erasing the permuted domain code from the state, and hence the identical output is generated.\r\nCan someone confirm this?"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/352288088","html_url":"https://github.com/open-quantum-safe/liboqs/issues/200#issuecomment-352288088","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/200","id":352288088,"user":{"login":"Steppenwolfe65","id":8007343,"avatar_url":"https://avatars0.githubusercontent.com/u/8007343?v=4","gravatar_id":"","url":"https://api.github.com/users/Steppenwolfe65","html_url":"https://github.com/Steppenwolfe65","followers_url":"https://api.github.com/users/Steppenwolfe65/followers","following_url":"https://api.github.com/users/Steppenwolfe65/following{/other_user}","gists_url":"https://api.github.com/users/Steppenwolfe65/gists{/gist_id}","starred_url":"https://api.github.com/users/Steppenwolfe65/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Steppenwolfe65/subscriptions","organizations_url":"https://api.github.com/users/Steppenwolfe65/orgs","repos_url":"https://api.github.com/users/Steppenwolfe65/repos","events_url":"https://api.github.com/users/Steppenwolfe65/events{/privacy}","received_events_url":"https://api.github.com/users/Steppenwolfe65/received_events","type":"User","site_admin":false},"created_at":"2017-12-17T21:45:37Z","updated_at":"2017-12-17T21:45:37Z","author_association":"NONE","body":"No problem, glad I could help..\r\n\r\n@tlepoint \r\nIf you want to know how I felt when I realized the seriousness of that bug, just youtube 'Conan what is best in life' for a reasonable approximation. But note that I was very gentle, I could have used phrases like *catastrophic reduction in security* and raised every eyebrow in the room.. and despite (and perhaps because of), the project coordinators deny and distance response, I felt a mild dig was appropriate in my last comment (please don't hold it against me, I really couldn't help myself).\r\nSo.. maybe I've earned some good graces, should I ever send a question your way.\r\n\r\nOne suggestion I have for your library though (from someone who has been coding for nearly 30 years), is that you seriously consider bringing all this code up to Misra C standards; before adding any more features, ciphers, or protocols, do your best to ensure you are standing on solid ground. \r\nThis is a reference library, and with prominent people attached, will be taken as authoritative, and you really don't want any bad code to propagate (and please start with McBits!).\r\nAnd just imagine, if someone runs a static analyzer testing for SEI or Misra and finds 1700 (or 17,000!) exceptions, and then reports that as an issue.. (renamed the OQS Hindenburg!).\r\nGood luck guys..\r\n\r\nCheers,\r\nJohn"}},"public":true,"created_at":"2017-12-17T21:45:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
