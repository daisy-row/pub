{"id":"21617650025","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1201","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1201/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1201/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1201/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1201","id":1206821821,"node_id":"I_kwDOA-eq3c5H7qO9","number":1201,"title":"OQS_DIST_BUILD with strange results on M1","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-04-18T08:37:59Z","updated_at":"2022-05-04T15:55:58Z","closed_at":"2022-05-04T15:55:58Z","author_association":"MEMBER","active_lock_reason":null,"body":"When looking at the performance results at https://openquantumsafe.org/benchmarking/visualization/speed_kem.html, filtering for `aarch64` and `Kyber` (as an algorithm supporting run-time switching), it becomes apparent that setting OQS_DIST_BUILD yields the slowest-running code on that architecture; At first blush I attributed that to \"weak\" CPU features available by the AWS ARM VMs we use for profiling. However, now the same becomes visible when [trying things for M1](https://github.com/open-quantum-safe/profiling/issues/72).\r\n\r\nIsn't this counterintuitive, as this flag should dynamically select the fastest-running code? Especially on M1 silicon not having any optimizations that are _not_ supported, shouldn't code with this flag set be expected to yield performance as high as code with the `OQS_OPT_TARGET=auto` and `OQS_DIST_BUILD=OFF` (the \"-noport\" option in the [benchmarking suite](https://openquantumsafe.org/benchmarking/))?\r\n\r\nOn \"x86_64\" the performance behaviour is as expected: On machines/VMs with CPU features available, code built with `OQS_DIST_BUILD=ON` runs as fast as code with `OQS_OPT_TARGET=auto` (or skylake) and `OQS_DIST_BUILD=OFF`. The slowest performance is visible if `OQS_DIST_BUILD=OFF` and `OQS_OPT_TARGET=generic` (ie., the \"-ref\" setting).\r\n\r\nOn \"aarch64\", to the opposite, as long as `OQS_DIST_BUILD=OFF`, no performance difference can be observed, regardless of the choice of OQS_OPT_TARGET. This in turn means that \"-ref\" and \"-noport\" benchmark numbers are basically the same -- which also is confusing --at least to me--, as one was meant to display performance of reference implementation and the other that of the best optimized code. This then also debunks my initial thought that AWS aarch64 machines do not have all ARM performance features: They clearly do as the performance numbers are (much) higher than with `OQS_DIST_BUILD=ON`.\r\n\r\nThis issue is a continuation of #1146 making me wonder whether #1148 is a correct fix.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1201/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-05-04T15:55:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
