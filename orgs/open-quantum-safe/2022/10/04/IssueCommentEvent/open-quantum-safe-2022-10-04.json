{"id":"24388597711","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/398","id":1395591133,"node_id":"PR_kwDOA_fpb85AGbJJ","number":398,"title":"Added support for EVP_md_null() in pkey_oqs_ctrl. ","user":{"login":"opencrypto","id":7943812,"node_id":"MDQ6VXNlcjc5NDM4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7943812?v=4","gravatar_id":"","url":"https://api.github.com/users/opencrypto","html_url":"https://github.com/opencrypto","followers_url":"https://api.github.com/users/opencrypto/followers","following_url":"https://api.github.com/users/opencrypto/following{/other_user}","gists_url":"https://api.github.com/users/opencrypto/gists{/gist_id}","starred_url":"https://api.github.com/users/opencrypto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opencrypto/subscriptions","organizations_url":"https://api.github.com/users/opencrypto/orgs","repos_url":"https://api.github.com/users/opencrypto/repos","events_url":"https://api.github.com/users/opencrypto/events{/privacy}","received_events_url":"https://api.github.com/users/opencrypto/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-10-04T02:54:05Z","updated_at":"2022-10-04T13:41:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/398","html_url":"https://github.com/open-quantum-safe/openssl/pull/398","diff_url":"https://github.com/open-quantum-safe/openssl/pull/398.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/398.patch","merged_at":null},"body":"When using the PKEY methods for signing or verifying, you can specify the use of a digest algorithm as an intermediary or nothing. To align with other PKEY methods, this pull request adds the support for using the EVP_md_null() value alongside the NULL value for the p2 parameter in the pkey_oqs_ctrl function (see ecx_meth.c for an example).\r\n\r\n<!--\r\nThank you for your pull request. Please review these requirements:\r\n\r\nContributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING\r\n\r\nOther than that, provide a description above this comment if there isn't one already\r\n\r\nIf this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.\r\n-->\r\n\r\n##### Checklist\r\n<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->\r\n- [ x ] documentation is added or updated\r\n- [ ] tests are added or updated\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267020825","html_url":"https://github.com/open-quantum-safe/openssl/pull/398#issuecomment-1267020825","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398","id":1267020825,"node_id":"IC_kwDOA_fpb85LhTQZ","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-10-04T13:41:27Z","updated_at":"2022-10-04T13:41:27Z","author_association":"MEMBER","body":"> @dstebila @christianpaquin : I did not find tests for exercizing different MD algs when signing: Did I overlook them or should we create an issue to add such tests (incl. one for MD \"NULL\" as per this PR) in oqs-openssl111?\r\n\r\nI don't know where I'd look for these tests; if you looked in the right place and couldn't find them, then yes, we should add some.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267020825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-10-04T13:41:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"24389282812","type":"IssueCommentEvent","actor":{"id":49904103,"login":"fabort","display_login":"fabort","gravatar_id":"","url":"https://api.github.com/users/fabort","avatar_url":"https://avatars.githubusercontent.com/u/49904103?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/397","id":1379353252,"node_id":"I_kwDOA_fpb85SN0Kk","number":397,"title":"Do the bespoke hybrid X.509 certificates conform to the ITU-5 X.509 hybrid (multiple algorithms) certificates? ","user":{"login":"JoaoDDuarte","id":14338663,"node_id":"MDQ6VXNlcjE0MzM4NjYz","avatar_url":"https://avatars.githubusercontent.com/u/14338663?v=4","gravatar_id":"","url":"https://api.github.com/users/JoaoDDuarte","html_url":"https://github.com/JoaoDDuarte","followers_url":"https://api.github.com/users/JoaoDDuarte/followers","following_url":"https://api.github.com/users/JoaoDDuarte/following{/other_user}","gists_url":"https://api.github.com/users/JoaoDDuarte/gists{/gist_id}","starred_url":"https://api.github.com/users/JoaoDDuarte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoaoDDuarte/subscriptions","organizations_url":"https://api.github.com/users/JoaoDDuarte/orgs","repos_url":"https://api.github.com/users/JoaoDDuarte/repos","events_url":"https://api.github.com/users/JoaoDDuarte/events{/privacy}","received_events_url":"https://api.github.com/users/JoaoDDuarte/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-20T12:38:01Z","updated_at":"2022-10-04T14:07:13Z","closed_at":"2022-09-22T22:25:39Z","author_association":"NONE","active_lock_reason":null,"body":"In 2019, the ITU-T standardised the multiple algorithms certificates (i.e. hybrid) directly in the [X.509 standard](https://www.itu.int/rec/T-REC-X.509-201910-I/en). It is based on the expired Internet draft by [Truskovsky et al.](https://datatracker.ietf.org/doc/html/draft-truskovsky-lamps-pq-hybrid-x509-01).\r\n\r\nI was wondering if you plan on implementing this or if this is the implementation that already exists?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267064059","html_url":"https://github.com/open-quantum-safe/openssl/issues/397#issuecomment-1267064059","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397","id":1267064059,"node_id":"IC_kwDOA_fpb85Lhdz7","user":{"login":"fabort","id":49904103,"node_id":"MDQ6VXNlcjQ5OTA0MTAz","avatar_url":"https://avatars.githubusercontent.com/u/49904103?v=4","gravatar_id":"","url":"https://api.github.com/users/fabort","html_url":"https://github.com/fabort","followers_url":"https://api.github.com/users/fabort/followers","following_url":"https://api.github.com/users/fabort/following{/other_user}","gists_url":"https://api.github.com/users/fabort/gists{/gist_id}","starred_url":"https://api.github.com/users/fabort/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fabort/subscriptions","organizations_url":"https://api.github.com/users/fabort/orgs","repos_url":"https://api.github.com/users/fabort/repos","events_url":"https://api.github.com/users/fabort/events{/privacy}","received_events_url":"https://api.github.com/users/fabort/received_events","type":"User","site_admin":false},"created_at":"2022-10-04T14:07:13Z","updated_at":"2022-10-04T14:07:13Z","author_association":"NONE","body":"> > In 2019, the ITU-T standardised the multiple algorithms certificates (i.e. hybrid) directly in the [X.509 standard](https://www.itu.int/rec/T-REC-X.509-201910-I/en).\r\n> \r\n> At first glance (admittedly without reading all 236 pages...), I didn't find reference to hybrid certs: Can you please point out where this exactly is specified/standardized so we can answer? Also, why is this then not part of a (valid) IETF RFC? For all I know --but I may be wrong-- OpenSSL follows primarily IETF RFCs, not ITU documents per-se, but only when referenced in an RFC. Thanks in advance for specific references.\r\n> \r\n> The only roughly applicable area (9.8) is AFAIK neither implemented in OpenSSL nor oqs-openssl as this seems like a substantial deviation from the current OpenSSL (X.509) code base. In any case, this functionality is not QSC/PQC-specific, so I would not understand why this should be implemented in our project/openssl-fork; this instead should be in the upstream code base.\r\n> \r\n> > I was wondering if you plan on implementing this or if this is the implementation that already exists?\r\n> \r\n> Given my questions above, I'm rather certain that this is not existing -- and plans to implement this are not high on our agenda -- certainly not for openssl1.1.1 as that is not gaining new functionality (such as this) upstream.\r\n> \r\n> If you'd like to contribute this, by all means, please do so: we'd surely welcome a PR, please do consider doing this directly in OpenSSL3 (which does move forward with respect to new functionality such as this); if you further know of use cases (applications), please add them in our [future directions discussion](https://github.com/open-quantum-safe/liboqs/discussions/1292).\r\n\r\nHi,\r\nI was thinking about addin hybrid certificate support to this repository as part of my master thesis and further research. If anyone was already working on this or if you want to contribute as well, please let me know. I will create a PR for this in the end.\r\n\r\nRegards\r\nFabian","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267064059/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-10-04T14:07:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"24391247156","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/388","id":1336491721,"node_id":"I_kwDOA_fpb85PqT7J","number":388,"title":"Hybrid key exchange with x25519","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":431027944,"node_id":"MDU6TGFiZWw0MzEwMjc5NDQ=","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/question","name":"question","color":"cc317c","default":true,"description":"Further information is requested"},{"id":1135734043,"node_id":"MDU6TGFiZWwxMTM1NzM0MDQz","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/OpenSSL-111","name":"OpenSSL-111","color":"c918c0","default":false,"description":"Changes specific to OQS-OpenSSL_1_1_1-stable branch"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-11T21:07:25Z","updated_at":"2022-10-04T15:23:04Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Do we have support for hybrid key exchange with x25519?  Looking at https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/oqs-template/generate.yml#L75, for example, we list a NID for x25519+kyber512 in the configuration file, but then searching the generated code in the `ssl` directory or in https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/qsc.h, I don't see any reference to x25519 with Kyber or the specific NID in question.  @baentsch any idea?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267176182","html_url":"https://github.com/open-quantum-safe/openssl/issues/388#issuecomment-1267176182","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388","id":1267176182,"node_id":"IC_kwDOA_fpb85Lh5L2","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-10-04T15:23:04Z","updated_at":"2022-10-04T15:23:04Z","author_association":"MEMBER","body":">  Michael, how does the logic in oqs-provider use both the NIST and alternative curves from generate.yml?\r\n\r\n@dstebila Sorry I see the question only now. [Here](https://github.com/open-quantum-safe/oqs-provider/blob/e2b22b0d6a2b029e8728e3e9c46be89861eedecf/oqsprov/oqsprov.c#L95) is the macro activating [\"ECX\" hybrids, i.e. X25519/X448 hybrids](https://github.com/open-quantum-safe/oqs-provider/blob/e2b22b0d6a2b029e8728e3e9c46be89861eedecf/oqsprov/oqs_kmgmt.c#L930-L938). `generate.yml` is utilized by `generate.py` [here](https://github.com/open-quantum-safe/oqs-provider/blob/e2b22b0d6a2b029e8728e3e9c46be89861eedecf/oqs-template/generate.py#L173-L180) to populate via [template](https://github.com/open-quantum-safe/oqs-provider/blob/main/oqs-template/oqsprov/oqsprov_groups.c/group_assignments.fragment) the [ID/code-point table here](https://github.com/open-quantum-safe/oqs-provider/blob/e2b22b0d6a2b029e8728e3e9c46be89861eedecf/oqsprov/oqsprov_groups.c#L42-L80).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267176182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-10-04T15:23:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"24392128372","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/397","id":1379353252,"node_id":"I_kwDOA_fpb85SN0Kk","number":397,"title":"Do the bespoke hybrid X.509 certificates conform to the ITU-5 X.509 hybrid (multiple algorithms) certificates? ","user":{"login":"JoaoDDuarte","id":14338663,"node_id":"MDQ6VXNlcjE0MzM4NjYz","avatar_url":"https://avatars.githubusercontent.com/u/14338663?v=4","gravatar_id":"","url":"https://api.github.com/users/JoaoDDuarte","html_url":"https://github.com/JoaoDDuarte","followers_url":"https://api.github.com/users/JoaoDDuarte/followers","following_url":"https://api.github.com/users/JoaoDDuarte/following{/other_user}","gists_url":"https://api.github.com/users/JoaoDDuarte/gists{/gist_id}","starred_url":"https://api.github.com/users/JoaoDDuarte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoaoDDuarte/subscriptions","organizations_url":"https://api.github.com/users/JoaoDDuarte/orgs","repos_url":"https://api.github.com/users/JoaoDDuarte/repos","events_url":"https://api.github.com/users/JoaoDDuarte/events{/privacy}","received_events_url":"https://api.github.com/users/JoaoDDuarte/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-20T12:38:01Z","updated_at":"2022-10-04T16:00:23Z","closed_at":"2022-09-22T22:25:39Z","author_association":"NONE","active_lock_reason":null,"body":"In 2019, the ITU-T standardised the multiple algorithms certificates (i.e. hybrid) directly in the [X.509 standard](https://www.itu.int/rec/T-REC-X.509-201910-I/en). It is based on the expired Internet draft by [Truskovsky et al.](https://datatracker.ietf.org/doc/html/draft-truskovsky-lamps-pq-hybrid-x509-01).\r\n\r\nI was wondering if you plan on implementing this or if this is the implementation that already exists?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267227273","html_url":"https://github.com/open-quantum-safe/openssl/issues/397#issuecomment-1267227273","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/397","id":1267227273,"node_id":"IC_kwDOA_fpb85LiFqJ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-10-04T16:00:22Z","updated_at":"2022-10-04T16:00:22Z","author_association":"MEMBER","body":"> I was thinking about addin hybrid certificate support to this repository as part of my master thesis and further research.\r\n\r\nThis would be great. Please consider in the back of your mind (and/or to fill the lines in the thesis write-up :) a separation between changes required for the OpenSSL core code and those to \"pure\" (hybrid/QSC) signature/certificate logic: It would be nice if your work/experience gained (at least on the core logic) in this repo could thus possibly find its way into the upstream OpenSSL logic. Adding the pure sig logic of your work to [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) would then be something I'd be glad to take on if you wouldn't find the time for that.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267227273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-10-04T16:00:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"24394304561","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/388","id":1336491721,"node_id":"I_kwDOA_fpb85PqT7J","number":388,"title":"Hybrid key exchange with x25519","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":431027944,"node_id":"MDU6TGFiZWw0MzEwMjc5NDQ=","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/question","name":"question","color":"cc317c","default":true,"description":"Further information is requested"},{"id":1135734043,"node_id":"MDU6TGFiZWwxMTM1NzM0MDQz","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/OpenSSL-111","name":"OpenSSL-111","color":"c918c0","default":false,"description":"Changes specific to OQS-OpenSSL_1_1_1-stable branch"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-11T21:07:25Z","updated_at":"2022-10-04T17:48:40Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Do we have support for hybrid key exchange with x25519?  Looking at https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/oqs-template/generate.yml#L75, for example, we list a NID for x25519+kyber512 in the configuration file, but then searching the generated code in the `ssl` directory or in https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/qsc.h, I don't see any reference to x25519 with Kyber or the specific NID in question.  @baentsch any idea?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267350281","html_url":"https://github.com/open-quantum-safe/openssl/issues/388#issuecomment-1267350281","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388","id":1267350281,"node_id":"IC_kwDOA_fpb85LijsJ","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-10-04T17:48:40Z","updated_at":"2022-10-04T17:48:40Z","author_association":"MEMBER","body":"Thanks Michael. So we would need to extend generate.py in OQS-OpenSSL-111 in an analogous way to pull out the ECX hybrids?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267350281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-10-04T17:48:40Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
