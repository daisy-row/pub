{"id":"24403170675","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/388","id":1336491721,"node_id":"I_kwDOA_fpb85PqT7J","number":388,"title":"Hybrid key exchange with x25519","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":431027944,"node_id":"MDU6TGFiZWw0MzEwMjc5NDQ=","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/question","name":"question","color":"cc317c","default":true,"description":"Further information is requested"},{"id":1135734043,"node_id":"MDU6TGFiZWwxMTM1NzM0MDQz","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/OpenSSL-111","name":"OpenSSL-111","color":"c918c0","default":false,"description":"Changes specific to OQS-OpenSSL_1_1_1-stable branch"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-08-11T21:07:25Z","updated_at":"2022-10-05T04:36:29Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Do we have support for hybrid key exchange with x25519?  Looking at https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/oqs-template/generate.yml#L75, for example, we list a NID for x25519+kyber512 in the configuration file, but then searching the generated code in the `ssl` directory or in https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/qsc.h, I don't see any reference to x25519 with Kyber or the specific NID in question.  @baentsch any idea?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267928683","html_url":"https://github.com/open-quantum-safe/openssl/issues/388#issuecomment-1267928683","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388","id":1267928683,"node_id":"IC_kwDOA_fpb85Lkw5r","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-10-05T04:36:28Z","updated_at":"2022-10-05T04:36:28Z","author_association":"MEMBER","body":"Yes -- and of course to add the corresponding logic creating \"X25519/X448\" EVP calls. Indeed sounds rather doable.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267928683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-10-05T04:36:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"24403345141","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/398","id":1395591133,"node_id":"PR_kwDOA_fpb85AGbJJ","number":398,"title":"Added support for EVP_md_null() in pkey_oqs_ctrl. ","user":{"login":"opencrypto","id":7943812,"node_id":"MDQ6VXNlcjc5NDM4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7943812?v=4","gravatar_id":"","url":"https://api.github.com/users/opencrypto","html_url":"https://github.com/opencrypto","followers_url":"https://api.github.com/users/opencrypto/followers","following_url":"https://api.github.com/users/opencrypto/following{/other_user}","gists_url":"https://api.github.com/users/opencrypto/gists{/gist_id}","starred_url":"https://api.github.com/users/opencrypto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opencrypto/subscriptions","organizations_url":"https://api.github.com/users/opencrypto/orgs","repos_url":"https://api.github.com/users/opencrypto/repos","events_url":"https://api.github.com/users/opencrypto/events{/privacy}","received_events_url":"https://api.github.com/users/opencrypto/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-10-04T02:54:05Z","updated_at":"2022-10-05T04:52:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/398","html_url":"https://github.com/open-quantum-safe/openssl/pull/398","diff_url":"https://github.com/open-quantum-safe/openssl/pull/398.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/398.patch","merged_at":null},"body":"When using the PKEY methods for signing or verifying, you can specify the use of a digest algorithm as an intermediary or nothing. To align with other PKEY methods, this pull request adds the support for using the EVP_md_null() value alongside the NULL value for the p2 parameter in the pkey_oqs_ctrl function (see ecx_meth.c for an example).\r\n\r\n<!--\r\nThank you for your pull request. Please review these requirements:\r\n\r\nContributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING\r\n\r\nOther than that, provide a description above this comment if there isn't one already\r\n\r\nIf this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.\r\n-->\r\n\r\n##### Checklist\r\n<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->\r\n- [ x ] documentation is added or updated\r\n- [ ] tests are added or updated\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267938721","html_url":"https://github.com/open-quantum-safe/openssl/pull/398#issuecomment-1267938721","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/398","id":1267938721,"node_id":"IC_kwDOA_fpb85LkzWh","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-10-05T04:52:05Z","updated_at":"2022-10-05T04:52:05Z","author_association":"MEMBER","body":"@opencrypto : OK for you to wait with us merging this only when #400 has been completed, so we can properly confirm this code's operation? If we don't get around to doing this quickly, could you consider contributing such tests -- possibly based on your use case? Second question: You ticked the \"documentation is updated\" checkbox -- but there is no documentation explaining what/how classic MDs are supported by our code: Would you want to amend this PR with such documentation? A simple link in the README to the OpenSSL docs regarding setting MD's would suffice.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1267938721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-10-05T04:52:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
