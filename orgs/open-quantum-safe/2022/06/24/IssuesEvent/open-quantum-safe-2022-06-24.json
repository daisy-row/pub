{"id":"22525113374","type":"IssuesEvent","actor":{"id":56026339,"login":"drouhana","display_login":"drouhana","gravatar_id":"","url":"https://api.github.com/users/drouhana","avatar_url":"https://avatars.githubusercontent.com/u/56026339?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/82","id":1283787744,"node_id":"I_kwDOCrBzOM5MhQvg","number":82,"title":"Porting BoringSSL-OQS Fork Into Envoy","user":{"login":"drouhana","id":56026339,"node_id":"MDQ6VXNlcjU2MDI2MzM5","avatar_url":"https://avatars.githubusercontent.com/u/56026339?v=4","gravatar_id":"","url":"https://api.github.com/users/drouhana","html_url":"https://github.com/drouhana","followers_url":"https://api.github.com/users/drouhana/followers","following_url":"https://api.github.com/users/drouhana/following{/other_user}","gists_url":"https://api.github.com/users/drouhana/gists{/gist_id}","starred_url":"https://api.github.com/users/drouhana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drouhana/subscriptions","organizations_url":"https://api.github.com/users/drouhana/orgs","repos_url":"https://api.github.com/users/drouhana/repos","events_url":"https://api.github.com/users/drouhana/events{/privacy}","received_events_url":"https://api.github.com/users/drouhana/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-06-24T13:57:28Z","updated_at":"2022-06-24T13:57:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi everyone, firstly apologies if this is the wrong place to open a discussion on this.\r\n\r\n## What I'm Trying To Do\r\n\r\nI'm currently working on an open source implementation of a post-quantum enabled service mesh. This effort is in 3 parts:\r\n\r\n- Nginx-oqs (finished in march of this year)\r\n- Envoy (in progress)\r\n- Istio (contingent on completion of envoy)\r\n\r\nNginx was fairly straightforward to port the OpenSSL-OQS fork, but Envoy is giving me some trouble. Envoy is incompatible with OpenSSL (there is a [team](https://github.com/envoyproxy/envoy-openssl) working on fixing this currently), so I had to use the BoringSSL-OQS fork  \r\n  \r\n  \r\n## How I'm Doing it\r\n\r\nTo [update BoringSSL for envoy](https://github.com/envoyproxy/envoy/blob/11d1a0f002e1742c72b0c41e6e640f6420625371/bazel/repository_locations.bzl#L75), specifically the \"main-with-bazel\" branch must be used:\r\n\r\n![Screen Shot 2022-06-24 at 07 31 31](https://user-images.githubusercontent.com/56026339/175546317-c5fad7b1-ab35-4314-a938-ef6542e12bee.png)\r\n\r\nThe last updated Boringssl-OQS main-with-bazel was from 2019, so I [forked it](https://github.com/drouhana/boringssl/tree/master-with-bazel) and added the siphash.h file needed by Envoy.\r\n\r\nA few other modifications I needed to make in the [Envoy fork](https://github.com/drouhana/envoy-fork) I'm modifying:\r\n\r\n- Disable jwt-auth\r\n- Disable QUIC to side-step Quiche compatibility issues\r\n\r\nEnvoy successfully builds with my modifications\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175549746-efd0b7b1-e412-476e-b65e-72e9d19c054d.png)\r\n![image](https://user-images.githubusercontent.com/56026339/175549767-c2a2e67d-9da0-4936-9c3f-e060573becf0.png)\r\n\r\nHere are the commands I used to generate the self-signed CA cert and the server cert as per the instructions on the OpenSSL-OQS page. I have tried them with all combinations of standard/OQS/hybrid for both the CA cert and the server cert\r\n\r\n\r\n    /usr/local/openssl/apps/openssl req -x509 -new -newkey rsa:2048 -keyout root_CA.key -out root_CA.crt -nodes -subj \"/CN=oqstest CA\" -days 365 -config /usr/local/openssl/apps/openssl.cnf\r\n  \r\n    /usr/local/openssl/apps/openssl req -new -newkey rsa3072_dilithium2 -keyout serverkey.key -out servercsr.csr -nodes -subj \"/CN=oqstest server\" -config /usr/local/openssl/apps/openssl.cnf\r\n   \r\n    /usr/local/openssl/apps/openssl x509 -req -in servercsr.csr -out servercert.crt -CA root_CA.crt -CAkey root_CA.key -CAcreateserial -days 365  \r\n\r\n\r\n## How It's Working: Standard RSA\r\n\r\nI can confirm my build works by passing RSA certs and keys generated using the OQS-OpenSSL fork. The HTTPS server successfully performs the TLS handshake, and I am able to reach HTTP upstream.\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175548753-138d6dbe-2ae8-4a91-8319-99e9b4b9c8b3.png)\r\n\r\n\r\n## How It's Not Working 1: \"Cannot Load Certificate Chain\"\r\n\r\nIf I pass the (hybrid or OQS) server cert to Envoy, I get this error:\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175548131-5b90e05d-e5d1-4c70-bd53-ad5fc37dc99b.png)\r\n\r\nI have tracked it down to this portion of the Envoy source code:\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175549103-476f1386-8163-4122-acff-48a287353550.png)\r\n\r\nHere is a diagram of the functions and their locations in the Envoy rouce code:\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175549228-3ebb0ffb-365a-4eb0-8cd6-307984d1a67d.png)\r\n\r\n\r\n## How It's Not Working 2: \"Unsupported Algorithm\"\r\n\r\nIf I pass the (RSA) root CA cert to Envoy with the (hybrid or OQS) key, I am faced with this error instead\r\n\r\n![Screenshot_f](https://user-images.githubusercontent.com/56026339/175549342-ee7caf71-95fe-4fcb-9227-6b4343dc16c5.png)\r\n\r\n## Questions\r\n\r\nIf anyone is curious and wants to reproduce this, the instructions are on [this repo](https://github.com/Post-Quantum-Mesh/envoy-oqs) I have set up.\r\n\r\nAt this point, I feel like there may be something catastrophically important I'm missing about either BoringSSL-OQS, Envoy, or just software development in general.\r\n\r\nI would love any and all feedback/advice/thoughts/criticism about why this may be happening, and what I can do to fix this.\r\n\r\nSpecifically, as the last BoringSSL-OQS update to the main-with-bazel branch was in 2019, I would love to help update that if possible","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2022-06-24T13:57:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
