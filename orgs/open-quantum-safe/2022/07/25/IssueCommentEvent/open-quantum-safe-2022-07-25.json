{"id":"23065625750","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","id":1302262669,"node_id":"PR_kwDOA-eq3c47RltC","number":1254,"title":"pqclean_hqc: Fix build on GCC-12","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-12T16:00:28Z","updated_at":"2022-07-25T13:42:33Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.patch","merged_at":null},"body":"Make index variable `i` immediate by unrolling the loop. This is just lucky guess that's worked, because similar in function intrinsic `_mm256_extract_epi16` requires immediate value for its index.\r\n\r\nWorkaround to the (perhaps) GCC 12 bug:\r\n```\r\n  In function 'find_peaks',\r\n      inlined from 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode' at /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:387:18:\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:336:44: error: 'tmp' is used uninitialized [-Werror=uninitialized]\r\n    336 |         result |= mask & ((uint16_t *)&tmp)[i];\r\n\t|                          ~~~~~~~~~~~~~~~~~~^~~\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c: In function 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode':\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:234:13: note: 'tmp' was declared here\r\n    234 |     __m256i tmp = _mm256_setzero_si256();\r\n\t|             ^~~\r\n```\r\nIf LTO is enabled this error message is not shown, but HQC-128 decaps test is failed.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAs discussed at https://github.com/open-quantum-safe/liboqs/issues/1244\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1244\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\nNo such changes.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nTested locally on `0.7.1`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194066509","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254#issuecomment-1194066509","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","id":1194066509,"node_id":"IC_kwDOA-eq3c5HLAJN","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-07-25T13:42:33Z","updated_at":"2022-07-25T13:42:33Z","author_association":"MEMBER","body":"My preference is to minimize the amount of local patching we do, so instead to push these changes up to PQClean and then re-import them.  But it would be fine to merge here as long without adding them to the patchset as long as we also submit a PR at PQClean with the same patches.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194066509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-07-25T13:42:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23065704471","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","id":1302262669,"node_id":"PR_kwDOA-eq3c47RltC","number":1254,"title":"pqclean_hqc: Fix build on GCC-12","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-12T16:00:28Z","updated_at":"2022-07-25T13:45:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.patch","merged_at":null},"body":"Make index variable `i` immediate by unrolling the loop. This is just lucky guess that's worked, because similar in function intrinsic `_mm256_extract_epi16` requires immediate value for its index.\r\n\r\nWorkaround to the (perhaps) GCC 12 bug:\r\n```\r\n  In function 'find_peaks',\r\n      inlined from 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode' at /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:387:18:\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:336:44: error: 'tmp' is used uninitialized [-Werror=uninitialized]\r\n    336 |         result |= mask & ((uint16_t *)&tmp)[i];\r\n\t|                          ~~~~~~~~~~~~~~~~~~^~~\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c: In function 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode':\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:234:13: note: 'tmp' was declared here\r\n    234 |     __m256i tmp = _mm256_setzero_si256();\r\n\t|             ^~~\r\n```\r\nIf LTO is enabled this error message is not shown, but HQC-128 decaps test is failed.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAs discussed at https://github.com/open-quantum-safe/liboqs/issues/1244\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1244\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\nNo such changes.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nTested locally on `0.7.1`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194070501","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254#issuecomment-1194070501","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","id":1194070501,"node_id":"IC_kwDOA-eq3c5HLBHl","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-07-25T13:45:57Z","updated_at":"2022-07-25T13:45:57Z","author_association":"MEMBER","body":"> as we also submit a PR at PQClean with the same patches\r\n\r\n@vt-alt : Would you be willing to do a PR at https://github.com/PQClean ?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194070501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-07-25T13:45:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23065874582","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","id":1302262669,"node_id":"PR_kwDOA-eq3c47RltC","number":1254,"title":"pqclean_hqc: Fix build on GCC-12","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-07-12T16:00:28Z","updated_at":"2022-07-25T13:53:29Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.patch","merged_at":null},"body":"Make index variable `i` immediate by unrolling the loop. This is just lucky guess that's worked, because similar in function intrinsic `_mm256_extract_epi16` requires immediate value for its index.\r\n\r\nWorkaround to the (perhaps) GCC 12 bug:\r\n```\r\n  In function 'find_peaks',\r\n      inlined from 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode' at /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:387:18:\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:336:44: error: 'tmp' is used uninitialized [-Werror=uninitialized]\r\n    336 |         result |= mask & ((uint16_t *)&tmp)[i];\r\n\t|                          ~~~~~~~~~~~~~~~~~~^~~\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c: In function 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode':\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:234:13: note: 'tmp' was declared here\r\n    234 |     __m256i tmp = _mm256_setzero_si256();\r\n\t|             ^~~\r\n```\r\nIf LTO is enabled this error message is not shown, but HQC-128 decaps test is failed.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAs discussed at https://github.com/open-quantum-safe/liboqs/issues/1244\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1244\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\nNo such changes.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nTested locally on `0.7.1`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194079365","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254#issuecomment-1194079365","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","id":1194079365,"node_id":"IC_kwDOA-eq3c5HLDSF","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2022-07-25T13:53:29Z","updated_at":"2022-07-25T13:53:29Z","author_association":"CONTRIBUTOR","body":"> > as we also submit a PR at PQClean with the same patches\r\n> \r\n> @vt-alt : Would you be willing to do a PR at https://github.com/PQClean ?\r\n\r\nNot really, because, 1) I believe upstream should do a better fix than this workaround, and 2) to PR to PQClean I would need to compile and use somewhat and test and play with PQClean which I don't want to.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194079365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-07-25T13:53:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23066174130","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","id":1302262669,"node_id":"PR_kwDOA-eq3c47RltC","number":1254,"title":"pqclean_hqc: Fix build on GCC-12","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-07-12T16:00:28Z","updated_at":"2022-07-25T14:06:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.patch","merged_at":null},"body":"Make index variable `i` immediate by unrolling the loop. This is just lucky guess that's worked, because similar in function intrinsic `_mm256_extract_epi16` requires immediate value for its index.\r\n\r\nWorkaround to the (perhaps) GCC 12 bug:\r\n```\r\n  In function 'find_peaks',\r\n      inlined from 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode' at /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:387:18:\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:336:44: error: 'tmp' is used uninitialized [-Werror=uninitialized]\r\n    336 |         result |= mask & ((uint16_t *)&tmp)[i];\r\n\t|                          ~~~~~~~~~~~~~~~~~~^~~\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c: In function 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode':\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:234:13: note: 'tmp' was declared here\r\n    234 |     __m256i tmp = _mm256_setzero_si256();\r\n\t|             ^~~\r\n```\r\nIf LTO is enabled this error message is not shown, but HQC-128 decaps test is failed.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAs discussed at https://github.com/open-quantum-safe/liboqs/issues/1244\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1244\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\nNo such changes.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nTested locally on `0.7.1`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194095092","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254#issuecomment-1194095092","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","id":1194095092,"node_id":"IC_kwDOA-eq3c5HLHH0","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-07-25T14:06:24Z","updated_at":"2022-07-25T14:06:24Z","author_association":"MEMBER","body":"> and test and play with PQClean which I don't want to\r\n\r\nCompletely understandable. I'd then tend to approve this PR as-is and let this code \"die automatically\" as and when upstream improves things. If not, well deal with that then. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194095092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-07-25T14:06:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23066557745","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/378","id":1312293064,"node_id":"I_kwDOA_fpb85OOADI","number":378,"title":"Dilithium2 incorrectly marked as level 1","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-21T01:39:18Z","updated_at":"2022-07-25T14:22:21Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/oqs-template/oqs-sig-info.md","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1194116372","html_url":"https://github.com/open-quantum-safe/openssl/issues/378#issuecomment-1194116372","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378","id":1194116372,"node_id":"IC_kwDOA_fpb85HLMUU","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-07-25T14:22:20Z","updated_at":"2022-07-25T14:22:20Z","author_association":"MEMBER","body":"The issue stems from https://github.com/open-quantum-safe/openssl/blob/907fdfd3e66cbde3b02584bb4c404161e50512af/oqs-template/generatehelpers.py#L68-L76 treating both NIST L1 and L2 as \"128 bits security\". Is this right or wrong? If wrong, the documentation regarding hybrids must be changed, too:\r\n\r\n> if <SIG> claims NIST L1 or L2 security, then the fork provides the methods rsa3072_<SIG> and p256_<SIG>, which combine <SIG> with RSA3072 and with ECDSA using NIST's P256 curve respectively.\r\n\r\nIf right, we might document \"L2\" for dilithium2 but without any implications as to any code operations (incl. the classic algs used in hybrid).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1194116372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-07-25T14:22:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23069756289","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/378","id":1312293064,"node_id":"I_kwDOA_fpb85OOADI","number":378,"title":"Dilithium2 incorrectly marked as level 1","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T01:39:18Z","updated_at":"2022-07-25T16:52:46Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/oqs-template/oqs-sig-info.md","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1194346286","html_url":"https://github.com/open-quantum-safe/openssl/issues/378#issuecomment-1194346286","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/378","id":1194346286,"node_id":"IC_kwDOA_fpb85HMEcu","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-07-25T16:52:46Z","updated_at":"2022-07-25T16:52:46Z","author_association":"MEMBER","body":"Officially, level 2 means computational resources equivalent to a collision search on a 256-bit hash function such as SHA-256.  For a single bit-security metric level 1 and 2 both have 128 bit security, although a more granular resource estimate would view level 2 as having a higher resource requirement than level 1.  For our purposes, it is fine to continue viewing level 2 as 128-bit security and pairing it with AES128 and SHA256 / SHA3-256.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1194346286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-07-25T16:52:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23071957330","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","id":1302262669,"node_id":"PR_kwDOA-eq3c47RltC","number":1254,"title":"pqclean_hqc: Fix build on GCC-12","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-07-12T16:00:28Z","updated_at":"2022-07-25T18:59:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.patch","merged_at":null},"body":"Make index variable `i` immediate by unrolling the loop. This is just lucky guess that's worked, because similar in function intrinsic `_mm256_extract_epi16` requires immediate value for its index.\r\n\r\nWorkaround to the (perhaps) GCC 12 bug:\r\n```\r\n  In function 'find_peaks',\r\n      inlined from 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode' at /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:387:18:\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:336:44: error: 'tmp' is used uninitialized [-Werror=uninitialized]\r\n    336 |         result |= mask & ((uint16_t *)&tmp)[i];\r\n\t|                          ~~~~~~~~~~~~~~~~~~^~~\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c: In function 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode':\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:234:13: note: 'tmp' was declared here\r\n    234 |     __m256i tmp = _mm256_setzero_si256();\r\n\t|             ^~~\r\n```\r\nIf LTO is enabled this error message is not shown, but HQC-128 decaps test is failed.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAs discussed at https://github.com/open-quantum-safe/liboqs/issues/1244\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1244\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\nNo such changes.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nTested locally on `0.7.1`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194487196","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254#issuecomment-1194487196","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","id":1194487196,"node_id":"IC_kwDOA-eq3c5HMm2c","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2022-07-25T18:59:16Z","updated_at":"2022-07-25T18:59:16Z","author_association":"CONTRIBUTOR","body":"I rebased PR over the main. `All checks have passed`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1194487196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-07-25T18:59:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
