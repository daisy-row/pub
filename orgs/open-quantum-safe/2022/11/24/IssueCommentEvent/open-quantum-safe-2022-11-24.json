{"id":"25442338158","type":"IssueCommentEvent","actor":{"id":6546430,"login":"guywaldman","display_login":"guywaldman","gravatar_id":"","url":"https://api.github.com/users/guywaldman","avatar_url":"https://avatars.githubusercontent.com/u/6546430?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/86","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/86/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/86/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/86/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/86","id":1462468514,"node_id":"PR_kwDOCrBzOM5DmauX","number":86,"title":"Update from Nov 17 upstream snapshot","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-11-23T22:09:03Z","updated_at":"2022-11-24T00:28:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/86","html_url":"https://github.com/open-quantum-safe/boringssl/pull/86","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/86.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/86.patch","merged_at":null},"body":"WORK IN PROGRESS: merged from upstream, resolved merge conflicts, but I have compile errors.\r\n\r\nUpdate to commit [f0518d](https://github.com/google/boringssl/commit/f0518d45119dd4dd322a884669daf8247bc3c992)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/86/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/86/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1325800626","html_url":"https://github.com/open-quantum-safe/boringssl/pull/86#issuecomment-1325800626","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/86","id":1325800626,"node_id":"IC_kwDOCrBzOM5PBhyy","user":{"login":"guywaldman","id":6546430,"node_id":"MDQ6VXNlcjY1NDY0MzA=","avatar_url":"https://avatars.githubusercontent.com/u/6546430?v=4","gravatar_id":"","url":"https://api.github.com/users/guywaldman","html_url":"https://github.com/guywaldman","followers_url":"https://api.github.com/users/guywaldman/followers","following_url":"https://api.github.com/users/guywaldman/following{/other_user}","gists_url":"https://api.github.com/users/guywaldman/gists{/gist_id}","starred_url":"https://api.github.com/users/guywaldman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guywaldman/subscriptions","organizations_url":"https://api.github.com/users/guywaldman/orgs","repos_url":"https://api.github.com/users/guywaldman/repos","events_url":"https://api.github.com/users/guywaldman/events{/privacy}","received_events_url":"https://api.github.com/users/guywaldman/received_events","type":"User","site_admin":false},"created_at":"2022-11-24T00:28:57Z","updated_at":"2022-11-24T00:28:57Z","author_association":"NONE","body":"@christianpaquin The duplicate is ID 320 in `crypto/err/ssl.errordata`, need to dedup the `OUTER_EXTENSION_NOT_FOUND` error","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1325800626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-11-24T00:28:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"25457463112","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/83","id":1455489055,"node_id":"I_kwDOETYnOM5WwQAf","number":83,"title":"Add hybrid KEX to TLS benchmarking tests","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-11-18T17:10:44Z","updated_at":"2022-11-24T15:19:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It'd be good to add hybrid KEX as well to the TLS benchmarking tests. If resources are constrained, then only enabling the Kyber variants (and perhaps the fallback NTRU) would suffice. These are likely be the first deployed algs in practice, so this data would be insightful. Perf tests with these algs will also be run in the NCCoE projects, so having a basis for comparison would help.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1326584956","html_url":"https://github.com/open-quantum-safe/profiling/issues/83#issuecomment-1326584956","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83","id":1326584956,"node_id":"IC_kwDOETYnOM5PEhR8","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-11-24T15:19:21Z","updated_at":"2022-11-24T15:19:21Z","author_association":"MEMBER","body":"I'm a bit confused about this. To add hybrid key exchange to TLS benchmarking tests, we should only need support for hybrid key exchange in `openssl s_time`, not `openssl speed`.  Granted, our [handshakes.py](https://github.com/open-quantum-safe/profiling/blob/main/perf/scripts/handshakes.py) script does seem to be calling them both to collect data, but only the `s_time` support should be necessary.  I haven't looked into the `s_time` code in a while, but I know that we can definitely do hybrid KEX in TLS via `openssl s_client` and `openssl s_server`, so I would have hoped that `s_time` uses the same code base.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1326584956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-11-24T15:19:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"25457835142","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/83","id":1455489055,"node_id":"I_kwDOETYnOM5WwQAf","number":83,"title":"Add hybrid KEX to TLS benchmarking tests","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-11-18T17:10:44Z","updated_at":"2022-11-24T15:37:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It'd be good to add hybrid KEX as well to the TLS benchmarking tests. If resources are constrained, then only enabling the Kyber variants (and perhaps the fallback NTRU) would suffice. These are likely be the first deployed algs in practice, so this data would be insightful. Perf tests with these algs will also be run in the NCCoE projects, so having a basis for comparison would help.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1326603244","html_url":"https://github.com/open-quantum-safe/profiling/issues/83#issuecomment-1326603244","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/83","id":1326603244,"node_id":"IC_kwDOETYnOM5PElvs","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-11-24T15:37:00Z","updated_at":"2022-11-24T15:37:00Z","author_association":"MEMBER","body":"You're right: `s_time` (i.e., real handshaking) surely will do all (incl. hybrid) KEMs. My confusion stems from the initial lines in `handshakes.py` using `speed` to obtain the available KEMs' names. And _that_ only returns (and tests) the non-hybrid KEMs. In consequence I read/misunderstood the issue to be for pure algorithm performance, excluding (pretty uncontrollable) networking overhead (i.e., `speed`, nor `s_time` measurements).\r\n\r\nSo all that may be needed to implement handshake measurements is to update the KEM algs list (maybe via jinja template code [here](https://github.com/open-quantum-safe/profiling/blob/27b89571941db9c13922ac4a86a04df51ede8000/perf/scripts/handshakes.py#L48)) and `s_time` will collect all KEM's handshake performance. But I'd suggest to actually run such update only after pruning algs -- the test matrix will be _very_ large otherwise.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1326603244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-11-24T15:37:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"25460975486","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1321","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1321/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1321/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1321/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1321","id":1463630482,"node_id":"PR_kwDOA-eq3c5DqVjC","number":1321,"title":"Remove rainbow","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-11-24T17:10:02Z","updated_at":"2022-11-24T18:59:35Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1321","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1321","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1321.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1321.patch","merged_at":null},"body":"Removes the rainbow signature scheme as per https://github.com/open-quantum-safe/liboqs/issues/1317. I'll submit a PR per algorithm since removing each one is not totally mechanical and straightforward. Once all the algorithms are removed I'll move on to the downstream projects.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [x] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1321/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1326776683","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1321#issuecomment-1326776683","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1321","id":1326776683,"node_id":"IC_kwDOA-eq3c5PFQFr","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2022-11-24T18:59:35Z","updated_at":"2022-11-24T18:59:35Z","author_association":"MEMBER","body":"> Piecemeal removal is OK -- but is the assumption that you merge each PR before moving on to the next? If so, I'd strongly suggest you work \"backwards\", i.e., first remove the algs from downstream use. Otherwise, this approach will generate many failed CI runs. If not, i.e., you intend to merge only when all algs are done and then move on \"downstream\", the failing downstream CI runs will not be so numerous ... maybe I'll install an oqs-github-mailstorm-filter on my Inbox :)\r\n\r\nIf we let the downstream CIs fail for a few days, once all the algorithms are removed in liboqs it'll just be one PR to each downstream as opposed to the 4 PRs per downstream if we update each time we remove an algorithm here. Granted, it would be ideal if each PR in liboqs gets reviewed and merged quickly to minimize the number of emails sent.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1326776683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-11-24T18:59:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
