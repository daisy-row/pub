{"id":"26010529130","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-21T00:57:35Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1360617800","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1360617800","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1360617800,"node_id":"IC_kwDOA-eq3c5RGWFI","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T00:57:35Z","updated_at":"2022-12-21T00:57:35Z","author_association":"CONTRIBUTOR","body":"Thanks @baentsch for the comments.\r\n\r\n> Can you please explain the benefit of this for OQS (users and developers)? Who uses \"CBOMs\"?\r\n> \r\n> At first sight this looks like a vendor-specific/proprietary code description format, i.e., useful only for _one party_.\r\n\r\nThe CBOM spec was just recently released. It's an _open_ specification based on the OWASP CycloneDX specification (see references above), with the plan to upstream to a next version of CycloneDX.\r\nThe benefit for OQS users is to have a standard format that documents its crypto components and dependencies, which makes it accessible for related tooling from CycloneDX.\r\n\r\n> The draft PR in turn adds changes to core data structures that make maintenance of `liboqs` more cumbersome for _everyone_ (e.g., by duplicating oqs-openssl information in liboqs YML files that then apparently manually have to be kept in sync between projects).\r\n\r\nI think the changes you refer to is the addition of a `oqs_alg` field in the algorithm docs (yml files). The intention was to be able to retrieve the OIDs of algorithms as they define an algorithm more uniquely (e.g. OID 'should' differ if there is a change between round 3 and 4, the name is the same). At the moment, this is only possible by retrieving the OID from oqs-openssl. I see that this is not optimal. Alternatively, would there be value adding the OID definitions to liboqs and let openssl and oqs-provider fetch OIDs from here?\r\n\r\n> Additionally, can I ask whether this has to be _in_ `liboqs`? It seems like this could be run \"outside\" (and for any library you'd like to document with this format). Lastly, glancing over your spec with its references to OIDs (and the \"openssl forward references\" in the PR), if at all, shouldn't this rather reside in oqs-openssl?\r\n\r\nThe format itself can be used for any library. Having the CBOM _in_ liboqs allows other components to refer to its CBOM. OQS-openssl would have a different CBOM than liboqs. It would add a dependency to liboqs (and its CBOM) and to the algorithms it uses from liboqs. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1360617800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T00:57:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26014302254","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/92","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/92/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/92/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/92/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/92","id":1482974347,"node_id":"I_kwDOE_A9l85YZGSL","number":92,"title":"Memory leaks during key creation and signing","user":{"login":"xShuusui","id":32741828,"node_id":"MDQ6VXNlcjMyNzQxODI4","avatar_url":"https://avatars.githubusercontent.com/u/32741828?v=4","gravatar_id":"","url":"https://api.github.com/users/xShuusui","html_url":"https://github.com/xShuusui","followers_url":"https://api.github.com/users/xShuusui/followers","following_url":"https://api.github.com/users/xShuusui/following{/other_user}","gists_url":"https://api.github.com/users/xShuusui/gists{/gist_id}","starred_url":"https://api.github.com/users/xShuusui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xShuusui/subscriptions","organizations_url":"https://api.github.com/users/xShuusui/orgs","repos_url":"https://api.github.com/users/xShuusui/repos","events_url":"https://api.github.com/users/xShuusui/events{/privacy}","received_events_url":"https://api.github.com/users/xShuusui/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-12-07T22:17:50Z","updated_at":"2022-12-21T06:45:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\nwe are currently developing a crypto api and found some memory leaks with valgrind during key creation with pqc algorithms.\r\n\r\nThe leaks we found:\r\n- During `EVP_PKEY_keygen_init` in  **oqs_kmgmt.c**, line 422 \r\n`gctx->oqs_name = OPENSSL_strdup(oqs_name);`\r\n- During `EVP_PKEY_generate` in **oqsprov_keys.c**, line 618\r\n`ret->tls_name = OPENSSL_strdup(tls_name);`\r\n- During `EVP_DigestSignInit` from `ASN1_item_i2d` in **oqs_sig.c**\r\nNot able to fix it, but we assume its coming from line 156: `ctx->aid_len = get_aid(&(ctx->aid), ctx->sig->tls_name);`, from a not correctly freed `aid`.\r\n\r\n\r\nWe started with version *0.4.0* of the oqs-provider, when we saw that there are memory leaks fixed on [commit](https://github.com/levitte/tmp-oqsprov/commit/3d573cc2862c66d513edde21d447692d85678d60), we switched to the current [main](https://github.com/levitte/tmp-oqsprov/commit/277b3719686c16e60c24ad8b4e82f18ec3778a1e) version. The leaks listed above also occurred there.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/92/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/92/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1360918222","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/92#issuecomment-1360918222","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/92","id":1360918222,"node_id":"IC_kwDOE_A9l85RHfbO","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T06:45:36Z","updated_at":"2022-12-21T06:45:36Z","author_association":"MEMBER","body":"Please submit your fixes via PR from your own fork. A nice summary has recently been posted by Thom Wiggers to the oqs-developers mailing list:\r\n\r\n> The way PRs work on Github is that you create a copy of a repository under your own account (a so-called fork), add this fork as a \"remote\" to your local copy of the repository, and then push your changes to the fork under your github account. You can then open a pull request (so-called because it's a request to pull changes from your git repository!) through the command line.\r\n> \r\n> See also: https://docs.github.com/en/get-started/quickstart/contributing-to-projects\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1360918222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T06:45:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26014817078","type":"IssueCommentEvent","actor":{"id":8898947,"login":"bbbrumley","display_login":"bbbrumley","gravatar_id":"","url":"https://api.github.com/users/bbbrumley","avatar_url":"https://avatars.githubusercontent.com/u/8898947?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1328","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1328/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1328/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1328/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1328","id":1491471506,"node_id":"PR_kwDOA-eq3c5FK3LB","number":1328,"title":"Add ntruprime","user":{"login":"ryndia","id":68096721,"node_id":"MDQ6VXNlcjY4MDk2NzIx","avatar_url":"https://avatars.githubusercontent.com/u/68096721?v=4","gravatar_id":"","url":"https://api.github.com/users/ryndia","html_url":"https://github.com/ryndia","followers_url":"https://api.github.com/users/ryndia/followers","following_url":"https://api.github.com/users/ryndia/following{/other_user}","gists_url":"https://api.github.com/users/ryndia/gists{/gist_id}","starred_url":"https://api.github.com/users/ryndia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryndia/subscriptions","organizations_url":"https://api.github.com/users/ryndia/orgs","repos_url":"https://api.github.com/users/ryndia/repos","events_url":"https://api.github.com/users/ryndia/events{/privacy}","received_events_url":"https://api.github.com/users/ryndia/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2022-12-12T10:03:01Z","updated_at":"2022-12-21T07:20:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1328","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1328","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1328.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1328.patch","merged_at":null},"body":"\r\nThe purpose of the pr is to add the ntruprime key exchange algorithm.\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n* [ ] \r\nYes this pr add ntruprime to the available algorithm for key exchange algorithm\r\n\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1328/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1360944574","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1328#issuecomment-1360944574","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1328","id":1360944574,"node_id":"IC_kwDOA-eq3c5RHl2-","user":{"login":"bbbrumley","id":8898947,"node_id":"MDQ6VXNlcjg4OTg5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/8898947?v=4","gravatar_id":"","url":"https://api.github.com/users/bbbrumley","html_url":"https://github.com/bbbrumley","followers_url":"https://api.github.com/users/bbbrumley/followers","following_url":"https://api.github.com/users/bbbrumley/following{/other_user}","gists_url":"https://api.github.com/users/bbbrumley/gists{/gist_id}","starred_url":"https://api.github.com/users/bbbrumley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbbrumley/subscriptions","organizations_url":"https://api.github.com/users/bbbrumley/orgs","repos_url":"https://api.github.com/users/bbbrumley/repos","events_url":"https://api.github.com/users/bbbrumley/events{/privacy}","received_events_url":"https://api.github.com/users/bbbrumley/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T07:20:38Z","updated_at":"2022-12-21T07:20:38Z","author_association":"NONE","body":"Very nice catches @baentsch ! LGTM. (Admittedly I skipped most of the `pq_clean_*` additions, since it looks like these are coming from some upstream.)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1360944574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T07:20:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26014841290","type":"IssueCommentEvent","actor":{"id":8898947,"login":"bbbrumley","display_login":"bbbrumley","gravatar_id":"","url":"https://api.github.com/users/bbbrumley","avatar_url":"https://avatars.githubusercontent.com/u/8898947?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1329","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1329/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1329/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1329/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1329","id":1491489672,"node_id":"I_kwDOA-eq3c5Y5lOI","number":1329,"title":"Add NTRU prime back","user":{"login":"loganaden","id":1688420,"node_id":"MDQ6VXNlcjE2ODg0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/1688420?v=4","gravatar_id":"","url":"https://api.github.com/users/loganaden","html_url":"https://github.com/loganaden","followers_url":"https://api.github.com/users/loganaden/followers","following_url":"https://api.github.com/users/loganaden/following{/other_user}","gists_url":"https://api.github.com/users/loganaden/gists{/gist_id}","starred_url":"https://api.github.com/users/loganaden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loganaden/subscriptions","organizations_url":"https://api.github.com/users/loganaden/orgs","repos_url":"https://api.github.com/users/loganaden/repos","events_url":"https://api.github.com/users/loganaden/events{/privacy}","received_events_url":"https://api.github.com/users/loganaden/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2022-12-12T10:11:27Z","updated_at":"2022-12-21T07:22:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi All,\r\n\r\nWe have been working on NTRU prime due to its interesting properties that make it an alternative choice to Kyber, despite its lack of NIST support. \r\n\r\nIt would be worth pointing out that \r\n1) OpenSSH 9.0 (SSH server) ships with NTRU prime by default: https://www.openssh.com/txt/release-9.0\r\n2) OpenIKED (VPN) ships with NTRU prime as well: https://github.com/openiked/openiked-portable/releases/tag/v7.0\r\n3) Putty (SSH Client) now supports NTRU prime: https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html\r\n\r\nAnd the removal of NTRU prime breaks a popular SSH library which relies on liboqs-python for interop with OpenSSH:\r\nhttps://github.com/ronf/asyncssh\r\n\r\nA PR was sent for your consideration as well: https://github.com/open-quantum-safe/liboqs/pull/1328\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1329/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1360945780","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1329#issuecomment-1360945780","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1329","id":1360945780,"node_id":"IC_kwDOA-eq3c5RHmJ0","user":{"login":"bbbrumley","id":8898947,"node_id":"MDQ6VXNlcjg4OTg5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/8898947?v=4","gravatar_id":"","url":"https://api.github.com/users/bbbrumley","html_url":"https://github.com/bbbrumley","followers_url":"https://api.github.com/users/bbbrumley/followers","following_url":"https://api.github.com/users/bbbrumley/following{/other_user}","gists_url":"https://api.github.com/users/bbbrumley/gists{/gist_id}","starred_url":"https://api.github.com/users/bbbrumley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbbrumley/subscriptions","organizations_url":"https://api.github.com/users/bbbrumley/orgs","repos_url":"https://api.github.com/users/bbbrumley/repos","events_url":"https://api.github.com/users/bbbrumley/events{/privacy}","received_events_url":"https://api.github.com/users/bbbrumley/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T07:22:12Z","updated_at":"2022-12-21T07:22:12Z","author_association":"NONE","body":"Yea the PR looks good :rocket: Thanks for the dialogue here, and on the PR thread :pray: ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1360945780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T07:22:12Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26014886392","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-21T07:25:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1360948141","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1360948141","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1360948141,"node_id":"IC_kwDOA-eq3c5RHmut","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T07:25:07Z","updated_at":"2022-12-21T07:25:07Z","author_association":"MEMBER","body":"Thanks for the background, @bhess. \r\n\r\n> The CBOM spec was just recently released. It's an open specification based on the OWASP CycloneDX specification (see references above), with the plan to upstream to a next version of CycloneDX.\r\n\r\nWhen is this planned? It just \"feels wrong\" for an OSS project (not controlled by one company) to include reference to one company's (github) repo [as proposed here](https://github.com/open-quantum-safe/liboqs/blob/f33add5bde5b763eba01d201a5c2dba265b8f96c/scripts/update_cbom.py#L4)\r\n\r\n>The benefit for OQS users is to have a standard format that documents its crypto components and dependencies, which makes it accessible for related tooling from CycloneDX.\r\n\r\nI'd see the benefit of such format and tooling if & when this is truly open and generally used. What _is_ positive is [your use of the Apache license for your project](https://github.com/IBM/CBOM/blob/main/LICENSE).\r\n\r\n> I think the changes you refer to is the addition of a oqs_alg field in the algorithm docs (yml files). \r\n\r\nCorrect. See additional questions in the PR. The goal should be to avoid anything that creates dependencies across projects that have the potential to break things without suitable manual intervention (ensuring naming consistency in this case).\r\n\r\n> The intention was to be able to retrieve the OIDs of algorithms as they define an algorithm more uniquely (e.g. OID 'should' differ if there is a change between round 3 and 4, the name is the same). At the moment, this is only possible by retrieving the OID from oqs-openssl. I see that this is not optimal. \r\n\r\nThen we're two already :)\r\n\r\n> Alternatively, would there be value adding the OID definitions to liboqs and let openssl and oqs-provider fetch OIDs from here?\r\n\r\nThat I find an even less desirable approach given that only a minority of algorithms with OIDs in oqs-openssl or oqs-provider are implemented in `liboqs` (the majority are hybrids not even visible in `liboqs`).\r\n\r\n> The format itself can be used for any library. Having the CBOM in liboqs allows other components to refer to its CBOM. OQS-openssl would have a different CBOM than liboqs. It would add a dependency to liboqs (and its CBOM) and to the algorithms it uses from liboqs.\r\n\r\nCould you contemplate doing that for the downstream projects first before deciding how/what to include in `liboqs`? I have a hunch that that would provide input for solving the \"OID quagmire\".","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1360948141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T07:25:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26015188887","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/177","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/177/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/177/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/177/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/177","id":1505037369,"node_id":"I_kwDODP--n85ZtQw5","number":177,"title":"Proving Chrome is using PQ schemes","user":{"login":"taylormadehdz","id":36052099,"node_id":"MDQ6VXNlcjM2MDUyMDk5","avatar_url":"https://avatars.githubusercontent.com/u/36052099?v=4","gravatar_id":"","url":"https://api.github.com/users/taylormadehdz","html_url":"https://github.com/taylormadehdz","followers_url":"https://api.github.com/users/taylormadehdz/followers","following_url":"https://api.github.com/users/taylormadehdz/following{/other_user}","gists_url":"https://api.github.com/users/taylormadehdz/gists{/gist_id}","starred_url":"https://api.github.com/users/taylormadehdz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taylormadehdz/subscriptions","organizations_url":"https://api.github.com/users/taylormadehdz/orgs","repos_url":"https://api.github.com/users/taylormadehdz/repos","events_url":"https://api.github.com/users/taylormadehdz/events{/privacy}","received_events_url":"https://api.github.com/users/taylormadehdz/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-12-20T18:03:38Z","updated_at":"2022-12-21T07:44:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, we successfully built a pq chromium and are up and running fine. Can someone advise on the best way to prove we are using a pq chrome build? Our current method to \"show our work\" is via dev tools in the chromium window where we can see that kyber is being used. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/177/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1360962475","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/177#issuecomment-1360962475","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/177","id":1360962475,"node_id":"IC_kwDODP--n85RHqOr","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T07:44:55Z","updated_at":"2022-12-21T07:44:55Z","author_association":"MEMBER","body":"I'd say your build is good if it can successfully navigate all links at https://test.openquantumsafe.org/chromium-base.html","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1360962475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T07:44:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26021376918","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-21T12:57:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361281296","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1361281296","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1361281296,"node_id":"IC_kwDOA-eq3c5RI4EQ","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T12:57:02Z","updated_at":"2022-12-21T12:57:02Z","author_association":"CONTRIBUTOR","body":"> I'd see the benefit of such format and tooling if & when this is truly open and generally used. What _is_ positive is [your use of the Apache license for your project](https://github.com/IBM/CBOM/blob/main/LICENSE).\r\n> \r\n> >\r\n\r\nYes, correct: it's under Apache-2.0 and therefore open and available for general use.\r\n\r\n> Correct. See additional questions in the PR. The goal should be to avoid anything that creates dependencies across projects that have the potential to break things without suitable manual intervention (ensuring naming consistency in this case).\r\n> \r\n> > The intention was to be able to retrieve the OIDs of algorithms as they define an algorithm more uniquely (e.g. OID 'should' differ if there is a change between round 3 and 4, the name is the same). At the moment, this is only possible by retrieving the OID from oqs-openssl. I see that this is not optimal.\r\n> \r\n> Then we're two already :)\r\n> \r\n> > Alternatively, would there be value adding the OID definitions to liboqs and let openssl and oqs-provider fetch OIDs from here?\r\n> \r\n> That I find an even less desirable approach given that only a minority of algorithms with OIDs in oqs-openssl or oqs-provider are implemented in `liboqs` (the majority are hybrids not even visible in `liboqs`).\r\n\r\nIsn't it then more a question where the best place is for the definitions (names, oqs algorithm name, OID, code point, ...)? \r\nSo far it seems to be a bit scattered:\r\n- algorithms names and oqs-algorithm names: used by all components, defined in liboqs and the openssl generate.yml -> looks like some duplication here.\r\n- OIDs: used by oqs-openssl, oqs-provider, boringssl (maybe also openssh?), defined in oqs-openssl generate.yml -> oqs-provider 'wgets' the definitions from the oqs-openssl repo, not sure that this is the most natural way because oqs-openssl and oqs-provider are otherwise unrelated/don't depend on each other.\r\n- TLS code points: used by oqs-openssl, oqs-provider and boringssl, defined in oqs-openssl, and some additional hybrid code points in oqs-provider.\r\n\r\nThinking about it: could it make sense to move these definitions to a separate repository, e.g. `oqs-definitions`? The different projects can then pull and include it as a `git submodule`, and use the parts they need for templating, documenting etc. Definitions can so be centrally maintained, and duplicates and and manual syncing becomes obsolete.\r\n\r\n> Could you contemplate doing that for the downstream projects first before deciding how/what to include in `liboqs`? I have a hunch that that would provide input for solving the \"OID quagmire\".\r\n\r\nI think it makes most sense to start with the core component liboqs and later the downstream projects that depend on liboqs.\r\nBut since liboqs currently doesn't have a notion of OIDs, it might indeed be better to omit them in the liboqs CBOM.\r\nAgain, if we put the OID definitions in a central repository it's different. It would also allow new API like `OQS_KEM_new_by_oid` which solves some ambiguity about the algorithm version one expects.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361281296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T12:57:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26021832564","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1337","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1337/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1337/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1337/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1337","id":1504863753,"node_id":"PR_kwDOA-eq3c5F4gTD","number":1337,"title":"Adds CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-12-20T16:32:17Z","updated_at":"2022-12-21T13:17:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1337","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1337","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1337.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1337.patch","merged_at":null},"body":"Adds code to generate and validate a CBOM json file, and the CBOM itself.\r\n\r\n- CBOM generator: update_cbom.py\r\n- CBOM: cbom.json\r\n- CBOM schema validation: validate_cbom.sh\r\n- CBOM schema validation added to github actions\r\n\r\nAdds oqs_alg to docs yml. This allows to connect oqs algorithms to the OIDs defined in the openssl-project so the OIDs can be recorded in the CBOM.\r\n\r\nAlso corrects a few common crypto sources in Kyber and Dilithium docs (wan't updated after migrating to liboqs common crypto).\r\n\r\nFixes #1336 \r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1337/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361303095","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1337#issuecomment-1361303095","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1337","id":1361303095,"node_id":"IC_kwDOA-eq3c5RI9Y3","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T13:17:58Z","updated_at":"2022-12-21T13:17:58Z","author_association":"CONTRIBUTOR","body":"> Could you suggest language to be added to https://github.com/open-quantum-safe/liboqs/wiki/Contributing-guide such as to be clear how you envision the use of this new script?\r\n\r\nThe idea is to run the script after one runs the script to update the docs. It will then reflect the algorithm changes made (can alternatively also be included in the script to update the docs). The generated cbom is tagged by default with the current git tag. For a release, the tag `--liboqs-version=<tag>` can be provided to the script to include the release version.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361303095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T13:17:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26022025935","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/178","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/178/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/178/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/178/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/178","id":1506175997,"node_id":"PR_kwDODP--n85F82Tt","number":178,"title":"remove NTRU use","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-12-21T11:48:02Z","updated_at":"2022-12-21T13:26:50Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/pulls/178","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/178","diff_url":"https://github.com/open-quantum-safe/oqs-demos/pull/178.diff","patch_url":"https://github.com/open-quantum-safe/oqs-demos/pull/178.patch","merged_at":null},"body":null,"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/178/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1361311797","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/178#issuecomment-1361311797","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/178","id":1361311797,"node_id":"IC_kwDODP--n85RI_g1","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T13:26:50Z","updated_at":"2022-12-21T13:26:50Z","author_association":"MEMBER","body":"Remaining failure known & worked on: https://github.com/open-quantum-safe/oqs-demos/issues/176","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1361311797/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T13:26:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26022283565","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98","id":1506175243,"node_id":"PR_kwDOE_A9l85F82JK","number":98,"title":"Fix memory leaks during key creation and signing.","user":{"login":"xShuusui","id":32741828,"node_id":"MDQ6VXNlcjMyNzQxODI4","avatar_url":"https://avatars.githubusercontent.com/u/32741828?v=4","gravatar_id":"","url":"https://api.github.com/users/xShuusui","html_url":"https://github.com/xShuusui","followers_url":"https://api.github.com/users/xShuusui/followers","following_url":"https://api.github.com/users/xShuusui/following{/other_user}","gists_url":"https://api.github.com/users/xShuusui/gists{/gist_id}","starred_url":"https://api.github.com/users/xShuusui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xShuusui/subscriptions","organizations_url":"https://api.github.com/users/xShuusui/orgs","repos_url":"https://api.github.com/users/xShuusui/repos","events_url":"https://api.github.com/users/xShuusui/events{/privacy}","received_events_url":"https://api.github.com/users/xShuusui/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-12-21T11:47:18Z","updated_at":"2022-12-21T13:38:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/98","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98.patch","merged_at":null},"body":"Fixes #92 and removes memory leaks that appeared during key creation and signing with pqc algorithms.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1361324192","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98#issuecomment-1361324192","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98","id":1361324192,"node_id":"IC_kwDOE_A9l85RJCig","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T13:38:49Z","updated_at":"2022-12-21T13:38:49Z","author_association":"MEMBER","body":"@xShuusui If you'd like to be acknowledged/listed as a contributor at https://github.com/open-quantum-safe/oqs-provider#team, please suitably update the PR (with a change adding yourself to README.md#team) before we merge this.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1361324192/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T13:38:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26022544303","type":"IssueCommentEvent","actor":{"id":32741828,"login":"xShuusui","display_login":"xShuusui","gravatar_id":"","url":"https://api.github.com/users/xShuusui","avatar_url":"https://avatars.githubusercontent.com/u/32741828?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98","id":1506175243,"node_id":"PR_kwDOE_A9l85F82JK","number":98,"title":"Fix memory leaks during key creation and signing.","user":{"login":"xShuusui","id":32741828,"node_id":"MDQ6VXNlcjMyNzQxODI4","avatar_url":"https://avatars.githubusercontent.com/u/32741828?v=4","gravatar_id":"","url":"https://api.github.com/users/xShuusui","html_url":"https://github.com/xShuusui","followers_url":"https://api.github.com/users/xShuusui/followers","following_url":"https://api.github.com/users/xShuusui/following{/other_user}","gists_url":"https://api.github.com/users/xShuusui/gists{/gist_id}","starred_url":"https://api.github.com/users/xShuusui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xShuusui/subscriptions","organizations_url":"https://api.github.com/users/xShuusui/orgs","repos_url":"https://api.github.com/users/xShuusui/repos","events_url":"https://api.github.com/users/xShuusui/events{/privacy}","received_events_url":"https://api.github.com/users/xShuusui/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-12-21T11:47:18Z","updated_at":"2022-12-21T13:51:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/98","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98.patch","merged_at":null},"body":"Fixes #92 and removes memory leaks that appeared during key creation and signing with pqc algorithms.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1361336663","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/98#issuecomment-1361336663","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/98","id":1361336663,"node_id":"IC_kwDOE_A9l85RJFlX","user":{"login":"xShuusui","id":32741828,"node_id":"MDQ6VXNlcjMyNzQxODI4","avatar_url":"https://avatars.githubusercontent.com/u/32741828?v=4","gravatar_id":"","url":"https://api.github.com/users/xShuusui","html_url":"https://github.com/xShuusui","followers_url":"https://api.github.com/users/xShuusui/followers","following_url":"https://api.github.com/users/xShuusui/following{/other_user}","gists_url":"https://api.github.com/users/xShuusui/gists{/gist_id}","starred_url":"https://api.github.com/users/xShuusui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xShuusui/subscriptions","organizations_url":"https://api.github.com/users/xShuusui/orgs","repos_url":"https://api.github.com/users/xShuusui/repos","events_url":"https://api.github.com/users/xShuusui/events{/privacy}","received_events_url":"https://api.github.com/users/xShuusui/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T13:51:09Z","updated_at":"2022-12-21T13:51:09Z","author_association":"NONE","body":"Thank you @baentsch, I have added myself.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1361336663/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T13:51:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26022660046","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-21T13:56:31Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361342219","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1361342219","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1361342219,"node_id":"IC_kwDOA-eq3c5RJG8L","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T13:56:31Z","updated_at":"2022-12-21T13:56:31Z","author_association":"MEMBER","body":"> It would also allow new API like OQS_KEM_new_by_oid which solves some ambiguity about the algorithm version one expects.\r\n\r\nSuch API is a very good suggestion I'd whole-heartedly welcome. Albeit -- OQS_SIG_new_by_oid I'd understand more -- where/what standardized KEM OIDs?\r\n\r\n> Thinking about it: could it make sense to move these definitions to a separate repository, e.g. oqs-definitions?\r\n\r\nConceptually Yes -- particularly as this is a rather general problem that already was suggested/came up in contexts beyond OQS, e.g. https://github.com/IETF-Hackathon/pqc-certificates/issues/3. The lack of such \"online registry\" for \"not-yet-quite standardized\" IDs lead to the many sample PQ deployments done without interop in mind/capabilities (AWS, Cloudflare, Google, etc.). \r\n\r\nThoughts welcome how/where to locate this! IETF to me sounds like a good place. This arguably would need support by quite a few teams, though.... Maybe worth while a post to the various dev mailing lists (oqs, pqc, ietf, ...)? Thoughts, @dstebila @christianpaquin ?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361342219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T13:56:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26022902400","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-21T14:07:13Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361355110","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1361355110","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1361355110,"node_id":"IC_kwDOA-eq3c5RJKFm","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T14:07:13Z","updated_at":"2022-12-21T14:07:13Z","author_association":"CONTRIBUTOR","body":"> Such API is a very good suggestion I'd whole-heartedly welcome. Albeit -- OQS_SIG_new_by_oid I'd understand more -- where/what standardized KEM OIDs?\r\n\r\nRight, I primarily meant `OQS_SIG_new_by_oid`. Still, unique identifiers would also useful for KEMs. OIDs for KEMs could also become a topic for applications like KEMTLS I suppose.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361355110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T14:07:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26025369468","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-21T15:54:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361550647","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1361550647","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1361550647,"node_id":"IC_kwDOA-eq3c5RJ503","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T15:54:38Z","updated_at":"2022-12-21T15:54:38Z","author_association":"MEMBER","body":"Hi all, just joining the conversation. Looks reasonably interesting. But I'm not very familiar with the software bill of materials landscape.  Basil, do you know if there are other competing formats or has everyone coalesced around CycloneDX?\r\n\r\nRegarding a registry for interim identifiers, nothing has stuck; we had a spreadsheet but it stopped getting updated, then we had our YML files, but those were hard to find, and others seem to be in the same boat. IETF won't want to establish a registry for non-standardized identifiers; once they create standards, they have IANA registries to list them in.  We could try again to create a spreadsheet of identifiers that are known to be used; perhaps having it as a Github repo that anyone can edit (rather than a Google docs spreadsheet that I had to maintain) might make it easier?  Would have to think about the relevant fields.\r\n\r\nI do like the idea `OQS_SIG_new_by_oid` and `OQS_KEM_new_by_oid`, once proper OIDs start getting assigned.  KEMs would still need OIDs if they're used in certificates, such as in the KEMTLS setting but also in CMS or S/MIME for email encryption.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361550647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T15:54:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26025725236","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-21T16:10:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361589011","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1361589011","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1361589011,"node_id":"IC_kwDOA-eq3c5RKDMT","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T16:10:22Z","updated_at":"2022-12-21T16:10:22Z","author_association":"MEMBER","body":">  We could try again to create a spreadsheet of identifiers that are known to be used; \r\n\r\nNo spreadsheet, please -- we do need a way to trace changes.\r\n\r\n> perhaps having it as a Github repo that anyone can edit (rather than a Google docs spreadsheet that I had to maintain) might make it easier?\r\n\r\nYes: That would also allow tracking if code and artifacts (e.g., certs) fall apart due to an incorrect edit.\r\n\r\n> then we had our YML files, but those were hard to find\r\n\r\nWell, we still have them and use them to drive all code generation. That they're hard to find is our fault alone: We'd simply need to publish them prominently -- _if_ we have the chutzpah to be the \"guardians of the unassigned numbers\" (IUNA, so to say ;-) \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361589011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T16:10:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26026022927","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-21T16:24:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361615961","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1361615961","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1361615961,"node_id":"IC_kwDOA-eq3c5RKJxZ","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2022-12-21T16:24:09Z","updated_at":"2022-12-21T16:24:09Z","author_association":"CONTRIBUTOR","body":"> Basil, do you know if there are other competing formats or has everyone coalesced around CycloneDX?\r\n\r\nWe found CycloneDX the most aligned with a cbom use case, it was initially designed for application security analysis and already supports several use cases in this domain. The main alternative is SPDX which is mainly about licenses. As far as I know there is no other _open_ format that supports the cbom use case out of the box.\r\n\r\nRegarding registry, I'd also support a github repository to be able to keep track. As first step just collect the different yml definition files there. The projects can then directly pull it as subrepo.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1361615961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-21T16:24:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
