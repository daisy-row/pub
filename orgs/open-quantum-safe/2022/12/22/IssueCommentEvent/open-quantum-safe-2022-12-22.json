{"id":"26040602238","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-22T10:04:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1362644350","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1362644350","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1362644350,"node_id":"IC_kwDOA-eq3c5ROE1-","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-22T10:04:51Z","updated_at":"2022-12-22T10:04:51Z","author_association":"MEMBER","body":"> I have never had much success using Git's submodule feature. In principle it works, but I think it is quite awkward because clones of the repo don't actually give you the contents of the sub-repo, you have to do extra steps.\r\n\r\nACK. Using submodules isn't a fool-proof approach to always get the most current version of some file. I'd rather suggest a git-based repo that also is viewable via web-browser (to address the \"hard-to-find\" concern): So, in summary of all of the suggestions above, what about this:\r\n- We collect all ID-defining YML files in one git-tracked location\r\n- Combine this with a YML->MD or HTML generator we already have such as to display contents readable & prominently\r\n- Ensure all IDs are keyed by OID (both for SIG and KEMs) and carry a date (of introduction)\r\n- Only ever add to it -> new alg versions _need_ a new OID, but _may_ carry an existing liboqs/openssl/openssh name; git (version) references to actual algs arguably also need to be in there (and possibly other information, e.g., NIST submission reference text, etc.)\r\n- Use this central place to pull the most current ID set when building liboqs, oqs-openssl, oqs-provider, oqs-openssh, test.openquantumsafe.org and current docker images (incl. interop test images).\r\n\r\nI'd suggest this to be (the git repo behind) openquantumsafe.org, to announce this widely and invite everyone to submit new entries (if they for some reason don't want to/did not already use an ID listed there). As soon as IANA assigns IDs we simply add those and refrain from updates to such IANA-assigned IDs: The (new/TBD) alg-id logic in our projects would keep ticking identically for truly standardized and still-experimental algs.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1362644350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-22T10:04:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26042417784","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/421","id":1507684307,"node_id":"I_kwDOA_fpb85Z3W_T","number":421,"title":"How to integrate a new post quantum certificate scheme with oqs-openssl?","user":{"login":"sandilya761","id":57587519,"node_id":"MDQ6VXNlcjU3NTg3NTE5","avatar_url":"https://avatars.githubusercontent.com/u/57587519?v=4","gravatar_id":"","url":"https://api.github.com/users/sandilya761","html_url":"https://github.com/sandilya761","followers_url":"https://api.github.com/users/sandilya761/followers","following_url":"https://api.github.com/users/sandilya761/following{/other_user}","gists_url":"https://api.github.com/users/sandilya761/gists{/gist_id}","starred_url":"https://api.github.com/users/sandilya761/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandilya761/subscriptions","organizations_url":"https://api.github.com/users/sandilya761/orgs","repos_url":"https://api.github.com/users/sandilya761/repos","events_url":"https://api.github.com/users/sandilya761/events{/privacy}","received_events_url":"https://api.github.com/users/sandilya761/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-12-22T11:13:11Z","updated_at":"2022-12-22T11:35:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am looking for documentation to integrate a new post quantum certificate scheme with oqs-openssl. I found one on integrating a symmetric block cipher with openssl ([click here](https://wiki.openssl.org/index.php/How_to_Integrate_a_Symmetric_Cipher)). \r\n\r\nI am expecting a similar type of documentation for post quantum certificate schemes.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1362733792","html_url":"https://github.com/open-quantum-safe/openssl/issues/421#issuecomment-1362733792","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421","id":1362733792,"node_id":"IC_kwDOA_fpb85ROarg","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-22T11:35:21Z","updated_at":"2022-12-22T11:35:21Z","author_association":"MEMBER","body":"oqs-openssl is based on OpenSSL1.1.1 and that code has not been designed for plug-in integration (of all aspects) of new algorithm types. You may want to take a look at https://www.openssl.org/docs/manmaster/man7/provider.html, though: This interface is used by [oqs-provider](https://github.com/open-quantum-safe/oqs-provider).\r\n\r\nOut of curiosity: Which \"new PQ cert scheme\" are you referring to?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1362733792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-22T11:35:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26046918786","type":"IssueCommentEvent","actor":{"id":57587519,"login":"sandilya761","display_login":"sandilya761","gravatar_id":"","url":"https://api.github.com/users/sandilya761","avatar_url":"https://avatars.githubusercontent.com/u/57587519?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/421","id":1507684307,"node_id":"I_kwDOA_fpb85Z3W_T","number":421,"title":"How to integrate a new post quantum certificate scheme with oqs-openssl?","user":{"login":"sandilya761","id":57587519,"node_id":"MDQ6VXNlcjU3NTg3NTE5","avatar_url":"https://avatars.githubusercontent.com/u/57587519?v=4","gravatar_id":"","url":"https://api.github.com/users/sandilya761","html_url":"https://github.com/sandilya761","followers_url":"https://api.github.com/users/sandilya761/followers","following_url":"https://api.github.com/users/sandilya761/following{/other_user}","gists_url":"https://api.github.com/users/sandilya761/gists{/gist_id}","starred_url":"https://api.github.com/users/sandilya761/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandilya761/subscriptions","organizations_url":"https://api.github.com/users/sandilya761/orgs","repos_url":"https://api.github.com/users/sandilya761/repos","events_url":"https://api.github.com/users/sandilya761/events{/privacy}","received_events_url":"https://api.github.com/users/sandilya761/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-12-22T11:13:11Z","updated_at":"2022-12-22T15:08:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am looking for documentation to integrate a new post quantum certificate scheme with oqs-openssl. I found one on integrating a symmetric block cipher with openssl ([click here](https://wiki.openssl.org/index.php/How_to_Integrate_a_Symmetric_Cipher)). \r\n\r\nI am expecting a similar type of documentation for post quantum certificate schemes.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1362950677","html_url":"https://github.com/open-quantum-safe/openssl/issues/421#issuecomment-1362950677","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421","id":1362950677,"node_id":"IC_kwDOA_fpb85RPPoV","user":{"login":"sandilya761","id":57587519,"node_id":"MDQ6VXNlcjU3NTg3NTE5","avatar_url":"https://avatars.githubusercontent.com/u/57587519?v=4","gravatar_id":"","url":"https://api.github.com/users/sandilya761","html_url":"https://github.com/sandilya761","followers_url":"https://api.github.com/users/sandilya761/followers","following_url":"https://api.github.com/users/sandilya761/following{/other_user}","gists_url":"https://api.github.com/users/sandilya761/gists{/gist_id}","starred_url":"https://api.github.com/users/sandilya761/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandilya761/subscriptions","organizations_url":"https://api.github.com/users/sandilya761/orgs","repos_url":"https://api.github.com/users/sandilya761/repos","events_url":"https://api.github.com/users/sandilya761/events{/privacy}","received_events_url":"https://api.github.com/users/sandilya761/received_events","type":"User","site_admin":false},"created_at":"2022-12-22T15:08:14Z","updated_at":"2022-12-22T15:08:14Z","author_association":"NONE","body":"I want to integrate XMSS certificate scheme (not a new one) with openssl. I am referring this [paper](http://www.amphawa.eu/data/icmu-paper.pdf) and I see that authors mentioned in one of the section about the procedure they followed to integrate XMSS scheme.\r\n\r\nHence, I would like to know if there is any standard procedure to integrate new schemes.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1362950677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-22T15:08:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26048159035","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/421","id":1507684307,"node_id":"I_kwDOA_fpb85Z3W_T","number":421,"title":"How to integrate a new post quantum certificate scheme with oqs-openssl?","user":{"login":"sandilya761","id":57587519,"node_id":"MDQ6VXNlcjU3NTg3NTE5","avatar_url":"https://avatars.githubusercontent.com/u/57587519?v=4","gravatar_id":"","url":"https://api.github.com/users/sandilya761","html_url":"https://github.com/sandilya761","followers_url":"https://api.github.com/users/sandilya761/followers","following_url":"https://api.github.com/users/sandilya761/following{/other_user}","gists_url":"https://api.github.com/users/sandilya761/gists{/gist_id}","starred_url":"https://api.github.com/users/sandilya761/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandilya761/subscriptions","organizations_url":"https://api.github.com/users/sandilya761/orgs","repos_url":"https://api.github.com/users/sandilya761/repos","events_url":"https://api.github.com/users/sandilya761/events{/privacy}","received_events_url":"https://api.github.com/users/sandilya761/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-12-22T11:13:11Z","updated_at":"2022-12-22T16:05:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am looking for documentation to integrate a new post quantum certificate scheme with oqs-openssl. I found one on integrating a symmetric block cipher with openssl ([click here](https://wiki.openssl.org/index.php/How_to_Integrate_a_Symmetric_Cipher)). \r\n\r\nI am expecting a similar type of documentation for post quantum certificate schemes.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1363011296","html_url":"https://github.com/open-quantum-safe/openssl/issues/421#issuecomment-1363011296","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/421","id":1363011296,"node_id":"IC_kwDOA_fpb85RPebg","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-12-22T16:05:28Z","updated_at":"2022-12-22T16:05:28Z","author_association":"MEMBER","body":"There is a \"standard procedure\" to integrate algorithms using the `liboqs`APIs: See [here](https://github.com/open-quantum-safe/openssl/wiki/Using-liboqs-algorithms-not-in-the-fork). In that library in turn there [is an ongoing effort to finalize an XMSS implementation](https://github.com/open-quantum-safe/liboqs/pull/1275). Maybe you'd like to contribute to that? Otherwise I'm afraid the only suggestion I can make is to ask this question in the [upstream openssl project](https://github.com/openssl/openssl/issues).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1363011296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-22T16:05:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
