{"id":"26083577549","type":"IssueCommentEvent","actor":{"id":121297,"login":"gkerde","display_login":"gkerde","gravatar_id":"","url":"https://api.github.com/users/gkerde","avatar_url":"https://avatars.githubusercontent.com/u/121297?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336","id":1504843044,"node_id":"I_kwDOA-eq3c5ZshUk","number":1336,"title":"CBOM for liboqs","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2022-12-20T16:21:06Z","updated_at":"2022-12-25T19:22:55Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Cryptography Bill of Materials (CBOM) [1] is a format to describe cryptographic assets (such as libraries, algorithms) and their dependencies. It's an extension to the CycloneDX standard [2] for Software Bills of Materials. \r\n\r\n(C)BOMs simplify, for example, the exchange of component composition and add visibility of components and dependencies.\r\n\r\nThis issue is about generating a CBOM of liboqs. Much of the required information is already available on the yml-doc files. They can be used to generate a CBOM (json file).\r\n\r\n[1] https://github.com/IBM/CBOM\r\n[2] https://cyclonedx.org","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1364727531","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1364727531","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1336","id":1364727531,"node_id":"IC_kwDOA-eq3c5RWBbr","user":{"login":"gkerde","id":121297,"node_id":"MDQ6VXNlcjEyMTI5Nw==","avatar_url":"https://avatars.githubusercontent.com/u/121297?v=4","gravatar_id":"","url":"https://api.github.com/users/gkerde","html_url":"https://github.com/gkerde","followers_url":"https://api.github.com/users/gkerde/followers","following_url":"https://api.github.com/users/gkerde/following{/other_user}","gists_url":"https://api.github.com/users/gkerde/gists{/gist_id}","starred_url":"https://api.github.com/users/gkerde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gkerde/subscriptions","organizations_url":"https://api.github.com/users/gkerde/orgs","repos_url":"https://api.github.com/users/gkerde/repos","events_url":"https://api.github.com/users/gkerde/events{/privacy}","received_events_url":"https://api.github.com/users/gkerde/received_events","type":"User","site_admin":false},"created_at":"2022-12-25T19:22:55Z","updated_at":"2022-12-25T19:22:55Z","author_association":"NONE","body":"Regression testing.\n\nOn Thu, 22 Dec 2022 at 23:05, Michael Baentsch ***@***.***>\nwrote:\n\n> I have never had much success using Git's submodule feature. In principle\n> it works, but I think it is quite awkward because clones of the repo don't\n> actually give you the contents of the sub-repo, you have to do extra steps.\n>\n> ACK. Using submodules isn't a fool-proof approach to always get the most\n> current version of some file. I'd rather suggest a git-based repo that also\n> is viewable via web-browser (to address the \"hard-to-find\" concern): So, in\n> summary of all of the suggestions above, what about this:\n>\n>    - We collect all ID-defining YML files in one git-tracked location\n>    - Combine this with a YML->MD or HTML generator we already have such\n>    as to display contents readable & prominently\n>    - Ensure all IDs are keyed by OID (both for SIG and KEMs) and carry a\n>    date (of introduction)\n>    - Only ever add to it -> new alg versions *need* a new OID, but *may*\n>    carry an existing liboqs/openssl/openssh name; git (version) references to\n>    actual algs arguably also need to be in there (and possibly other\n>    information, e.g., NIST submission reference text, etc.)\n>    - Use this central place to pull the most current ID set when building\n>    liboqs, oqs-openssl, oqs-provider, oqs-openssh,\n>    test.openquantumsafe.org and current docker images (incl. interop test\n>    images).\n>\n> I'd suggest this to be (the git repo behind) openquantumsafe.org, to\n> announce this widely and invite everyone to submit new entries (if they for\n> some reason don't want to/did not already use an ID listed there). As soon\n> as IANA assigns IDs we simply add those and refrain from updates to such\n> IANA-assigned IDs: The (new/TBD) alg-id logic in our projects would keep\n> ticking identically for truly standardized and still-experimental algs.\n>\n> â€”\n> Reply to this email directly, view it on GitHub\n> <https://github.com/open-quantum-safe/liboqs/issues/1336#issuecomment-1362644350>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAA5TUIIDDO4VMAYGAVY4ILWOQRU7ANCNFSM6AAAAAATEVXPSQ>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1364727531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-12-25T19:22:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
