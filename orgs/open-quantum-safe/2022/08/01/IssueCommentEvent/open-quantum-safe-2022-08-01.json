{"id":"23182953198","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1266","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1266/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1266/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1266/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1266","id":1321235719,"node_id":"I_kwDOA-eq3c5OwHUH","number":1266,"title":"Build breaks on arm64: error: use of undeclared identifier 'ID_AA64ISAR0_SHA3_BASE'","user":{"login":"yurivict","id":271906,"node_id":"MDQ6VXNlcjI3MTkwNg==","avatar_url":"https://avatars.githubusercontent.com/u/271906?v=4","gravatar_id":"","url":"https://api.github.com/users/yurivict","html_url":"https://github.com/yurivict","followers_url":"https://api.github.com/users/yurivict/followers","following_url":"https://api.github.com/users/yurivict/following{/other_user}","gists_url":"https://api.github.com/users/yurivict/gists{/gist_id}","starred_url":"https://api.github.com/users/yurivict/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurivict/subscriptions","organizations_url":"https://api.github.com/users/yurivict/orgs","repos_url":"https://api.github.com/users/yurivict/repos","events_url":"https://api.github.com/users/yurivict/events{/privacy}","received_events_url":"https://api.github.com/users/yurivict/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-07-28T17:04:38Z","updated_at":"2022-08-01T05:15:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"```\r\n[  0% 8/1143] /usr/bin/cc  -I/wrkdirs/usr/ports/security/liboqs/work/.build/include -O2 -pipe  -fstack-protector-strong -fno-strict-aliasing -O2 -pipe  -fstack-protector-strong -fno-strict-aliasing -fPIC -fvisibility=hidden -Wall -Wextra -Wpedantic -Wno-unused-command-line-argument -O3 -fomit-frame-pointer -Wbad-function-cast -Wcast-qual -Wnarrowing -Wconversion -std=gnu11 -MD -MT src/common/CMakeFiles/common.dir/common.c.o -MF src/common/CMakeFiles/common.dir/common.c.o.d -o src/common/CMakeFiles/common.dir/common.c.o -c /wrkdirs/usr/ports/security/liboqs/work/liboqs-38d3014dc2f74ec0f0c1a9e7e61aa4d2251adcc9/src/common/common.c\r\nFAILED: src/common/CMakeFiles/common.dir/common.c.o \r\n/usr/bin/cc  -I/wrkdirs/usr/ports/security/liboqs/work/.build/include -O2 -pipe  -fstack-protector-strong -fno-strict-aliasing -O2 -pipe  -fstack-protector-strong -fno-strict-aliasing -fPIC -fvisibility=hidden -Wall -Wextra -Wpedantic -Wno-unused-command-line-argument -O3 -fomit-frame-pointer -Wbad-function-cast -Wcast-qual -Wnarrowing -Wconversion -std=gnu11 -MD -MT src/common/CMakeFiles/common.dir/common.c.o -MF src/common/CMakeFiles/common.dir/common.c.o.d -o src/common/CMakeFiles/common.dir/common.c.o -c /wrkdirs/usr/ports/security/liboqs/work/liboqs-38d3014dc2f74ec0f0c1a9e7e61aa4d2251adcc9/src/common/common.c\r\n/wrkdirs/usr/ports/security/liboqs/work/liboqs-38d3014dc2f74ec0f0c1a9e7e61aa4d2251adcc9/src/common/common.c:100:19: warning: use of GNU statement expression extension [-Wgnu-statement-expression]\r\n        uint64_t isar0 = READ_SPECIALREG(id_aa64isar0_el1);\r\n                         ^\r\n/usr/include/machine/armreg.h:60:2: note: expanded from macro 'READ_SPECIALREG'\r\n({      uint64_t _val;                                                  \\\r\n ^\r\n/wrkdirs/usr/ports/security/liboqs/work/liboqs-38d3014dc2f74ec0f0c1a9e7e61aa4d2251adcc9/src/common/common.c:107:38: error: use of undeclared identifier 'ID_AA64ISAR0_SHA3_BASE'\r\n        if (ID_AA64ISAR0_SHA3_VAL(isar0) >= ID_AA64ISAR0_SHA3_BASE) {\r\n                                            ^\r\n/wrkdirs/usr/ports/security/liboqs/work/liboqs-38d3014dc2f74ec0f0c1a9e7e61aa4d2251adcc9/src/common/common.c:110:6: warning: implicit declaration of function 'ID_AA64ISAR0_AdvSIMD_VAL' is invalid in C99 [-Wimplicit-function-declaration]\r\n        if (ID_AA64ISAR0_AdvSIMD_VAL(isar0) >= ID_AA64ISAR0_AdvSIMD_BASE) {\r\n            ^\r\n/wrkdirs/usr/ports/security/liboqs/work/liboqs-38d3014dc2f74ec0f0c1a9e7e61aa4d2251adcc9/src/common/common.c:110:41: error: use of undeclared identifier 'ID_AA64ISAR0_AdvSIMD_BASE'; did you mean 'ID_AA64ISAR0_AdvSIMD_VAL'?\r\n        if (ID_AA64ISAR0_AdvSIMD_VAL(isar0) >= ID_AA64ISAR0_AdvSIMD_BASE) {\r\n                                               ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n                                               ID_AA64ISAR0_AdvSIMD_VAL\r\n/wrkdirs/usr/ports/security/liboqs/work/liboqs-38d3014dc2f74ec0f0c1a9e7e61aa4d2251adcc9/src/common/common.c:110:6: note: 'ID_AA64ISAR0_AdvSIMD_VAL' declared here\r\n        if (ID_AA64ISAR0_AdvSIMD_VAL(isar0) >= ID_AA64ISAR0_AdvSIMD_BASE) {\r\n            ^\r\n/wrkdirs/usr/ports/security/liboqs/work/liboqs-38d3014dc2f74ec0f0c1a9e7e61aa4d2251adcc9/src/common/common.c:110:38: warning: ordered comparison between pointer and integer ('int' and 'int (*)()')\r\n        if (ID_AA64ISAR0_AdvSIMD_VAL(isar0) >= ID_AA64ISAR0_AdvSIMD_BASE) {\r\n            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~\r\n3 warnings and 2 errors generated.\r\n```\r\n\r\nVersion: 0.7.2.20220607\r\nFreeBSD 13.0\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1266/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1200717975","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1266#issuecomment-1200717975","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1266","id":1200717975,"node_id":"IC_kwDOA-eq3c5HkYCX","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-01T05:15:53Z","updated_at":"2022-08-01T05:15:53Z","author_association":"MEMBER","body":"> However this doesn't happen on our FreeBSD dev VM:\r\n\r\nNow looking into this more deeply, I have to correct myself and confirm your report: When reproducing above I didn't set `-DOQS_DIST_BUILD=ON` needed to trigger the bug.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1200717975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T05:15:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23191221238","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256","id":1303490190,"node_id":"I_kwDOA-eq3c5Nsa6O","number":1256,"title":"Compiling liboqs for x86 on Windows","user":{"login":"pqprogrammer","id":109220915,"node_id":"U_kgDOBoKUMw","avatar_url":"https://avatars.githubusercontent.com/u/109220915?v=4","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","html_url":"https://github.com/pqprogrammer","followers_url":"https://api.github.com/users/pqprogrammer/followers","following_url":"https://api.github.com/users/pqprogrammer/following{/other_user}","gists_url":"https://api.github.com/users/pqprogrammer/gists{/gist_id}","starred_url":"https://api.github.com/users/pqprogrammer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pqprogrammer/subscriptions","organizations_url":"https://api.github.com/users/pqprogrammer/orgs","repos_url":"https://api.github.com/users/pqprogrammer/repos","events_url":"https://api.github.com/users/pqprogrammer/events{/privacy}","received_events_url":"https://api.github.com/users/pqprogrammer/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-13T14:04:03Z","updated_at":"2022-08-01T12:50:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI'm trying to compile liboqs as a static library with Visual Studio 2022 for x86 without ninja.\r\n\r\nWithin the build folder I executed the following cmake command:\r\n`cmake .. -A x86 -DCMAKE_BUILD_TYPE=Release -DOQS_BUILD_ONLY_LIB=ON`\r\n\r\nAfter this I used the following commands:\r\n`msbuild ALL_BUILD.vcxproj`\r\nand\r\n`msbuild INSTALL.vcxproj`\r\n\r\nThe build and installation process finish successfully and I have the built library and header files within the C:\\Program Files (x86)\\liboqs directory.\r\n\r\nI noticed that within the generated CMake Visual Studio project files, the default configuration is Debug and not Release.\r\nIf I compile it manually by opening the generated ALL_BUILD.vcxproj and setting the configuration to Release, it will compile using the Release configuration. The same will not happen by using msbuild commands.\r\n\r\nAnother issue that I have is that by using the compiled library by the method which I said above I'm getting the following linking errors when I try to compile a simple test project (example_kem.c):\r\n- LNK2001\tunresolved external symbol __subborrow_u64\t\r\n- LNK2001\tunresolved external symbol __addcarry_u64\r\n- LNK2001\tunresolved external symbol __umul128\r\n- LNK2001\tunresolved external symbol ___shiftright128\r\n- LNK2001\tunresolved external symbol ___shiftleft128\r\n\r\nAll of the mentioned unresolved symbols are coming from oqs.lib.\r\n\r\nCompiling the same project with x64 configuration with the x64 static library works without issues.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201159612","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256#issuecomment-1201159612","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","id":1201159612,"node_id":"IC_kwDOA-eq3c5HmD28","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-01T12:50:14Z","updated_at":"2022-08-01T12:50:14Z","author_association":"MEMBER","body":"Thanks for the bug report. However, I'm not sure there's someone on the team who still has experience with _and_ access to a pure \"x86\" (32bit, if I'm not mistaken?) Windows environment to reproduce/fix....","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201159612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T12:50:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23191273201","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1253","id":1302036726,"node_id":"I_kwDOA-eq3c5Nm4D2","number":1253,"title":"Picnic memory safety issues","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2022-07-12T13:05:21Z","updated_at":"2022-08-01T12:52:41Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"I don't run windows, so I will have a hard time trying to reproduce this, but it seems as if Picnic is causing memory access violations on MSVC in the Rust wrapper. See the failed builds on https://github.com/open-quantum-safe/liboqs-rust/pull/146 and https://github.com/open-quantum-safe/liboqs-rust/pull/147.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201162304","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1253#issuecomment-1201162304","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253","id":1201162304,"node_id":"IC_kwDOA-eq3c5HmEhA","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-01T12:52:41Z","updated_at":"2022-08-01T12:52:41Z","author_association":"MEMBER","body":"@dstebila : Given we define 0.7.2 as a \"security\" release, shouldn't this issue become part of the milestone?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201162304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T12:52:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23192759765","type":"IssueCommentEvent","actor":{"id":114613,"login":"sebastinas","display_login":"sebastinas","gravatar_id":"","url":"https://api.github.com/users/sebastinas","avatar_url":"https://avatars.githubusercontent.com/u/114613?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1253","id":1302036726,"node_id":"I_kwDOA-eq3c5Nm4D2","number":1253,"title":"Picnic memory safety issues","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2022-07-12T13:05:21Z","updated_at":"2022-08-01T13:58:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"I don't run windows, so I will have a hard time trying to reproduce this, but it seems as if Picnic is causing memory access violations on MSVC in the Rust wrapper. See the failed builds on https://github.com/open-quantum-safe/liboqs-rust/pull/146 and https://github.com/open-quantum-safe/liboqs-rust/pull/147.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201242812","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1253#issuecomment-1201242812","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1253","id":1201242812,"node_id":"IC_kwDOA-eq3c5HmYK8","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"created_at":"2022-08-01T13:58:15Z","updated_at":"2022-08-01T13:58:15Z","author_association":"CONTRIBUTOR","body":"I have reproduced the issue locally. I'll update the bug as soon as I have a fix.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201242812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T13:58:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23194582799","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1267","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1267/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1267/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1267/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1267","id":1324361409,"node_id":"PR_kwDOA-eq3c48bZPz","number":1267,"title":"fixing FreeBSD runtime ARM CPU feature detection","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-01T12:45:40Z","updated_at":"2022-08-01T15:16:32Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1267","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1267","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1267.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1267.patch","merged_at":null},"body":"Fixes #1266 .\r\n\r\nAs I have no real clue about FreeBSD nor ARM, can I ask @yurivict and @Martyrshot to take a close look at this?\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1267/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201339350","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1267#issuecomment-1201339350","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1267","id":1201339350,"node_id":"IC_kwDOA-eq3c5HmvvW","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-01T15:16:31Z","updated_at":"2022-08-01T15:16:31Z","author_association":"MEMBER","body":"CI is failing is due to an AMD64 problem with SIKE/https://github.com/open-quantum-safe/liboqs/pull/1231 : That PR passed an older, clang-9-only test, but consistently does not pass the clang-14 test.... Ideas how to resolve this welcome: a) Merge this regardless and open a separate issue for SIKE? b) Fix SIKE as part of this PR? Who could do that? @christianpaquin ?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201339350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T15:16:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23196067266","type":"IssueCommentEvent","actor":{"id":109220915,"login":"pqprogrammer","display_login":"pqprogrammer","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","avatar_url":"https://avatars.githubusercontent.com/u/109220915?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256","id":1303490190,"node_id":"I_kwDOA-eq3c5Nsa6O","number":1256,"title":"Compiling liboqs for x86 on Windows","user":{"login":"pqprogrammer","id":109220915,"node_id":"U_kgDOBoKUMw","avatar_url":"https://avatars.githubusercontent.com/u/109220915?v=4","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","html_url":"https://github.com/pqprogrammer","followers_url":"https://api.github.com/users/pqprogrammer/followers","following_url":"https://api.github.com/users/pqprogrammer/following{/other_user}","gists_url":"https://api.github.com/users/pqprogrammer/gists{/gist_id}","starred_url":"https://api.github.com/users/pqprogrammer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pqprogrammer/subscriptions","organizations_url":"https://api.github.com/users/pqprogrammer/orgs","repos_url":"https://api.github.com/users/pqprogrammer/repos","events_url":"https://api.github.com/users/pqprogrammer/events{/privacy}","received_events_url":"https://api.github.com/users/pqprogrammer/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-13T14:04:03Z","updated_at":"2022-08-01T16:29:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI'm trying to compile liboqs as a static library with Visual Studio 2022 for x86 without ninja.\r\n\r\nWithin the build folder I executed the following cmake command:\r\n`cmake .. -A x86 -DCMAKE_BUILD_TYPE=Release -DOQS_BUILD_ONLY_LIB=ON`\r\n\r\nAfter this I used the following commands:\r\n`msbuild ALL_BUILD.vcxproj`\r\nand\r\n`msbuild INSTALL.vcxproj`\r\n\r\nThe build and installation process finish successfully and I have the built library and header files within the C:\\Program Files (x86)\\liboqs directory.\r\n\r\nI noticed that within the generated CMake Visual Studio project files, the default configuration is Debug and not Release.\r\nIf I compile it manually by opening the generated ALL_BUILD.vcxproj and setting the configuration to Release, it will compile using the Release configuration. The same will not happen by using msbuild commands.\r\n\r\nAnother issue that I have is that by using the compiled library by the method which I said above I'm getting the following linking errors when I try to compile a simple test project (example_kem.c):\r\n- LNK2001\tunresolved external symbol __subborrow_u64\t\r\n- LNK2001\tunresolved external symbol __addcarry_u64\r\n- LNK2001\tunresolved external symbol __umul128\r\n- LNK2001\tunresolved external symbol ___shiftright128\r\n- LNK2001\tunresolved external symbol ___shiftleft128\r\n\r\nAll of the mentioned unresolved symbols are coming from oqs.lib.\r\n\r\nCompiling the same project with x64 configuration with the x64 static library works without issues.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201435298","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256#issuecomment-1201435298","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","id":1201435298,"node_id":"IC_kwDOA-eq3c5HnHKi","user":{"login":"pqprogrammer","id":109220915,"node_id":"U_kgDOBoKUMw","avatar_url":"https://avatars.githubusercontent.com/u/109220915?v=4","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","html_url":"https://github.com/pqprogrammer","followers_url":"https://api.github.com/users/pqprogrammer/followers","following_url":"https://api.github.com/users/pqprogrammer/following{/other_user}","gists_url":"https://api.github.com/users/pqprogrammer/gists{/gist_id}","starred_url":"https://api.github.com/users/pqprogrammer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pqprogrammer/subscriptions","organizations_url":"https://api.github.com/users/pqprogrammer/orgs","repos_url":"https://api.github.com/users/pqprogrammer/repos","events_url":"https://api.github.com/users/pqprogrammer/events{/privacy}","received_events_url":"https://api.github.com/users/pqprogrammer/received_events","type":"User","site_admin":false},"created_at":"2022-08-01T16:29:04Z","updated_at":"2022-08-01T16:29:04Z","author_association":"NONE","body":"Yes, by x86 I meant 32bit Windows library and overall Visual Studio project settings.\r\nThe x86 executables can run without any issues on both 32bit and 64bit Windows OS.\r\n\r\nSame goes with building such binaries/libraries within Visual Studio, just select a different configuration within the project configuration manager. The regular Visual Studio installation already includes everything needed for this.\r\n\r\nAs for the linker errors, I believe that some part of the code included in the library uses x64 platform specific intrinsics (https://docs.microsoft.com/en-us/cpp/intrinsics/x64-amd64-intrinsics-list?view=msvc-170), from the intrin.h file, possibly for better performance. I don't have much experience with this, but I think that by replacing these intrinsics with (multiple) x86 based ones by using a macro switch, that will check the project architecture, might fix this issue. How ever, this has to be done carefully, so the instructions are executed with the same effect, of course.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201435298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T16:29:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23197276289","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256","id":1303490190,"node_id":"I_kwDOA-eq3c5Nsa6O","number":1256,"title":"Compiling liboqs for x86 on Windows","user":{"login":"pqprogrammer","id":109220915,"node_id":"U_kgDOBoKUMw","avatar_url":"https://avatars.githubusercontent.com/u/109220915?v=4","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","html_url":"https://github.com/pqprogrammer","followers_url":"https://api.github.com/users/pqprogrammer/followers","following_url":"https://api.github.com/users/pqprogrammer/following{/other_user}","gists_url":"https://api.github.com/users/pqprogrammer/gists{/gist_id}","starred_url":"https://api.github.com/users/pqprogrammer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pqprogrammer/subscriptions","organizations_url":"https://api.github.com/users/pqprogrammer/orgs","repos_url":"https://api.github.com/users/pqprogrammer/repos","events_url":"https://api.github.com/users/pqprogrammer/events{/privacy}","received_events_url":"https://api.github.com/users/pqprogrammer/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-13T14:04:03Z","updated_at":"2022-08-01T17:39:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI'm trying to compile liboqs as a static library with Visual Studio 2022 for x86 without ninja.\r\n\r\nWithin the build folder I executed the following cmake command:\r\n`cmake .. -A x86 -DCMAKE_BUILD_TYPE=Release -DOQS_BUILD_ONLY_LIB=ON`\r\n\r\nAfter this I used the following commands:\r\n`msbuild ALL_BUILD.vcxproj`\r\nand\r\n`msbuild INSTALL.vcxproj`\r\n\r\nThe build and installation process finish successfully and I have the built library and header files within the C:\\Program Files (x86)\\liboqs directory.\r\n\r\nI noticed that within the generated CMake Visual Studio project files, the default configuration is Debug and not Release.\r\nIf I compile it manually by opening the generated ALL_BUILD.vcxproj and setting the configuration to Release, it will compile using the Release configuration. The same will not happen by using msbuild commands.\r\n\r\nAnother issue that I have is that by using the compiled library by the method which I said above I'm getting the following linking errors when I try to compile a simple test project (example_kem.c):\r\n- LNK2001\tunresolved external symbol __subborrow_u64\t\r\n- LNK2001\tunresolved external symbol __addcarry_u64\r\n- LNK2001\tunresolved external symbol __umul128\r\n- LNK2001\tunresolved external symbol ___shiftright128\r\n- LNK2001\tunresolved external symbol ___shiftleft128\r\n\r\nAll of the mentioned unresolved symbols are coming from oqs.lib.\r\n\r\nCompiling the same project with x64 configuration with the x64 static library works without issues.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201511625","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256#issuecomment-1201511625","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","id":1201511625,"node_id":"IC_kwDOA-eq3c5HnZzJ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-01T17:39:21Z","updated_at":"2022-08-01T17:39:21Z","author_association":"MEMBER","body":"> by replacing these intrinsics with (multiple) x86 based ones by using a macro switch, that will check the project architecture, might fix this issue\r\n\r\nSounds like you have more of an idea how to resolve it than I do :-/ We'd be glad to receive a PR from you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201511625/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T17:39:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23197709038","type":"IssueCommentEvent","actor":{"id":49699333,"login":"dependabot[bot]","display_login":"dependabot","gravatar_id":"","url":"https://api.github.com/users/dependabot[bot]","avatar_url":"https://avatars.githubusercontent.com/u/49699333?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/147","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/147/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/147/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/147/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/147","id":1308330218,"node_id":"PR_kwDODwdmyM47lp7o","number":147,"title":"Bump oqs-sys/liboqs from `719a84e` to `664c6f3`","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2730583541,"node_id":"MDU6TGFiZWwyNzMwNTgzNTQx","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"},{"id":2730584915,"node_id":"MDU6TGFiZWwyNzMwNTg0OTE1","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/submodules","name":"submodules","color":"000000","default":false,"description":"Pull requests that update Submodules code"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-07-18T18:03:51Z","updated_at":"2022-08-01T18:05:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/pulls/147","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/147","diff_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/147.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/147.patch","merged_at":null},"body":"Bumps [oqs-sys/liboqs](https://github.com/Open-Quantum-Safe/liboqs) from `719a84e` to `664c6f3`.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/664c6f331dd2a53893f0d89a5cd22b747561043a\"><code>664c6f3</code></a> Fix memory leak detected by valgrind (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1250\">#1250</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/e88cc366b5f14b92b543b2cd2e57f07c4485b41c\"><code>e88cc36</code></a> Sync Kyber with upstream, enable Scan-Build with Kyber (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1252\">#1252</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/8ec55171b05617465a6dbac1c69ebde16bff67c4\"><code>8ec5517</code></a> docs: Add valgrind as test dependencies in README.md (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1251\">#1251</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/1a1e91845c3351aa74d06f7181d2fbf9427a32d2\"><code>1a1e918</code></a> disable msys2 testing (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1243\">#1243</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/a8dad8d305665640fc258dce9bf7b0a1e0c52d0e\"><code>a8dad8d</code></a> adding memory leak testing (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1234\">#1234</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/fbb34be8993115a418024e07faef429cce32fc83\"><code>fbb34be</code></a> adding scan-build test (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1240\">#1240</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/d4022802839e7d96f9b93d320cdebcc28e2c7755\"><code>d402280</code></a> Updated Dilithium sign.c patch with AES context release (2) (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1242\">#1242</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/0efa4b97e0a2977a47b4a2dddf07f1b961794f64\"><code>0efa4b9</code></a> Bump Picnic to 3.0.15 (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1241\">#1241</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/7d7fd3387969ef194293f95436d64fdc6916644f\"><code>7d7fd33</code></a> improve Windows crosscompile handling (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1236\">#1236</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/c0db3d9ce3a7867dd8d32a7552c71fb69e6acf1f\"><code>c0db3d9</code></a> Update Picnic to 3.0.14 (fixes <a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1212\">#1212</a>) (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1237\">#1237</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/Open-Quantum-Safe/liboqs/compare/719a84ecddc89c0fc64ae75040ce0d717ea13394...664c6f331dd2a53893f0d89a5cd22b747561043a\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/147/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/1201535697","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/147#issuecomment-1201535697","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/147","id":1201535697,"node_id":"IC_kwDODwdmyM5HnfrR","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"created_at":"2022-08-01T18:05:02Z","updated_at":"2022-08-01T18:05:02Z","author_association":"CONTRIBUTOR","body":"Superseded by #149.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/1201535697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T18:05:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23200197979","type":"IssueCommentEvent","actor":{"id":109220915,"login":"pqprogrammer","display_login":"pqprogrammer","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","avatar_url":"https://avatars.githubusercontent.com/u/109220915?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256","id":1303490190,"node_id":"I_kwDOA-eq3c5Nsa6O","number":1256,"title":"Compiling liboqs for x86 on Windows","user":{"login":"pqprogrammer","id":109220915,"node_id":"U_kgDOBoKUMw","avatar_url":"https://avatars.githubusercontent.com/u/109220915?v=4","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","html_url":"https://github.com/pqprogrammer","followers_url":"https://api.github.com/users/pqprogrammer/followers","following_url":"https://api.github.com/users/pqprogrammer/following{/other_user}","gists_url":"https://api.github.com/users/pqprogrammer/gists{/gist_id}","starred_url":"https://api.github.com/users/pqprogrammer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pqprogrammer/subscriptions","organizations_url":"https://api.github.com/users/pqprogrammer/orgs","repos_url":"https://api.github.com/users/pqprogrammer/repos","events_url":"https://api.github.com/users/pqprogrammer/events{/privacy}","received_events_url":"https://api.github.com/users/pqprogrammer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-07-13T14:04:03Z","updated_at":"2022-08-01T20:35:45Z","closed_at":"2022-08-01T20:35:44Z","author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI'm trying to compile liboqs as a static library with Visual Studio 2022 for x86 without ninja.\r\n\r\nWithin the build folder I executed the following cmake command:\r\n`cmake .. -A Win32 -DCMAKE_BUILD_TYPE=Release -DOQS_BUILD_ONLY_LIB=ON`\r\n\r\nAfter this I used the following commands:\r\n`msbuild ALL_BUILD.vcxproj`\r\nand\r\n`msbuild INSTALL.vcxproj`\r\n\r\nThe build and installation process finish successfully and I have the built library and header files within the C:\\Program Files (x86)\\liboqs directory.\r\n\r\nI noticed that within the generated CMake Visual Studio project files, the default configuration is Debug and not Release.\r\nIf I compile it manually by opening the generated ALL_BUILD.vcxproj and setting the configuration to Release, it will compile using the Release configuration. The same will not happen by using msbuild commands.\r\n\r\nAnother issue that I have is that by using the compiled library by the method which I said above I'm getting the following linking errors when I try to compile a simple test project (example_kem.c):\r\n- LNK2001\tunresolved external symbol __subborrow_u64\t\r\n- LNK2001\tunresolved external symbol __addcarry_u64\r\n- LNK2001\tunresolved external symbol __umul128\r\n- LNK2001\tunresolved external symbol ___shiftright128\r\n- LNK2001\tunresolved external symbol ___shiftleft128\r\n\r\nAll of the mentioned unresolved symbols are coming from oqs.lib.\r\n\r\nCompiling the same project with x64 configuration with the x64 static library works without issues.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201693794","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256#issuecomment-1201693794","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","id":1201693794,"node_id":"IC_kwDOA-eq3c5HoGRi","user":{"login":"pqprogrammer","id":109220915,"node_id":"U_kgDOBoKUMw","avatar_url":"https://avatars.githubusercontent.com/u/109220915?v=4","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","html_url":"https://github.com/pqprogrammer","followers_url":"https://api.github.com/users/pqprogrammer/followers","following_url":"https://api.github.com/users/pqprogrammer/following{/other_user}","gists_url":"https://api.github.com/users/pqprogrammer/gists{/gist_id}","starred_url":"https://api.github.com/users/pqprogrammer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pqprogrammer/subscriptions","organizations_url":"https://api.github.com/users/pqprogrammer/orgs","repos_url":"https://api.github.com/users/pqprogrammer/repos","events_url":"https://api.github.com/users/pqprogrammer/events{/privacy}","received_events_url":"https://api.github.com/users/pqprogrammer/received_events","type":"User","site_admin":false},"created_at":"2022-08-01T20:35:44Z","updated_at":"2022-08-01T20:35:44Z","author_association":"NONE","body":"My bad, I didn't notice that this library is only available for x86-64, ARM32v7, or ARM64v8 (https://github.com/open-quantum-safe/liboqs/blob/main/CONFIGURE.md#oqs_dist_build) and not for x86.\r\n\r\nThis might be a possible contradiction with the documentation from the website (https://openquantumsafe.org/liboqs/ in section Overview -> Multi-platform). This is why I originally thought this to be possible.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201693794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T20:35:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23200222149","type":"IssueCommentEvent","actor":{"id":109220915,"login":"pqprogrammer","display_login":"pqprogrammer","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","avatar_url":"https://avatars.githubusercontent.com/u/109220915?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256","id":1303490190,"node_id":"I_kwDOA-eq3c5Nsa6O","number":1256,"title":"Compiling liboqs for x86 on Windows","user":{"login":"pqprogrammer","id":109220915,"node_id":"U_kgDOBoKUMw","avatar_url":"https://avatars.githubusercontent.com/u/109220915?v=4","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","html_url":"https://github.com/pqprogrammer","followers_url":"https://api.github.com/users/pqprogrammer/followers","following_url":"https://api.github.com/users/pqprogrammer/following{/other_user}","gists_url":"https://api.github.com/users/pqprogrammer/gists{/gist_id}","starred_url":"https://api.github.com/users/pqprogrammer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pqprogrammer/subscriptions","organizations_url":"https://api.github.com/users/pqprogrammer/orgs","repos_url":"https://api.github.com/users/pqprogrammer/repos","events_url":"https://api.github.com/users/pqprogrammer/events{/privacy}","received_events_url":"https://api.github.com/users/pqprogrammer/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-07-13T14:04:03Z","updated_at":"2022-08-01T20:37:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI'm trying to compile liboqs as a static library with Visual Studio 2022 for x86 without ninja.\r\n\r\nWithin the build folder I executed the following cmake command:\r\n`cmake .. -A Win32 -DCMAKE_BUILD_TYPE=Release -DOQS_BUILD_ONLY_LIB=ON`\r\n\r\nAfter this I used the following commands:\r\n`msbuild ALL_BUILD.vcxproj`\r\nand\r\n`msbuild INSTALL.vcxproj`\r\n\r\nThe build and installation process finish successfully and I have the built library and header files within the C:\\Program Files (x86)\\liboqs directory.\r\n\r\nI noticed that within the generated CMake Visual Studio project files, the default configuration is Debug and not Release.\r\nIf I compile it manually by opening the generated ALL_BUILD.vcxproj and setting the configuration to Release, it will compile using the Release configuration. The same will not happen by using msbuild commands.\r\n\r\nAnother issue that I have is that by using the compiled library by the method which I said above I'm getting the following linking errors when I try to compile a simple test project (example_kem.c):\r\n- LNK2001\tunresolved external symbol __subborrow_u64\t\r\n- LNK2001\tunresolved external symbol __addcarry_u64\r\n- LNK2001\tunresolved external symbol __umul128\r\n- LNK2001\tunresolved external symbol ___shiftright128\r\n- LNK2001\tunresolved external symbol ___shiftleft128\r\n\r\nAll of the mentioned unresolved symbols are coming from oqs.lib.\r\n\r\nCompiling the same project with x64 configuration with the x64 static library works without issues.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256/timeline","performed_via_github_app":null,"state_reason":"reopened"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201695144","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1256#issuecomment-1201695144","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1256","id":1201695144,"node_id":"IC_kwDOA-eq3c5HoGmo","user":{"login":"pqprogrammer","id":109220915,"node_id":"U_kgDOBoKUMw","avatar_url":"https://avatars.githubusercontent.com/u/109220915?v=4","gravatar_id":"","url":"https://api.github.com/users/pqprogrammer","html_url":"https://github.com/pqprogrammer","followers_url":"https://api.github.com/users/pqprogrammer/followers","following_url":"https://api.github.com/users/pqprogrammer/following{/other_user}","gists_url":"https://api.github.com/users/pqprogrammer/gists{/gist_id}","starred_url":"https://api.github.com/users/pqprogrammer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pqprogrammer/subscriptions","organizations_url":"https://api.github.com/users/pqprogrammer/orgs","repos_url":"https://api.github.com/users/pqprogrammer/repos","events_url":"https://api.github.com/users/pqprogrammer/events{/privacy}","received_events_url":"https://api.github.com/users/pqprogrammer/received_events","type":"User","site_admin":false},"created_at":"2022-08-01T20:37:14Z","updated_at":"2022-08-01T20:37:14Z","author_association":"NONE","body":"My bad, I didn't notice that this library is only available for x86-64, ARM32v7, or ARM64v8 (https://github.com/open-quantum-safe/liboqs/blob/main/CONFIGURE.md#oqs_dist_build) and not for x86.\r\n\r\nThis might be a possible contradiction with the documentation from the website (https://openquantumsafe.org/liboqs/ in section Overview -> Multi-platform). This is why I originally thought this to be possible.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1201695144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-01T20:37:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
