{"id":"23449706973","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2022-08-03T16:14:21Z","updated_at":"2022-08-16T00:28:56Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1216013111","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1216013111","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1216013111,"node_id":"IC_kwDOA-eq3c5IeuM3","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2022-08-16T00:28:55Z","updated_at":"2022-08-16T00:28:55Z","author_association":"COLLABORATOR","body":"\r\n> Could you please point to where? As I didn't find that, I'm posting my thought above (regardless).\r\nSorry @baentsch, I should have linked it, but I said the exact same thing you did. :)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1216013111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-16T00:28:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23452672758","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2022-08-03T16:14:21Z","updated_at":"2022-08-16T05:33:58Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1216168332","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1216168332","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1216168332,"node_id":"IC_kwDOA-eq3c5IfUGM","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-16T05:33:58Z","updated_at":"2022-08-16T05:33:58Z","author_association":"MEMBER","body":"OK, the simple `strncmp` bug is gone. Now it's something to do with the actual logic:\r\n\r\n```\r\n. > ./build/tests/test_sig_stfl XMSSMT-SHA2_60/12_256 --read_key_from=./tests/saved_keys/tmp_xmssmt6012_sha256\r\nERROR: OQS_SIG_STFL_verify failed\r\n```\r\n\r\nWhen digging into this, it turns out `public_key` is NULL going into verify; after adding:\r\n```\r\n+       printf(\"Going into signing with pubkey %p\\n\", public_key);\r\n        rc = OQS_SIG_STFL_sign(sig, signature, &signature_len, message, message_len, secret_key);\r\n+       printf(\"After signing pubkey  = %p\\n\", public_key);\r\n```\r\n\r\n the output became:\r\n```\r\nroot@5c8026f19df1:~/project# ./build/tests/test_sig_stfl XMSSMT-SHA2_60/12_256 --read_key_from=./tests/saved_keys/tmp_xmssmt6012_sha256\r\nConfiguration info\r\n==================\r\nTarget platform:  i586-Linux-5.13.0-1023-aws\r\nCompiler:         gcc (7.5.0)\r\n[...]\r\nGoing into signing with pubkey 0xf700077f\r\nAfter signing pubkey  = (nil)\r\n```\r\n\r\nThis points to a massive pointer arithmetic problem within the `sign` function (destroying variables not even passed). And I don't have time to \"dive deep\" into those right now, sorry. \r\n\r\nFWIW, I did all these tests on the CCI test VM via the SSH access function (\"Re-Run Job with SSH\").","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1216168332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-16T05:33:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23454291180","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1289","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1289/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1289/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1289/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1289","id":1339907678,"node_id":"I_kwDOA-eq3c5P3V5e","number":1289,"title":"Signature algorithm x not enabled","user":{"login":"alexandra-buzatoiu","id":99990832,"node_id":"U_kgDOBfW9MA","avatar_url":"https://avatars.githubusercontent.com/u/99990832?v=4","gravatar_id":"","url":"https://api.github.com/users/alexandra-buzatoiu","html_url":"https://github.com/alexandra-buzatoiu","followers_url":"https://api.github.com/users/alexandra-buzatoiu/followers","following_url":"https://api.github.com/users/alexandra-buzatoiu/following{/other_user}","gists_url":"https://api.github.com/users/alexandra-buzatoiu/gists{/gist_id}","starred_url":"https://api.github.com/users/alexandra-buzatoiu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexandra-buzatoiu/subscriptions","organizations_url":"https://api.github.com/users/alexandra-buzatoiu/orgs","repos_url":"https://api.github.com/users/alexandra-buzatoiu/repos","events_url":"https://api.github.com/users/alexandra-buzatoiu/events{/privacy}","received_events_url":"https://api.github.com/users/alexandra-buzatoiu/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-16T07:05:26Z","updated_at":"2022-08-16T07:27:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am trying to understand and run the liboqs tests. I have to mention that I have liboqs and the oqs-opensll fork. I have tested the signature and kem examples from the github and I get this output which I find positive.\r\n\r\n└─$ ./example_sig                      \r\n[example_stack] OQS_SIG_dilithium_2 operations completed.\r\n[example_heap]  OQS_SIG_dilithium_2 operations completed.\r\n\r\nAs these examples use dilithium2, I think as they work, the algorithm should be enabled. Anyways, when I try to compile and run test_sig.c, test_sig_mem.c, when executing the resulting executable file, I get this message: \r\n\r\n┌──(kali㉿kali)-[~/task5/liboqs/build/tests]\r\n└─$ ./test_sig_mem 0 Dilithium2\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Linux-5.16.0-kali7-amd64\r\nCompiler:         gcc (11.3.0)\r\nCompile options:  [-march=native;-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prototypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.7.2-rc1\r\nGit commit:       3cf9849cc43545ad7fdeb3092a90f94ff1881680\r\nOpenSSL enabled:  Yes (OpenSSL 3.0.4 21 Jun 2022)\r\nAES:              NI\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_OPT_TARGET=auto CMAKE_BUILD_TYPE=Release \r\nCPU exts compile-time:  AES AVX PCLMULQDQ POPCNT SSE SSE2 SSE3\r\n\r\nSignature algorithm 0 not enabled!\r\n\r\nI have even try to pass as an argv OQS_SIG_alg_dilithium_3, as in the example_sig.c: sig = OQS_SIG_new(OQS_SIG_alg_dilithium_3);\r\n\r\nI have seen that there are some flags for cmake command https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs#OQS_ENABLE_KEM_<ALG>/OQS_ENABLE_SIG_<ALG>\r\nThe solution would be to install everything from the scratch and mention all the flags at cmake? Is there another way? \r\nThank you in advance!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1289/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1216250971","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1289#issuecomment-1216250971","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1289","id":1216250971,"node_id":"IC_kwDOA-eq3c5IfoRb","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-16T07:27:11Z","updated_at":"2022-08-16T07:27:11Z","author_association":"MEMBER","body":"> ./test_sig_mem 0 Dilithium2\r\n\r\nis incorrect: The two parameters must be switched: `./test_sig_mem Dilithium2 0` works","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1216250971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-16T07:27:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23456627440","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/150","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/150/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/150/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/150/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/150","id":1339969611,"node_id":"I_kwDODP--n85P3lBL","number":150,"title":"Error while generating required QSC certificates","user":{"login":"RohitArora7","id":15072412,"node_id":"MDQ6VXNlcjE1MDcyNDEy","avatar_url":"https://avatars.githubusercontent.com/u/15072412?v=4","gravatar_id":"","url":"https://api.github.com/users/RohitArora7","html_url":"https://github.com/RohitArora7","followers_url":"https://api.github.com/users/RohitArora7/followers","following_url":"https://api.github.com/users/RohitArora7/following{/other_user}","gists_url":"https://api.github.com/users/RohitArora7/gists{/gist_id}","starred_url":"https://api.github.com/users/RohitArora7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RohitArora7/subscriptions","organizations_url":"https://api.github.com/users/RohitArora7/orgs","repos_url":"https://api.github.com/users/RohitArora7/repos","events_url":"https://api.github.com/users/RohitArora7/events{/privacy}","received_events_url":"https://api.github.com/users/RohitArora7/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-16T08:04:49Z","updated_at":"2022-08-16T09:26:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, I am getting the following error while generating all required QSC certificates\r\n\r\n```\r\nubuntu@ubuntu:~/oqs-demos/nginx/fulltest$ python3 genconfig.py\r\n. > /tmp/opt/openssl/apps/openssl req -x509 -new -newkey rsa:4096 -keyout root/CA.key -out root/CA.crt -nodes -subj /CN=oqstest_CA -days 500 -config /tmp/opt/openssl/apps/openssl.cnf\r\nNew root cert residing in root/CA.crt.\r\n. > /tmp/opt/openssl/apps/openssl ecparam -name prime256v1 -out pki/prime256v1.pem\r\nCan't open pki/prime256v1.pem for writing, No such file or directory\r\n0:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:69:fopen('pki/prime256v1.pem','w')\r\n0:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:76:\r\n\r\nTraceback (most recent call last):\r\n  File \"genconfig.py\", line 197, in <module>\r\n    main()\r\n  File \"genconfig.py\", line 193, in main\r\n    gen_cert(sig)\r\n  File \"genconfig.py\", line 63, in gen_cert\r\n    common.run_subprocess([OPENSSL, \"ecparam\", \"-name\", \"prime256v1\", \"-out\", os.path.join(PKIPATH, \"prime256v1.pem\")])\r\n  File \"/home/ubuntu/oqs-demos/nginx/fulltest/common.py\", line 47, in run_subprocess\r\n    assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nAssertionError: Got unexpected return code 1\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/150/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1216388226","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/150#issuecomment-1216388226","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/150","id":1216388226,"node_id":"IC_kwDODP--n85IgJyC","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-16T09:26:19Z","updated_at":"2022-08-16T09:26:19Z","author_association":"MEMBER","body":"The error message \r\n\r\n> Can't open pki/prime256v1.pem for writing, No such file or directory\r\n\r\nshows the issue: The directory 'pki' does not exist (created e.g., at https://github.com/open-quantum-safe/oqs-demos/blob/ee6b4110ce4762224cf12ed2d379769b917ff683/nginx/fulltest/package.sh#L15). Will do a doc update.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1216388226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-16T09:26:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
