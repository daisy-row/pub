{"id":"23272385303","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278","id":1329338089,"node_id":"I_kwDOA-eq3c5PPBbp","number":1278,"title":"Picnic failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":1,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T01:34:49Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2022-08-05T01:34:40Z","updated_at":"2022-08-05T01:35:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Picnic is failing them. It seems all Picnic variants fail.  We previously had suppression files in `tests/constant_time/sig/passes/picnic` and `.../picnic3` but something must have changed in the Picnic implementation that makes those suppressions no longer match.\r\n[failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264526/failures.txt)\r\n\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,stru*,ntru*,LightSaber,Saber,FireSaber,Dilithium*,Falcon*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file, with a few excerpts below\r\n\r\n## Example for picnic_L1_FS\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic ./build/tests/test_sig picnic_L1_FS\r\n==4665== Memcheck, a memory error detector\r\n==4665== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4665== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4665== Command: ./build/tests/test_sig picnic_L1_FS\r\n==4665== \r\n==4665== Thread 2:\r\n==4665== Conditional jump or move depends on uninitialised value(s)\r\n==4665==    at 0x115EF0: oqs_sig_picnic_picnic_impl_sign (picnic_impl.c:1146)\r\n==4665==    by 0x1111C6: oqs_sig_picnic_sign (picnic.c:251)\r\n==4665==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4665==    by 0x10F8F3: OQS_SIG_picnic_L1_FS_sign (sig_picnic.c:149)\r\n==4665==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4665==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4665==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4665==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4665==    by 0x4C6A132: clone (clone.S:95)\r\n==4665== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_picnic_impl_sign\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic_L1_FS_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```\r\n\r\n## Example for picnic3_L1\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic3 ./build/tests/test_sig picnic3_L1\r\n==4683== Memcheck, a memory error detector\r\n==4683== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4683== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4683== Command: ./build/tests/test_sig picnic3_L1\r\n==4683== \r\n==4683== Thread 2:\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11B45D: sign_picnic3 (picnic3_impl.c:683)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118ECF: contains (picnic3_impl.c:201)\r\n==4683==    by 0x11B909: sign_picnic3 (picnic3_impl.c:740)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:contains\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118F28: indexOf (picnic3_impl.c:210)\r\n==4683==    by 0x11B96F: sign_picnic3 (picnic3_impl.c:742)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:indexOf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BB87: sign_picnic3 (picnic3_impl.c:753)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x11BCA5: sign_picnic3 (picnic3_impl.c:758)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BD18: sign_picnic3 (picnic3_impl.c:762)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BE97: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x22AC63: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:126)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B0B5: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:149)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B101: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:150)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BDC6: sign_picnic3 (picnic3_impl.c:763)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1205943956","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278#issuecomment-1205943956","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","id":1205943956,"node_id":"IC_kwDOA-eq3c5H4T6U","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T01:35:02Z","updated_at":"2022-08-05T01:35:02Z","author_association":"MEMBER","body":"@sebastinas Do you have any insight on this?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1205943956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T01:35:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23272648563","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279","id":1329351397,"node_id":"I_kwDOA-eq3c5PPErl","number":1279,"title":"Dilithium AVX failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T02:02:51Z","due_on":null,"closed_at":null},"comments":0,"created_at":"2022-08-05T02:02:46Z","updated_at":"2022-08-05T02:03:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Dlithium's AVX code is failing them. We previously had suppression files in `tests/constant_time/kem/passes/dilithium*` but something must have changed in the Dliithium implementation that makes those suppressions no longer match.\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\ncmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,sntru*,ntru*,LightSaber,Saber,FireSaber,Falcon*,picnic*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file [dilithium_failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264650/dilithium_failures.txt), with a few excerpts below:\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/dilithium --suppressions=tests/constant_time/sig/passes/dilithium-avx2 --suppressions=tests/constant_time/sig/passes/dilithium-aarch64 ./build/tests/test_sig Dilithium2\r\n==13982== Memcheck, a memory error detector\r\n==13982== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==13982== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==13982== Command: ./build/tests/test_sig Dilithium2\r\n==13982== \r\n==13982== Thread 2:\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EA8D: pqcrystals_dilithium2_avx2_signature (sign.c:290)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EB90: pqcrystals_dilithium2_avx2_signature (sign.c:305)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EC8C: pqcrystals_dilithium2_avx2_signature (sign.c:317)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x48429FA: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B6E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A11: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A20: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B08: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B0E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B33: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B3F: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842ABC: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842AD9: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AE4: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AFD: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B30: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B60: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B63: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1205957547","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279#issuecomment-1205957547","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","id":1205957547,"node_id":"IC_kwDOA-eq3c5H4XOr","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T02:03:33Z","updated_at":"2022-08-05T02:03:33Z","author_association":"MEMBER","body":"@bhess Do you have any insight here, Basil? I don't see anything obvious in the most recent commit that changed the Dilithium code, I'm not sure how far back this was introduced.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1205957547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T02:03:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23276853154","type":"IssueCommentEvent","actor":{"id":114613,"login":"sebastinas","display_login":"sebastinas","gravatar_id":"","url":"https://api.github.com/users/sebastinas","avatar_url":"https://avatars.githubusercontent.com/u/114613?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278","id":1329338089,"node_id":"I_kwDOA-eq3c5PPBbp","number":1278,"title":"Picnic failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T02:02:51Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2022-08-05T01:34:40Z","updated_at":"2022-08-05T08:06:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Picnic is failing them. It seems all Picnic variants fail.  We previously had suppression files in `tests/constant_time/sig/passes/picnic` and `.../picnic3` but something must have changed in the Picnic implementation that makes those suppressions no longer match.\r\n[failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264526/failures.txt)\r\n\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,stru*,ntru*,LightSaber,Saber,FireSaber,Dilithium*,Falcon*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file, with a few excerpts below\r\n\r\n## Example for picnic_L1_FS\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic ./build/tests/test_sig picnic_L1_FS\r\n==4665== Memcheck, a memory error detector\r\n==4665== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4665== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4665== Command: ./build/tests/test_sig picnic_L1_FS\r\n==4665== \r\n==4665== Thread 2:\r\n==4665== Conditional jump or move depends on uninitialised value(s)\r\n==4665==    at 0x115EF0: oqs_sig_picnic_picnic_impl_sign (picnic_impl.c:1146)\r\n==4665==    by 0x1111C6: oqs_sig_picnic_sign (picnic.c:251)\r\n==4665==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4665==    by 0x10F8F3: OQS_SIG_picnic_L1_FS_sign (sig_picnic.c:149)\r\n==4665==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4665==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4665==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4665==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4665==    by 0x4C6A132: clone (clone.S:95)\r\n==4665== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_picnic_impl_sign\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic_L1_FS_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```\r\n\r\n## Example for picnic3_L1\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic3 ./build/tests/test_sig picnic3_L1\r\n==4683== Memcheck, a memory error detector\r\n==4683== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4683== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4683== Command: ./build/tests/test_sig picnic3_L1\r\n==4683== \r\n==4683== Thread 2:\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11B45D: sign_picnic3 (picnic3_impl.c:683)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118ECF: contains (picnic3_impl.c:201)\r\n==4683==    by 0x11B909: sign_picnic3 (picnic3_impl.c:740)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:contains\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118F28: indexOf (picnic3_impl.c:210)\r\n==4683==    by 0x11B96F: sign_picnic3 (picnic3_impl.c:742)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:indexOf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BB87: sign_picnic3 (picnic3_impl.c:753)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x11BCA5: sign_picnic3 (picnic3_impl.c:758)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BD18: sign_picnic3 (picnic3_impl.c:762)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BE97: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x22AC63: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:126)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B0B5: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:149)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B101: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:150)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BDC6: sign_picnic3 (picnic3_impl.c:763)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206166061","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278#issuecomment-1206166061","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","id":1206166061,"node_id":"IC_kwDOA-eq3c5H5KIt","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T08:06:17Z","updated_at":"2022-08-05T08:06:17Z","author_association":"CONTRIBUTOR","body":"The issue in `picnic_L1` is a regression and fixed locally. The issues in `picnic3` are due to refactoring and consequently the suppression file no longer matches.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206166061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T08:06:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23280548237","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279","id":1329351397,"node_id":"I_kwDOA-eq3c5PPErl","number":1279,"title":"Dilithium AVX failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T02:02:51Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2022-08-05T02:02:46Z","updated_at":"2022-08-05T11:37:30Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Dlithium's AVX code is failing them. We previously had suppression files in `tests/constant_time/kem/passes/dilithium*` but something must have changed in the Dliithium implementation that makes those suppressions no longer match.\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\ncmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,sntru*,ntru*,LightSaber,Saber,FireSaber,Falcon*,picnic*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file [dilithium_failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264650/dilithium_failures.txt), with a few excerpts below:\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/dilithium --suppressions=tests/constant_time/sig/passes/dilithium-avx2 --suppressions=tests/constant_time/sig/passes/dilithium-aarch64 ./build/tests/test_sig Dilithium2\r\n==13982== Memcheck, a memory error detector\r\n==13982== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==13982== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==13982== Command: ./build/tests/test_sig Dilithium2\r\n==13982== \r\n==13982== Thread 2:\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EA8D: pqcrystals_dilithium2_avx2_signature (sign.c:290)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EB90: pqcrystals_dilithium2_avx2_signature (sign.c:305)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EC8C: pqcrystals_dilithium2_avx2_signature (sign.c:317)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x48429FA: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B6E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A11: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A20: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B08: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B0E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B33: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B3F: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842ABC: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842AD9: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AE4: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AFD: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B30: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B60: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B63: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206349409","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279#issuecomment-1206349409","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","id":1206349409,"node_id":"IC_kwDOA-eq3c5H525h","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T11:37:30Z","updated_at":"2022-08-05T11:37:30Z","author_association":"MEMBER","body":"> We previously had suppression files in tests/constant_time/kem/passes/dilithium* but something must have changed in the Dliithium implementation that makes those suppressions no longer match\r\n\r\nJust a comment/questions from the side lines, not knowing too much of what's happening:\r\n1) Shouldn't you reference tests/constant_time/sig/passes/dilithium-avx2 (rather than kem_...), @dstebila ?\r\n2) When looking at that file, I'm a bit surprised to see line numbers in there: Wouldn't they have (to be) changed when the code changes? And the latter it did with the [introduction recently of the common_aes calls](https://github.com/open-quantum-safe/liboqs/pull/1221) -> Might it be as simple as just (having to) correct the line numbers in the suppression files to account for those changes?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206349409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T11:37:30Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23282452720","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1277","id":1327863029,"node_id":"I_kwDOA-eq3c5PJZT1","number":1277,"title":"cmake file installed in wrong location: /usr/lib64/cmake/usr/lib64oqs/liboqsConfig.cmake","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-03T22:46:03Z","updated_at":"2022-08-05T13:24:42Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I tested `0.7.2-rc1` and cmake files, such as `liboqsConfig.cmake`, are installed in `/usr/lib64/cmake/usr/lib64oqs`:\r\n```\r\n+ DESTDIR=/usr/src/tmp/liboqs-buildroot\r\n+ /usr/bin/ninja -j20 install -C build\r\n...\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsConfig.cmake\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsConfigVersion.cmake\r\n...\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsTargets.cmake\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsTargets-relwithdebinfo.cmake\r\n```\r\nPreviously they are correctly installed in `/usr/lib64/cmake/liboqs/liboqsConfig.cmake` under `DESTDIR`.\r\nIt seems that `liboqs` is expanded there to `/usr/lib64`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206456448","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1277#issuecomment-1206456448","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277","id":1206456448,"node_id":"IC_kwDOA-eq3c5H6RCA","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T13:24:42Z","updated_at":"2022-08-05T13:24:42Z","author_association":"MEMBER","body":"When trying to reproduce your run, I changed this command:\r\n> + DESTDIR=/usr/src/tmp/liboqs-buildroot\r\n> + /usr/bin/ninja -j20 install -C build\r\n\r\nto `DESTDIR=/tmp/liboqs-buildroot ninja install` and ran that inside `build` (to avoid messing with '/usr'): OK?\r\n\r\nSo the question to you, @vt-alt : How did you generate the ninja setup, i.e., which parameters did you pass to `cmake`? When trying `cmake -GNinja -DCMAKE_INSTALL_PREFIX=/tmp/usr/lib64/cmake/liboqs ..` (again within `build`), a plain `ninja install` placed `liboqsConfig.cmake` as expected into `/tmp/usr/lib64/cmake/liboqs/lib/cmake/liboqs/` (or into `/tmp/liboqs-buildroot/tmp/usr/lib64/cmake/liboqs/lib/cmake/liboqs/` when running the DESTDIR-prefixed install.\r\n\r\n-> Is any of this not as you'd expect it, @vt-alt ? Any further information for us to reproduce your setup? When trying the above, I used Linux Mint 20.1., ninja 1.10.0 and cmake 3.16.3 (and liboqs-0.7.2-rc1).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206456448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T13:24:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23283421468","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-03T16:14:21Z","updated_at":"2022-08-05T14:13:20Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206503885","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1206503885","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1206503885,"node_id":"IC_kwDOA-eq3c5H6cnN","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T14:13:20Z","updated_at":"2022-08-05T14:13:20Z","author_association":"MEMBER","body":"I hope this question from many thousand miles away is permitted: Why is this PR in \"Ready for Review\" state? IMO it's passing way too few tests.... Some failures appear very simple to correct (`include/oqs/sig_stfl.h:224:32: error: no newline at end of file [-Werror,-Wnewline-eof]`)...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206503885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T14:13:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23284203948","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","id":1302262669,"node_id":"PR_kwDOA-eq3c47RltC","number":1254,"title":"pqclean_hqc: Fix build on GCC-12","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2022-07-12T16:00:28Z","updated_at":"2022-08-05T14:52:30Z","closed_at":"2022-07-25T20:22:02Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.patch","merged_at":"2022-07-25T20:22:02Z"},"body":"Make index variable `i` immediate by unrolling the loop. This is just lucky guess that's worked, because similar in function intrinsic `_mm256_extract_epi16` requires immediate value for its index.\r\n\r\nWorkaround to the (perhaps) GCC 12 bug:\r\n```\r\n  In function 'find_peaks',\r\n      inlined from 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode' at /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:387:18:\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:336:44: error: 'tmp' is used uninitialized [-Werror=uninitialized]\r\n    336 |         result |= mask & ((uint16_t *)&tmp)[i];\r\n\t|                          ~~~~~~~~~~~~~~~~~~^~~\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c: In function 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode':\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:234:13: note: 'tmp' was declared here\r\n    234 |     __m256i tmp = _mm256_setzero_si256();\r\n\t|             ^~~\r\n```\r\nIf LTO is enabled this error message is not shown, but HQC-128 decaps test is failed.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAs discussed at https://github.com/open-quantum-safe/liboqs/issues/1244\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1244\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\nNo such changes.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nTested locally on `0.7.1`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206545555","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254#issuecomment-1206545555","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","id":1206545555,"node_id":"IC_kwDOA-eq3c5H6myT","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T14:52:30Z","updated_at":"2022-08-05T14:52:30Z","author_association":"CONTRIBUTOR","body":"> > JFYI. I just noticed that you are (perhaps unintentionally) modify contributed commits.\r\n> \r\n> We use \"Squash and merge\" for our commits to have a clean commit history. Would that be what's causing the apparent modification?\r\n\r\nYes seems possible. Perhaps rebase and merge is better.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206545555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T14:52:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23284430432","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278","id":1329338089,"node_id":"I_kwDOA-eq3c5PPBbp","number":1278,"title":"Picnic failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"assignees":[{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T02:02:51Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2022-08-05T01:34:40Z","updated_at":"2022-08-05T15:03:51Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Picnic is failing them. It seems all Picnic variants fail.  We previously had suppression files in `tests/constant_time/sig/passes/picnic` and `.../picnic3` but something must have changed in the Picnic implementation that makes those suppressions no longer match.\r\n[failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264526/failures.txt)\r\n\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,stru*,ntru*,LightSaber,Saber,FireSaber,Dilithium*,Falcon*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file, with a few excerpts below\r\n\r\n## Example for picnic_L1_FS\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic ./build/tests/test_sig picnic_L1_FS\r\n==4665== Memcheck, a memory error detector\r\n==4665== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4665== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4665== Command: ./build/tests/test_sig picnic_L1_FS\r\n==4665== \r\n==4665== Thread 2:\r\n==4665== Conditional jump or move depends on uninitialised value(s)\r\n==4665==    at 0x115EF0: oqs_sig_picnic_picnic_impl_sign (picnic_impl.c:1146)\r\n==4665==    by 0x1111C6: oqs_sig_picnic_sign (picnic.c:251)\r\n==4665==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4665==    by 0x10F8F3: OQS_SIG_picnic_L1_FS_sign (sig_picnic.c:149)\r\n==4665==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4665==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4665==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4665==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4665==    by 0x4C6A132: clone (clone.S:95)\r\n==4665== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_picnic_impl_sign\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic_L1_FS_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```\r\n\r\n## Example for picnic3_L1\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic3 ./build/tests/test_sig picnic3_L1\r\n==4683== Memcheck, a memory error detector\r\n==4683== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4683== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4683== Command: ./build/tests/test_sig picnic3_L1\r\n==4683== \r\n==4683== Thread 2:\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11B45D: sign_picnic3 (picnic3_impl.c:683)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118ECF: contains (picnic3_impl.c:201)\r\n==4683==    by 0x11B909: sign_picnic3 (picnic3_impl.c:740)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:contains\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118F28: indexOf (picnic3_impl.c:210)\r\n==4683==    by 0x11B96F: sign_picnic3 (picnic3_impl.c:742)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:indexOf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BB87: sign_picnic3 (picnic3_impl.c:753)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x11BCA5: sign_picnic3 (picnic3_impl.c:758)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BD18: sign_picnic3 (picnic3_impl.c:762)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BE97: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x22AC63: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:126)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B0B5: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:149)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B101: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:150)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BDC6: sign_picnic3 (picnic3_impl.c:763)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206558722","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278#issuecomment-1206558722","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","id":1206558722,"node_id":"IC_kwDOA-eq3c5H6qAC","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:03:51Z","updated_at":"2022-08-05T15:03:51Z","author_association":"CONTRIBUTOR","body":"I can update the suppression files.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206558722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:03:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23284492351","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279","id":1329351397,"node_id":"I_kwDOA-eq3c5PPErl","number":1279,"title":"Dilithium AVX failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T02:02:51Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2022-08-05T02:02:46Z","updated_at":"2022-08-05T15:07:03Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Dlithium's AVX code is failing them. We previously had suppression files in `tests/constant_time/kem/passes/dilithium*` but something must have changed in the Dliithium implementation that makes those suppressions no longer match.\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\ncmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,sntru*,ntru*,LightSaber,Saber,FireSaber,Falcon*,picnic*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file [dilithium_failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264650/dilithium_failures.txt), with a few excerpts below:\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/dilithium --suppressions=tests/constant_time/sig/passes/dilithium-avx2 --suppressions=tests/constant_time/sig/passes/dilithium-aarch64 ./build/tests/test_sig Dilithium2\r\n==13982== Memcheck, a memory error detector\r\n==13982== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==13982== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==13982== Command: ./build/tests/test_sig Dilithium2\r\n==13982== \r\n==13982== Thread 2:\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EA8D: pqcrystals_dilithium2_avx2_signature (sign.c:290)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EB90: pqcrystals_dilithium2_avx2_signature (sign.c:305)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EC8C: pqcrystals_dilithium2_avx2_signature (sign.c:317)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x48429FA: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B6E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A11: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A20: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B08: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B0E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B33: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B3F: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842ABC: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842AD9: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AE4: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AFD: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B30: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B60: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B63: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206562318","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279#issuecomment-1206562318","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","id":1206562318,"node_id":"IC_kwDOA-eq3c5H6q4O","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:07:03Z","updated_at":"2022-08-05T15:07:03Z","author_association":"MEMBER","body":"> > We previously had suppression files in tests/constant_time/kem/passes/dilithium* but something must have changed in the Dliithium implementation that makes those suppressions no longer match\r\n> \r\n> Just a comment/questions from the side lines, not knowing too much of what's happening:\r\n> \r\n>     1. Shouldn't you reference tests/constant_time/sig/passes/dilithium-avx2 (rather than kem_...), @dstebila ?\r\n\r\nWhoops, yes.\r\n\r\n>     2. When looking at that file, I'm a bit surprised to see line numbers in there: Wouldn't they have (to be) changed when the code changes? And the latter it did with the [introduction recently of the common_aes calls](https://github.com/open-quantum-safe/liboqs/pull/1221) -> Might it be as simple as just (having to) correct the line numbers in the suppression files to account for those changes?\r\n\r\nYes, there are line numbers which would have to be changed when the code changes. However I can't tell from the previous suppression files and the commit history exactly how the line numbers of the past map on to the current, so I'm reluctant to just blindly change things without understanding the code.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206562318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:07:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23284729391","type":"IssueCommentEvent","actor":{"id":25700338,"login":"kj3moraes","display_login":"kj3moraes","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","avatar_url":"https://avatars.githubusercontent.com/u/25700338?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-03T16:14:21Z","updated_at":"2022-08-05T15:19:28Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206575396","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1206575396","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1206575396,"node_id":"IC_kwDOA-eq3c5H6uEk","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:19:28Z","updated_at":"2022-08-05T15:19:28Z","author_association":"COLLABORATOR","body":"I've added the newlines at EOF for the files that failed in the CircleCI checks. However, many of the tests are failing because they timed out. XMSS-keygen is incredibly slow, and it takes about 40 minutes total for all the variants to be tested. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206575396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:19:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23284731822","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1277","id":1327863029,"node_id":"I_kwDOA-eq3c5PJZT1","number":1277,"title":"cmake file installed in wrong location: /usr/lib64/cmake/usr/lib64oqs/liboqsConfig.cmake","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-03T22:46:03Z","updated_at":"2022-08-05T15:19:36Z","closed_at":"2022-08-05T15:19:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I tested `0.7.2-rc1` and cmake files, such as `liboqsConfig.cmake`, are installed in `/usr/lib64/cmake/usr/lib64oqs`:\r\n```\r\n+ DESTDIR=/usr/src/tmp/liboqs-buildroot\r\n+ /usr/bin/ninja -j20 install -C build\r\n...\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsConfig.cmake\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsConfigVersion.cmake\r\n...\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsTargets.cmake\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsTargets-relwithdebinfo.cmake\r\n```\r\nPreviously they are correctly installed in `/usr/lib64/cmake/liboqs/liboqsConfig.cmake` under `DESTDIR`.\r\nIt seems that `liboqs` is expanded there to `/usr/lib64`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206575530","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1277#issuecomment-1206575530","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277","id":1206575530,"node_id":"IC_kwDOA-eq3c5H6uGq","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:19:36Z","updated_at":"2022-08-05T15:19:36Z","author_association":"CONTRIBUTOR","body":"Sorry for a delay.\r\n\r\n> \"Previously\" meaning version 0.7.1, or something more recent?\r\n\r\n`0.7.1` was installing correctly.\r\n\r\n> I changed this command:\r\n\r\nYes, sorry, it was `DESTDIR=/tmp/liboqs-buildroot ninja ... install ` but I was just copy pasting bash trace log (with `set -x` which `rpmbuild` shows), where it's shown as separate commands.\r\n\r\n> So the question to you, @vt-alt : How did you generate the ninja setup, i.e., which parameters did you pass to cmake? \r\n\r\nFollowing you questions I found mistake in our build script. We had a line `sed -i '\\!DESTINATION!s!lib!%_libdir!' src/CMakeLists.txt` which was intended to relocate `/usr/lib/cmake/liboqs` to `/usr/lib64/cmake/liboqs` (appropriate in our distribution) by replacing only first occurrence of `lib`, but in newer version of liboqs `src/CMakeLists.txt` introduced `CMAKE_INSTALL_LIBDIR` and `sed` replaces incorrectly second occurrence of `lib` causing such install error.\r\n\r\nI am very sorry for the false alarm!\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206575530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:19:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23284854004","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1277","id":1327863029,"node_id":"I_kwDOA-eq3c5PJZT1","number":1277,"title":"cmake file installed in wrong location: /usr/lib64/cmake/usr/lib64oqs/liboqsConfig.cmake","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T22:46:03Z","updated_at":"2022-08-05T15:26:10Z","closed_at":"2022-08-05T15:19:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I tested `0.7.2-rc1` and cmake files, such as `liboqsConfig.cmake`, are installed in `/usr/lib64/cmake/usr/lib64oqs`:\r\n```\r\n+ DESTDIR=/usr/src/tmp/liboqs-buildroot\r\n+ /usr/bin/ninja -j20 install -C build\r\n...\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsConfig.cmake\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsConfigVersion.cmake\r\n...\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsTargets.cmake\r\n-- Installing: /usr/src/tmp/liboqs-buildroot/usr/lib64/cmake/usr/lib64oqs/liboqsTargets-relwithdebinfo.cmake\r\n```\r\nPreviously they are correctly installed in `/usr/lib64/cmake/liboqs/liboqsConfig.cmake` under `DESTDIR`.\r\nIt seems that `liboqs` is expanded there to `/usr/lib64`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206581717","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1277#issuecomment-1206581717","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1277","id":1206581717,"node_id":"IC_kwDOA-eq3c5H6vnV","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:26:10Z","updated_at":"2022-08-05T15:26:10Z","author_association":"CONTRIBUTOR","body":"Just to confirm, when I removed that `sed` line from our build script it how installs correctly to `/usr/lib64/cmake/liboqs`.\r\nThanks for the help!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206581717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:26:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23284903691","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","id":1302262669,"node_id":"PR_kwDOA-eq3c47RltC","number":1254,"title":"pqclean_hqc: Fix build on GCC-12","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2022-07-12T16:00:28Z","updated_at":"2022-08-05T15:28:51Z","closed_at":"2022-07-25T20:22:02Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.patch","merged_at":"2022-07-25T20:22:02Z"},"body":"Make index variable `i` immediate by unrolling the loop. This is just lucky guess that's worked, because similar in function intrinsic `_mm256_extract_epi16` requires immediate value for its index.\r\n\r\nWorkaround to the (perhaps) GCC 12 bug:\r\n```\r\n  In function 'find_peaks',\r\n      inlined from 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode' at /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:387:18:\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:336:44: error: 'tmp' is used uninitialized [-Werror=uninitialized]\r\n    336 |         result |= mask & ((uint16_t *)&tmp)[i];\r\n\t|                          ~~~~~~~~~~~~~~~~~~^~~\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c: In function 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode':\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:234:13: note: 'tmp' was declared here\r\n    234 |     __m256i tmp = _mm256_setzero_si256();\r\n\t|             ^~~\r\n```\r\nIf LTO is enabled this error message is not shown, but HQC-128 decaps test is failed.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAs discussed at https://github.com/open-quantum-safe/liboqs/issues/1244\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1244\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\nNo such changes.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nTested locally on `0.7.1`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206584283","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254#issuecomment-1206584283","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","id":1206584283,"node_id":"IC_kwDOA-eq3c5H6wPb","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:28:51Z","updated_at":"2022-08-05T15:28:51Z","author_association":"MEMBER","body":"> Yes seems possible. Perhaps rebase and merge is better.\r\n\r\nRebasing before merging ensures that conflicts are handled in the branch before the merge takes place, but would still mean all the commits on the branch are copied one-by-one into main. We prefer to have just a single commit on main for each pull request, regardless of how many commits were done during the development of the PR on its own branch -- that's what squashing gives us.  I realize that squashing the commit history loses who authored which individual commits. Github tries to mitigate this by including some additional information on the comments, but I don't know of a better way of dealing with this at the moment.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206584283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:28:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23284963283","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","id":1302262669,"node_id":"PR_kwDOA-eq3c47RltC","number":1254,"title":"pqclean_hqc: Fix build on GCC-12","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-07-12T16:00:28Z","updated_at":"2022-08-05T15:32:08Z","closed_at":"2022-07-25T20:22:02Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1254.patch","merged_at":"2022-07-25T20:22:02Z"},"body":"Make index variable `i` immediate by unrolling the loop. This is just lucky guess that's worked, because similar in function intrinsic `_mm256_extract_epi16` requires immediate value for its index.\r\n\r\nWorkaround to the (perhaps) GCC 12 bug:\r\n```\r\n  In function 'find_peaks',\r\n      inlined from 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode' at /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:387:18:\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:336:44: error: 'tmp' is used uninitialized [-Werror=uninitialized]\r\n    336 |         result |= mask & ((uint16_t *)&tmp)[i];\r\n\t|                          ~~~~~~~~~~~~~~~~~~^~~\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c: In function 'PQCLEAN_HQCRMRS192_AVX2_reed_muller_decode':\r\n  /usr/src/RPM/BUILD/liboqs-0.7.1/src/kem/hqc/pqclean_hqc-rmrs-192_avx2/reed_muller.c:234:13: note: 'tmp' was declared here\r\n    234 |     __m256i tmp = _mm256_setzero_si256();\r\n\t|             ^~~\r\n```\r\nIf LTO is enabled this error message is not shown, but HQC-128 decaps test is failed.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAs discussed at https://github.com/open-quantum-safe/liboqs/issues/1244\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1244\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\nNo such changes.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nTested locally on `0.7.1`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206587324","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1254#issuecomment-1206587324","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1254","id":1206587324,"node_id":"IC_kwDOA-eq3c5H6w-8","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:32:07Z","updated_at":"2022-08-05T15:32:07Z","author_association":"CONTRIBUTOR","body":"Yes, if you want squashing perhaps there is no fix.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206587324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:32:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23284999816","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279","id":1329351397,"node_id":"I_kwDOA-eq3c5PPErl","number":1279,"title":"Dilithium AVX failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T02:02:51Z","due_on":null,"closed_at":null},"comments":4,"created_at":"2022-08-05T02:02:46Z","updated_at":"2022-08-05T15:34:11Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Dlithium's AVX code is failing them. We previously had suppression files in `tests/constant_time/kem/passes/dilithium*` but something must have changed in the Dliithium implementation that makes those suppressions no longer match.\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\ncmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,sntru*,ntru*,LightSaber,Saber,FireSaber,Falcon*,picnic*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file [dilithium_failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264650/dilithium_failures.txt), with a few excerpts below:\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/dilithium --suppressions=tests/constant_time/sig/passes/dilithium-avx2 --suppressions=tests/constant_time/sig/passes/dilithium-aarch64 ./build/tests/test_sig Dilithium2\r\n==13982== Memcheck, a memory error detector\r\n==13982== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==13982== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==13982== Command: ./build/tests/test_sig Dilithium2\r\n==13982== \r\n==13982== Thread 2:\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EA8D: pqcrystals_dilithium2_avx2_signature (sign.c:290)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EB90: pqcrystals_dilithium2_avx2_signature (sign.c:305)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EC8C: pqcrystals_dilithium2_avx2_signature (sign.c:317)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x48429FA: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B6E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A11: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A20: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B08: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B0E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B33: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B3F: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842ABC: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842AD9: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AE4: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AFD: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B30: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B60: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B63: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206589163","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279#issuecomment-1206589163","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","id":1206589163,"node_id":"IC_kwDOA-eq3c5H6xbr","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:34:10Z","updated_at":"2022-08-05T15:34:10Z","author_association":"MEMBER","body":"> I'm reluctant to just blindly change things without understanding the code.\r\n\r\nMe too :-) My suggestion actually was for @bhess to do this if this truly was an omission in #1221. But then again, if he's not available for the next few weeks, what about doing the release with the caveat that dilithium isn't fully tested? Combined with the caveat that Sphincs is not at the latest code version (see [release text discussion](https://github.com/open-quantum-safe/liboqs/discussions/1276#discussioncomment-3334829)).\r\n\r\nFor the future, maybe we should run the full valgrind test suite whenever any change in `src/kem` or `src/sig` occurs and not only at release?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206589163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:34:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23285123448","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-03T16:14:21Z","updated_at":"2022-08-05T15:41:11Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206595218","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1206595218","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1206595218,"node_id":"IC_kwDOA-eq3c5H6y6S","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:41:11Z","updated_at":"2022-08-05T15:41:11Z","author_association":"MEMBER","body":"> I've added the newlines at EOF\r\n\r\nThanks.\r\n\r\n> XMSS-keygen is incredibly slow, and it takes about 40 minutes total for all the variants to be tested.\r\n\r\nAll right -- is it then possible to create a \"lightweight\" (CI-only) test, maybe not running all variants but \"key\" ones (whatever that means)? We similarly [skip some ultra-slow tests in \"standard CI\"](https://github.com/open-quantum-safe/liboqs/blob/3cf9849cc43545ad7fdeb3092a90f94ff1881680/tests/helpers.py#L115) but can run them locally (or at release).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206595218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:41:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23285240261","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278","id":1329338089,"node_id":"I_kwDOA-eq3c5PPBbp","number":1278,"title":"Picnic failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"assignees":[{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T02:02:51Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2022-08-05T01:34:40Z","updated_at":"2022-08-05T15:47:48Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Picnic is failing them. It seems all Picnic variants fail.  We previously had suppression files in `tests/constant_time/sig/passes/picnic` and `.../picnic3` but something must have changed in the Picnic implementation that makes those suppressions no longer match.\r\n[failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264526/failures.txt)\r\n\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,stru*,ntru*,LightSaber,Saber,FireSaber,Dilithium*,Falcon*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file, with a few excerpts below\r\n\r\n## Example for picnic_L1_FS\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic ./build/tests/test_sig picnic_L1_FS\r\n==4665== Memcheck, a memory error detector\r\n==4665== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4665== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4665== Command: ./build/tests/test_sig picnic_L1_FS\r\n==4665== \r\n==4665== Thread 2:\r\n==4665== Conditional jump or move depends on uninitialised value(s)\r\n==4665==    at 0x115EF0: oqs_sig_picnic_picnic_impl_sign (picnic_impl.c:1146)\r\n==4665==    by 0x1111C6: oqs_sig_picnic_sign (picnic.c:251)\r\n==4665==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4665==    by 0x10F8F3: OQS_SIG_picnic_L1_FS_sign (sig_picnic.c:149)\r\n==4665==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4665==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4665==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4665==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4665==    by 0x4C6A132: clone (clone.S:95)\r\n==4665== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_picnic_impl_sign\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic_L1_FS_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```\r\n\r\n## Example for picnic3_L1\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic3 ./build/tests/test_sig picnic3_L1\r\n==4683== Memcheck, a memory error detector\r\n==4683== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4683== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4683== Command: ./build/tests/test_sig picnic3_L1\r\n==4683== \r\n==4683== Thread 2:\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11B45D: sign_picnic3 (picnic3_impl.c:683)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118ECF: contains (picnic3_impl.c:201)\r\n==4683==    by 0x11B909: sign_picnic3 (picnic3_impl.c:740)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:contains\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118F28: indexOf (picnic3_impl.c:210)\r\n==4683==    by 0x11B96F: sign_picnic3 (picnic3_impl.c:742)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:indexOf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BB87: sign_picnic3 (picnic3_impl.c:753)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x11BCA5: sign_picnic3 (picnic3_impl.c:758)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BD18: sign_picnic3 (picnic3_impl.c:762)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BE97: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x22AC63: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:126)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B0B5: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:149)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B101: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:150)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BDC6: sign_picnic3 (picnic3_impl.c:763)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206601176","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278#issuecomment-1206601176","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","id":1206601176,"node_id":"IC_kwDOA-eq3c5H60XY","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:47:48Z","updated_at":"2022-08-05T15:47:48Z","author_association":"MEMBER","body":"> I can update the suppression files.\r\n\r\nThanks! Will you do this in the PR landing the local changes from @sebastinas or separately?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206601176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:47:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23285349148","type":"IssueCommentEvent","actor":{"id":114613,"login":"sebastinas","display_login":"sebastinas","gravatar_id":"","url":"https://api.github.com/users/sebastinas","avatar_url":"https://avatars.githubusercontent.com/u/114613?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280","id":1330104926,"node_id":"PR_kwDOA-eq3c48uiSh","number":1280,"title":"Update to Picnic 3.0.17","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-05T15:52:13Z","updated_at":"2022-08-05T15:54:10Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1280","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1280.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1280.patch","merged_at":null},"body":"This is the Picnic update for #1278.\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206606694","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280#issuecomment-1206606694","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280","id":1206606694,"node_id":"IC_kwDOA-eq3c5H61tm","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:54:10Z","updated_at":"2022-08-05T15:54:10Z","author_association":"CONTRIBUTOR","body":"@christianpaquin Unless I am missing something, the following update should be sufficient for the suppression files. Please double check.\r\n\r\n```\r\ndiff --git a/tests/constant_time/sig/passes/picnic b/tests/constant_time/sig/passes/picnic\r\nindex 2b6b9fd8..bb70481e 100644\r\n--- a/tests/constant_time/sig/passes/picnic\r\n+++ b/tests/constant_time/sig/passes/picnic\r\n@@ -1,3 +1,9 @@\r\n+{\r\n+   The return value of \"timingsafe_bcmp\" is declassified\r\n+   Memcheck:Cond\r\n+   fun:oqs_sig_picnic_picnic_impl_sign\r\n+   fun:oqs_sig_picnic_sign\r\n+}\r\n {\r\n    Public, declassified hash\r\n    Memcheck:Cond\r\ndiff --git a/tests/constant_time/sig/passes/picnic3 b/tests/constant_time/sig/passes/picnic3\r\nindex f2c7b192..62483a53 100644\r\n--- a/tests/constant_time/sig/passes/picnic3\r\n+++ b/tests/constant_time/sig/passes/picnic3\r\n@@ -49,7 +49,7 @@\r\n    fun:keccak_inc_absorb\r\n    fun:OQS_SHA3_shake*_inc_absorb\r\n    fun:hash_update\r\n-   src:picnic3_impl.c:106 # fun:commit\r\n+   src:picnic3_impl.c:109 # fun:commit\r\n    fun:sign_picnic3\r\n }\r\n {\r\n@@ -60,23 +60,14 @@\r\n    fun:keccak_inc_absorb\r\n    fun:OQS_SHA3_shake*_inc_absorb\r\n    fun:hash_update\r\n-   src:picnic3_impl.c:106 # fun:commit\r\n-   fun:sign_picnic3\r\n-}\r\n-{\r\n-   use of unitialized value (hash context init in commit)\r\n-   Memcheck:Value8\r\n-   fun:KeccakP1600_AddBytes\r\n-   fun:OQS_SHA3_shake*_inc_absorb\r\n-   fun:hash_update\r\n-   src:picnic3_impl.c:106 # fun:commit\r\n+   src:picnic3_impl.c:109 # fun:commit\r\n    fun:sign_picnic3\r\n }\r\n {\r\n    challengeC is declassified\r\n    Memcheck:Cond\r\n    fun:contains\r\n-   src:picnic3_impl.c:673 # fun:sign_picnic3\r\n+   fun:sign_picnic3\r\n    fun:oqs_sig_picnic_impl_sign_picnic3\r\n    fun:oqs_sig_picnic_sign\r\n }\r\n@@ -84,28 +75,28 @@\r\n    challengeC is declassified\r\n    Memcheck:Cond\r\n    fun:indexOf\r\n-   src:picnic3_impl.c:675 # fun:sign_picnic3\r\n+   src:picnic3_impl.c:741 # fun:sign_picnic3\r\n    fun:oqs_sig_picnic_impl_sign_picnic3\r\n    fun:oqs_sig_picnic_sign\r\n }\r\n {\r\n    challengeP is declassified\r\n    Memcheck:Cond\r\n-   src:picnic3_impl.c:686 # fun:sign_picnic3\r\n+   src:picnic3_impl.c:752 # fun:sign_picnic3\r\n    fun:oqs_sig_picnic_impl_sign_picnic3\r\n    fun:oqs_sig_picnic_sign\r\n }\r\n {\r\n    challengeP is declassified\r\n    Memcheck:Value8\r\n-   src:picnic3_impl.c:691 # fun:sign_picnic3\r\n+   src:picnic3_impl.c:757 # fun:sign_picnic3\r\n    fun:oqs_sig_picnic_impl_sign_picnic3\r\n    fun:oqs_sig_picnic_sign\r\n }\r\n {\r\n    Index of the unopened party is declassified\r\n    Memcheck:Cond\r\n-   src:picnic3_impl.c:695 # fun:sign_picnic3\r\n+   src:picnic3_impl.c:761 # fun:sign_picnic3\r\n    fun:oqs_sig_picnic_impl_sign_picnic3\r\n    fun:oqs_sig_picnic_sign\r\n }\r\n@@ -113,15 +104,7 @@\r\n    Index of the unopened party is declassified\r\n    Memcheck:Cond\r\n    fun:oqs_sig_picnic_getLeaf\r\n-   src:picnic3_impl.c:696 # fun:sign_picnic3\r\n-   fun:oqs_sig_picnic_impl_sign_picnic3\r\n-   fun:oqs_sig_picnic_sign\r\n-}\r\n-{\r\n-   Index of the unopened party is declassified\r\n-   Memcheck:Value8\r\n-   fun:oqs_sig_picnic_getLeaf\r\n-   src:picnic3_impl.c:696 # fun:sign_picnic3\r\n+   src:picnic3_impl.c:762 # fun:sign_picnic3\r\n    fun:oqs_sig_picnic_impl_sign_picnic3\r\n    fun:oqs_sig_picnic_sign\r\n }\r\n@@ -129,15 +112,7 @@\r\n    Index of the unopened party is declassified\r\n    Memcheck:Cond\r\n    fun:oqs_sig_picnic_getLeaf\r\n-   src:picnic3_impl.c:699 # fun:sign_picnic3\r\n-   fun:oqs_sig_picnic_impl_sign_picnic3\r\n-   fun:oqs_sig_picnic_sign\r\n-}\r\n-{\r\n-   Index of the unopened party is declassified\r\n-   Memcheck:Value8\r\n-   fun:oqs_sig_picnic_getLeaf\r\n-   src:picnic3_impl.c:699 # fun:sign_picnic3\r\n+   src:picnic3_impl.c:765 # fun:sign_picnic3\r\n    fun:oqs_sig_picnic_impl_sign_picnic3\r\n    fun:oqs_sig_picnic_sign\r\n }\r\n@@ -152,8 +127,7 @@\r\n {\r\n    The return value of \"timingsafe_bcmp\" is declassified\r\n    Memcheck:Cond\r\n-   src:picnic3_simulate.c.i:44 # fun:lowmc_simulate_online_s128_129_43\r\n-   fun:sign_picnic3\r\n+   src:picnic3_impl.c:682 # fun:sign_picnic3\r\n    fun:oqs_sig_picnic_impl_sign_picnic3\r\n    fun:oqs_sig_picnic_sign\r\n }\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206606694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:54:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23285393718","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279","id":1329351397,"node_id":"I_kwDOA-eq3c5PPErl","number":1279,"title":"Dilithium AVX failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":3,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T15:53:00Z","due_on":null,"closed_at":null},"comments":5,"created_at":"2022-08-05T02:02:46Z","updated_at":"2022-08-05T15:56:46Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Dlithium's AVX code is failing them. We previously had suppression files in `tests/constant_time/kem/passes/dilithium*` but something must have changed in the Dliithium implementation that makes those suppressions no longer match.\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\ncmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,sntru*,ntru*,LightSaber,Saber,FireSaber,Falcon*,picnic*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file [dilithium_failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264650/dilithium_failures.txt), with a few excerpts below:\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/dilithium --suppressions=tests/constant_time/sig/passes/dilithium-avx2 --suppressions=tests/constant_time/sig/passes/dilithium-aarch64 ./build/tests/test_sig Dilithium2\r\n==13982== Memcheck, a memory error detector\r\n==13982== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==13982== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==13982== Command: ./build/tests/test_sig Dilithium2\r\n==13982== \r\n==13982== Thread 2:\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EA8D: pqcrystals_dilithium2_avx2_signature (sign.c:290)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EB90: pqcrystals_dilithium2_avx2_signature (sign.c:305)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EC8C: pqcrystals_dilithium2_avx2_signature (sign.c:317)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x48429FA: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B6E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A11: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A20: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B08: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B0E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B33: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B3F: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842ABC: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842AD9: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AE4: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AFD: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B30: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B60: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B63: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206608876","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279#issuecomment-1206608876","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","id":1206608876,"node_id":"IC_kwDOA-eq3c5H62Ps","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T15:56:45Z","updated_at":"2022-08-05T15:56:45Z","author_association":"MEMBER","body":"> > I'm reluctant to just blindly change things without understanding the code.\r\n> \r\n> Me too :-) My suggestion actually was for @bhess to do this if this truly was an omission in #1221. But then again, if he's not available for the next few weeks, what about doing the release with the caveat that dilithium isn't fully tested? Combined with the caveat that Sphincs is not at the latest code version (see [release text discussion](https://github.com/open-quantum-safe/liboqs/discussions/1276#discussioncomment-3334829)).\r\n\r\nHmm... yes we might have to proceed without resolving this until Basil returns.\r\n\r\n> For the future, maybe we should run the full valgrind test suite whenever any change in `src/kem` or `src/sig` occurs and not only at release?\r\n\r\nThe constant time tests should be run weekly according to https://github.com/open-quantum-safe/liboqs/blob/main/.github/workflows/weekly.yml, but maybe we've got the configuration wrong or maybe we've just been ignoring the results...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206608876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T15:56:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23285820541","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280","id":1330104926,"node_id":"PR_kwDOA-eq3c48uiSh","number":1280,"title":"Update to Picnic 3.0.17","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T15:52:13Z","updated_at":"2022-08-05T16:22:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1280","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1280.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1280.patch","merged_at":null},"body":"This is the Picnic update for #1278.\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206630926","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280#issuecomment-1206630926","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280","id":1206630926,"node_id":"IC_kwDOA-eq3c5H67oO","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T16:22:21Z","updated_at":"2022-08-05T16:22:21Z","author_association":"CONTRIBUTOR","body":"> @christianpaquin Unless I am missing something, the following update should be sufficient for the suppression files. Please double check.\r\n\r\nI typically update the suppression files using the suggested output of the tool, so if that's what you did it should be good.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206630926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T16:22:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23285836891","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278","id":1329338089,"node_id":"I_kwDOA-eq3c5PPBbp","number":1278,"title":"Picnic failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"assignees":[{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":3,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T15:53:00Z","due_on":null,"closed_at":null},"comments":5,"created_at":"2022-08-05T01:34:40Z","updated_at":"2022-08-05T16:23:21Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Picnic is failing them. It seems all Picnic variants fail.  We previously had suppression files in `tests/constant_time/sig/passes/picnic` and `.../picnic3` but something must have changed in the Picnic implementation that makes those suppressions no longer match.\r\n[failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264526/failures.txt)\r\n\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,stru*,ntru*,LightSaber,Saber,FireSaber,Dilithium*,Falcon*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file, with a few excerpts below\r\n\r\n## Example for picnic_L1_FS\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic ./build/tests/test_sig picnic_L1_FS\r\n==4665== Memcheck, a memory error detector\r\n==4665== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4665== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4665== Command: ./build/tests/test_sig picnic_L1_FS\r\n==4665== \r\n==4665== Thread 2:\r\n==4665== Conditional jump or move depends on uninitialised value(s)\r\n==4665==    at 0x115EF0: oqs_sig_picnic_picnic_impl_sign (picnic_impl.c:1146)\r\n==4665==    by 0x1111C6: oqs_sig_picnic_sign (picnic.c:251)\r\n==4665==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4665==    by 0x10F8F3: OQS_SIG_picnic_L1_FS_sign (sig_picnic.c:149)\r\n==4665==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4665==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4665==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4665==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4665==    by 0x4C6A132: clone (clone.S:95)\r\n==4665== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_picnic_impl_sign\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic_L1_FS_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```\r\n\r\n## Example for picnic3_L1\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/picnic3 ./build/tests/test_sig picnic3_L1\r\n==4683== Memcheck, a memory error detector\r\n==4683== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==4683== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==4683== Command: ./build/tests/test_sig picnic3_L1\r\n==4683== \r\n==4683== Thread 2:\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11B45D: sign_picnic3 (picnic3_impl.c:683)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118ECF: contains (picnic3_impl.c:201)\r\n==4683==    by 0x11B909: sign_picnic3 (picnic3_impl.c:740)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:contains\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x118F28: indexOf (picnic3_impl.c:210)\r\n==4683==    by 0x11B96F: sign_picnic3 (picnic3_impl.c:742)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:indexOf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BB87: sign_picnic3 (picnic3_impl.c:753)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x11BCA5: sign_picnic3 (picnic3_impl.c:758)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x11BD18: sign_picnic3 (picnic3_impl.c:762)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BE97: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x22AC63: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:126)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B0B5: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:149)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Use of uninitialised value of size 8\r\n==4683==    at 0x22B101: KeccakP1600_AddLanes (KeccakP-1600-opt64.c:150)\r\n==4683==    by 0x22B1F0: KeccakP1600_AddBytes (KeccakP-1600-opt64.c:190)\r\n==4683==    by 0x180D35: keccak_inc_absorb (xkcp_sha3.c:133)\r\n==4683==    by 0x181541: OQS_SHA3_shake128_inc_absorb (xkcp_sha3.c:323)\r\n==4683==    by 0x117D48: hash_update (kdf_shake.h:72)\r\n==4683==    by 0x11878C: commit (picnic3_impl.c:109)\r\n==4683==    by 0x11BEE7: sign_picnic3 (picnic3_impl.c:766)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:KeccakP1600_AddLanes\r\n   fun:KeccakP1600_AddBytes\r\n   fun:keccak_inc_absorb\r\n   fun:OQS_SHA3_shake128_inc_absorb\r\n   fun:hash_update\r\n   fun:commit\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==4683== Conditional jump or move depends on uninitialised value(s)\r\n==4683==    at 0x128A04: oqs_sig_picnic_getLeaf (picnic3_tree.c:193)\r\n==4683==    by 0x11BDC6: sign_picnic3 (picnic3_impl.c:763)\r\n==4683==    by 0x11CE2C: oqs_sig_picnic_impl_sign_picnic3 (picnic3_impl.c:995)\r\n==4683==    by 0x111100: oqs_sig_picnic_sign (picnic.c:233)\r\n==4683==    by 0x10F6E5: common_picnic_sign (sig_picnic.c:97)\r\n==4683==    by 0x1105BF: OQS_SIG_picnic3_L1_sign (sig_picnic.c:499)\r\n==4683==    by 0x10F3EA: OQS_SIG_sign (sig.c:872)\r\n==4683==    by 0x10D1A3: sig_test_correctness (test_sig.c:95)\r\n==4683==    by 0x10D718: test_wrapper (test_sig.c:179)\r\n==4683==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==4683==    by 0x4C6A132: clone (clone.S:95)\r\n==4683== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:oqs_sig_picnic_getLeaf\r\n   fun:sign_picnic3\r\n   fun:oqs_sig_picnic_impl_sign_picnic3\r\n   fun:oqs_sig_picnic_sign\r\n   fun:common_picnic_sign\r\n   fun:OQS_SIG_picnic3_L1_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206631670","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1278#issuecomment-1206631670","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1278","id":1206631670,"node_id":"IC_kwDOA-eq3c5H67z2","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T16:23:20Z","updated_at":"2022-08-05T16:23:20Z","author_association":"CONTRIBUTOR","body":"> > I can update the suppression files.\r\n> \r\n> Thanks! Will you do this in the PR landing the local changes from @sebastinas or separately?\r\n\r\nLooks like @sebastinas is already on top of things in #1280.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206631670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T16:23:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23286367282","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279","id":1329351397,"node_id":"I_kwDOA-eq3c5PPErl","number":1279,"title":"Dilithium AVX failing constant time tests","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":3,"closed_issues":18,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-08-05T15:53:00Z","due_on":null,"closed_at":null},"comments":6,"created_at":"2022-08-05T02:02:46Z","updated_at":"2022-08-05T16:57:13Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"In preparation for the 0.7.2 release, I ran the Valgrind constant time tests. Dlithium's AVX code is failing them. We previously had suppression files in `tests/constant_time/kem/passes/dilithium*` but something must have changed in the Dliithium implementation that makes those suppressions no longer match.\r\n\r\nTo reproduce:\r\n```bash\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\ncmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Classic*,Frodo*,HQC*,Kyber*,NTRU*,sntru*,ntru*,LightSaber,Saber,FireSaber,Falcon*,picnic*,Rainbow*,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThis yields the output in the attached file [dilithium_failures.txt](https://github.com/open-quantum-safe/liboqs/files/9264650/dilithium_failures.txt), with a few excerpts below:\r\n\r\n```\r\n. > valgrind --tool=memcheck --gen-suppressions=all --error-exitcode=1 --max-stackframe=20480000 --num-callers=20 --suppressions=tests/constant_time/sig/passes/dilithium --suppressions=tests/constant_time/sig/passes/dilithium-avx2 --suppressions=tests/constant_time/sig/passes/dilithium-aarch64 ./build/tests/test_sig Dilithium2\r\n==13982== Memcheck, a memory error detector\r\n==13982== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==13982== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==13982== Command: ./build/tests/test_sig Dilithium2\r\n==13982== \r\n==13982== Thread 2:\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EA8D: pqcrystals_dilithium2_avx2_signature (sign.c:290)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EB90: pqcrystals_dilithium2_avx2_signature (sign.c:305)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x12EC8C: pqcrystals_dilithium2_avx2_signature (sign.c:317)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x48429FA: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B6E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A11: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A20: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B08: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B0E: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B33: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B3F: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842B55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842A55: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842ABC: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842AD9: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AE4: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Conditional jump or move depends on uninitialised value(s)\r\n==13982==    at 0x4842AFD: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B30: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B60: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n==13982== Use of uninitialised value of size 8\r\n==13982==    at 0x4842B63: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==13982==    by 0x12ECBA: pqcrystals_dilithium2_avx2_signature (sign.c:321)\r\n==13982==    by 0x12E09E: OQS_SIG_dilithium_2_sign (sig_dilithium_2.c:79)\r\n==13982==    by 0x10E16F: OQS_SIG_sign (sig.c:872)\r\n==13982==    by 0x10BEDB: sig_test_correctness (test_sig.c:95)\r\n==13982==    by 0x10C450: test_wrapper (test_sig.c:179)\r\n==13982==    by 0x4B30608: start_thread (pthread_create.c:477)\r\n==13982==    by 0x4C6A132: clone (clone.S:95)\r\n==13982== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Value8\r\n   fun:memmove\r\n   fun:pqcrystals_dilithium2_avx2_signature\r\n   fun:OQS_SIG_dilithium_2_sign\r\n   fun:OQS_SIG_sign\r\n   fun:sig_test_correctness\r\n   fun:test_wrapper\r\n   fun:start_thread\r\n   fun:clone\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206659961","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1279#issuecomment-1206659961","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1279","id":1206659961,"node_id":"IC_kwDOA-eq3c5H7Ct5","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T16:57:13Z","updated_at":"2022-08-05T16:57:13Z","author_association":"MEMBER","body":"> maybe we've just been ignoring the results...\r\n\r\n\"Hopefully\": I kind of assumed we're getting email notifications if sth fails there. Now I'm wondering where one can look it up manually (?) -- and whether it's possible to add to the [dashboard](https://openquantumsafe.org/dashboard.html).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206659961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T16:57:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23287330312","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280","id":1330104926,"node_id":"PR_kwDOA-eq3c48uiSh","number":1280,"title":"Update to Picnic 3.0.17","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T15:52:13Z","updated_at":"2022-08-05T18:01:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1280","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1280.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1280.patch","merged_at":null},"body":"This is the Picnic update for #1278.\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206710891","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280#issuecomment-1206710891","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280","id":1206710891,"node_id":"IC_kwDOA-eq3c5H7PJr","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T18:01:48Z","updated_at":"2022-08-05T18:01:48Z","author_association":"CONTRIBUTOR","body":"Ran this branch locally and I still see the errors\r\n```\r\ntests/test_constant_time.py::test_constant_time_sig[picnic_L1_FS] FAILED                                                     [ 42%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic_L1_UR] FAILED                                                     [ 43%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic_L1_full] FAILED                                                   [ 44%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic_L3_FS] FAILED                                                     [ 45%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic_L3_UR] FAILED                                                     [ 46%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic_L3_full] FAILED                                                   [ 47%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic_L5_FS] FAILED                                                     [ 48%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic_L5_UR] FAILED                                                     [ 49%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic_L5_full] FAILED                                                   [ 50%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic3_L1] FAILED                                                       [ 50%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic3_L3] FAILED                                                       [ 51%]\r\ntests/test_constant_time.py::test_constant_time_sig[picnic3_L5] FAILED                                                       [ 52%]\r\n```\r\n\r\nI'll take a look at the updated exclusion files.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206710891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T18:01:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23288454949","type":"IssueCommentEvent","actor":{"id":25700338,"login":"kj3moraes","display_login":"kj3moraes","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","avatar_url":"https://avatars.githubusercontent.com/u/25700338?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-08-03T16:14:21Z","updated_at":"2022-08-05T19:18:49Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206783977","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1206783977","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1206783977,"node_id":"IC_kwDOA-eq3c5H7g_p","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T19:18:49Z","updated_at":"2022-08-05T19:18:49Z","author_association":"COLLABORATOR","body":"> All right -- is it then possible to create a \"lightweight\" (CI-only) test, maybe not running all variants but \"key\" ones (whatever that means)? We similarly [skip some ultra-slow tests in \"standard CI\"](https://github.com/open-quantum-safe/liboqs/blob/3cf9849cc43545ad7fdeb3092a90f94ff1881680/tests/helpers.py#L115) but can run them locally (or at release).\r\n\r\nYes, maybe we could do select variants and exclude the slow ones. However, I don't know how to exclude certain variants from being tested. The ones I would exclude are : \r\n1. all the SHAKE variants\r\n2. XMSS-SHA2_16_512 and XMSS-SHA2_20_512\r\n3. XMSSMT-SHA2_60/*_256 variants \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206783977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T19:18:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23289972718","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280","id":1330104926,"node_id":"PR_kwDOA-eq3c48uiSh","number":1280,"title":"Update to Picnic 3.0.17","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-08-05T15:52:13Z","updated_at":"2022-08-05T21:17:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1280","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1280.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1280.patch","merged_at":null},"body":"This is the Picnic update for #1278.\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206873896","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1280#issuecomment-1206873896","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1280","id":1206873896,"node_id":"IC_kwDOA-eq3c5H728o","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2022-08-05T21:17:16Z","updated_at":"2022-08-05T21:17:16Z","author_association":"CONTRIBUTOR","body":"I've updated the valgrind constant time exceptions on this PR (feel free to document them better, @sebastinas). The `python3 tests/test_constant_time.py  --verbose` test passes on my machine.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1206873896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-08-05T21:17:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
