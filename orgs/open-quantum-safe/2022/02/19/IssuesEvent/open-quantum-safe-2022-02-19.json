{"id":"20350935738","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/129","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/129/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/129/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/129/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/129","id":1143767985,"node_id":"I_kwDODP--n85ELIOx","number":129,"title":"QUIC docker execution error","user":{"login":"prchander","id":54725951,"node_id":"MDQ6VXNlcjU0NzI1OTUx","avatar_url":"https://avatars.githubusercontent.com/u/54725951?v=4","gravatar_id":"","url":"https://api.github.com/users/prchander","html_url":"https://github.com/prchander","followers_url":"https://api.github.com/users/prchander/followers","following_url":"https://api.github.com/users/prchander/following{/other_user}","gists_url":"https://api.github.com/users/prchander/gists{/gist_id}","starred_url":"https://api.github.com/users/prchander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prchander/subscriptions","organizations_url":"https://api.github.com/users/prchander/orgs","repos_url":"https://api.github.com/users/prchander/repos","events_url":"https://api.github.com/users/prchander/events{/privacy}","received_events_url":"https://api.github.com/users/prchander/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-02-18T20:59:39Z","updated_at":"2022-02-19T08:00:07Z","closed_at":"2022-02-19T08:00:07Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, \r\n\r\nI am trying to install the QUIC docker server and client for testing purposes. I am having issues with the Docker client execution. \r\n\r\nError: \r\n\r\nmake[2]: Leaving directory '/root/msquic/build/linux/x64_openssl'\r\n[ 98%] Built target msquictest\r\nmake[1]: Leaving directory '/root/msquic/build/linux/x64_openssl'\r\nmake: *** [Makefile:141: all] Error 2\r\nCMake-Execute: /root/msquic/scripts/build.ps1:449\r\nLine |\r\n 449 |      CMake-Execute $Arguments\r\n     |      ~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | [02/18/2022 21:42:39] CMake exited with status code 2\r\n\r\nThe command '/bin/sh -c pwsh /root/msquic/scripts/build.ps1 -Config Debug -Arch x64 -Tls openssl' returned a non-zero code: 1\r\n\r\n\r\n\r\nI have seen this error on msquic's website and they ask to use: git submodule update --init --recursive\r\nNot sure exactly where in the client code to add this. \r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/129/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-02-19T08:00:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20350950550","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/119","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/119/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/119/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/119/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/119","id":1100688704,"node_id":"I_kwDODP--n85Bmy1A","number":119,"title":"Suggestions to support another solution for a demo","user":{"login":"Utopiah","id":1076655,"node_id":"MDQ6VXNlcjEwNzY2NTU=","avatar_url":"https://avatars.githubusercontent.com/u/1076655?v=4","gravatar_id":"","url":"https://api.github.com/users/Utopiah","html_url":"https://github.com/Utopiah","followers_url":"https://api.github.com/users/Utopiah/followers","following_url":"https://api.github.com/users/Utopiah/following{/other_user}","gists_url":"https://api.github.com/users/Utopiah/gists{/gist_id}","starred_url":"https://api.github.com/users/Utopiah/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Utopiah/subscriptions","organizations_url":"https://api.github.com/users/Utopiah/orgs","repos_url":"https://api.github.com/users/Utopiah/repos","events_url":"https://api.github.com/users/Utopiah/events{/privacy}","received_events_url":"https://api.github.com/users/Utopiah/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-01-12T19:00:32Z","updated_at":"2022-02-19T08:02:55Z","closed_at":"2022-02-19T08:02:55Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I suppose the pattern to support liboqs is to\r\n\r\n1. identify where encrypted communication takes place in the code base\r\n2. in there identify how a specific algorithm is selected\r\n3. change, or better in the long run generalize, the selection of an algorithm\r\n4. rely on liboqs (direct use in C or current wrappers for C++ C# Rust Python Go or Java) to encrypt/decrypt messages or if available at a higher level (e.g oqs openssl or boringssl)\r\n5. verify that communication of messages encrypted through the new algorithm can get decrypted\r\n\r\nIf this is not correct what should be considered instead?\r\n\r\nThese is asked in terms of https://github.com/matrix-org/matrix-doc/issues/3516 to potentially demo https://github.com/matrix-org/synapse with oqs.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/119/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-02-19T08:02:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
