{"id":"20156918478","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/122","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/122/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/122/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/122/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/122","id":1128817056,"node_id":"I_kwDODP--n85DSGGg","number":122,"title":"Add QUIC support","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-02-09T17:17:15Z","updated_at":"2022-02-09T17:17:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Based on [work by Igor Barshteyn](https://www.linkedin.com/pulse/quic-protocol-quantum-safe-cryptography-presenting-future-igor/) create a demo integrating OQS crypto into QUIC in the form of 2 docker images:\r\n- server: quic-enabled nginx\r\n- client: msquic\r\n\r\nThe docker images shall support all plain and hybrid KEM and signature QSC algorithm combinations and run both in local docker networks as well as on cloud hosts permitting performance evaluation of all QSC algorithm (combinations).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/122/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-02-09T17:17:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20158387665","type":"IssuesEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/73","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/73/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/73/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/73/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/73","id":1027643762,"node_id":"I_kwDOCrBzOM49QJly","number":73,"title":"Session-out not writing to file ","user":{"login":"prchander","id":54725951,"node_id":"MDQ6VXNlcjU0NzI1OTUx","avatar_url":"https://avatars.githubusercontent.com/u/54725951?v=4","gravatar_id":"","url":"https://api.github.com/users/prchander","html_url":"https://github.com/prchander","followers_url":"https://api.github.com/users/prchander/followers","following_url":"https://api.github.com/users/prchander/following{/other_user}","gists_url":"https://api.github.com/users/prchander/gists{/gist_id}","starred_url":"https://api.github.com/users/prchander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prchander/subscriptions","organizations_url":"https://api.github.com/users/prchander/orgs","repos_url":"https://api.github.com/users/prchander/repos","events_url":"https://api.github.com/users/prchander/events{/privacy}","received_events_url":"https://api.github.com/users/prchander/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-10-15T17:18:11Z","updated_at":"2022-02-09T18:42:43Z","closed_at":"2022-02-09T18:42:43Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, I have a basic client and server that I was testing session resumption on.  The client had this code:\r\n~/oqs/boringssl/build/tool/bssl client -connect 10.0.0.2:44330 -session-out res.txt\r\n\r\nThe connection established but it does not write anything to the file. Am I doing something wrong with the file format?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/73/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/73/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-02-09T18:42:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20163120611","type":"IssuesEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/119","id":1129218580,"node_id":"I_kwDOBsoLV85DToIU","number":119,"title":"v8 branch pure-PQ KEMs do not use mpint representation for shared_secret in SSH KDF","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-02-09T23:57:50Z","updated_at":"2022-02-09T23:57:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When deriving the various keys in `kex_derive_keys`, the pure-PQ functions that handle encrypting and decrypting the shared secret, `kex_kem_generic_enc` and `kex_kem_generic_dec`, write only the shared secret data itself into the buffer that is later input to the KDF. They call `sshbuf_reserve` and pass a pointer directly into the buffer contents to `OQS_KEM_encaps` or `_decaps`. The SSH spec requires the shared secret input to the KDF to be in the mpint format, which has 4 bytes of length prepended to it. This causes the keys to be derived in a manner not compliant with the spec. In `kex_derive_keys`, `shared_secret` ends up being 16 bytes, for example, when it should be 20 (4 bytes length + 16 bytes secret).\r\n\r\nThe relevant code is at https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqs.c#L91-L98 for encrypting, and https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqs.c#L130-L135 for decrypting.\r\n\r\nThe v7.9 branch had this correct, and there's even a note calling it out at https://github.com/open-quantum-safe/openssh/blob/f41bbe652c522db1bec388f82db369e4e5f0f405/kexpqoqsc.c#L297-L310 and https://github.com/open-quantum-safe/openssh/blob/f41bbe652c522db1bec388f82db369e4e5f0f405/kexpqoqss.c#L282-L295. The shared secret data there is written into the buffer as an ssh_string, which prepends the same 4 bytes of length that makes it conform to the mpint format.\r\n\r\nAs an aside, I believe the hybrid case is correct, but I haven't been able to test it yet. `kex_kem_generic_with_ec_enc` and `kex_kem_generic_with_ec_dec` both write the shared secret to the relevant buffer with `sshbuf_put_string`, in the same way the v7.9 code does, and so the prepended length should be present. See https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqsecdh.c#L337-L343 and https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqsecdh.c#L262-L272.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-02-09T23:57:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
