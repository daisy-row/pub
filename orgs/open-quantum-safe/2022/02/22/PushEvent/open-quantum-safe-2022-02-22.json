{"id":"20387513313","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"push_id":9168226798,"size":1,"distinct_size":1,"ref":"refs/heads/mb-cms","head":"74b5437fd159c1fe150c4487ab4e9e26ab8eddc5","before":"0efb294d527cf865a40016d7d6283015366c0af9","commits":[{"sha":"74b5437fd159c1fe150c4487ab4e9e26ab8eddc5","author":{"email":"57787676+baentsch@users.noreply.github.com","name":"Michael"},"message":"correct CCI test script errors","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/commits/74b5437fd159c1fe150c4487ab4e9e26ab8eddc5"}]},"public":true,"created_at":"2022-02-22T08:42:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20400015941","type":"PushEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":397651453,"name":"open-quantum-safe/libssh","url":"https://api.github.com/repos/open-quantum-safe/libssh"},"payload":{"push_id":9174307272,"size":21,"distinct_size":1,"ref":"refs/heads/OQS-master","head":"1ae123502cef2864c55d2cf30f7d975b3fd3eee6","before":"70e4265bff52d60597e6a3aac0260d1b550ae451","commits":[{"sha":"3aab92c81763a8c80f9387163f3a10f6f73a59b2","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Add mention of OQS to the SSH banner message","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/3aab92c81763a8c80f9387163f3a10f6f73a59b2"},{"sha":"29ee719e9c81585b6b396b49e67e0ed2971c5837","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Update templates for OQS-OpenSSH v8 interop and use its generate.yml","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/29ee719e9c81585b6b396b49e67e0ed2971c5837"},{"sha":"7a85572879af2871d7679717c79fd16fa2bcbdfe","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Regenerate test identity key pairs, and remove key pairs for removed algorithms","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/7a85572879af2871d7679717c79fd16fa2bcbdfe"},{"sha":"a65c0090b428d480b96806a16cfd50fff6a5ea86","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Regenerate files from template","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/a65c0090b428d480b96806a16cfd50fff6a5ea86"},{"sha":"db450a2041943d6aade00c68a9685c112588ef42","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Remove torture_auth_pubkey_types_oqs_nonblocking_wrapper from torture_auth.c as it's not used","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/db450a2041943d6aade00c68a9685c112588ef42"},{"sha":"78a947e91dced42af5b174d18d5a58d41b7be638","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Remove @openquantumsafe.org suffix from kex algorithm names to match OQS-OpenSSH v8 behavior","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/78a947e91dced42af5b174d18d5a58d41b7be638"},{"sha":"d9544de41df64d0d0ad081e0d1b931be54e9272c","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Use hash algorithm indicated by ciphersuite\n\nv7 implementation always used SHA384. Remove that default and switch based on the ciphersuite.","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/d9544de41df64d0d0ad081e0d1b931be54e9272c"},{"sha":"876a0b254ad49033710cc65dd53f1a4e2cd4eca9","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Regenerate templated code for hash algorithm change","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/876a0b254ad49033710cc65dd53f1a4e2cd4eca9"},{"sha":"e8083f5d6b5e31756bd79a5c7a42941f4e019b90","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Update hybrid key exchange to conform to new formats in OQS-OpenSSH v8","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/e8083f5d6b5e31756bd79a5c7a42941f4e019b90"},{"sha":"02857cbe532133c84a10286bcadcd250c39cc675","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Regenerate templated files for hykex changes","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/02857cbe532133c84a10286bcadcd250c39cc675"},{"sha":"f5456606eb27cfcae7beaf556474975e7e289c51","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Correct spacing produced by add_pq_key_hash template (no functional changes)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/f5456606eb27cfcae7beaf556474975e7e289c51"},{"sha":"bc662cea01f84117c5a8ca18e2169092a36a2695","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Regenerate pki.c with updated add_pq_key_hash template","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/bc662cea01f84117c5a8ca18e2169092a36a2695"},{"sha":"7d2186042845205ae60e4324041e5d4d3ec1c872","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Use correct signature algorithm name instead of generic ssh-oqs to match v8 behavior","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/7d2186042845205ae60e4324041e5d4d3ec1c872"},{"sha":"81d83b824c23b4bb4a051873dd9a8adb279e3a57","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Correct pki.c templates not to coerce signature algorithm names to all-lowercase in algorithm name strings","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/81d83b824c23b4bb4a051873dd9a8adb279e3a57"},{"sha":"1c1ff87fa22cca3a23d15e0ccb975a3032a2f129","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Regenerate pki.c from templates","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/1c1ff87fa22cca3a23d15e0ccb975a3032a2f129"},{"sha":"106ba0b2663885d3a85e9cf0a785070a01b27a93","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Use pure-PQ algorithm string for the PQ part of a hybrid signature","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/106ba0b2663885d3a85e9cf0a785070a01b27a93"},{"sha":"64542e5bbadb0d6eac1c323c48113154836a6067","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Regenerate pki_crypto.c from templates","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/64542e5bbadb0d6eac1c323c48113154836a6067"},{"sha":"3b5407fbb8e3455afab17cf9e2e14690be97341c","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Regenerate hybrid server keys that should be using P-384 or P-521, but incorrectly used P-256 due to a bug in ssh-keygen in OQS-OpenSSH","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/3b5407fbb8e3455afab17cf9e2e14690be97341c"},{"sha":"b01507c2c704e7133d8ad2f0dcbd7cd90f7f4304","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Don't free OQS KEM structure too early in ssh_packet_client_pqkex_reply\n\nNeed to have access to session->next_crypto->oqs_kem->length_shared_secret to know the correct length of shared_secret to zero. Early free was causing a possibly garbage length to be passed into explicit_bzero.","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/b01507c2c704e7133d8ad2f0dcbd7cd90f7f4304"},{"sha":"99ae56c39ec84192a7af99272806ab10a7300979","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Update README.md and CI configuration to use updated OQS-v8 branch commit. Also note libssh commit this fork is based on.","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/99ae56c39ec84192a7af99272806ab10a7300979"}]},"public":true,"created_at":"2022-02-22T20:04:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20401721904","type":"PushEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":397651453,"name":"open-quantum-safe/libssh","url":"https://api.github.com/repos/open-quantum-safe/libssh"},"payload":{"push_id":9175155780,"size":35,"distinct_size":35,"ref":"refs/heads/OQS-master","head":"5f0bc395e78dca23e0ba32b38d946cdbc8fd1d08","before":"1ae123502cef2864c55d2cf30f7d975b3fd3eee6","commits":[{"sha":"1ab2340644109442f933b1fb47dee927bed29f8e","author":{"email":"poptsov.artyom@gmail.com","name":"Artyom V. Poptsov"},"message":"channels: Fix segfaults when the channel data is freed\n\nCalling some channel procedures on a freed channel is always resulting\nin segmentation fault errors.  The reason is that when a channel is\nfreed with 'ssh_channel_do_free' procedure, its 'session' field is set\nto NULL; then when a channel procedure tries to access any field of\n'channel->session' structure it is effectively dereferencing a NULL\npointer.\n\nThe change fixes that behavior by adding a check which ensures that a\nchannel state is not SSH_CHANNEL_FLAG_FREED_LOCAL before accessing its\nparent session.\n\nAlso the test suite is updated to check for the fixed errors, and the\nDoxygen documentation updated accordingly.\n\nThere was a bug introduced in b0fb7d15: 'ssh_channel_poll',\n'ssh_channel_poll_timeout' and 'ssh_channel_get_exit_status' would\ncompare the channel state to the 'SSH_CHANNEL_FLAG_FREED_LOCAL'\nconstant to check if the channel is alive.  But the procedures must\ncheck the channel flags for the presence of\n'SSH_CHANNEL_FLAG_FREED_LOCAL' bits instead.  This change fixes the\nbug.\n\nSigned-off-by: Artyom V. Poptsov <poptsov.artyom@gmail.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/1ab2340644109442f933b1fb47dee927bed29f8e"},{"sha":"4a2758ecd6041bf18ab50f215712b54ef46e33cd","author":{"email":"nathbappai@gmail.com","name":"Biswapriyo Nath"},"message":"cmake: Install pkgconfig file in MinGW\n\nSigned-off-by: Biswapriyo Nath <nathbappai@gmail.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/4a2758ecd6041bf18ab50f215712b54ef46e33cd"},{"sha":"95539ba0ebe0f71f77c621befb26dd836f0ffd0c","author":{"email":"sahana@redhat.com","name":"Sahana Prasad"},"message":"Adds documentation about the order of processing the IdentityFiles\nspecified in ~/.ssh/config.\n\nSigned-off-by: Sahana Prasad <sahana@redhat.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/95539ba0ebe0f71f77c621befb26dd836f0ffd0c"},{"sha":"1a831cfe2c5c6394a92f3fe37cbfd88cc149187d","author":{"email":"wiley@outlook.com","name":"Andrew Wiley"},"message":"emulated poll: polling for nothing should at least get socket errors\n\nSigned-off-by: Andrew Wiley <wiley@outlook.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/1a831cfe2c5c6394a92f3fe37cbfd88cc149187d"},{"sha":"f2f680aede218f22dfd7ea21b858e1983d6ab42a","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"channels: Avoid memory leak\n\nThanks oss-fuzz:\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40116\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/f2f680aede218f22dfd7ea21b858e1983d6ab42a"},{"sha":"ce26b56e13d813800ad1fe97cec26d2830f6ed7a","author":{"email":"szidek@redhat.com","name":"Stanislav Zidek"},"message":"client configuration fuzzing and fixes\n\nSigned-off-by: Stanislav Zidek <szidek@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/ce26b56e13d813800ad1fe97cec26d2830f6ed7a"},{"sha":"21b6418fd986fcd04622683dd3e771dd321faa29","author":{"email":"npocs@redhat.com","name":"Norbert Pocs"},"message":"tests: Add condition for SSHD_EXECUTABLE\n\nDo not compile tests which need SSHD_EXECUTABLE when\nit is not available\n\nSigned-off-by: Norbert Pocs <npocs@redhat.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/21b6418fd986fcd04622683dd3e771dd321faa29"},{"sha":"99c6eb305e255dfcc188df14d619724580bc7fe1","author":{"email":"npocs@redhat.com","name":"Norbert Pocs"},"message":"examples: Missing close for 'socket_fd' when error\n\nDefect found by covscan\n\nSigned-off-by: Norbert Pocs <npocs@redhat.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/99c6eb305e255dfcc188df14d619724580bc7fe1"},{"sha":"227f4161839303f2681b991b1022a878637a8d4b","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"config: Avoid infinite recursion when using Include\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/227f4161839303f2681b991b1022a878637a8d4b"},{"sha":"d76d5c633f66ba22491c2972dd3bf0e106397e0f","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"tests: Verify the recursive includes do not crash\n\nneither client nor server configuration parser\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/d76d5c633f66ba22491c2972dd3bf0e106397e0f"},{"sha":"ba8ce64a1d034edc47ac2bbda94146a3a9763e8e","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"New API to provide configuration string for bind\n\nSimilarly as we already have for the client configuraiton file\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/ba8ce64a1d034edc47ac2bbda94146a3a9763e8e"},{"sha":"e5e3c6267c6e8cd8671aaeaf2cae017ae649b097","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"tests: Break bind config tests to cover also string parsing entrypoint\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/e5e3c6267c6e8cd8671aaeaf2cae017ae649b097"},{"sha":"0aa3b4ee81fc2039a409e98f503ae2437183804b","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"tests: Introduce bind configuration fuzzer\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/0aa3b4ee81fc2039a409e98f503ae2437183804b"},{"sha":"42d1efe4f9d36a512383e0979ea2fa7a6d9801c7","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"bind_config: Ignore empty lines\n\nThis also avoids buffer overflow with empty lines.\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/42d1efe4f9d36a512383e0979ea2fa7a6d9801c7"},{"sha":"c573adced41dc195b6ec5369b2ec0cdc67581e08","author":{"email":"bk2204@github.com","name":"brian m. carlson"},"message":"server: reply with PK_OK with correct algorithm\n\nRFC 4252 §7 states that the public key algorithm in a\nSSH_MSG_USERAUTH_PK_OK response is the public key algorithm name from\nthe request.  When using RSA with SHA-2, this will be either\n\"rsa-sha2-256\" or \"rsa-sha2-512\" as specified by RFC 8332 §3.2.\n\nHowever, currently libssh emits the public key type instead, which is\n\"ssh-rsa\".  This is not in conformance with the RFCs, so let's fix this\nby storing the signature type and emitting it in our response instead of\nthe public key when sending SSH_MSG_USERAUTH_PK_OK in the server.\n\nSigned-off-by: brian m. carlson <bk2204@github.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/c573adced41dc195b6ec5369b2ec0cdc67581e08"},{"sha":"a52c66008eb8db3c9d672c27a0c1a038aefab089","author":{"email":"asn@cryptomilk.org","name":"Andreas Schneider"},"message":"Happy new year 2022!\n\nSigned-off-by: Andreas Schneider <asn@cryptomilk.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/a52c66008eb8db3c9d672c27a0c1a038aefab089"},{"sha":"6f634af4fbb04f1a63a3a11685a7480b4a7bb108","author":{"email":"asn@cryptomilk.org","name":"Andreas Schneider"},"message":"libssh: Deprecate the SCP API\n\nSee also\nhttps://lists.mindrot.org/pipermail/openssh-unix-dev/2021-September/039616.html\n\nFixes #91\n\nSigned-off-by: Andreas Schneider <asn@cryptomilk.org>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/6f634af4fbb04f1a63a3a11685a7480b4a7bb108"},{"sha":"14991ad0718c137828e780308fc1f7027293ec15","author":{"email":"fabian@ritter-vogt.de","name":"Fabian Vogt"},"message":"Soften behaviour of the Compression=no/yes option\n\nCurrently Compression=no (the default) force-disables zlib algos, while\nCompression=yes force-enables it. This means that mismatching options between\nclient and server lead to connection failure. This can easily happen if the\nserver has default settings but the client specifies Compression=yes.\n\nOpenSSH treats the option as a \"prefer compression\" setting:\nCompression=no  -> none,zlib@openssh.com,zlib (default)\nCompression=yes -> zlib@openssh.com,zlib,none\n\nThis commit changes the libssh behaviour to the same as OpenSSH.\n\nSigned-off-by: Fabian Vogt <fabian@ritter-vogt.de>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/14991ad0718c137828e780308fc1f7027293ec15"},{"sha":"86ee3f5a00c2f5237dcbb09f80283af703ced3f5","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"tests: Skip the workaround forcing SHA1 signatures\n\nIn certificate authentication with OpenSSH 8.0, the SHA2 signatures were\nnot accepted correctly [1]. This was not an issue up until the OpenSSH\n8.8p1, which does no longer allow SHA1 signatures by default so this\nbroke the CI and tests against the new OpenSSH [2].\n\nFixes !107\n\n[1] https://bugzilla.mindrot.org/show_bug.cgi?id=3016\n[2] https://gitlab.com/libssh/libssh-mirror/-/issues/107\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/86ee3f5a00c2f5237dcbb09f80283af703ced3f5"},{"sha":"afcb85bfdacab1db1fa7251cbebf053a35f69d86","author":{"email":"asn@cryptomilk.org","name":"Andreas Schneider"},"message":"gitlab-ci: Sort build env variables\n\nSigned-off-by: Andreas Schneider <asn@cryptomilk.org>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/afcb85bfdacab1db1fa7251cbebf053a35f69d86"}]},"public":true,"created_at":"2022-02-22T22:01:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20402076983","type":"PushEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":397651453,"name":"open-quantum-safe/libssh","url":"https://api.github.com/repos/open-quantum-safe/libssh"},"payload":{"push_id":9175331828,"size":32,"distinct_size":0,"ref":"refs/heads/master","head":"4975487c18090e24ff97208022a605a15351e773","before":"76b7e0e9b54bed74f3d9be75583e56960405847d","commits":[{"sha":"1ab2340644109442f933b1fb47dee927bed29f8e","author":{"email":"poptsov.artyom@gmail.com","name":"Artyom V. Poptsov"},"message":"channels: Fix segfaults when the channel data is freed\n\nCalling some channel procedures on a freed channel is always resulting\nin segmentation fault errors.  The reason is that when a channel is\nfreed with 'ssh_channel_do_free' procedure, its 'session' field is set\nto NULL; then when a channel procedure tries to access any field of\n'channel->session' structure it is effectively dereferencing a NULL\npointer.\n\nThe change fixes that behavior by adding a check which ensures that a\nchannel state is not SSH_CHANNEL_FLAG_FREED_LOCAL before accessing its\nparent session.\n\nAlso the test suite is updated to check for the fixed errors, and the\nDoxygen documentation updated accordingly.\n\nThere was a bug introduced in b0fb7d15: 'ssh_channel_poll',\n'ssh_channel_poll_timeout' and 'ssh_channel_get_exit_status' would\ncompare the channel state to the 'SSH_CHANNEL_FLAG_FREED_LOCAL'\nconstant to check if the channel is alive.  But the procedures must\ncheck the channel flags for the presence of\n'SSH_CHANNEL_FLAG_FREED_LOCAL' bits instead.  This change fixes the\nbug.\n\nSigned-off-by: Artyom V. Poptsov <poptsov.artyom@gmail.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/1ab2340644109442f933b1fb47dee927bed29f8e"},{"sha":"4a2758ecd6041bf18ab50f215712b54ef46e33cd","author":{"email":"nathbappai@gmail.com","name":"Biswapriyo Nath"},"message":"cmake: Install pkgconfig file in MinGW\n\nSigned-off-by: Biswapriyo Nath <nathbappai@gmail.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/4a2758ecd6041bf18ab50f215712b54ef46e33cd"},{"sha":"95539ba0ebe0f71f77c621befb26dd836f0ffd0c","author":{"email":"sahana@redhat.com","name":"Sahana Prasad"},"message":"Adds documentation about the order of processing the IdentityFiles\nspecified in ~/.ssh/config.\n\nSigned-off-by: Sahana Prasad <sahana@redhat.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/95539ba0ebe0f71f77c621befb26dd836f0ffd0c"},{"sha":"1a831cfe2c5c6394a92f3fe37cbfd88cc149187d","author":{"email":"wiley@outlook.com","name":"Andrew Wiley"},"message":"emulated poll: polling for nothing should at least get socket errors\n\nSigned-off-by: Andrew Wiley <wiley@outlook.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/1a831cfe2c5c6394a92f3fe37cbfd88cc149187d"},{"sha":"f2f680aede218f22dfd7ea21b858e1983d6ab42a","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"channels: Avoid memory leak\n\nThanks oss-fuzz:\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40116\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/f2f680aede218f22dfd7ea21b858e1983d6ab42a"},{"sha":"ce26b56e13d813800ad1fe97cec26d2830f6ed7a","author":{"email":"szidek@redhat.com","name":"Stanislav Zidek"},"message":"client configuration fuzzing and fixes\n\nSigned-off-by: Stanislav Zidek <szidek@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/ce26b56e13d813800ad1fe97cec26d2830f6ed7a"},{"sha":"21b6418fd986fcd04622683dd3e771dd321faa29","author":{"email":"npocs@redhat.com","name":"Norbert Pocs"},"message":"tests: Add condition for SSHD_EXECUTABLE\n\nDo not compile tests which need SSHD_EXECUTABLE when\nit is not available\n\nSigned-off-by: Norbert Pocs <npocs@redhat.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/21b6418fd986fcd04622683dd3e771dd321faa29"},{"sha":"99c6eb305e255dfcc188df14d619724580bc7fe1","author":{"email":"npocs@redhat.com","name":"Norbert Pocs"},"message":"examples: Missing close for 'socket_fd' when error\n\nDefect found by covscan\n\nSigned-off-by: Norbert Pocs <npocs@redhat.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/99c6eb305e255dfcc188df14d619724580bc7fe1"},{"sha":"227f4161839303f2681b991b1022a878637a8d4b","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"config: Avoid infinite recursion when using Include\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/227f4161839303f2681b991b1022a878637a8d4b"},{"sha":"d76d5c633f66ba22491c2972dd3bf0e106397e0f","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"tests: Verify the recursive includes do not crash\n\nneither client nor server configuration parser\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/d76d5c633f66ba22491c2972dd3bf0e106397e0f"},{"sha":"ba8ce64a1d034edc47ac2bbda94146a3a9763e8e","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"New API to provide configuration string for bind\n\nSimilarly as we already have for the client configuraiton file\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/ba8ce64a1d034edc47ac2bbda94146a3a9763e8e"},{"sha":"e5e3c6267c6e8cd8671aaeaf2cae017ae649b097","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"tests: Break bind config tests to cover also string parsing entrypoint\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/e5e3c6267c6e8cd8671aaeaf2cae017ae649b097"},{"sha":"0aa3b4ee81fc2039a409e98f503ae2437183804b","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"tests: Introduce bind configuration fuzzer\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/0aa3b4ee81fc2039a409e98f503ae2437183804b"},{"sha":"42d1efe4f9d36a512383e0979ea2fa7a6d9801c7","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"bind_config: Ignore empty lines\n\nThis also avoids buffer overflow with empty lines.\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/42d1efe4f9d36a512383e0979ea2fa7a6d9801c7"},{"sha":"c573adced41dc195b6ec5369b2ec0cdc67581e08","author":{"email":"bk2204@github.com","name":"brian m. carlson"},"message":"server: reply with PK_OK with correct algorithm\n\nRFC 4252 §7 states that the public key algorithm in a\nSSH_MSG_USERAUTH_PK_OK response is the public key algorithm name from\nthe request.  When using RSA with SHA-2, this will be either\n\"rsa-sha2-256\" or \"rsa-sha2-512\" as specified by RFC 8332 §3.2.\n\nHowever, currently libssh emits the public key type instead, which is\n\"ssh-rsa\".  This is not in conformance with the RFCs, so let's fix this\nby storing the signature type and emitting it in our response instead of\nthe public key when sending SSH_MSG_USERAUTH_PK_OK in the server.\n\nSigned-off-by: brian m. carlson <bk2204@github.com>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/c573adced41dc195b6ec5369b2ec0cdc67581e08"},{"sha":"a52c66008eb8db3c9d672c27a0c1a038aefab089","author":{"email":"asn@cryptomilk.org","name":"Andreas Schneider"},"message":"Happy new year 2022!\n\nSigned-off-by: Andreas Schneider <asn@cryptomilk.org>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/a52c66008eb8db3c9d672c27a0c1a038aefab089"},{"sha":"6f634af4fbb04f1a63a3a11685a7480b4a7bb108","author":{"email":"asn@cryptomilk.org","name":"Andreas Schneider"},"message":"libssh: Deprecate the SCP API\n\nSee also\nhttps://lists.mindrot.org/pipermail/openssh-unix-dev/2021-September/039616.html\n\nFixes #91\n\nSigned-off-by: Andreas Schneider <asn@cryptomilk.org>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/6f634af4fbb04f1a63a3a11685a7480b4a7bb108"},{"sha":"14991ad0718c137828e780308fc1f7027293ec15","author":{"email":"fabian@ritter-vogt.de","name":"Fabian Vogt"},"message":"Soften behaviour of the Compression=no/yes option\n\nCurrently Compression=no (the default) force-disables zlib algos, while\nCompression=yes force-enables it. This means that mismatching options between\nclient and server lead to connection failure. This can easily happen if the\nserver has default settings but the client specifies Compression=yes.\n\nOpenSSH treats the option as a \"prefer compression\" setting:\nCompression=no  -> none,zlib@openssh.com,zlib (default)\nCompression=yes -> zlib@openssh.com,zlib,none\n\nThis commit changes the libssh behaviour to the same as OpenSSH.\n\nSigned-off-by: Fabian Vogt <fabian@ritter-vogt.de>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/14991ad0718c137828e780308fc1f7027293ec15"},{"sha":"86ee3f5a00c2f5237dcbb09f80283af703ced3f5","author":{"email":"jjelen@redhat.com","name":"Jakub Jelen"},"message":"tests: Skip the workaround forcing SHA1 signatures\n\nIn certificate authentication with OpenSSH 8.0, the SHA2 signatures were\nnot accepted correctly [1]. This was not an issue up until the OpenSSH\n8.8p1, which does no longer allow SHA1 signatures by default so this\nbroke the CI and tests against the new OpenSSH [2].\n\nFixes !107\n\n[1] https://bugzilla.mindrot.org/show_bug.cgi?id=3016\n[2] https://gitlab.com/libssh/libssh-mirror/-/issues/107\n\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\nReviewed-by: Andreas Schneider <asn@cryptomilk.org>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/86ee3f5a00c2f5237dcbb09f80283af703ced3f5"},{"sha":"afcb85bfdacab1db1fa7251cbebf053a35f69d86","author":{"email":"asn@cryptomilk.org","name":"Andreas Schneider"},"message":"gitlab-ci: Sort build env variables\n\nSigned-off-by: Andreas Schneider <asn@cryptomilk.org>\nReviewed-by: Jakub Jelen <jjelen@redhat.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/afcb85bfdacab1db1fa7251cbebf053a35f69d86"}]},"public":true,"created_at":"2022-02-22T22:28:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
