{"id":"20164077563","type":"IssueCommentEvent","actor":{"id":5675552,"login":"LeShadow","display_login":"LeShadow","gravatar_id":"","url":"https://api.github.com/users/LeShadow","avatar_url":"https://avatars.githubusercontent.com/u/5675552?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/351","id":1124299120,"node_id":"I_kwDOA_fpb85DA3Fw","number":351,"title":"Integrating OpenSSL & Liboqs in Python - SSL Unexpected Message","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2022-02-04T15:01:53Z","updated_at":"2022-02-10T01:20:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nSo for the last few days I have been trying to integrate liboqs and this version of OpenSSL in Python 3.8.11. \r\nThis is basically what I am doing:\r\n\r\n- Configure and compile liboqs with the following configure settings: `cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..`\r\n- Configure and compile openssl with the following configure settings: `./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed`\r\n\r\nNow when I compile Python, it finds that custom openssl installation, I added the paths to my PATH as well.\r\n\r\nHowever, when I then use Python, every SSL connection (even the ones without PQC) are getting an error with SSL \"UNEXPECTED MESSAGE\".\r\n\r\nExample:\r\n ```\r\nStarting new HTTPS connection (1): pypi.org:443\r\nIncremented Retry for (url='/simple/requests/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: UNEXPECTED_MESSAGE] unexpected message (_ssl.c:1131)'))': /simple/requests/\r\n```\r\n\r\nI was wondering if anyone could give me pointers, or get me on the right path, on how to fix this?\r\n\r\nThank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034384442","html_url":"https://github.com/open-quantum-safe/openssl/issues/351#issuecomment-1034384442","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","id":1034384442,"node_id":"IC_kwDOA_fpb849p3Q6","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T01:20:03Z","updated_at":"2022-02-10T01:20:03Z","author_association":"NONE","body":"@baentsch it seems that every error is the same: `ssl.SSLError: [SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:999)`\r\n\r\nAny input from you maybe? (In the meantime, I am going through the source codes again to try to figure this out)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034384442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T01:20:03Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20165268051","type":"IssueCommentEvent","actor":{"id":5675552,"login":"LeShadow","display_login":"LeShadow","gravatar_id":"","url":"https://api.github.com/users/LeShadow","avatar_url":"https://avatars.githubusercontent.com/u/5675552?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/351","id":1124299120,"node_id":"I_kwDOA_fpb85DA3Fw","number":351,"title":"Integrating OpenSSL & Liboqs in Python - SSL Unexpected Message","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2022-02-04T15:01:53Z","updated_at":"2022-02-10T03:11:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nSo for the last few days I have been trying to integrate liboqs and this version of OpenSSL in Python 3.8.11. \r\nThis is basically what I am doing:\r\n\r\n- Configure and compile liboqs with the following configure settings: `cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..`\r\n- Configure and compile openssl with the following configure settings: `./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed`\r\n\r\nNow when I compile Python, it finds that custom openssl installation, I added the paths to my PATH as well.\r\n\r\nHowever, when I then use Python, every SSL connection (even the ones without PQC) are getting an error with SSL \"UNEXPECTED MESSAGE\".\r\n\r\nExample:\r\n ```\r\nStarting new HTTPS connection (1): pypi.org:443\r\nIncremented Retry for (url='/simple/requests/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: UNEXPECTED_MESSAGE] unexpected message (_ssl.c:1131)'))': /simple/requests/\r\n```\r\n\r\nI was wondering if anyone could give me pointers, or get me on the right path, on how to fix this?\r\n\r\nThank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034447520","html_url":"https://github.com/open-quantum-safe/openssl/issues/351#issuecomment-1034447520","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","id":1034447520,"node_id":"IC_kwDOA_fpb849qGqg","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T03:11:41Z","updated_at":"2022-02-10T03:11:41Z","author_association":"NONE","body":"It looks like the problem lies with oqs-openssl I think?\r\n\r\n(Port 6006 equates to the signature algorithm **ecdsap256** and the Key exchange algorithm **frodo1344shake**)\r\n```\r\nroot@vmi787755:/opt/openssl_installed/bin# ./openssl s_client -host test.openquantumsafe.org -port 6006\r\nCONNECTED(00000003)\r\n139929043433280:error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure:ssl/record/rec_layer_s3.c:1543:SSL alert number 40\r\n---\r\nno peer certificate available\r\n---\r\nNo client certificate CA names sent\r\n---\r\nSSL handshake has read 7 bytes and written 436 bytes\r\nVerification: OK\r\n---\r\nNew, (NONE), Cipher is (NONE)\r\nSecure Renegotiation IS NOT supported\r\nCompression: NONE\r\nExpansion: NONE\r\nNo ALPN negotiated\r\nEarly data was not sent\r\nVerify return code: 0 (ok)\r\n---\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034447520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T03:11:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20165585562","type":"IssueCommentEvent","actor":{"id":5675552,"login":"LeShadow","display_login":"LeShadow","gravatar_id":"","url":"https://api.github.com/users/LeShadow","avatar_url":"https://avatars.githubusercontent.com/u/5675552?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/351","id":1124299120,"node_id":"I_kwDOA_fpb85DA3Fw","number":351,"title":"Integrating OpenSSL & Liboqs in Python - SSL Unexpected Message","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2022-02-04T15:01:53Z","updated_at":"2022-02-10T03:45:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nSo for the last few days I have been trying to integrate liboqs and this version of OpenSSL in Python 3.8.11. \r\nThis is basically what I am doing:\r\n\r\n- Configure and compile liboqs with the following configure settings: `cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..`\r\n- Configure and compile openssl with the following configure settings: `./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed`\r\n\r\nNow when I compile Python, it finds that custom openssl installation, I added the paths to my PATH as well.\r\n\r\nHowever, when I then use Python, every SSL connection (even the ones without PQC) are getting an error with SSL \"UNEXPECTED MESSAGE\".\r\n\r\nExample:\r\n ```\r\nStarting new HTTPS connection (1): pypi.org:443\r\nIncremented Retry for (url='/simple/requests/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: UNEXPECTED_MESSAGE] unexpected message (_ssl.c:1131)'))': /simple/requests/\r\n```\r\n\r\nI was wondering if anyone could give me pointers, or get me on the right path, on how to fix this?\r\n\r\nThank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034462650","html_url":"https://github.com/open-quantum-safe/openssl/issues/351#issuecomment-1034462650","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","id":1034462650,"node_id":"IC_kwDOA_fpb849qKW6","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T03:45:19Z","updated_at":"2022-02-10T03:45:19Z","author_association":"NONE","body":"After some more reading of the source code, I discovered that this is happening because of the following situation:\r\n\r\nOn line [`295`](https://github.com/open-quantum-safe/openssl/blob/9815027fbc46a4ba3637ceb95b5b1fd7bc765a4a/ssl/t1_lib.c#L295) from `ssl/t1_lib.c`, a list of default curves is being defined (OQS Hybrid ones). \r\n\r\nWhen **openssl** or **Python** for that matter (as I did a test with **openssl** and with **python**) make a connection, they will assume they have to use one of the KEM's defined in that default list. Only when you define `-curve` (which we can do with `openssl s_client`, but we cannot (yet) with Python), then it won't throw the error, but it will work out of the box.\r\n\r\nSo a temporary fix for Python would be is to alter ssl/t1_lib.c and to add all other Kex's to the eccurves_default[] list. \r\n\r\nResult with `./openssl s_client -host test.openquantumsafe.org -port 6006`:\r\n```\r\n./openssl s_client -host test.openquantumsafe.org -port 6006 -CAfile /opt/openssl_installed/bin/CA.crt\r\nCONNECTED(00000003)\r\ndepth=1 CN = oqstest_CA\r\nverify return:1\r\ndepth=0 CN = test.openquantumsafe.org\r\nverify return:1\r\n---\r\nCertificate chain\r\n 0 s:CN = test.openquantumsafe.org\r\n   i:CN = oqstest_CA\r\n---\r\nServer certificate\r\n-----BEGIN CERTIFICATE-----\r\nMIIDRDCCASygAwIBAgIUDEbPtFJQgLPNoYlQp3g/y3FfsfEwDQYJKoZIhvcNAQEL\r\nBQAwFTETMBEGA1UEAwwKb3FzdGVzdF9DQTAeFw0yMjAxMTQwNTIzMTFaFw0yMzAx\r\nMTQwNTIzMTFaMCMxITAfBgNVBAMMGHRlc3Qub3BlbnF1YW50dW1zYWZlLm9yZzBZ\r\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGSFUiAqGapGM6QN0gIdVFnwa/NUcCC+\r\noPgWtI5Id3UqvAAoWNezkTCZmGMx1NXWrUcFXmw1pvJiLRhngPIm5ZajSTBHMAsG\r\nA1UdDwQEAwIF4DATBgNVHSUEDDAKBggrBgEFBQcDATAjBgNVHREEHDAaghh0ZXN0\r\nLm9wZW5xdWFudHVtc2FmZS5vcmcwDQYJKoZIhvcNAQELBQADggIBAJ4GoN50CZJa\r\n6ZznZ/FbyVzkKigeylVFfpaPuOk9rQ0Gc4wwIPIa9aAIfhcNehTkzYIR7bxVSGZ4\r\nG5HQq+mHKUnYwz+eEcDLLP1472xc8uaGj8BnKt8vCndQqEibN8iijAx40jU0HJYk\r\nYNmyRavPKY4tjJh9NKJjBbY27rqa0HqcHxQ4hTDGT+TtKtpKymfBiRqxwaA/E5Ag\r\nLCelUJXv3//fvJtVuN2m3DHJ/iGDJsPT2/zcUfXnEcP5pqEuy/pTFHyBBNQlg3JB\r\nALNO3tyxXV0LeUQcA1WKzRbzrlSKW582TJZa3h2Q2sDR5b89imZ0rUsIQ/Yh24Ci\r\ntkqRdVGcSQBKS9Xo4sDhKXKEQ6m1kSSA55FntHBzuboXTL5QKYL82Hyca2PD/29Q\r\nIw3lSxlgd++oVKc/7YDQ6m8SjnYLtif3ATELtyUiIRaUgBV5GGwraGavOg1IVJLJ\r\nJrRvhvyYHuegNNJRywE8WQEZdsUJY0Ph5oFVH5W6cr8gzb4cGmHqf8J6ieMN5x+p\r\nGN2FJVsCwhjJgIhhY8r8dAluTQBd5nAKx+rdu0CW19IroR1QtrCsqioE3O0/0WDn\r\n0772BTnHe2uPwqVX0WkLi/NKLOHR9x+V5s/2wPYLTLASVFHt6srGhDT/el7zdGIm\r\n2GrRkYTzQ2CBnQoC0h0o0afMwXuk7GvA\r\n-----END CERTIFICATE-----\r\nsubject=CN = test.openquantumsafe.org\r\n\r\nissuer=CN = oqstest_CA\r\n\r\n---\r\nNo client certificate CA names sent\r\nPeer signing digest: SHA256\r\nPeer signature type: ECDSA\r\nServer Temp Key: frodo1344shake\r\n---\r\nSSL handshake has read 22912 bytes and written 22717 bytes\r\nVerification: OK\r\n---\r\nNew, TLSv1.3, Cipher is TLS_AES_256_GCM_SHA384\r\nServer public key is 256 bit\r\nSecure Renegotiation IS NOT supported\r\nCompression: NONE\r\nExpansion: NONE\r\nNo ALPN negotiated\r\nEarly data was not sent\r\nVerify return code: 0 (ok)\r\n---\r\n---\r\nPost-Handshake New Session Ticket arrived:\r\nSSL-Session:\r\n    Protocol  : TLSv1.3\r\n    Cipher    : TLS_AES_256_GCM_SHA384\r\n    Session-ID: 6C77473B107088BAB5158A002164D89E7C0A8B7E512D7E95B41BC0F7C53364BC\r\n    Session-ID-ctx:\r\n    Resumption PSK: 6572B6D276381FFC5D28ECC39B44516C5839A7D9E154BD9D5C2CAAD3684644FDF496A53A21E49CF4A18A4027497BD2CA\r\n    PSK identity: None\r\n    PSK identity hint: None\r\n    SRP username: None\r\n    TLS session ticket lifetime hint: 300 (seconds)\r\n    TLS session ticket:\r\n    0000 - 10 13 44 18 a3 7b fc 3d-9e f4 1c f1 96 9d fc fb   ..D..{.=........\r\n    0010 - 41 91 7f 65 c2 39 6a 37-0a 94 9e 96 2c c7 3b 7c   A..e.9j7....,.;|\r\n    0020 - 2c df 2c 6c 4b 16 c5 85-b1 c9 b6 14 69 aa 55 b4   ,.,lK.......i.U.\r\n    0030 - 13 08 c7 c8 ab f9 8a b0-59 10 fc 12 44 ff b2 f6   ........Y...D...\r\n    0040 - 2e 2d b2 be 0d 75 f8 05-37 6a f9 34 52 e7 c7 86   .-...u..7j.4R...\r\n    0050 - de b6 4d a6 25 f6 48 02-20 26 b9 6f b8 ad ce cb   ..M.%.H. &.o....\r\n    0060 - 37 af 4b c3 13 54 ff 56-b8 da b9 df a5 ce 93 d7   7.K..T.V........\r\n    0070 - e0 3f 94 47 e2 00 cb f0-de c2 5d 53 1d f6 65 4f   .?.G......]S..eO\r\n    0080 - b3 fe 21 5a f9 7e 7f 20-83 c1 8f 46 07 46 dc e9   ..!Z.~. ...F.F..\r\n    0090 - eb 72 f9 6a 86 84 dc 90-bd 73 d4 86 3e e8 38 79   .r.j.....s..>.8y\r\n    00a0 - 15 96 6f 07 90 8b 88 6e-a7 72 a9 f8 59 05 d1 c2   ..o....n.r..Y...\r\n    00b0 - ff 2b e2 35 d6 2f c2 d7-3c 1d 20 c2 79 a9 a3 48   .+.5./..<. .y..H\r\n    00c0 - e8 13 f7 6f 3e 99 dd 85-9d ae 7d d5 a4 90 f5 e3   ...o>.....}.....\r\n    00d0 - ea 97 a9 e2 08 5e 37 e9-5c 29 cf 8e d2 81 e5 0c   .....^7.\\)......\r\n    00e0 - 11 09 3e c2 66 b6 cf 56-ea e3 0f 85 66 69 44 26   ..>.f..V....fiD&\r\n\r\n    Start Time: 1644464565\r\n    Timeout   : 7200 (sec)\r\n    Verify return code: 0 (ok)\r\n    Extended master secret: no\r\n    Max Early Data: 0\r\n---\r\nread R BLOCK\r\n---\r\nPost-Handshake New Session Ticket arrived:\r\nSSL-Session:\r\n    Protocol  : TLSv1.3\r\n    Cipher    : TLS_AES_256_GCM_SHA384\r\n    Session-ID: E656039E4364CB22344B9F14E961526DB091BD03CBFA60F0D3F00DCB549A2718\r\n    Session-ID-ctx:\r\n    Resumption PSK: F62A58DE807EBBB616F26FCDD541DDDE6D07A4B9037E77A70E6BE144E08B08B1547BC97197B66D36751EEAE67C987AC4\r\n    PSK identity: None\r\n    PSK identity hint: None\r\n    SRP username: None\r\n    TLS session ticket lifetime hint: 300 (seconds)\r\n    TLS session ticket:\r\n    0000 - 10 13 44 18 a3 7b fc 3d-9e f4 1c f1 96 9d fc fb   ..D..{.=........\r\n    0010 - 9c 4d 89 35 70 e5 0a 9c-5d ee 37 1a 82 aa 98 a7   .M.5p...].7.....\r\n    0020 - 21 e7 18 84 c9 76 cc d0-68 7b 18 34 9c 39 30 9f   !....v..h{.4.90.\r\n    0030 - 73 64 b8 df 70 df 1f 39-c7 84 8f 2c 4e 15 a2 f3   sd..p..9...,N...\r\n    0040 - 29 40 e5 7c 48 3f b0 67-da 63 eb 1b 21 39 70 8a   )@.|H?.g.c..!9p.\r\n    0050 - 4d 99 25 b8 bd c4 29 1e-b6 f3 88 b3 c7 32 ef 6b   M.%...)......2.k\r\n    0060 - 33 f5 cd 36 46 b0 82 8a-a4 6d 3b 37 b1 eb f3 a6   3..6F....m;7....\r\n    0070 - 06 83 7d ec 33 98 ef 77-db 6a d1 56 61 f9 c7 c9   ..}.3..w.j.Va...\r\n    0080 - b6 5d 97 4e 6f db 3d 50-dd 17 3a bb 44 75 f8 be   .].No.=P..:.Du..\r\n    0090 - c5 76 e8 65 46 47 bd 83-78 ab a3 3a ca 59 a1 cf   .v.eFG..x..:.Y..\r\n    00a0 - e0 32 b0 01 25 03 74 f3-33 63 d9 e3 9e 92 1f 0f   .2..%.t.3c......\r\n    00b0 - f7 d6 ae 80 10 53 7c 0f-f1 af 43 72 ed 8d 5a 25   .....S|...Cr..Z%\r\n    00c0 - 32 50 34 ba 86 77 9e f5-8f 3f 15 5c 75 f6 5c b9   2P4..w...?.\\u.\\.\r\n    00d0 - 00 cc 8c e7 b2 31 9b c9-aa 62 70 70 a4 9b 39 c1   .....1...bpp..9.\r\n    00e0 - a3 f5 7b 0a b8 30 1b 4a-61 78 b8 b0 96 a3 de 25   ..{..0.Jax.....%\r\n\r\n    Start Time: 1644464565\r\n    Timeout   : 7200 (sec)\r\n    Verify return code: 0 (ok)\r\n    Extended master secret: no\r\n    Max Early Data: 0\r\n---\r\nread R BLOCK\r\n```\r\n\r\nNow the results with Python, after the change to openssl, are what we were looking for! Although we had to adapt the default list, so maybe we need to find a better solution, but if we adapt the defaults list I spoke about earlier, this is our result:\r\n```\r\n========== Succesfully tested ==========\r\n\r\necdsap256: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\ndilithium2: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\ndilithium3: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\ndilithium5: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\ndilithium2_aes: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\ndilithium3_aes: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\ndilithium5_aes: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nfalcon512: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nfalcon1024: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\npicnicl1full: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\npicnic3l1: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrainbowIclassic: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrainbowVclassic: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nsphincsharaka128frobust: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nsphincssha256128frobust: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nsphincsshake256128frobust: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np256_dilithium2: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072_dilithium2: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np384_dilithium3: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np521_dilithium5: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np256_dilithium2_aes: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072_dilithium2_aes: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np384_dilithium3_aes: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np521_dilithium5_aes: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np256_falcon512: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072_falcon512: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np521_falcon1024: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np256_picnicl1full: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072_picnicl1full: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np256_picnic3l1: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072_picnic3l1: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np256_rainbowIclassic: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072_rainbowIclassic: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np521_rainbowVclassic: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np256_sphincsharaka128frobust: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072_sphincsharaka128frobust: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np256_sphincssha256128frobust: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072_sphincssha256128frobust: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\np256_sphincsshake256128frobust: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\nrsa3072_sphincsshake256128frobust: *,frodo640aes,frodo640shake,frodo976aes,frodo976shake,frodo1344aes,frodo1344shake,kyber512,kyber768,kyber1024,ntru_hps2048509,ntru_hps2048677,ntru_hps4096821,ntru_hps40961229,ntru_hrss701,ntru_hrss1373,lightsaber,saber,firesaber,sidhp434,sidhp503,sidhp610,sidhp751,sikep434,sikep503,sikep610,sikep751,bikel1,bikel3,kyber90s512,kyber90s768,kyber90s1024,hqc128,hqc192,hqc256,ntrulpr653,ntrulpr761,ntrulpr857,ntrulpr1277,sntrup653,sntrup761,sntrup857,sntrup1277,p256_frodo640aes,p256_frodo640shake,p384_frodo976aes,p384_frodo976shake,p521_frodo1344aes,p521_frodo1344shake,p256_kyber512,p384_kyber768,p521_kyber1024,p256_ntru_hps2048509,p384_ntru_hps2048677,p521_ntru_hps4096821,p521_ntru_hps40961229,p384_ntru_hrss701,p521_ntru_hrss1373,p256_lightsaber,p384_saber,p521_firesaber,p256_sidhp434,p256_sidhp503,p384_sidhp610,p521_sidhp751,p256_sikep434,p256_sikep503,p384_sikep610,p521_sikep751,p256_bikel1,p384_bikel3,p256_kyber90s512,p384_kyber90s768,p521_kyber90s1024,p256_hqc128,p384_hqc192,p521_hqc256,p256_ntrulpr653,p256_ntrulpr761,p384_ntrulpr857,p521_ntrulpr1277,p256_sntrup653,p256_sntrup761,p384_sntrup857,p521_sntrup1277\r\n\r\n========== Unsuccesfully tested =========\r\necdsap256:\r\nrsa3072:\r\ndilithium2:\r\ndilithium3:\r\ndilithium5:\r\ndilithium2_aes:\r\ndilithium3_aes:\r\ndilithium5_aes:\r\nfalcon512:\r\nfalcon1024:\r\npicnicl1full:\r\npicnic3l1:\r\nrainbowIclassic:\r\nrainbowVclassic:\r\nsphincsharaka128frobust:\r\nsphincssha256128frobust:\r\nsphincsshake256128frobust:\r\np256_dilithium2:\r\nrsa3072_dilithium2:\r\np384_dilithium3:\r\np521_dilithium5:\r\np256_dilithium2_aes:\r\nrsa3072_dilithium2_aes:\r\np384_dilithium3_aes:\r\np521_dilithium5_aes:\r\np256_falcon512:\r\nrsa3072_falcon512:\r\np521_falcon1024:\r\np256_picnicl1full:\r\nrsa3072_picnicl1full:\r\np256_picnic3l1:\r\nrsa3072_picnic3l1:\r\np256_rainbowIclassic:\r\nrsa3072_rainbowIclassic:\r\np521_rainbowVclassic:\r\np256_sphincsharaka128frobust:\r\nrsa3072_sphincsharaka128frobust:\r\np256_sphincssha256128frobust:\r\nrsa3072_sphincssha256128frobust:\r\np256_sphincsshake256128frobust:\r\nrsa3072_sphincsshake256128frobust:\r\n\r\n========== Statistics =========\r\nAmount of succesful connections: 3485\r\nAmount of unsuccesful connections: 0\r\n```\r\n\r\n\r\nIs there anything else you can think of that I could look at to improve this?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034462650/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T03:45:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20166046159","type":"IssueCommentEvent","actor":{"id":5675552,"login":"LeShadow","display_login":"LeShadow","gravatar_id":"","url":"https://api.github.com/users/LeShadow","avatar_url":"https://avatars.githubusercontent.com/u/5675552?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/351","id":1124299120,"node_id":"I_kwDOA_fpb85DA3Fw","number":351,"title":"Integrating OpenSSL & Liboqs in Python - SSL Unexpected Message","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2022-02-04T15:01:53Z","updated_at":"2022-02-10T04:35:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nSo for the last few days I have been trying to integrate liboqs and this version of OpenSSL in Python 3.8.11. \r\nThis is basically what I am doing:\r\n\r\n- Configure and compile liboqs with the following configure settings: `cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..`\r\n- Configure and compile openssl with the following configure settings: `./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed`\r\n\r\nNow when I compile Python, it finds that custom openssl installation, I added the paths to my PATH as well.\r\n\r\nHowever, when I then use Python, every SSL connection (even the ones without PQC) are getting an error with SSL \"UNEXPECTED MESSAGE\".\r\n\r\nExample:\r\n ```\r\nStarting new HTTPS connection (1): pypi.org:443\r\nIncremented Retry for (url='/simple/requests/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: UNEXPECTED_MESSAGE] unexpected message (_ssl.c:1131)'))': /simple/requests/\r\n```\r\n\r\nI was wondering if anyone could give me pointers, or get me on the right path, on how to fix this?\r\n\r\nThank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034484080","html_url":"https://github.com/open-quantum-safe/openssl/issues/351#issuecomment-1034484080","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","id":1034484080,"node_id":"IC_kwDOA_fpb849qPlw","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T04:35:07Z","updated_at":"2022-02-10T04:35:07Z","author_association":"NONE","body":"Since this was for Python 3.10.2, and the Modules/Setup file is slightly different in 3.9.x and 3.8.x, I will try to build those two as well in the coming days!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034484080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T04:35:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20168984422","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/351","id":1124299120,"node_id":"I_kwDOA_fpb85DA3Fw","number":351,"title":"Integrating OpenSSL & Liboqs in Python - SSL Unexpected Message","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2022-02-04T15:01:53Z","updated_at":"2022-02-10T08:38:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nSo for the last few days I have been trying to integrate liboqs and this version of OpenSSL in Python 3.8.11. \r\nThis is basically what I am doing:\r\n\r\n- Configure and compile liboqs with the following configure settings: `cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..`\r\n- Configure and compile openssl with the following configure settings: `./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed`\r\n\r\nNow when I compile Python, it finds that custom openssl installation, I added the paths to my PATH as well.\r\n\r\nHowever, when I then use Python, every SSL connection (even the ones without PQC) are getting an error with SSL \"UNEXPECTED MESSAGE\".\r\n\r\nExample:\r\n ```\r\nStarting new HTTPS connection (1): pypi.org:443\r\nIncremented Retry for (url='/simple/requests/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: UNEXPECTED_MESSAGE] unexpected message (_ssl.c:1131)'))': /simple/requests/\r\n```\r\n\r\nI was wondering if anyone could give me pointers, or get me on the right path, on how to fix this?\r\n\r\nThank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034637718","html_url":"https://github.com/open-quantum-safe/openssl/issues/351#issuecomment-1034637718","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","id":1034637718,"node_id":"IC_kwDOA_fpb849q1GW","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T08:38:56Z","updated_at":"2022-02-10T08:38:56Z","author_association":"MEMBER","body":"@LeShadow Thanks again for keeping up the work. Your results are expected, indeed: The situation where one cannot pass the `-groups` parameter (i.e., call `SSL_CTX_set1_groups_list`) is exactly the reason why we introduced the [OQS_DEFAULT_GROUPS](https://github.com/open-quantum-safe/openssl#default-algorithms-announced) build option: I assume you used that in your build and did not alter ssl/t1_lib.c as per this:\r\n\r\n> So a temporary fix for Python would be is to alter ssl/t1_lib.c and to add all other Kex's to the eccurves_default[] list.\r\n\r\n(Historical side note: (EC)\"curves\" were the only entities that could be configured in TLS1.2; with TLS1.3 this changed to the more general \"groups\" concept (that both EC and OQS use) -- hence the somewhat \"overloaded\" --but outdated-- term \"curves\").\r\n\r\n> Is there anything else you can think of that I could look at to improve this?\r\n\r\nYes, introduce an option to set the specific group to be used: The approach above has the big drawback that `openssl` always transfers during the handshake the huge list of groups (2 bytes per group) - pretty inefficient. So, a) either introduce by PR to Python-ssl the option to configure the group one wants to use or b) introduce to (oqs-)openssl a more dynamic option to do so, e.g., by environment variable. I think I'll go about \"b)\" anyway as I have the same issue in another integration case ([msquic](https://github.com/microsoft/msquic)) where I don't want to submit to a pretty one-sided Microsoft legal document (giving one the \"privilege\" to contribute code for free to that poor company.... :). \r\n\r\nMaybe together we could try \"a)\", too, as adding this functionality to Python (basically a way to call `SSL_CTX_set1_groups_list`) does make sense in general, e.g., if a user wants to specifically request more secure key exchange algorithms --classic or quantum-safe.\r\n\r\n> If I can get it all working, is it something that might be put in the liboqs-demos repo or can I blog about this?\r\n\r\nMost definitely. You could do a blog at any venue of your liking (LinkedIn?) and we'll gladly create a back-link to that from [www.openquantumsafe.org](https://openquantumsafe.org/research/). I'd definitely (also) invite you to do a PR to the [oqs-demos](https://github.com/open-quantum-safe/oqs-demos) project in which it's shown how such integrations are done and also bring them in the form of an easy-to-use/readily-built docker image: That way the more deeply interested person can learn how to integrate OQS and the not so technically adept person can simply run things. In this case, an OQS-enabled python3 ubuntu image could indeed be pretty interesting to quite some \"pythonistas\" not overly motivated to compile everything... You might want to have a look at [this PR](https://github.com/open-quantum-safe/oqs-demos/pull/123) how this can get started.\r\n\r\nSecond thought: We could introduce the \"groups-setting\" mechanism (option a above) into this oqs-demos image until upstream Python picks it up. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034637718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T08:38:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20173304707","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1188","id":1129798582,"node_id":"I_kwDOA-eq3c5DV1u2","number":1188,"title":"Failed to build ","user":{"login":"demian91","id":17710736,"node_id":"MDQ6VXNlcjE3NzEwNzM2","avatar_url":"https://avatars.githubusercontent.com/u/17710736?v=4","gravatar_id":"","url":"https://api.github.com/users/demian91","html_url":"https://github.com/demian91","followers_url":"https://api.github.com/users/demian91/followers","following_url":"https://api.github.com/users/demian91/following{/other_user}","gists_url":"https://api.github.com/users/demian91/gists{/gist_id}","starred_url":"https://api.github.com/users/demian91/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/demian91/subscriptions","organizations_url":"https://api.github.com/users/demian91/orgs","repos_url":"https://api.github.com/users/demian91/repos","events_url":"https://api.github.com/users/demian91/events{/privacy}","received_events_url":"https://api.github.com/users/demian91/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-02-10T10:34:00Z","updated_at":"2022-02-10T12:24:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi all, \r\n\r\nWhen i tried following the instructions from the manual, I got an error: \r\n\r\n```\r\nubuntu@asp-proxy-04:~/openssl$ git clone --branch main https://github.com/open-quantum-safe/liboqs.git\r\nCloning into 'liboqs'...\r\nremote: Enumerating objects: 25629, done.\r\nremote: Counting objects: 100% (2989/2989), done.\r\nremote: Compressing objects: 100% (1146/1146), done.\r\nremote: Total 25629 (delta 1928), reused 2687 (delta 1801), pack-reused 22640\r\nReceiving objects: 100% (25629/25629), 133.32 MiB | 6.83 MiB/s, done.\r\nResolving deltas: 100% (18100/18100), done.\r\nubuntu@asp-proxy-04:~/openssl$ cd liboqs/\r\nubuntu@asp-proxy-04:~/openssl/liboqs$  mkdir build && cd build\r\nubuntu@asp-proxy-04:~/openssl/liboqs/build$ cmake -GNinja ..\r\n-- The C compiler identification is GNU 9.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE\r\n-- Found OpenSSL: /usr/local/lib/libcrypto.a (found suitable version \"1.1.1f\", minimum required is \"1.1.1\")\r\n-- Found Doxygen: /usr/bin/doxygen (found version \"1.8.17\") found components: doxygen dot\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ubuntu/openssl/liboqs/build\r\n[2330/2353] Linking C executable tests/test_hash\r\nFAILED: tests/test_hash\r\n: && /usr/bin/cc    src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600_avx2.dir/KeccakP-1600/avx2/KeccakP-1600-AVX2.S.o src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600times4_avx2.di\r\nr/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c.o src/common/CMakeFiles/common.dir/aes/aes_ossl.c.o src/common/CMakeFiles/common.dir/sha2/sha2_ossl.c.o src/common/CMakeFiles/common.dir/sha3/\r\nxkcp_sha3.c.o src/common/CMakeFiles/common.dir/sha3/xkcp_sha3x4.c.o src/common/CMakeFiles/common.dir/common.c.o src/common/CMakeFiles/common.dir/pqclean_shims/nistseedexpander.c.o src/common/CMakeFi\r\nles/common.dir/pqclean_shims/fips202.c.o src/common/CMakeFiles/common.dir/pqclean_shims/fips202x4.c.o src/common/CMakeFiles/common.dir/rand/rand.c.o src/common/CMakeFiles/common.dir/rand/rand_nist.c\r\n.o tests/CMakeFiles/test_hash.dir/test_hash.c.o  -o tests/test_hash  /usr/local/lib/libcrypto.a  -lm && :\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_lock_new':\r\nthreads_pthread.c:(.text+0x4a): undefined reference to `pthread_rwlock_init'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_read_lock':\r\nthreads_pthread.c:(.text+0x89): undefined reference to `pthread_rwlock_rdlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_write_lock':\r\nthreads_pthread.c:(.text+0xa9): undefined reference to `pthread_rwlock_wrlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_unlock':\r\nthreads_pthread.c:(.text+0xc9): undefined reference to `pthread_rwlock_unlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_lock_free':\r\nthreads_pthread.c:(.text+0xee): undefined reference to `pthread_rwlock_destroy'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_run_once':\r\nthreads_pthread.c:(.text+0x129): undefined reference to `pthread_once'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_init_local':\r\nthreads_pthread.c:(.text+0x149): undefined reference to `pthread_key_create'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_set_local':\r\nthreads_pthread.c:(.text+0x17b): undefined reference to `pthread_setspecific'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_cleanup_local':\r\nthreads_pthread.c:(.text+0x19b): undefined reference to `pthread_key_delete'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `openssl_init_fork_handlers':\r\nthreads_pthread.c:(.text+0x207): undefined reference to `pthread_once'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_get_local':\r\nthreads_pthread.c:(.text+0x167): undefined reference to `pthread_getspecific'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_digestsign':\r\noqs_meth.c:(.text+0x2c2): undefined reference to `OQS_SIG_sign'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_free':\r\noqs_meth.c:(.text+0x28a2): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_digestverify':\r\noqs_meth.c:(.text+0x2fa1): undefined reference to `OQS_SIG_verify'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_key_init':\r\noqs_meth.c:(.text+0x3802): undefined reference to `OQS_SIG_alg_is_enabled'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x380e): undefined reference to `OQS_SIG_new'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x3958): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_keygen':\r\noqs_meth.c:(.text+0x3ae2): undefined reference to `OQS_SIG_keypair'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x3b6a): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_priv_decode':\r\noqs_meth.c:(.text+0x40ee): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_pub_decode':\r\noqs_meth.c:(.text+0x44fe): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `OQSKEM_options':\r\noqs_meth.c:(.text+0x4623): undefined reference to `OQS_KEM_alg_is_enabled'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `OQSSIG_options':\r\noqs_meth.c:(.text+0x46e3): undefined reference to `OQS_SIG_alg_is_enabled'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_globallookup':\r\ndso_dlfcn.c:(.text+0x17): undefined reference to `dlopen'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x2a): undefined reference to `dlsym'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x35): undefined reference to `dlclose'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_bind_func':\r\ndso_dlfcn.c:(.text+0x1b7): undefined reference to `dlsym'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x282): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_load':\r\ndso_dlfcn.c:(.text+0x2f5): undefined reference to `dlopen'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x369): undefined reference to `dlclose'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x3a5): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_pathbyaddr':\r\ndso_dlfcn.c:(.text+0x466): undefined reference to `dladdr'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x4d7): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_unload':\r\ndso_dlfcn.c:(.text+0x6b8): undefined reference to `dlclose'\r\ncollect2: error: ld returned 1 exit status\r\n[2332/2353] Linking C executable tests/test_aes\r\nFAILED: tests/test_aes\r\n: && /usr/bin/cc    src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600_avx2.dir/KeccakP-1600/avx2/KeccakP-1600-AVX2.S.o src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600times4_avx2.di\r\nr/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c.o src/common/CMakeFiles/common.dir/aes/aes_ossl.c.o src/common/CMakeFiles/common.dir/sha2/sha2_ossl.c.o src/common/CMakeFiles/common.dir/sha3/\r\nxkcp_sha3.c.o src/common/CMakeFiles/common.dir/sha3/xkcp_sha3x4.c.o src/common/CMakeFiles/common.dir/common.c.o src/common/CMakeFiles/common.dir/pqclean_shims/nistseedexpander.c.o src/common/CMakeFi\r\nles/common.dir/pqclean_shims/fips202.c.o src/common/CMakeFiles/common.dir/pqclean_shims/fips202x4.c.o src/common/CMakeFiles/common.dir/rand/rand.c.o src/common/CMakeFiles/common.dir/rand/rand_nist.c\r\n.o tests/CMakeFiles/test_aes.dir/test_aes.c.o  -o tests/test_aes  /usr/local/lib/libcrypto.a  -lm && :\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_lock_new':\r\nthreads_pthread.c:(.text+0x4a): undefined reference to `pthread_rwlock_init'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_read_lock':\r\nthreads_pthread.c:(.text+0x89): undefined reference to `pthread_rwlock_rdlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_write_lock':\r\nthreads_pthread.c:(.text+0xa9): undefined reference to `pthread_rwlock_wrlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_unlock':\r\nthreads_pthread.c:(.text+0xc9): undefined reference to `pthread_rwlock_unlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_lock_free':\r\nthreads_pthread.c:(.text+0xee): undefined reference to `pthread_rwlock_destroy'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_run_once':\r\nthreads_pthread.c:(.text+0x129): undefined reference to `pthread_once'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_init_local':\r\nthreads_pthread.c:(.text+0x149): undefined reference to `pthread_key_create'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_set_local':\r\nthreads_pthread.c:(.text+0x17b): undefined reference to `pthread_setspecific'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_cleanup_local':\r\nthreads_pthread.c:(.text+0x19b): undefined reference to `pthread_key_delete'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `openssl_init_fork_handlers':\r\nthreads_pthread.c:(.text+0x207): undefined reference to `pthread_once'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_get_local':\r\nthreads_pthread.c:(.text+0x167): undefined reference to `pthread_getspecific'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_digestsign':\r\noqs_meth.c:(.text+0x2c2): undefined reference to `OQS_SIG_sign'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_free':\r\noqs_meth.c:(.text+0x28a2): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_digestverify':\r\noqs_meth.c:(.text+0x2fa1): undefined reference to `OQS_SIG_verify'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_key_init':\r\noqs_meth.c:(.text+0x3802): undefined reference to `OQS_SIG_alg_is_enabled'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x380e): undefined reference to `OQS_SIG_new'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x3958): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_keygen':\r\noqs_meth.c:(.text+0x3ae2): undefined reference to `OQS_SIG_keypair'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x3b6a): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_priv_decode':\r\noqs_meth.c:(.text+0x40ee): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_pub_decode':\r\noqs_meth.c:(.text+0x44fe): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `OQSKEM_options':\r\noqs_meth.c:(.text+0x4623): undefined reference to `OQS_KEM_alg_is_enabled'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `OQSSIG_options':\r\noqs_meth.c:(.text+0x46e3): undefined reference to `OQS_SIG_alg_is_enabled'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_globallookup':\r\ndso_dlfcn.c:(.text+0x17): undefined reference to `dlopen'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x2a): undefined reference to `dlsym'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x35): undefined reference to `dlclose'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_bind_func':\r\ndso_dlfcn.c:(.text+0x1b7): undefined reference to `dlsym'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x282): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_load':\r\ndso_dlfcn.c:(.text+0x2f5): undefined reference to `dlopen'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x369): undefined reference to `dlclose'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x3a5): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_pathbyaddr':\r\ndso_dlfcn.c:(.text+0x466): undefined reference to `dladdr'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x4d7): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_unload':\r\ndso_dlfcn.c:(.text+0x6b8): undefined reference to `dlclose'\r\ncollect2: error: ld returned 1 exit status\r\n[2339/2353] Building C object tests/CMakeFiles/test_sig_mem.dir/test_sig_mem.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\nAll the dependencies were already installed! \r\n\r\n```\r\nubuntu@asp-proxy-04:~/openssl/liboqs/build$   sudo apt install astyle cmake gcc ninja-build libssl-dev python3-pytest python3-pytest-xdist unzip xsltproc doxygen graphviz python3-yaml\r\nReading package lists... Done\r\nBuilding dependency tree\r\nReading state information... Done\r\ncmake is already the newest version (3.16.3-1ubuntu1).\r\ngcc is already the newest version (4:9.3.0-1ubuntu2).\r\nunzip is already the newest version (6.0-25ubuntu1).\r\nxsltproc is already the newest version (1.1.34-4).\r\nastyle is already the newest version (3.1-2build1).\r\ndoxygen is already the newest version (1.8.17-0ubuntu2).\r\ngraphviz is already the newest version (2.42.2-3build2).\r\nninja-build is already the newest version (1.10.0-1build1).\r\npython3-pytest is already the newest version (4.6.9-1).\r\npython3-pytest-xdist is already the newest version (1.31.0-1).\r\nlibssl-dev is already the newest version (1.1.1f-1ubuntu2.10).\r\npython3-yaml is already the newest version (5.3.1-1ubuntu0.1).\r\n0 upgraded, 0 newly installed, 0 to remove and 30 not upgraded.\r\n```\r\n\r\nCould you please help me with this?\r\nThanks in advance!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1034861832","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1188#issuecomment-1034861832","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188","id":1034861832,"node_id":"IC_kwDOA-eq3c49rr0I","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T12:24:54Z","updated_at":"2022-02-10T12:24:54Z","author_association":"MEMBER","body":"To help us better understand things, could you also please share information about the platform you're using as well as how the build process started (build start command and first few lines, not just the last ones)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1034861832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T12:24:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20173951243","type":"IssueCommentEvent","actor":{"id":5675552,"login":"LeShadow","display_login":"LeShadow","gravatar_id":"","url":"https://api.github.com/users/LeShadow","avatar_url":"https://avatars.githubusercontent.com/u/5675552?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/351","id":1124299120,"node_id":"I_kwDOA_fpb85DA3Fw","number":351,"title":"Integrating OpenSSL & Liboqs in Python - SSL Unexpected Message","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2022-02-04T15:01:53Z","updated_at":"2022-02-10T12:57:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nSo for the last few days I have been trying to integrate liboqs and this version of OpenSSL in Python 3.8.11. \r\nThis is basically what I am doing:\r\n\r\n- Configure and compile liboqs with the following configure settings: `cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..`\r\n- Configure and compile openssl with the following configure settings: `./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed`\r\n\r\nNow when I compile Python, it finds that custom openssl installation, I added the paths to my PATH as well.\r\n\r\nHowever, when I then use Python, every SSL connection (even the ones without PQC) are getting an error with SSL \"UNEXPECTED MESSAGE\".\r\n\r\nExample:\r\n ```\r\nStarting new HTTPS connection (1): pypi.org:443\r\nIncremented Retry for (url='/simple/requests/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: UNEXPECTED_MESSAGE] unexpected message (_ssl.c:1131)'))': /simple/requests/\r\n```\r\n\r\nI was wondering if anyone could give me pointers, or get me on the right path, on how to fix this?\r\n\r\nThank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034891354","html_url":"https://github.com/open-quantum-safe/openssl/issues/351#issuecomment-1034891354","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","id":1034891354,"node_id":"IC_kwDOA_fpb849rzBa","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T12:57:32Z","updated_at":"2022-02-10T12:57:32Z","author_association":"NONE","body":"@baentsch \r\n\r\nThank you for your feedback on my findings. Based on your feedback, I would like to propose that a patch is created for Python (with first a focus on version 3.10.2, the first version I got it all working on) where a function is added on SSLContext objects, much like set_ecdh_curve(), one that could bare the name set_group() maybe? \r\n\r\nI think this is the most sensible thing to do in this instance, since this would potentially prepare Python already for the arrival of a version of OpenSSL with Quantum Resistant algorithms in the future? If the patch eventually works, this could be a something that can be picked up by upstream Python later on as well.\r\n\r\nI can generate the oqs-demos docker images afterwards as well and make a PR to the respective PR. \r\n\r\nWhat do you think? If this path is one you'd agree with (and @dstebila as well?), I'd like to take this on as well :)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1034891354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T12:57:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20174679073","type":"IssueCommentEvent","actor":{"id":17710736,"login":"demian91","display_login":"demian91","gravatar_id":"","url":"https://api.github.com/users/demian91","avatar_url":"https://avatars.githubusercontent.com/u/17710736?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1188","id":1129798582,"node_id":"I_kwDOA-eq3c5DV1u2","number":1188,"title":"Failed to build ","user":{"login":"demian91","id":17710736,"node_id":"MDQ6VXNlcjE3NzEwNzM2","avatar_url":"https://avatars.githubusercontent.com/u/17710736?v=4","gravatar_id":"","url":"https://api.github.com/users/demian91","html_url":"https://github.com/demian91","followers_url":"https://api.github.com/users/demian91/followers","following_url":"https://api.github.com/users/demian91/following{/other_user}","gists_url":"https://api.github.com/users/demian91/gists{/gist_id}","starred_url":"https://api.github.com/users/demian91/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/demian91/subscriptions","organizations_url":"https://api.github.com/users/demian91/orgs","repos_url":"https://api.github.com/users/demian91/repos","events_url":"https://api.github.com/users/demian91/events{/privacy}","received_events_url":"https://api.github.com/users/demian91/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-02-10T10:34:00Z","updated_at":"2022-02-10T13:33:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi all, \r\n\r\nWhen i tried following the instructions from the manual, I got an error: \r\n\r\n```\r\nubuntu@asp-proxy-04:~/openssl$ git clone --branch main https://github.com/open-quantum-safe/liboqs.git\r\nCloning into 'liboqs'...\r\nremote: Enumerating objects: 25629, done.\r\nremote: Counting objects: 100% (2989/2989), done.\r\nremote: Compressing objects: 100% (1146/1146), done.\r\nremote: Total 25629 (delta 1928), reused 2687 (delta 1801), pack-reused 22640\r\nReceiving objects: 100% (25629/25629), 133.32 MiB | 6.83 MiB/s, done.\r\nResolving deltas: 100% (18100/18100), done.\r\nubuntu@asp-proxy-04:~/openssl$ cd liboqs/\r\nubuntu@asp-proxy-04:~/openssl/liboqs$  mkdir build && cd build\r\nubuntu@asp-proxy-04:~/openssl/liboqs/build$ cmake -GNinja ..\r\n-- The C compiler identification is GNU 9.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE\r\n-- Found OpenSSL: /usr/local/lib/libcrypto.a (found suitable version \"1.1.1f\", minimum required is \"1.1.1\")\r\n-- Found Doxygen: /usr/bin/doxygen (found version \"1.8.17\") found components: doxygen dot\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/ubuntu/openssl/liboqs/build\r\n[2330/2353] Linking C executable tests/test_hash\r\nFAILED: tests/test_hash\r\n: && /usr/bin/cc    src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600_avx2.dir/KeccakP-1600/avx2/KeccakP-1600-AVX2.S.o src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600times4_avx2.di\r\nr/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c.o src/common/CMakeFiles/common.dir/aes/aes_ossl.c.o src/common/CMakeFiles/common.dir/sha2/sha2_ossl.c.o src/common/CMakeFiles/common.dir/sha3/\r\nxkcp_sha3.c.o src/common/CMakeFiles/common.dir/sha3/xkcp_sha3x4.c.o src/common/CMakeFiles/common.dir/common.c.o src/common/CMakeFiles/common.dir/pqclean_shims/nistseedexpander.c.o src/common/CMakeFi\r\nles/common.dir/pqclean_shims/fips202.c.o src/common/CMakeFiles/common.dir/pqclean_shims/fips202x4.c.o src/common/CMakeFiles/common.dir/rand/rand.c.o src/common/CMakeFiles/common.dir/rand/rand_nist.c\r\n.o tests/CMakeFiles/test_hash.dir/test_hash.c.o  -o tests/test_hash  /usr/local/lib/libcrypto.a  -lm && :\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_lock_new':\r\nthreads_pthread.c:(.text+0x4a): undefined reference to `pthread_rwlock_init'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_read_lock':\r\nthreads_pthread.c:(.text+0x89): undefined reference to `pthread_rwlock_rdlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_write_lock':\r\nthreads_pthread.c:(.text+0xa9): undefined reference to `pthread_rwlock_wrlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_unlock':\r\nthreads_pthread.c:(.text+0xc9): undefined reference to `pthread_rwlock_unlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_lock_free':\r\nthreads_pthread.c:(.text+0xee): undefined reference to `pthread_rwlock_destroy'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_run_once':\r\nthreads_pthread.c:(.text+0x129): undefined reference to `pthread_once'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_init_local':\r\nthreads_pthread.c:(.text+0x149): undefined reference to `pthread_key_create'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_set_local':\r\nthreads_pthread.c:(.text+0x17b): undefined reference to `pthread_setspecific'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_cleanup_local':\r\nthreads_pthread.c:(.text+0x19b): undefined reference to `pthread_key_delete'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `openssl_init_fork_handlers':\r\nthreads_pthread.c:(.text+0x207): undefined reference to `pthread_once'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_get_local':\r\nthreads_pthread.c:(.text+0x167): undefined reference to `pthread_getspecific'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_digestsign':\r\noqs_meth.c:(.text+0x2c2): undefined reference to `OQS_SIG_sign'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_free':\r\noqs_meth.c:(.text+0x28a2): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_digestverify':\r\noqs_meth.c:(.text+0x2fa1): undefined reference to `OQS_SIG_verify'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_key_init':\r\noqs_meth.c:(.text+0x3802): undefined reference to `OQS_SIG_alg_is_enabled'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x380e): undefined reference to `OQS_SIG_new'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x3958): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_keygen':\r\noqs_meth.c:(.text+0x3ae2): undefined reference to `OQS_SIG_keypair'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x3b6a): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_priv_decode':\r\noqs_meth.c:(.text+0x40ee): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_pub_decode':\r\noqs_meth.c:(.text+0x44fe): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `OQSKEM_options':\r\noqs_meth.c:(.text+0x4623): undefined reference to `OQS_KEM_alg_is_enabled'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `OQSSIG_options':\r\noqs_meth.c:(.text+0x46e3): undefined reference to `OQS_SIG_alg_is_enabled'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_globallookup':\r\ndso_dlfcn.c:(.text+0x17): undefined reference to `dlopen'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x2a): undefined reference to `dlsym'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x35): undefined reference to `dlclose'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_bind_func':\r\ndso_dlfcn.c:(.text+0x1b7): undefined reference to `dlsym'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x282): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_load':\r\ndso_dlfcn.c:(.text+0x2f5): undefined reference to `dlopen'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x369): undefined reference to `dlclose'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x3a5): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_pathbyaddr':\r\ndso_dlfcn.c:(.text+0x466): undefined reference to `dladdr'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x4d7): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_unload':\r\ndso_dlfcn.c:(.text+0x6b8): undefined reference to `dlclose'\r\ncollect2: error: ld returned 1 exit status\r\n[2332/2353] Linking C executable tests/test_aes\r\nFAILED: tests/test_aes\r\n: && /usr/bin/cc    src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600_avx2.dir/KeccakP-1600/avx2/KeccakP-1600-AVX2.S.o src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600times4_avx2.di\r\nr/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c.o src/common/CMakeFiles/common.dir/aes/aes_ossl.c.o src/common/CMakeFiles/common.dir/sha2/sha2_ossl.c.o src/common/CMakeFiles/common.dir/sha3/\r\nxkcp_sha3.c.o src/common/CMakeFiles/common.dir/sha3/xkcp_sha3x4.c.o src/common/CMakeFiles/common.dir/common.c.o src/common/CMakeFiles/common.dir/pqclean_shims/nistseedexpander.c.o src/common/CMakeFi\r\nles/common.dir/pqclean_shims/fips202.c.o src/common/CMakeFiles/common.dir/pqclean_shims/fips202x4.c.o src/common/CMakeFiles/common.dir/rand/rand.c.o src/common/CMakeFiles/common.dir/rand/rand_nist.c\r\n.o tests/CMakeFiles/test_aes.dir/test_aes.c.o  -o tests/test_aes  /usr/local/lib/libcrypto.a  -lm && :\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_lock_new':\r\nthreads_pthread.c:(.text+0x4a): undefined reference to `pthread_rwlock_init'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_read_lock':\r\nthreads_pthread.c:(.text+0x89): undefined reference to `pthread_rwlock_rdlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_write_lock':\r\nthreads_pthread.c:(.text+0xa9): undefined reference to `pthread_rwlock_wrlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_unlock':\r\nthreads_pthread.c:(.text+0xc9): undefined reference to `pthread_rwlock_unlock'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_lock_free':\r\nthreads_pthread.c:(.text+0xee): undefined reference to `pthread_rwlock_destroy'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_run_once':\r\nthreads_pthread.c:(.text+0x129): undefined reference to `pthread_once'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_init_local':\r\nthreads_pthread.c:(.text+0x149): undefined reference to `pthread_key_create'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_set_local':\r\nthreads_pthread.c:(.text+0x17b): undefined reference to `pthread_setspecific'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_cleanup_local':\r\nthreads_pthread.c:(.text+0x19b): undefined reference to `pthread_key_delete'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `openssl_init_fork_handlers':\r\nthreads_pthread.c:(.text+0x207): undefined reference to `pthread_once'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(threads_pthread.o): in function `CRYPTO_THREAD_get_local':\r\nthreads_pthread.c:(.text+0x167): undefined reference to `pthread_getspecific'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_digestsign':\r\noqs_meth.c:(.text+0x2c2): undefined reference to `OQS_SIG_sign'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_free':\r\noqs_meth.c:(.text+0x28a2): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_digestverify':\r\noqs_meth.c:(.text+0x2fa1): undefined reference to `OQS_SIG_verify'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_key_init':\r\noqs_meth.c:(.text+0x3802): undefined reference to `OQS_SIG_alg_is_enabled'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x380e): undefined reference to `OQS_SIG_new'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x3958): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `pkey_oqs_keygen':\r\noqs_meth.c:(.text+0x3ae2): undefined reference to `OQS_SIG_keypair'\r\n/usr/bin/ld: oqs_meth.c:(.text+0x3b6a): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_priv_decode':\r\noqs_meth.c:(.text+0x40ee): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `oqs_pub_decode':\r\noqs_meth.c:(.text+0x44fe): undefined reference to `OQS_SIG_free'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `OQSKEM_options':\r\noqs_meth.c:(.text+0x4623): undefined reference to `OQS_KEM_alg_is_enabled'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(oqs_meth.o): in function `OQSSIG_options':\r\noqs_meth.c:(.text+0x46e3): undefined reference to `OQS_SIG_alg_is_enabled'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_globallookup':\r\ndso_dlfcn.c:(.text+0x17): undefined reference to `dlopen'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x2a): undefined reference to `dlsym'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x35): undefined reference to `dlclose'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_bind_func':\r\ndso_dlfcn.c:(.text+0x1b7): undefined reference to `dlsym'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x282): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_load':\r\ndso_dlfcn.c:(.text+0x2f5): undefined reference to `dlopen'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x369): undefined reference to `dlclose'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x3a5): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_pathbyaddr':\r\ndso_dlfcn.c:(.text+0x466): undefined reference to `dladdr'\r\n/usr/bin/ld: dso_dlfcn.c:(.text+0x4d7): undefined reference to `dlerror'\r\n/usr/bin/ld: /usr/local/lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_unload':\r\ndso_dlfcn.c:(.text+0x6b8): undefined reference to `dlclose'\r\ncollect2: error: ld returned 1 exit status\r\n[2339/2353] Building C object tests/CMakeFiles/test_sig_mem.dir/test_sig_mem.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\nAll the dependencies were already installed! \r\n\r\n```\r\nubuntu@asp-proxy-04:~/openssl/liboqs/build$   sudo apt install astyle cmake gcc ninja-build libssl-dev python3-pytest python3-pytest-xdist unzip xsltproc doxygen graphviz python3-yaml\r\nReading package lists... Done\r\nBuilding dependency tree\r\nReading state information... Done\r\ncmake is already the newest version (3.16.3-1ubuntu1).\r\ngcc is already the newest version (4:9.3.0-1ubuntu2).\r\nunzip is already the newest version (6.0-25ubuntu1).\r\nxsltproc is already the newest version (1.1.34-4).\r\nastyle is already the newest version (3.1-2build1).\r\ndoxygen is already the newest version (1.8.17-0ubuntu2).\r\ngraphviz is already the newest version (2.42.2-3build2).\r\nninja-build is already the newest version (1.10.0-1build1).\r\npython3-pytest is already the newest version (4.6.9-1).\r\npython3-pytest-xdist is already the newest version (1.31.0-1).\r\nlibssl-dev is already the newest version (1.1.1f-1ubuntu2.10).\r\npython3-yaml is already the newest version (5.3.1-1ubuntu0.1).\r\n0 upgraded, 0 newly installed, 0 to remove and 30 not upgraded.\r\n```\r\n\r\nCould you please help me with this?\r\nThanks in advance!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1034927438","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1188#issuecomment-1034927438","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1188","id":1034927438,"node_id":"IC_kwDOA-eq3c49r71O","user":{"login":"demian91","id":17710736,"node_id":"MDQ6VXNlcjE3NzEwNzM2","avatar_url":"https://avatars.githubusercontent.com/u/17710736?v=4","gravatar_id":"","url":"https://api.github.com/users/demian91","html_url":"https://github.com/demian91","followers_url":"https://api.github.com/users/demian91/followers","following_url":"https://api.github.com/users/demian91/following{/other_user}","gists_url":"https://api.github.com/users/demian91/gists{/gist_id}","starred_url":"https://api.github.com/users/demian91/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/demian91/subscriptions","organizations_url":"https://api.github.com/users/demian91/orgs","repos_url":"https://api.github.com/users/demian91/repos","events_url":"https://api.github.com/users/demian91/events{/privacy}","received_events_url":"https://api.github.com/users/demian91/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T13:33:19Z","updated_at":"2022-02-10T13:33:19Z","author_association":"NONE","body":"Yes. I have attached a full output: \r\n\r\n[out.txt](https://github.com/open-quantum-safe/liboqs/files/8041329/out.txt)\r\n\r\nI am using \"Ubuntu 20.04.3 LTS\".\r\n\r\nThanks for the quick reply! If you need any other info please let me know :)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1034927438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T13:33:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20175775730","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1187","id":1126103201,"node_id":"I_kwDOA-eq3c5DHvih","number":1187,"title":"Constant time checks for Kyber on AVX2 failing","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":5,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-02-07T14:57:01Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2022-02-07T14:57:01Z","updated_at":"2022-02-10T14:25:31Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This was picked up by the weekly builds: https://github.com/open-quantum-safe/liboqs/runs/5080898885?check_suite_focus=true#step:6:339\r\n\r\nNot sure what changed -- no changes to the Kyber Intel code in a few months, as far as I can tell.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1034982843","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1187#issuecomment-1034982843","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187","id":1034982843,"node_id":"IC_kwDOA-eq3c49sJW7","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T14:25:31Z","updated_at":"2022-02-10T14:25:31Z","author_association":"MEMBER","body":"I re-ran locally on a machine with AVX2 and wasn't able to reproduce -- the tests all passed.  I've triggered the job to re-run on Github Actions, we'll see if it recurs.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1034982843/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T14:25:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20178724747","type":"IssueCommentEvent","actor":{"id":96874929,"login":"igorbarshteyn","display_login":"igorbarshteyn","gravatar_id":"","url":"https://api.github.com/users/igorbarshteyn","avatar_url":"https://avatars.githubusercontent.com/u/96874929?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/124","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/124/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/124/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/124/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/124","id":1130402348,"node_id":"PR_kwDODP--n84yZmm9","number":124,"title":"QUIC docker images","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-02-10T16:18:00Z","updated_at":"2022-02-10T16:29:41Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/pulls/124","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/124","diff_url":"https://github.com/open-quantum-safe/oqs-demos/pull/124.diff","patch_url":"https://github.com/open-quantum-safe/oqs-demos/pull/124.patch","merged_at":null},"body":"Fixes #122 \r\n\r\nAlso requesting review by @igorbarshteyn \r\n\r\nQuestion to everyone: Should we also add this image to CCI (and auto-push to docker hub)? Seems reasonable but can take quite some time/resources.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/124/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1035129346","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/124#issuecomment-1035129346","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/124","id":1035129346,"node_id":"IC_kwDODP--n849stIC","user":{"login":"igorbarshteyn","id":96874929,"node_id":"U_kgDOBcYxsQ","avatar_url":"https://avatars.githubusercontent.com/u/96874929?v=4","gravatar_id":"","url":"https://api.github.com/users/igorbarshteyn","html_url":"https://github.com/igorbarshteyn","followers_url":"https://api.github.com/users/igorbarshteyn/followers","following_url":"https://api.github.com/users/igorbarshteyn/following{/other_user}","gists_url":"https://api.github.com/users/igorbarshteyn/gists{/gist_id}","starred_url":"https://api.github.com/users/igorbarshteyn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/igorbarshteyn/subscriptions","organizations_url":"https://api.github.com/users/igorbarshteyn/orgs","repos_url":"https://api.github.com/users/igorbarshteyn/repos","events_url":"https://api.github.com/users/igorbarshteyn/events{/privacy}","received_events_url":"https://api.github.com/users/igorbarshteyn/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T16:29:41Z","updated_at":"2022-02-10T16:29:41Z","author_association":"CONTRIBUTOR","body":"Reviewed. Thank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1035129346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T16:29:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20179056384","type":"IssueCommentEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/119","id":1129218580,"node_id":"I_kwDOBsoLV85DToIU","number":119,"title":"v8 branch pure-PQ KEMs do not use mpint representation for shared_secret in SSH KDF","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-02-09T23:57:50Z","updated_at":"2022-02-10T16:45:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When deriving the various keys in `kex_derive_keys`, the pure-PQ functions that handle encrypting and decrypting the shared secret, `kex_kem_generic_enc` and `kex_kem_generic_dec`, write only the shared secret data itself into the buffer that is later input to the KDF. They call `sshbuf_reserve` and pass a pointer directly into the buffer contents to `OQS_KEM_encaps` or `_decaps`. The SSH spec requires the shared secret input to the KDF to be in the mpint format, which has 4 bytes of length prepended to it. This causes the keys to be derived in a manner not compliant with the spec. In `kex_derive_keys`, `shared_secret` ends up being 16 bytes, for example, when it should be 20 (4 bytes length + 16 bytes secret).\r\n\r\nThe relevant code is at https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqs.c#L91-L98 for encrypting, and https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqs.c#L130-L135 for decrypting.\r\n\r\nThe v7.9 branch had this correct, and there's even a note calling it out at https://github.com/open-quantum-safe/openssh/blob/f41bbe652c522db1bec388f82db369e4e5f0f405/kexpqoqsc.c#L297-L310 and https://github.com/open-quantum-safe/openssh/blob/f41bbe652c522db1bec388f82db369e4e5f0f405/kexpqoqss.c#L282-L295. The shared secret data there is written into the buffer as an ssh_string, which prepends the same 4 bytes of length that makes it conform to the mpint format.\r\n\r\nAs an aside, I believe the hybrid case is correct, but I haven't been able to test it yet. `kex_kem_generic_with_ec_enc` and `kex_kem_generic_with_ec_dec` both write the shared secret to the relevant buffer with `sshbuf_put_string`, in the same way the v7.9 code does, and so the prepended length should be present. See https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqsecdh.c#L337-L343 and https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqsecdh.c#L262-L272.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1035148146","html_url":"https://github.com/open-quantum-safe/openssh/issues/119#issuecomment-1035148146","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119","id":1035148146,"node_id":"IC_kwDOBsoLV849sxty","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T16:45:13Z","updated_at":"2022-02-10T16:45:13Z","author_association":"NONE","body":"It seems like this danger exists no matter the key exchange method, and is not unique to pure PQ KEM. That's an argument to change the SSH spec's treatment of the shared secret entirely, and that's a way bigger problem than I want to tackle here!\r\n\r\nFor things we can affect, I'd favor sticking with mpint _for now_ for the following reasons:\r\n1. The v7 branch in both pure and hybrid KEMs use this format, as does the v8 branch for hybrid. We avoid needing a special case if we stick with the same format for pure PQ.\r\n2. The OQS implementations are technically non-compliant because they internally deal in SSH strings and so don't drop any leading zeroes if they are present, but because the KDF ingests the shared secret as just a byte array, this doesn't break anything, so long as both sides have this behavior. This means the pure/hybrid KEMs end up guaranteeing a constant length for the shared secret and don't have the potential side-channel risk. Right now this relies on the implementations sticking to this non-standard behavior, but that seems acceptable to me pending a resolution on the larger overall issue of using mpints.\r\n\r\nThat's my view, but for my near-term goal of updating libssh to interoperate with the v8 branch, we can take either path. \r\n\r\nLonger-term, I agree it's best if the shared secret is a constant length, whenever an official spec for these KEMs comes out for SSH.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1035148146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T16:45:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20181897891","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1187","id":1126103201,"node_id":"I_kwDOA-eq3c5DHvih","number":1187,"title":"Constant time checks for Kyber on AVX2 failing","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":5,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-02-07T14:57:01Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-02-07T14:57:01Z","updated_at":"2022-02-10T18:57:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This was picked up by the weekly builds: https://github.com/open-quantum-safe/liboqs/runs/5080898885?check_suite_focus=true#step:6:339\r\n\r\nNot sure what changed -- no changes to the Kyber Intel code in a few months, as far as I can tell.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1035343465","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1187#issuecomment-1035343465","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1187","id":1035343465,"node_id":"IC_kwDOA-eq3c49thZp","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T18:57:57Z","updated_at":"2022-02-10T18:57:57Z","author_association":"CONTRIBUTOR","body":"I was able to reproduce it, but it only occurs after a few runs. The reason seems to be because the AVX2 version of Kyber uses both an AVX2 version and a non-AVX2 version for rejection sampling (rej_uniform). The non-AVX2 version is only used if more samples are needed.\r\n\r\nA suppression rule for the non-AVX2 version of rej_uniform is currently missing and would need to be added.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1035343465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T18:57:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20182019845","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/119","id":1129218580,"node_id":"I_kwDOBsoLV85DToIU","number":119,"title":"v8 branch pure-PQ KEMs do not use mpint representation for shared_secret in SSH KDF","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-02-09T23:57:50Z","updated_at":"2022-02-10T19:03:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When deriving the various keys in `kex_derive_keys`, the pure-PQ functions that handle encrypting and decrypting the shared secret, `kex_kem_generic_enc` and `kex_kem_generic_dec`, write only the shared secret data itself into the buffer that is later input to the KDF. They call `sshbuf_reserve` and pass a pointer directly into the buffer contents to `OQS_KEM_encaps` or `_decaps`. The SSH spec requires the shared secret input to the KDF to be in the mpint format, which has 4 bytes of length prepended to it. This causes the keys to be derived in a manner not compliant with the spec. In `kex_derive_keys`, `shared_secret` ends up being 16 bytes, for example, when it should be 20 (4 bytes length + 16 bytes secret).\r\n\r\nThe relevant code is at https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqs.c#L91-L98 for encrypting, and https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqs.c#L130-L135 for decrypting.\r\n\r\nThe v7.9 branch had this correct, and there's even a note calling it out at https://github.com/open-quantum-safe/openssh/blob/f41bbe652c522db1bec388f82db369e4e5f0f405/kexpqoqsc.c#L297-L310 and https://github.com/open-quantum-safe/openssh/blob/f41bbe652c522db1bec388f82db369e4e5f0f405/kexpqoqss.c#L282-L295. The shared secret data there is written into the buffer as an ssh_string, which prepends the same 4 bytes of length that makes it conform to the mpint format.\r\n\r\nAs an aside, I believe the hybrid case is correct, but I haven't been able to test it yet. `kex_kem_generic_with_ec_enc` and `kex_kem_generic_with_ec_dec` both write the shared secret to the relevant buffer with `sshbuf_put_string`, in the same way the v7.9 code does, and so the prepended length should be present. See https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqsecdh.c#L337-L343 and https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqsecdh.c#L262-L272.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1035351979","html_url":"https://github.com/open-quantum-safe/openssh/issues/119#issuecomment-1035351979","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119","id":1035351979,"node_id":"IC_kwDOBsoLV849tjer","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T19:03:50Z","updated_at":"2022-02-10T19:03:50Z","author_association":"MEMBER","body":"> It seems like this danger exists no matter the key exchange method, and is not unique to pure PQ KEM. That's an argument to change the SSH spec's treatment of the shared secret entirely, and that's a way bigger problem than I want to tackle here!\r\n\r\nFair enough.\r\n\r\n> For things we can affect, I'd favor sticking with mpint _for now_ for the following reasons:\r\n> \r\n>     1. The v7 branch in both pure and hybrid KEMs use this format, as does the v8 branch for hybrid. We avoid needing a special case if we stick with the same format for pure PQ.\r\n\r\nOkay.  If the SSH hybrid Internet-Draft switches from mpints to strings, then we can revisit.\r\n\r\n>     2. The OQS implementations are technically non-compliant because they internally deal in SSH strings and so don't drop any leading zeroes if they are present, but because the KDF ingests the shared secret as just a byte array, this doesn't break anything, so long as both sides have this behavior. This means the pure/hybrid KEMs end up guaranteeing a constant length for the shared secret and don't have the potential side-channel risk. Right now this relies on the implementations sticking to this non-standard behavior, but that seems acceptable to me pending a resolution on the larger overall issue of using mpints.\r\n\r\nI'm a bit confused by this point.  Are you saying that in the places where our implementations are saying they're using mpint's, they are actually not dropping leading zeros?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1035351979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T19:03:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20183577137","type":"IssueCommentEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/119","id":1129218580,"node_id":"I_kwDOBsoLV85DToIU","number":119,"title":"v8 branch pure-PQ KEMs do not use mpint representation for shared_secret in SSH KDF","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-02-09T23:57:50Z","updated_at":"2022-02-10T20:20:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When deriving the various keys in `kex_derive_keys`, the pure-PQ functions that handle encrypting and decrypting the shared secret, `kex_kem_generic_enc` and `kex_kem_generic_dec`, write only the shared secret data itself into the buffer that is later input to the KDF. They call `sshbuf_reserve` and pass a pointer directly into the buffer contents to `OQS_KEM_encaps` or `_decaps`. The SSH spec requires the shared secret input to the KDF to be in the mpint format, which has 4 bytes of length prepended to it. This causes the keys to be derived in a manner not compliant with the spec. In `kex_derive_keys`, `shared_secret` ends up being 16 bytes, for example, when it should be 20 (4 bytes length + 16 bytes secret).\r\n\r\nThe relevant code is at https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqs.c#L91-L98 for encrypting, and https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqs.c#L130-L135 for decrypting.\r\n\r\nThe v7.9 branch had this correct, and there's even a note calling it out at https://github.com/open-quantum-safe/openssh/blob/f41bbe652c522db1bec388f82db369e4e5f0f405/kexpqoqsc.c#L297-L310 and https://github.com/open-quantum-safe/openssh/blob/f41bbe652c522db1bec388f82db369e4e5f0f405/kexpqoqss.c#L282-L295. The shared secret data there is written into the buffer as an ssh_string, which prepends the same 4 bytes of length that makes it conform to the mpint format.\r\n\r\nAs an aside, I believe the hybrid case is correct, but I haven't been able to test it yet. `kex_kem_generic_with_ec_enc` and `kex_kem_generic_with_ec_dec` both write the shared secret to the relevant buffer with `sshbuf_put_string`, in the same way the v7.9 code does, and so the prepended length should be present. See https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqsecdh.c#L337-L343 and https://github.com/open-quantum-safe/openssh/blob/0c5eac6a3ba249f73bb953745cf109bdf281eafd/kexoqsecdh.c#L262-L272.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1035460497","html_url":"https://github.com/open-quantum-safe/openssh/issues/119#issuecomment-1035460497","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/119","id":1035460497,"node_id":"IC_kwDOBsoLV849t9-R","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"created_at":"2022-02-10T20:20:54Z","updated_at":"2022-02-10T20:20:54Z","author_association":"NONE","body":"> I'm a bit confused by this point. Are you saying that in the places where our implementations are saying they're using mpint's, they are actually not dropping leading zeros?\r\n\r\nFor PQ and hybrid KEMs, that’s correct. Internally they’re handled as byte arrays and written out as SSH strings. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1035460497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-10T20:20:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
