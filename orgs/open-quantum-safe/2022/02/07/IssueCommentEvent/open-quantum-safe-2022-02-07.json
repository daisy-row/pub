{"id":"20100139623","type":"IssueCommentEvent","actor":{"id":5675552,"login":"LeShadow","display_login":"LeShadow","gravatar_id":"","url":"https://api.github.com/users/LeShadow","avatar_url":"https://avatars.githubusercontent.com/u/5675552?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/351","id":1124299120,"node_id":"I_kwDOA_fpb85DA3Fw","number":351,"title":"Integrating OpenSSL & Liboqs in Python - SSL Unexpected Message","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-02-04T15:01:53Z","updated_at":"2022-02-07T02:19:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nSo for the last few days I have been trying to integrate liboqs and this version of OpenSSL in Python 3.8.11. \r\nThis is basically what I am doing:\r\n\r\n- Configure and compile liboqs with the following configure settings: `cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..`\r\n- Configure and compile openssl with the following configure settings: `./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed`\r\n\r\nNow when I compile Python, it finds that custom openssl installation, I added the paths to my PATH as well.\r\n\r\nHowever, when I then use Python, every SSL connection (even the ones without PQC) are getting an error with SSL \"UNEXPECTED MESSAGE\".\r\n\r\nExample:\r\n ```\r\nStarting new HTTPS connection (1): pypi.org:443\r\nIncremented Retry for (url='/simple/requests/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: UNEXPECTED_MESSAGE] unexpected message (_ssl.c:1131)'))': /simple/requests/\r\n```\r\n\r\nI was wondering if anyone could give me pointers, or get me on the right path, on how to fix this?\r\n\r\nThank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1031008148","html_url":"https://github.com/open-quantum-safe/openssl/issues/351#issuecomment-1031008148","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","id":1031008148,"node_id":"IC_kwDOA_fpb849c--U","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"created_at":"2022-02-07T02:19:09Z","updated_at":"2022-02-07T02:19:09Z","author_association":"NONE","body":"Current \"findings\" so far:\r\n\r\nIf we run the tests, after compiling Python 3.8.11, then we get the message I mentioned earlier. \r\nStrace doesn't really show us what is going wrong, but I am also not the best at interpreting that either. \r\n\r\nNow I created a very simple python script that basically just tries a connection to one of the test servers, like this:\r\n\r\n`\r\nimport urllib.request\r\nwith urllib.request.urlopen('https://test.openquantumsafe.org:6017') as response:\r\n   html = response.read()\r\n`\r\n\r\nNow, instead of getting the above error, we are getting the following error:\r\n`\r\nTraceback (most recent call last):\r\n  File \"/opt/python_installed/lib/python3.8/urllib/request.py\", line 1354, in do_open\r\n    h.request(req.get_method(), req.selector, req.data, headers,\r\n  File \"/opt/python_installed/lib/python3.8/http/client.py\", line 1256, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/opt/python_installed/lib/python3.8/http/client.py\", line 1302, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/opt/python_installed/lib/python3.8/http/client.py\", line 1251, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/opt/python_installed/lib/python3.8/http/client.py\", line 1011, in _send_output\r\n    self.send(msg)\r\n  File \"/opt/python_installed/lib/python3.8/http/client.py\", line 951, in send\r\n    self.connect()\r\n  File \"/opt/python_installed/lib/python3.8/http/client.py\", line 1425, in connect\r\n    self.sock = self._context.wrap_socket(self.sock,\r\n  File \"/opt/python_installed/lib/python3.8/ssl.py\", line 500, in wrap_socket\r\n    return self.sslsocket_class._create(\r\n  File \"/opt/python_installed/lib/python3.8/ssl.py\", line 1040, in _create\r\n    self.do_handshake()\r\n  File \"/opt/python_installed/lib/python3.8/ssl.py\", line 1309, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLError: [SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1131)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test_seb.py\", line 2, in <module>\r\n    with urllib.request.urlopen('https://test.openquantumsafe.org:6017') as response:\r\n  File \"/opt/python_installed/lib/python3.8/urllib/request.py\", line 222, in urlopen\r\n    return opener.open(url, data, timeout)\r\n  File \"/opt/python_installed/lib/python3.8/urllib/request.py\", line 525, in open\r\n    response = self._open(req, data)\r\n  File \"/opt/python_installed/lib/python3.8/urllib/request.py\", line 542, in _open\r\n    result = self._call_chain(self.handle_open, protocol, protocol +\r\n  File \"/opt/python_installed/lib/python3.8/urllib/request.py\", line 502, in _call_chain\r\n    result = func(*args)\r\n  File \"/opt/python_installed/lib/python3.8/urllib/request.py\", line 1397, in https_open\r\n    return self.do_open(http.client.HTTPSConnection, req,\r\n  File \"/opt/python_installed/lib/python3.8/urllib/request.py\", line 1357, in do_open\r\n    raise URLError(err)\r\nurllib.error.URLError: <urlopen error [SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1131)>\r\n`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1031008148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-07T02:19:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20101673493","type":"IssueCommentEvent","actor":{"id":60723218,"login":"Youngbeom94","display_login":"Youngbeom94","gravatar_id":"","url":"https://api.github.com/users/Youngbeom94","avatar_url":"https://avatars.githubusercontent.com/u/60723218?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1186","id":1122679691,"node_id":"I_kwDOA-eq3c5C6ruL","number":1186,"title":"using ARMv8 Assembly for liboqs","user":{"login":"Youngbeom94","id":60723218,"node_id":"MDQ6VXNlcjYwNzIzMjE4","avatar_url":"https://avatars.githubusercontent.com/u/60723218?v=4","gravatar_id":"","url":"https://api.github.com/users/Youngbeom94","html_url":"https://github.com/Youngbeom94","followers_url":"https://api.github.com/users/Youngbeom94/followers","following_url":"https://api.github.com/users/Youngbeom94/following{/other_user}","gists_url":"https://api.github.com/users/Youngbeom94/gists{/gist_id}","starred_url":"https://api.github.com/users/Youngbeom94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Youngbeom94/subscriptions","organizations_url":"https://api.github.com/users/Youngbeom94/orgs","repos_url":"https://api.github.com/users/Youngbeom94/repos","events_url":"https://api.github.com/users/Youngbeom94/events{/privacy}","received_events_url":"https://api.github.com/users/Youngbeom94/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-02-03T05:45:04Z","updated_at":"2022-02-07T05:27:05Z","closed_at":"2022-02-07T05:27:05Z","author_association":"NONE","active_lock_reason":null,"body":"I'm trying to replace NTT code with assembly using NEON and building for integration with liboqs. The implementation environment is ARMv8.2 based ubuntu environment, and the target algorithm is dilithium. However, the build does not proceed with an error about the assembly item at compile time. Looking at the error items, it seems that CMAKE does not build based on ARMv8.\r\n\r\nExamples of error items are as follows.\r\n[../~/asm.S : 312:12 error : invalid suffix \"b\" on floating constant, MOV v26.16b, v2.16b]\r\n\r\nAre there any build options I need to modify if leveraging assemblies? I didn't find that issue in various documents including the README.txt.\r\n![화면 캡처 2022-02-03 143728](https://user-images.githubusercontent.com/60723218/152288030-b1f3cd0b-968b-4d17-8321-16ce754a8f9f.jpg)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1031089040","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1186#issuecomment-1031089040","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186","id":1031089040,"node_id":"IC_kwDOA-eq3c49dSuQ","user":{"login":"Youngbeom94","id":60723218,"node_id":"MDQ6VXNlcjYwNzIzMjE4","avatar_url":"https://avatars.githubusercontent.com/u/60723218?v=4","gravatar_id":"","url":"https://api.github.com/users/Youngbeom94","html_url":"https://github.com/Youngbeom94","followers_url":"https://api.github.com/users/Youngbeom94/followers","following_url":"https://api.github.com/users/Youngbeom94/following{/other_user}","gists_url":"https://api.github.com/users/Youngbeom94/gists{/gist_id}","starred_url":"https://api.github.com/users/Youngbeom94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Youngbeom94/subscriptions","organizations_url":"https://api.github.com/users/Youngbeom94/orgs","repos_url":"https://api.github.com/users/Youngbeom94/repos","events_url":"https://api.github.com/users/Youngbeom94/events{/privacy}","received_events_url":"https://api.github.com/users/Youngbeom94/received_events","type":"User","site_admin":false},"created_at":"2022-02-07T05:27:05Z","updated_at":"2022-02-07T05:27:05Z","author_association":"NONE","body":"> Hi there,\r\n> \r\n> I haven't seen this error before. Just to clarify, these are asm files you are adding to the reference implementation from pqcrystals? What are the build commands you are using?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1031089040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-07T05:27:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20101747754","type":"IssueCommentEvent","actor":{"id":60723218,"login":"Youngbeom94","display_login":"Youngbeom94","gravatar_id":"","url":"https://api.github.com/users/Youngbeom94","avatar_url":"https://avatars.githubusercontent.com/u/60723218?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1186","id":1122679691,"node_id":"I_kwDOA-eq3c5C6ruL","number":1186,"title":"using ARMv8 Assembly for liboqs","user":{"login":"Youngbeom94","id":60723218,"node_id":"MDQ6VXNlcjYwNzIzMjE4","avatar_url":"https://avatars.githubusercontent.com/u/60723218?v=4","gravatar_id":"","url":"https://api.github.com/users/Youngbeom94","html_url":"https://github.com/Youngbeom94","followers_url":"https://api.github.com/users/Youngbeom94/followers","following_url":"https://api.github.com/users/Youngbeom94/following{/other_user}","gists_url":"https://api.github.com/users/Youngbeom94/gists{/gist_id}","starred_url":"https://api.github.com/users/Youngbeom94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Youngbeom94/subscriptions","organizations_url":"https://api.github.com/users/Youngbeom94/orgs","repos_url":"https://api.github.com/users/Youngbeom94/repos","events_url":"https://api.github.com/users/Youngbeom94/events{/privacy}","received_events_url":"https://api.github.com/users/Youngbeom94/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-02-03T05:45:04Z","updated_at":"2022-02-07T05:35:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I'm trying to replace NTT code with assembly using NEON and building for integration with liboqs. The implementation environment is ARMv8.2 based ubuntu environment, and the target algorithm is dilithium. However, the build does not proceed with an error about the assembly item at compile time. Looking at the error items, it seems that CMAKE does not build based on ARMv8.\r\n\r\nExamples of error items are as follows.\r\n[../~/asm.S : 312:12 error : invalid suffix \"b\" on floating constant, MOV v26.16b, v2.16b]\r\n\r\nAre there any build options I need to modify if leveraging assemblies? I didn't find that issue in various documents including the README.txt.\r\n![화면 캡처 2022-02-03 143728](https://user-images.githubusercontent.com/60723218/152288030-b1f3cd0b-968b-4d17-8321-16ce754a8f9f.jpg)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1031092469","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1186#issuecomment-1031092469","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186","id":1031092469,"node_id":"IC_kwDOA-eq3c49dTj1","user":{"login":"Youngbeom94","id":60723218,"node_id":"MDQ6VXNlcjYwNzIzMjE4","avatar_url":"https://avatars.githubusercontent.com/u/60723218?v=4","gravatar_id":"","url":"https://api.github.com/users/Youngbeom94","html_url":"https://github.com/Youngbeom94","followers_url":"https://api.github.com/users/Youngbeom94/followers","following_url":"https://api.github.com/users/Youngbeom94/following{/other_user}","gists_url":"https://api.github.com/users/Youngbeom94/gists{/gist_id}","starred_url":"https://api.github.com/users/Youngbeom94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Youngbeom94/subscriptions","organizations_url":"https://api.github.com/users/Youngbeom94/orgs","repos_url":"https://api.github.com/users/Youngbeom94/repos","events_url":"https://api.github.com/users/Youngbeom94/events{/privacy}","received_events_url":"https://api.github.com/users/Youngbeom94/received_events","type":"User","site_admin":false},"created_at":"2022-02-07T05:35:27Z","updated_at":"2022-02-07T05:35:27Z","author_association":"NONE","body":"> Hi there,\r\n> \r\n> I haven't seen this error before. Just to clarify, these are asm files you are adding to the reference implementation from pqcrystals? What are the build commands you are using?\r\n\r\nThanks for your interest, this is not the official implementation provided by pqcrystals. For accelerating specific functions, we replaced function implementation from C to Asm. Since there is an additional generated file(asm.S), we modified the Makefile and proceeded with the build, but the above error occurred.\r\n\r\nWe've actually verified that the asm code we've written works on that platform. However, when I try to merge with liboqs I get the following error:","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1031092469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-07T05:35:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20102333922","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1186","id":1122679691,"node_id":"I_kwDOA-eq3c5C6ruL","number":1186,"title":"using ARMv8 Assembly for liboqs","user":{"login":"Youngbeom94","id":60723218,"node_id":"MDQ6VXNlcjYwNzIzMjE4","avatar_url":"https://avatars.githubusercontent.com/u/60723218?v=4","gravatar_id":"","url":"https://api.github.com/users/Youngbeom94","html_url":"https://github.com/Youngbeom94","followers_url":"https://api.github.com/users/Youngbeom94/followers","following_url":"https://api.github.com/users/Youngbeom94/following{/other_user}","gists_url":"https://api.github.com/users/Youngbeom94/gists{/gist_id}","starred_url":"https://api.github.com/users/Youngbeom94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Youngbeom94/subscriptions","organizations_url":"https://api.github.com/users/Youngbeom94/orgs","repos_url":"https://api.github.com/users/Youngbeom94/repos","events_url":"https://api.github.com/users/Youngbeom94/events{/privacy}","received_events_url":"https://api.github.com/users/Youngbeom94/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-02-03T05:45:04Z","updated_at":"2022-02-07T06:33:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I'm trying to replace NTT code with assembly using NEON and building for integration with liboqs. The implementation environment is ARMv8.2 based ubuntu environment, and the target algorithm is dilithium. However, the build does not proceed with an error about the assembly item at compile time. Looking at the error items, it seems that CMAKE does not build based on ARMv8.\r\n\r\nExamples of error items are as follows.\r\n[../~/asm.S : 312:12 error : invalid suffix \"b\" on floating constant, MOV v26.16b, v2.16b]\r\n\r\nAre there any build options I need to modify if leveraging assemblies? I didn't find that issue in various documents including the README.txt.\r\n![화면 캡처 2022-02-03 143728](https://user-images.githubusercontent.com/60723218/152288030-b1f3cd0b-968b-4d17-8321-16ce754a8f9f.jpg)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1031122531","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1186#issuecomment-1031122531","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1186","id":1031122531,"node_id":"IC_kwDOA-eq3c49da5j","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-02-07T06:33:45Z","updated_at":"2022-02-07T06:33:45Z","author_association":"MEMBER","body":"> I get the following error:\r\n\r\nSomething seems to be missing here (?)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1031122531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-07T06:33:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20102696050","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/351","id":1124299120,"node_id":"I_kwDOA_fpb85DA3Fw","number":351,"title":"Integrating OpenSSL & Liboqs in Python - SSL Unexpected Message","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-02-04T15:01:53Z","updated_at":"2022-02-07T07:07:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nSo for the last few days I have been trying to integrate liboqs and this version of OpenSSL in Python 3.8.11. \r\nThis is basically what I am doing:\r\n\r\n- Configure and compile liboqs with the following configure settings: `cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..`\r\n- Configure and compile openssl with the following configure settings: `./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed`\r\n\r\nNow when I compile Python, it finds that custom openssl installation, I added the paths to my PATH as well.\r\n\r\nHowever, when I then use Python, every SSL connection (even the ones without PQC) are getting an error with SSL \"UNEXPECTED MESSAGE\".\r\n\r\nExample:\r\n ```\r\nStarting new HTTPS connection (1): pypi.org:443\r\nIncremented Retry for (url='/simple/requests/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: UNEXPECTED_MESSAGE] unexpected message (_ssl.c:1131)'))': /simple/requests/\r\n```\r\n\r\nI was wondering if anyone could give me pointers, or get me on the right path, on how to fix this?\r\n\r\nThank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1031139225","html_url":"https://github.com/open-quantum-safe/openssl/issues/351#issuecomment-1031139225","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","id":1031139225,"node_id":"IC_kwDOA_fpb849de-Z","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-02-07T07:07:34Z","updated_at":"2022-02-07T07:07:34Z","author_association":"MEMBER","body":"@LeShadow Thanks very much for your interest to merge `liboqs` and python as well as your analysis above. The error message in your latter try above (assuming you correctly built and linked `liboqs` and `oqs-openssl` (in)to python) looks very familiar in an OpenSSL setting: It always happens when client and server don't agree on the KEM group to be used. When trying to contact \"https://test.openquantumsafe.org:6017\" a client needs to request \"saber\" (as per the algorithm/port mapping table at https://test.openquantumsafe.org) to establish a connection. By default, an OpenSSL client (such as python in this case) only requests the use of classic crypto KEM groups, so the error is expected. \r\n\r\nThere are two ways to change this: One is to change the list of default KEM groups (of which \"saber\" in this example needs to be a member) requested by the client. This is done by setting \"saber\" as part of [OQS_DEFAULT_GROUPS](https://github.com/open-quantum-safe/openssl#default-algorithms-announced) `configure` parameter. This requires a re-build of `oqs-openssl` but no code change to the client (python in this case). It is a very limiting approach for trying different algorithms, though.\r\n\r\nThe second option is much more flexible, but possibly requires a change to the python client source code: In this case, the OpenSSL function [SSL_CTX_set1_groups_list](https://www.openssl.org/docs/man1.1.1/man3/SSL_CTX_set1_groups_list.html) needs to be called with such a KEM groups list (again, containing \"saber\" in this example). You may want to check the python source code whether it already contains a call to this function and thus permits setting the KEM groups (and ideally, exposes this to users of python such as to allow you to request \"saber\" explicitly when contacting port 6017 of our test server). \r\n\r\nNow, when reading the [python SSL documentation](https://docs.python.org/3/library/ssl.html) it might be such that the function `SSLContext.set_ecdh_curve` might already provide this capability: It might be a bit surprising as OQS algorithms are not ECDH algorithms, but historically, the TLS 1.3 concept of KEM groups (which OQS uses) has its roots in the TLS1.2 concept of different (ECDH) curves. Long story short: You might want to try calling `SSLContext.set_ecdh_curve(\"saber\")` before trying the SSL handshake. ([python urllib.request.urlopen](https://docs.python.org/3/library/urllib.request.html) permits setting such \"SSLContext\") -- and things just _might_ immediately work: In case I'm not clear, the suggestion is to amend your code above as follows:\r\n\r\n```\r\nimport urllib.request\r\nimport ssl\r\nctx = ssl.SSLContext()\r\nctx.set_ecdh_curve(\"saber\")\r\n\r\nwith urllib.request.urlopen('https://test.openquantumsafe.org:6017', context=ctx) as response:\r\n   html = response.read()\r\n```\r\n\r\nGood luck with your further tests! Please let us know how they go.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1031139225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-07T07:07:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"20108858495","type":"IssueCommentEvent","actor":{"id":5675552,"login":"LeShadow","display_login":"LeShadow","gravatar_id":"","url":"https://api.github.com/users/LeShadow","avatar_url":"https://avatars.githubusercontent.com/u/5675552?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/351","id":1124299120,"node_id":"I_kwDOA_fpb85DA3Fw","number":351,"title":"Integrating OpenSSL & Liboqs in Python - SSL Unexpected Message","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-02-04T15:01:53Z","updated_at":"2022-02-07T13:18:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nSo for the last few days I have been trying to integrate liboqs and this version of OpenSSL in Python 3.8.11. \r\nThis is basically what I am doing:\r\n\r\n- Configure and compile liboqs with the following configure settings: `cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..`\r\n- Configure and compile openssl with the following configure settings: `./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed`\r\n\r\nNow when I compile Python, it finds that custom openssl installation, I added the paths to my PATH as well.\r\n\r\nHowever, when I then use Python, every SSL connection (even the ones without PQC) are getting an error with SSL \"UNEXPECTED MESSAGE\".\r\n\r\nExample:\r\n ```\r\nStarting new HTTPS connection (1): pypi.org:443\r\nIncremented Retry for (url='/simple/requests/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: UNEXPECTED_MESSAGE] unexpected message (_ssl.c:1131)'))': /simple/requests/\r\n```\r\n\r\nI was wondering if anyone could give me pointers, or get me on the right path, on how to fix this?\r\n\r\nThank you!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1031460584","html_url":"https://github.com/open-quantum-safe/openssl/issues/351#issuecomment-1031460584","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/351","id":1031460584,"node_id":"IC_kwDOA_fpb849etbo","user":{"login":"LeShadow","id":5675552,"node_id":"MDQ6VXNlcjU2NzU1NTI=","avatar_url":"https://avatars.githubusercontent.com/u/5675552?v=4","gravatar_id":"","url":"https://api.github.com/users/LeShadow","html_url":"https://github.com/LeShadow","followers_url":"https://api.github.com/users/LeShadow/followers","following_url":"https://api.github.com/users/LeShadow/following{/other_user}","gists_url":"https://api.github.com/users/LeShadow/gists{/gist_id}","starred_url":"https://api.github.com/users/LeShadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeShadow/subscriptions","organizations_url":"https://api.github.com/users/LeShadow/orgs","repos_url":"https://api.github.com/users/LeShadow/repos","events_url":"https://api.github.com/users/LeShadow/events{/privacy}","received_events_url":"https://api.github.com/users/LeShadow/received_events","type":"User","site_admin":false},"created_at":"2022-02-07T13:18:27Z","updated_at":"2022-02-07T13:18:27Z","author_association":"NONE","body":"@baentsch Thank you for your explanation! I will have a look at it tonight, with your input!\r\n\r\nJust to clarify how I built liboqs and oqs-openssl:\r\n\r\nI have a directory `/opt`, in there I have cloned both `liboqs` and `openssl` in respectively:\r\n* /opt/liboqs\r\n* /opt/openssl\r\n\r\nIn `/opt/liboqs` I used the following commands to configure and compile liboqs:\r\n`mkdir build && cd build && cmake -GNinja -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../../openssl/oqs .. && ninja && ninja install`\r\n\r\nIn `/opt/openssl`  I used the following commands to configure and compile oqs-openssl:\r\n`./Configure shared linux-x86_64 -lm --prefix=/opt/openssl_installed --openssldir=/opt/openssl_installed && make -j && make install`\r\n\r\nAfterwards I executed `/opt/openssl_installed/apps/openssl speed oqssig` to verify it was working.\r\n\r\nI will continue this evening and let you know what I can find!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1031460584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-02-07T13:18:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
