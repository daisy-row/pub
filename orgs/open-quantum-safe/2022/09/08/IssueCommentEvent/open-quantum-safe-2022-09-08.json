{"id":"23885378059","type":"IssueCommentEvent","actor":{"id":15072412,"login":"RohitArora7","display_login":"RohitArora7","gravatar_id":"","url":"https://api.github.com/users/RohitArora7","avatar_url":"https://avatars.githubusercontent.com/u/15072412?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1302","id":1364071450,"node_id":"I_kwDOA-eq3c5RThQa","number":1302,"title":"ValueError: byte string too long , Node js and python combine ","user":{"login":"RohitArora7","id":15072412,"node_id":"MDQ6VXNlcjE1MDcyNDEy","avatar_url":"https://avatars.githubusercontent.com/u/15072412?v=4","gravatar_id":"","url":"https://api.github.com/users/RohitArora7","html_url":"https://github.com/RohitArora7","followers_url":"https://api.github.com/users/RohitArora7/followers","following_url":"https://api.github.com/users/RohitArora7/following{/other_user}","gists_url":"https://api.github.com/users/RohitArora7/gists{/gist_id}","starred_url":"https://api.github.com/users/RohitArora7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RohitArora7/subscriptions","organizations_url":"https://api.github.com/users/RohitArora7/orgs","repos_url":"https://api.github.com/users/RohitArora7/repos","events_url":"https://api.github.com/users/RohitArora7/events{/privacy}","received_events_url":"https://api.github.com/users/RohitArora7/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2022-09-07T04:26:17Z","updated_at":"2022-09-08T07:12:55Z","closed_at":"2022-09-07T11:16:31Z","author_association":"NONE","active_lock_reason":null,"body":"Hi Team ,\r\n\r\nFirst of all, \r\nIs it possible to send pk and sk generated from crystals-kyber-javascript (https://github.com/antontutoveanu/crystals-kyber-javascript) to liboqs python script \r\nIf yes,\r\nI am so doing it but error occur  \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/rohit/exp/kyber/liboqs-python-main/examples/kem.py\", line 43, in <module>\r\n    ciphertext, shared_secret_server = server.encap_secret(public_key)\r\n  File \"/home/rohit/exp/kyber/liboqs-python-main/examples/oqs/oqs.py\", line 162, in encap_secret\r\n    my_public_key = ct.create_string_buffer(public_key, self._kem.contents.length_public_key)\r\n  File \"/usr/lib/python3.10/ctypes/__init__.py\", line 59, in create_string_buffer\r\n    buf.value = init\r\nValueError: byte string too long\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240318965","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1302#issuecomment-1240318965","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302","id":1240318965,"node_id":"IC_kwDOA-eq3c5J7cP1","user":{"login":"RohitArora7","id":15072412,"node_id":"MDQ6VXNlcjE1MDcyNDEy","avatar_url":"https://avatars.githubusercontent.com/u/15072412?v=4","gravatar_id":"","url":"https://api.github.com/users/RohitArora7","html_url":"https://github.com/RohitArora7","followers_url":"https://api.github.com/users/RohitArora7/followers","following_url":"https://api.github.com/users/RohitArora7/following{/other_user}","gists_url":"https://api.github.com/users/RohitArora7/gists{/gist_id}","starred_url":"https://api.github.com/users/RohitArora7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RohitArora7/subscriptions","organizations_url":"https://api.github.com/users/RohitArora7/orgs","repos_url":"https://api.github.com/users/RohitArora7/repos","events_url":"https://api.github.com/users/RohitArora7/events{/privacy}","received_events_url":"https://api.github.com/users/RohitArora7/received_events","type":"User","site_admin":false},"created_at":"2022-09-08T07:12:55Z","updated_at":"2022-09-08T07:12:55Z","author_association":"NONE","body":"Thanks, @baentsch and @dstebila for your support, yesterday I added some more translation at Node Js level before passing its pk value to python kyber algo \r\n\r\nNow it's working, \r\nNow, Node Js **sk** is able to decrypt the ct generated by python kyber algo by taking Node Js **pk**","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240318965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-08T07:12:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23885464267","type":"IssueCommentEvent","actor":{"id":114613,"login":"sebastinas","display_login":"sebastinas","gravatar_id":"","url":"https://api.github.com/users/sebastinas","avatar_url":"https://avatars.githubusercontent.com/u/114613?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1296","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1296/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1296/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1296/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1296","id":1349254894,"node_id":"I_kwDOA-eq3c5Qa_7u","number":1296,"title":"Error when building liboqs on ARM (armeabi-v7a, Android 11, root)","user":{"login":"ilovevkapi","id":107703095,"node_id":"U_kgDOBmtrNw","avatar_url":"https://avatars.githubusercontent.com/u/107703095?v=4","gravatar_id":"","url":"https://api.github.com/users/ilovevkapi","html_url":"https://github.com/ilovevkapi","followers_url":"https://api.github.com/users/ilovevkapi/followers","following_url":"https://api.github.com/users/ilovevkapi/following{/other_user}","gists_url":"https://api.github.com/users/ilovevkapi/gists{/gist_id}","starred_url":"https://api.github.com/users/ilovevkapi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilovevkapi/subscriptions","organizations_url":"https://api.github.com/users/ilovevkapi/orgs","repos_url":"https://api.github.com/users/ilovevkapi/repos","events_url":"https://api.github.com/users/ilovevkapi/events{/privacy}","received_events_url":"https://api.github.com/users/ilovevkapi/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2022-08-24T10:57:53Z","updated_at":"2022-09-08T07:17:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello. I need to build liboqs on Android to develop a command-line HTTPS client with post-quantum cryptography support. I followed all instructions for building on Linux (because Android is actually Linux distributive). But got a compiling error at `ninja` step.\r\nHere is what i did, and what I saw in terminal:\r\n\r\n0. I have used [Termux](https://github.com/termux/termux-app?) as Linux-environment for Android.\r\n1. I have ran `apt install astyle cmake gcc ninja-build libssl-dev python3-pytest python3-pytest-xdist unzip xsltproc doxygen graphviz python3-yaml valgrind`, output was: \r\n```\r\nChecking availability of current mirror: ok\r\n...\r\nE:  Unable to locate package astyle\r\nE:  Package gcc has no installation candidate, use libllvm instead\r\nE:  Package ninja-build has no installation candidate, use ninja instead\r\nE:  Package libssl-dev has no installation candidate, use openssl instead\r\nE:  Package python3-pytest has no installation candidate, use 'pip install pytest' instead\r\nE:  Package python3-pytest-xdist has no installation candidate, use 'pip install pytest-xdist' instead\r\nE:  Package python3-yaml has no installation candidate, use 'pip install pyYAML' instead\r\n```\r\nFinally, I have installed all these packages manually, except for `astyle, graphviz`. (I haven't found any ARM-versions of them).\r\nThis is what happened after:\r\n\r\n2. Did `git clone https://github.com/open-quantum-safe/liboqs.git`. Output was OK.\r\n3. Did `cd liboqs && mkdir build && cd build`. OK too.\r\n4. Did `cmake -GNinja ..` Output was:\r\n```\r\n-- The C compiler identification is Clang 14.0.6\r\n-- The ASM compiler identification is Clang with GNU-like command-line\r\n-- Found assembler: /data/data/com.termux/files/usr/bin/cc\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /data/data/com.termux/files/usr/bin/cc - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\nCMake Warning at .CMake/compiler_opts.cmake:44 (message):\r\n  Setting OQS_OPT_TARGET=AUTO may not produce optimized code on this system.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:111 (include)\r\n\r\n\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE\r\n-- Found OpenSSL: /data/data/com.termux/files/usr/lib/libcrypto.so (found suitable version \"3.0.3\", minimum required is \"1.1.1\")\r\n-- Found Doxygen: /data/data/com.termux/files/usr/bin/doxygen (found version \"1.9.4\") found components: doxygen missing components: dot\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /data/data/com.termux/files/home/sys/liboqs/build\r\n```\r\nI think its okay, like previous.\r\n\r\n5. Bulding with `ninja`, error is here, while processing \"common.c.o\" by `ninja`. Of course, full output:\r\n```\r\n~/sys/liboqs/build $ sudo ninja\r\n[1/1067] Building C object src/common/CMakeFiles/common.dir/common.c.o\r\nFAILED: src/common/CMakeFiles/common.dir/common.c.o\r\n/data/data/com.termux/files/usr/bin/cc -I/data/data/com.termux/files/home/sys/liboqs/build/include -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic -Wno-unused-command-line-argument -g3 -fno-omit-frame-pointer -Wbad-function-cast -Wcast-qual -Wnarrowing -Wconversion -std=gnu11 -MD -MT src/common/CMakeFiles/common.dir/common.c.o -MF src/common/CMakeFiles/common.dir/common.c.o.d -o src/common/CMakeFiles/common.dir/common.c.o -c /data/data/com.termux/files/home/sys/liboqs/src/common/common.c\r\n/data/data/com.termux/files/home/sys/liboqs/src/common/common.c:251:9: error: implicitly declaring library function 'aligned_alloc' with type 'void *(unsigned int, unsigned int)' [-Werror,-Wimplicit-function-declaration]\r\n        return aligned_alloc(alignment, size);\r\n               ^\r\n/data/data/com.termux/files/home/sys/liboqs/src/common/common.c:251:9: note: include the header <stdlib.h> or explicitly provide a declaration for 'aligned_alloc'\r\n1 error generated.\r\n[10/1067] Building C object src/co...eFiles/common.dir/aes/aes_ossl.c.\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\nPlease help me to properly compile the library, if you understand where is the problem and how to do it.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1296/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240323167","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1296#issuecomment-1240323167","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1296","id":1240323167,"node_id":"IC_kwDOA-eq3c5J7dRf","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"created_at":"2022-09-08T07:17:24Z","updated_at":"2022-09-08T07:17:24Z","author_association":"CONTRIBUTOR","body":"@ilovevkapi Fixes for both issues are now merged into the main branch. Can you confirm that they fix the issues for you?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240323167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-08T07:17:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23886278909","type":"IssueCommentEvent","actor":{"id":114613,"login":"sebastinas","display_login":"sebastinas","gravatar_id":"","url":"https://api.github.com/users/sebastinas","avatar_url":"https://avatars.githubusercontent.com/u/114613?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1233","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1233/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1233/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1233/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1233","id":1282235822,"node_id":"I_kwDOA-eq3c5MbV2u","number":1233,"title":"Common code for s390x / ppc64le","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-06-23T11:14:08Z","updated_at":"2022-09-08T07:56:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Optimized common code is currently available for Intel x86-64 and Arm64v8: https://github.com/open-quantum-safe/liboqs/tree/main/src/common.\r\n\r\nRe. other platforms: S390x [1] and ppc64le [2] in current revisions provide AES, SHA2 and SHA3 instruction sets. Work items to add optimized common code for these architectures are the following:\r\n\r\n- Integrate optimized AES, SHA2 and SHA3 to src/common, using the OQS API.\r\n- Implement CPU feature detection at build time (e.g. setting `OQS_USE_S390X_AES_INSTRUCTIONS`).\r\n- Implement CPU runtime feature detection for distribution builds.\r\n- Implement build-time and run-time switches for selecting optimized common code.\r\n- Update documentation.\r\n- Run appropriate tests (e.g. on TravisCI).\r\n\r\nReferences:\r\n[1] z/Architecture Principles of Operation: http://publibfp.dhe.ibm.com/epubs/pdf/a227832c.pdf\r\n[2] Power ISA Version 3.1: https://ibm.ent.box.com/s/hhjfw0x0lrbtyzmiaffnbxh2fuo0fog0\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1233/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240361279","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1233#issuecomment-1240361279","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1233","id":1240361279,"node_id":"IC_kwDOA-eq3c5J7mk_","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"created_at":"2022-09-08T07:56:09Z","updated_at":"2022-09-08T07:56:09Z","author_association":"CONTRIBUTOR","body":"There's some Picnic code that could be lifted for SHA3/SHAKE support on s390x: https://github.com/IAIK/Picnic/blob/master/sha3/s390_cpacf.h. It doesn't have runtime detection yet, but can be used as basis.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240361279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-08T07:56:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23886666821","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1302","id":1364071450,"node_id":"I_kwDOA-eq3c5RThQa","number":1302,"title":"ValueError: byte string too long , Node js and python combine ","user":{"login":"RohitArora7","id":15072412,"node_id":"MDQ6VXNlcjE1MDcyNDEy","avatar_url":"https://avatars.githubusercontent.com/u/15072412?v=4","gravatar_id":"","url":"https://api.github.com/users/RohitArora7","html_url":"https://github.com/RohitArora7","followers_url":"https://api.github.com/users/RohitArora7/followers","following_url":"https://api.github.com/users/RohitArora7/following{/other_user}","gists_url":"https://api.github.com/users/RohitArora7/gists{/gist_id}","starred_url":"https://api.github.com/users/RohitArora7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RohitArora7/subscriptions","organizations_url":"https://api.github.com/users/RohitArora7/orgs","repos_url":"https://api.github.com/users/RohitArora7/repos","events_url":"https://api.github.com/users/RohitArora7/events{/privacy}","received_events_url":"https://api.github.com/users/RohitArora7/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2022-09-07T04:26:17Z","updated_at":"2022-09-08T08:13:47Z","closed_at":"2022-09-07T11:16:31Z","author_association":"NONE","active_lock_reason":null,"body":"Hi Team ,\r\n\r\nFirst of all, \r\nIs it possible to send pk and sk generated from crystals-kyber-javascript (https://github.com/antontutoveanu/crystals-kyber-javascript) to liboqs python script \r\nIf yes,\r\nI am so doing it but error occur  \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/rohit/exp/kyber/liboqs-python-main/examples/kem.py\", line 43, in <module>\r\n    ciphertext, shared_secret_server = server.encap_secret(public_key)\r\n  File \"/home/rohit/exp/kyber/liboqs-python-main/examples/oqs/oqs.py\", line 162, in encap_secret\r\n    my_public_key = ct.create_string_buffer(public_key, self._kem.contents.length_public_key)\r\n  File \"/usr/lib/python3.10/ctypes/__init__.py\", line 59, in create_string_buffer\r\n    buf.value = init\r\nValueError: byte string too long\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240380210","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1302#issuecomment-1240380210","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302","id":1240380210,"node_id":"IC_kwDOA-eq3c5J7rMy","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-09-08T08:13:46Z","updated_at":"2022-09-08T08:13:46Z","author_association":"MEMBER","body":"> Now it's working\r\n\r\nGreat to hear. As this seems to prove interoperability between two different Kyber code bases, would you want to consider contributing your code [upstream](https://github.com/antontutoveanu/crystals-kyber-javascript)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240380210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-08T08:13:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23888910015","type":"IssueCommentEvent","actor":{"id":15072412,"login":"RohitArora7","display_login":"RohitArora7","gravatar_id":"","url":"https://api.github.com/users/RohitArora7","avatar_url":"https://avatars.githubusercontent.com/u/15072412?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1302","id":1364071450,"node_id":"I_kwDOA-eq3c5RThQa","number":1302,"title":"ValueError: byte string too long , Node js and python combine ","user":{"login":"RohitArora7","id":15072412,"node_id":"MDQ6VXNlcjE1MDcyNDEy","avatar_url":"https://avatars.githubusercontent.com/u/15072412?v=4","gravatar_id":"","url":"https://api.github.com/users/RohitArora7","html_url":"https://github.com/RohitArora7","followers_url":"https://api.github.com/users/RohitArora7/followers","following_url":"https://api.github.com/users/RohitArora7/following{/other_user}","gists_url":"https://api.github.com/users/RohitArora7/gists{/gist_id}","starred_url":"https://api.github.com/users/RohitArora7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RohitArora7/subscriptions","organizations_url":"https://api.github.com/users/RohitArora7/orgs","repos_url":"https://api.github.com/users/RohitArora7/repos","events_url":"https://api.github.com/users/RohitArora7/events{/privacy}","received_events_url":"https://api.github.com/users/RohitArora7/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2022-09-07T04:26:17Z","updated_at":"2022-09-08T09:52:19Z","closed_at":"2022-09-07T11:16:31Z","author_association":"NONE","active_lock_reason":null,"body":"Hi Team ,\r\n\r\nFirst of all, \r\nIs it possible to send pk and sk generated from crystals-kyber-javascript (https://github.com/antontutoveanu/crystals-kyber-javascript) to liboqs python script \r\nIf yes,\r\nI am so doing it but error occur  \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/rohit/exp/kyber/liboqs-python-main/examples/kem.py\", line 43, in <module>\r\n    ciphertext, shared_secret_server = server.encap_secret(public_key)\r\n  File \"/home/rohit/exp/kyber/liboqs-python-main/examples/oqs/oqs.py\", line 162, in encap_secret\r\n    my_public_key = ct.create_string_buffer(public_key, self._kem.contents.length_public_key)\r\n  File \"/usr/lib/python3.10/ctypes/__init__.py\", line 59, in create_string_buffer\r\n    buf.value = init\r\nValueError: byte string too long\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240488645","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1302#issuecomment-1240488645","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302","id":1240488645,"node_id":"IC_kwDOA-eq3c5J8FrF","user":{"login":"RohitArora7","id":15072412,"node_id":"MDQ6VXNlcjE1MDcyNDEy","avatar_url":"https://avatars.githubusercontent.com/u/15072412?v=4","gravatar_id":"","url":"https://api.github.com/users/RohitArora7","html_url":"https://github.com/RohitArora7","followers_url":"https://api.github.com/users/RohitArora7/followers","following_url":"https://api.github.com/users/RohitArora7/following{/other_user}","gists_url":"https://api.github.com/users/RohitArora7/gists{/gist_id}","starred_url":"https://api.github.com/users/RohitArora7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RohitArora7/subscriptions","organizations_url":"https://api.github.com/users/RohitArora7/orgs","repos_url":"https://api.github.com/users/RohitArora7/repos","events_url":"https://api.github.com/users/RohitArora7/events{/privacy}","received_events_url":"https://api.github.com/users/RohitArora7/received_events","type":"User","site_admin":false},"created_at":"2022-09-08T09:52:19Z","updated_at":"2022-09-08T09:52:19Z","author_association":"NONE","body":"Yes definitely I would love to, so should I provide the solution in terms of issue or create a pull request at Read me because this is something extra ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240488645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-08T09:52:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23891581749","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1302","id":1364071450,"node_id":"I_kwDOA-eq3c5RThQa","number":1302,"title":"ValueError: byte string too long , Node js and python combine ","user":{"login":"RohitArora7","id":15072412,"node_id":"MDQ6VXNlcjE1MDcyNDEy","avatar_url":"https://avatars.githubusercontent.com/u/15072412?v=4","gravatar_id":"","url":"https://api.github.com/users/RohitArora7","html_url":"https://github.com/RohitArora7","followers_url":"https://api.github.com/users/RohitArora7/followers","following_url":"https://api.github.com/users/RohitArora7/following{/other_user}","gists_url":"https://api.github.com/users/RohitArora7/gists{/gist_id}","starred_url":"https://api.github.com/users/RohitArora7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RohitArora7/subscriptions","organizations_url":"https://api.github.com/users/RohitArora7/orgs","repos_url":"https://api.github.com/users/RohitArora7/repos","events_url":"https://api.github.com/users/RohitArora7/events{/privacy}","received_events_url":"https://api.github.com/users/RohitArora7/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-09-07T04:26:17Z","updated_at":"2022-09-08T11:55:37Z","closed_at":"2022-09-07T11:16:31Z","author_association":"NONE","active_lock_reason":null,"body":"Hi Team ,\r\n\r\nFirst of all, \r\nIs it possible to send pk and sk generated from crystals-kyber-javascript (https://github.com/antontutoveanu/crystals-kyber-javascript) to liboqs python script \r\nIf yes,\r\nI am so doing it but error occur  \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/rohit/exp/kyber/liboqs-python-main/examples/kem.py\", line 43, in <module>\r\n    ciphertext, shared_secret_server = server.encap_secret(public_key)\r\n  File \"/home/rohit/exp/kyber/liboqs-python-main/examples/oqs/oqs.py\", line 162, in encap_secret\r\n    my_public_key = ct.create_string_buffer(public_key, self._kem.contents.length_public_key)\r\n  File \"/usr/lib/python3.10/ctypes/__init__.py\", line 59, in create_string_buffer\r\n    buf.value = init\r\nValueError: byte string too long\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240616380","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1302#issuecomment-1240616380","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1302","id":1240616380,"node_id":"IC_kwDOA-eq3c5J8k28","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-09-08T11:55:37Z","updated_at":"2022-09-08T11:55:37Z","author_association":"MEMBER","body":"I don't know that: You should check with the maintainer(s) of https://github.com/antontutoveanu/crystals-kyber-javascript how (s)he wants to handle that. Maybe create an issue labelled \"Ensure interoperability with liboqs implementation\" (for which your code could be proof/test).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240616380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-08T11:55:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23893354431","type":"IssueCommentEvent","actor":{"id":79326135,"login":"LittleTimmy63","display_login":"LittleTimmy63","gravatar_id":"","url":"https://api.github.com/users/LittleTimmy63","avatar_url":"https://avatars.githubusercontent.com/u/79326135?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1301","id":1360570757,"node_id":"I_kwDOA-eq3c5RGKmF","number":1301,"title":"Kyber1024 encapsulation causes shared secret to get mangled","user":{"login":"LittleTimmy63","id":79326135,"node_id":"MDQ6VXNlcjc5MzI2MTM1","avatar_url":"https://avatars.githubusercontent.com/u/79326135?v=4","gravatar_id":"","url":"https://api.github.com/users/LittleTimmy63","html_url":"https://github.com/LittleTimmy63","followers_url":"https://api.github.com/users/LittleTimmy63/followers","following_url":"https://api.github.com/users/LittleTimmy63/following{/other_user}","gists_url":"https://api.github.com/users/LittleTimmy63/gists{/gist_id}","starred_url":"https://api.github.com/users/LittleTimmy63/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LittleTimmy63/subscriptions","organizations_url":"https://api.github.com/users/LittleTimmy63/orgs","repos_url":"https://api.github.com/users/LittleTimmy63/repos","events_url":"https://api.github.com/users/LittleTimmy63/events{/privacy}","received_events_url":"https://api.github.com/users/LittleTimmy63/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-09-02T20:09:05Z","updated_at":"2022-09-08T13:10:25Z","closed_at":"2022-09-03T15:05:20Z","author_association":"NONE","active_lock_reason":null,"body":"I am trying to write a small program to encrypt and decrypt using Kyber1024.\r\nHowever, I have discovered an issue. Despite issuing the same input (11111111111111111111111111111111), and using the same key, the output is different each time. By printing out values, I have deduced that OQS_KEM_encaps, when using Kyber1024, somehow turns the input into garbage.\r\n\r\nReplication:\r\n```\r\nputs(\"pre encaps inp\");\r\nputs(inp);\r\nif ((OQS_KEM_encaps(kem, *out, inp, pub)) == OQS_ERROR) exit(EXIT_FAILURE);\r\nputs(\"post encaps inp\");\r\nputs(inp);\r\n```\r\n\r\nExpected output:\r\npre encaps inp\r\n11111111111111111111111111111111\r\npost encaps inp\r\n11111111111111111111111111111111\r\nActual output:\r\npre encaps inp\r\n11111111111111111111111111111111\r\npost encaps inp\r\n*{�c��_�@�p��H`�V���f@Ҳ�hb�S-��\r\n         \r\nIt should be noted that the exact string of garbage is different each time.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/timeline","performed_via_github_app":null,"state_reason":"not_planned"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240697129","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1301#issuecomment-1240697129","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301","id":1240697129,"node_id":"IC_kwDOA-eq3c5J84kp","user":{"login":"LittleTimmy63","id":79326135,"node_id":"MDQ6VXNlcjc5MzI2MTM1","avatar_url":"https://avatars.githubusercontent.com/u/79326135?v=4","gravatar_id":"","url":"https://api.github.com/users/LittleTimmy63","html_url":"https://github.com/LittleTimmy63","followers_url":"https://api.github.com/users/LittleTimmy63/followers","following_url":"https://api.github.com/users/LittleTimmy63/following{/other_user}","gists_url":"https://api.github.com/users/LittleTimmy63/gists{/gist_id}","starred_url":"https://api.github.com/users/LittleTimmy63/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LittleTimmy63/subscriptions","organizations_url":"https://api.github.com/users/LittleTimmy63/orgs","repos_url":"https://api.github.com/users/LittleTimmy63/repos","events_url":"https://api.github.com/users/LittleTimmy63/events{/privacy}","received_events_url":"https://api.github.com/users/LittleTimmy63/received_events","type":"User","site_admin":false},"created_at":"2022-09-08T13:10:25Z","updated_at":"2022-09-08T13:10:25Z","author_association":"NONE","body":"I see. I suppose I must go rewrite my things then.\r\nCheers!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1240697129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-08T13:10:25Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23901965280","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1249","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1249/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1249/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1249/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1249","id":1296673446,"node_id":"I_kwDOA-eq3c5NSaqm","number":1249,"title":"Pull SPHINCS+ update","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/18","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18/labels","id":7069955,"node_id":"MI_kwDOA-eq3c4Aa-ED","number":18,"title":"0.8.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":0,"state":"open","created_at":"2021-08-18T14:40:17Z","updated_at":"2022-09-07T20:33:45Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2022-07-07T01:29:12Z","updated_at":"2022-09-08T19:41:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/sphincs/sphincsplus/pull/28 and https://github.com/PQClean/PQClean/issues/446.  Note that this changes algorithm specification, so if we include this in liboqs 0.7.2 our policy would actually bump the version number to 0.8.0. Alternatively we could leave this until after the 0.7.2 release cycle.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1249/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1249/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1241153345","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1249#issuecomment-1241153345","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1249","id":1241153345,"node_id":"IC_kwDOA-eq3c5J-n9B","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-09-08T19:41:07Z","updated_at":"2022-09-08T19:41:07Z","author_association":"MEMBER","body":"> > we can begin with algorithm updates like this one.\r\n> \r\n> ACK. Going through the \"chain of issues\" (from here to [PQClean/PQClean#446](https://github.com/PQClean/PQClean/issues/446) to [PQClean/PQClean#378](https://github.com/PQClean/PQClean/issues/378)) it seems the task would be to (semi-)manually create copies of SPHINCS+ parameterized code -- 36 of them. Is this understanding correct, @dstebila @thomwiggers ?\r\n> \r\n> Now the question: Do we really want to (keep) do(ing) this? After the NIST decision, wouldn't it be time to consider creating a \"real library\" where parameters are just that, parameters, to _one_ code base for a given algorithm?\r\n> \r\n> To quantify the issue: A current `liboqs` build (release type on x64 with avx2) contains 720 object files bearing a name \"sphincs*\", creating 4.8MB of binary (in a 20MB `liboqs.a`): Nearly 25% of all code due to what conceptually is one algorithm: Does this still make sense? FWIW, McEliece \"contributes\" 5.3MB in this metric.\r\n> \r\n> Don't get me wrong: I volunteered taking this issue on (admittedly not knowing how many issues are \"behind\" it :), so I'll do this, but I wonder whether it truly makes sense? Oh, and of course asking whether someone may have created a script already for doing this \"code multiplication\" driven by the SPHINCS parameter matrix?\r\n\r\nIt's definitely worth revisiting. PQClean took the approach of avoiding generating multiple binaries from the same source code via pre-processor macro magic, leading to the duplication of source code. It made sense for the goals of PQClean, but doesn't necessarily make sense for the goals of liboqs.\r\n\r\nAn alternative approach for liboqs would be to have a single copy (well, modulo architectural optimizations) of the SPHINCS+ source code (pulling from https://github.com/sphincs/sphincsplus rather than PQClean), and then use compiler macros to generate the binary code for different parameterizations.  \r\n\r\nNote that we won't be able to eliminate having lots of **binary** objects for each different variant, because avoiding that would require runtime switching of parameters, which is not present in the source code we have available and would probably lead to worse performance.  But we would be able to eliminate having lots of **source code** for each different variant, at the cost of having more complex CMake files.  (And also at the cost of essentially doing an inclusion of SPHINCS+ from scratch, since we'd need to ditch all the existing files, import the ones from the SPHINCS+ repo upstream, do our own namespacing and cleanup, and code generation for the API.)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1241153345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-08T19:41:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
