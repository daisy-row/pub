{"id":"24205515198","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1307","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1307/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1307/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1307/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1307","id":1384727500,"node_id":"PR_kwDOA-eq3c4_iz0s","number":1307,"title":"Fixing OQS ARM inconsistencies","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[{"id":423520874,"node_id":"MDU6TGFiZWw0MjM1MjA4NzQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"assignees":[{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/19","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/19/labels","id":7503904,"node_id":"MI_kwDOA-eq3c4AcoAg","number":19,"title":"0.7.2","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":1,"closed_issues":21,"state":"open","created_at":"2021-12-20T15:58:32Z","updated_at":"2022-09-24T16:13:30Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2022-09-24T16:08:01Z","updated_at":"2022-09-25T06:42:29Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1307","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1307","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1307.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1307.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR is focused on resolving the inconsistencies mentioned in #1304.\r\n\r\n- [X] C_OR_NI_OR_ARM not working in distributable builds on ARM. \r\n- [ ] Are the OQS_USE_ARM_*_INSTRUCTIONS flags actually being set?\r\n- [X] Update `tests/system_info.c` macros for AES and SHA2 implementation selection to match those used in `src/common/aes/aes.c` and `/src/common/sha2/sha2.c`\r\n- [X] ARM profiling scripts using cross-compilation toolchains\r\n- [ ] Sanity check *which* optimizations are actually being used\r\n\r\nCurrently I believe that I have resolved points 1 and 3, and still need to look into 2. @baentsch, Douglas mentioned you may have resolved the profiling scripts issue, is that the case?\r\n\r\nA couple of notes:\r\n- I have reformatted the AES C_OR_NI_OR_ARM macros to match the formatting of the ones we use in SHA2. I have also renamed the sha2_ni.c to sha2_armv8.c after realizing that ni didn't strand for 'native instructions'.\r\n- We were *never* using the AES optimization for distributed builds. When I fixed the issue with the macro, we had linking issues which are now resolved. This could have possibly been the issue @dstebila noticed in point 2?\r\n- I still need to verify that this does indeed fix everything, but wanted to create a draft PR in case there is anything to discuss.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1307/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1257133000","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1307#issuecomment-1257133000","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1307","id":1257133000,"node_id":"IC_kwDOA-eq3c5K7lPI","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-09-25T06:42:29Z","updated_at":"2022-09-25T06:42:29Z","author_association":"MEMBER","body":">  @baentsch, Douglas mentioned you may have resolved the profiling scripts issue, is that the case?\r\n\r\nIf you are referring to item 4 in https://github.com/open-quantum-safe/liboqs/issues/1304#issue-1372236460 (?), then I have only eliminated the use of a toolchain-file/cross-build for ARM with https://github.com/open-quantum-safe/profiling/pull/81 to build natively (on `aarch64` for `aarch64`). Whether this fully resolved that item, i.e., then properly honors `OQS_OPT_TARGET=auto` to use all optimizations I did not check as I didn't check performance before and after.... Doing this now (looking at https://openquantumsafe.org/benchmarking/visualization/speed_kem.html) I don't see any significant changes in \"aarch64\" numbers, so I'm not sure anything was really improved by this. But then again, I don't know which actual ARM64 optimizations the AWS platforms have on which we run the code and what --if any-- improvements would/should have been expected. You probably are better able to judge from the feature sets (e.g., checking for \"aarch64\" in the raw run files such as https://openquantumsafe.org/benchmarking/visualization/2022-09-17/speed_kem.json) which differences between the run types (baseline (i.e., \"distributable\"), \"ref\" (i.e., no optimizations on) and \"noport\" (i.e., all optimizations on) should be expected given the documented CPU feature sets.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1257133000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-25T06:42:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
