{"id":"23990571711","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":21,"created_at":"2022-08-03T16:14:21Z","updated_at":"2022-09-14T00:24:38Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246083164","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1246083164","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1246083164,"node_id":"IC_kwDOA-eq3c5KRbhc","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T00:24:38Z","updated_at":"2022-09-14T00:24:38Z","author_association":"MEMBER","body":"@christianpaquin One of the failures we're getting on Windows with msvc2019 is due to variable length arrays. Do you know if any newer versions of msvc support variable length arrays?  A quick search seems to [suggest not](https://devblogs.microsoft.com/cppblog/c11-and-c17-standard-support-arriving-in-msvc/) but if you have inside connections that might uncover something we don't know about, that would be helpful.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246083164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T00:24:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23993533653","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303","id":1371928800,"node_id":"I_kwDOA-eq3c5Rxfjg","number":1303,"title":"Signature length miscalculation of Falcon-512 - Python Wrapper","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-13T19:46:23Z","updated_at":"2022-09-14T04:57:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I found this issue while I was working on a project that compares between different PQC algorithms regarding one of my subjects in master, and wanted to notify you about it.\r\n\r\nKindly check attached image, I compared 5 algorithms together the only one that has mismatching values of signature length is Falcon-512.\r\n\r\nHere is code snippet I used to calculate signature size which I believe it gives accurate value \r\n`print(\"Signature size: \",len(signature),\" Bytes\")`\r\n\r\n![2022-09-13_21h34_09](https://user-images.githubusercontent.com/29024788/189993705-1f676d57-e825-4068-a7aa-dbd7865ada3f.png)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246234214","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303#issuecomment-1246234214","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","id":1246234214,"node_id":"IC_kwDOA-eq3c5KSAZm","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T04:57:52Z","updated_at":"2022-09-14T04:57:52Z","author_association":"MEMBER","body":"Where do you take the value \"655\" from? Manually from the specs? Further, this deviation does not occur with Falcon-1024? If so, this were a duplicate of https://github.com/open-quantum-safe/openssl/discussions/395; Issue is already visible upstream in https://github.com/PQClean/PQClean/blob/d3fcc0fa8d868835a92545fbd08c17497a787102/crypto_sign/falcon-512/META.yml#L6","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246234214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T04:57:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23994060135","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1304","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1304/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1304/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1304/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1304","id":1372236460,"node_id":"I_kwDOA-eq3c5Ryqqs","number":1304,"title":"Inconsistencies in optimizations on ARM platforms","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-14T02:28:09Z","updated_at":"2022-09-14T05:41:14Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"I had to do some benchmarking of liboqs on an ARM Cortex A-53 a couple of weeks ago and found a variety of weird things in how various optimizations are configured on ARM that I think is suboptimal.  I'll try to quickly note them here, but I might not be recalling all of them quite right.\r\n\r\n1. In src/common/aes/aes.c, the C_OR_NI_OR_ARM macro doesn't seem to properly address the case of distributable builds on ARM, it will revert to the C code always in that case.\r\n2. Are the OQS_USE_ARM_*_INSTRUCTIONS CMake flags actually being set automatically?  In the various builds I think there were times when they weren't set (I realize that's not very actionable feedback).\r\n3. In tests/system_info.c, ideally we would use the same macros from src/common/aes/aes.c and src/common/sha2/sha2.c (possibly by including them rather than copying and pasting) to indicate whether C or NI or ARM is being used, rather than having slightly different versions here, to be sure that the diagnostic information in tests/system_info.c actually matches the behaviour in the code.\r\n4. In the profiling scripts for ARM (https://github.com/open-quantum-safe/profiling/blob/main/perf/Dockerfile-arm64-start), why is there a toolchain file to enable cross compiling?  I think our CMake configuration is set up so that if you're cross compiling an a build with OQS_OPT_TARGET=auto then you immediately switch back to OQS_OPT_TARGET=generic since you can't properly detect CPU optimizations.\r\n5. In general I think we need to go through and do some sanity checking of which optimizations are actually being enabled in our different build configurations on our various platforms, both for builds that users would make by following our instructions and the builds in the profiling system, since those might be built slightly differently (i.e., the cross compilation issue in item 4).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1304/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246262903","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1304#issuecomment-1246262903","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1304","id":1246262903,"node_id":"IC_kwDOA-eq3c5KSHZ3","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T05:41:14Z","updated_at":"2022-09-14T05:41:14Z","author_association":"MEMBER","body":"> In the profiling scripts for ARM (https://github.com/open-quantum-safe/profiling/blob/main/perf/Dockerfile-arm64-start), why is there a toolchain file to enable cross compiling?\r\n\r\nThis is such that we can cross-build ARM docker images within an x64 CCI build VM. The reason for _that_ was that \"natively\" building ARM64 docker images failed on CCI at that time. [Will check again whether this is still the case](https://github.com/open-quantum-safe/profiling/issues/80).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246262903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T05:41:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23994818309","type":"IssueCommentEvent","actor":{"id":29024788,"login":"Solymanx7","display_login":"Solymanx7","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","avatar_url":"https://avatars.githubusercontent.com/u/29024788?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303","id":1371928800,"node_id":"I_kwDOA-eq3c5Rxfjg","number":1303,"title":"Signature length miscalculation of Falcon-512 - Python Wrapper","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-09-13T19:46:23Z","updated_at":"2022-09-14T06:33:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I found this issue while I was working on a project that compares between different PQC algorithms regarding one of my subjects in master, and wanted to notify you about it.\r\n\r\nKindly check attached image, I compared 5 algorithms together the only one that has mismatching values of signature length is Falcon-512.\r\n\r\nHere is code snippet I used to calculate signature size which I believe it gives accurate value \r\n`print(\"Signature size: \",len(signature),\" Bytes\")`\r\n\r\n![2022-09-13_21h34_09](https://user-images.githubusercontent.com/29024788/189993705-1f676d57-e825-4068-a7aa-dbd7865ada3f.png)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246305790","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303#issuecomment-1246305790","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","id":1246305790,"node_id":"IC_kwDOA-eq3c5KSR3-","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T06:33:42Z","updated_at":"2022-09-14T06:33:42Z","author_association":"NONE","body":"Yes from details function : `signer.details`, but problem still occurs with Falcon-1024 where actual signature size = 1279  Bytes , while details function return 1330.\r\nAlso all Picnic_* algorithms have same issue , kindly check attached image for example.\r\n![2022-09-14_08h32_30](https://user-images.githubusercontent.com/29024788/190077259-639f2a7b-30cc-4f98-89a4-8ae059c32349.png)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246305790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T06:33:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23994848089","type":"IssueCommentEvent","actor":{"id":29024788,"login":"Solymanx7","display_login":"Solymanx7","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","avatar_url":"https://avatars.githubusercontent.com/u/29024788?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303","id":1371928800,"node_id":"I_kwDOA-eq3c5Rxfjg","number":1303,"title":"Signature length miscalculation of Falcon & Picnic Families - Python Wrapper","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-13T19:46:23Z","updated_at":"2022-09-14T06:35:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I found this issue while I was working on a project that compares between different PQC algorithms regarding one of my subjects in master, and wanted to notify you about it.\r\n\r\nKindly check attached image, I compared 5 algorithms together the only one that has mismatching values of signature length is Falcon-512.\r\n\r\nHere is code snippet I used to calculate signature size which I believe it gives accurate value \r\n`print(\"Signature size: \",len(signature),\" Bytes\")`\r\n\r\n![2022-09-13_21h34_09](https://user-images.githubusercontent.com/29024788/189993705-1f676d57-e825-4068-a7aa-dbd7865ada3f.png)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246307261","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303#issuecomment-1246307261","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","id":1246307261,"node_id":"IC_kwDOA-eq3c5KSSO9","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T06:35:35Z","updated_at":"2022-09-14T06:35:35Z","author_association":"NONE","body":"I have changed the title so that it matches perfectly the content of the issue.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246307261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T06:35:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23999407343","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303","id":1371928800,"node_id":"I_kwDOA-eq3c5Rxfjg","number":1303,"title":"Signature length miscalculation of Falcon & Picnic Families - Python Wrapper","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-09-13T19:46:23Z","updated_at":"2022-09-14T10:09:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I found this issue while I was working on a project that compares between different PQC algorithms regarding one of my subjects in master, and wanted to notify you about it.\r\n\r\nKindly check attached image, I compared 5 algorithms together the only one that has mismatching values of signature length is Falcon-512.\r\n\r\nHere is code snippet I used to calculate signature size which I believe it gives accurate value \r\n`print(\"Signature size: \",len(signature),\" Bytes\")`\r\n\r\n![2022-09-13_21h34_09](https://user-images.githubusercontent.com/29024788/189993705-1f676d57-e825-4068-a7aa-dbd7865ada3f.png)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246538298","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303#issuecomment-1246538298","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","id":1246538298,"node_id":"IC_kwDOA-eq3c5KTKo6","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T10:09:21Z","updated_at":"2022-09-14T10:09:21Z","author_association":"MEMBER","body":"> Yes from details function \r\n\r\nThe origin of value \"690\" in the case of falcon-512 is understood. I was wondering where you take the \"Signature Size\" values in your output from? Both for falcon as well as for picnic (\"655\" in the case of falcon-512).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246538298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T10:09:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23999633173","type":"IssueCommentEvent","actor":{"id":29024788,"login":"Solymanx7","display_login":"Solymanx7","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","avatar_url":"https://avatars.githubusercontent.com/u/29024788?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303","id":1371928800,"node_id":"I_kwDOA-eq3c5Rxfjg","number":1303,"title":"Signature length miscalculation of Falcon & Picnic Families - Python Wrapper","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-09-13T19:46:23Z","updated_at":"2022-09-14T10:19:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I found this issue while I was working on a project that compares between different PQC algorithms regarding one of my subjects in master, and wanted to notify you about it.\r\n\r\nKindly check attached image, I compared 5 algorithms together the only one that has mismatching values of signature length is Falcon-512.\r\n\r\nHere is code snippet I used to calculate signature size which I believe it gives accurate value \r\n`print(\"Signature size: \",len(signature),\" Bytes\")`\r\n\r\n![2022-09-13_21h34_09](https://user-images.githubusercontent.com/29024788/189993705-1f676d57-e825-4068-a7aa-dbd7865ada3f.png)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246553237","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303#issuecomment-1246553237","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","id":1246553237,"node_id":"IC_kwDOA-eq3c5KTOSV","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T10:19:58Z","updated_at":"2022-09-14T10:19:58Z","author_association":"NONE","body":"> > Yes from details function \n> \n> The origin of value \"690\" in the case of falcon-512 is understood. I was wondering where you take the \"Signature Size\" values in your output from? Both for falcon as well as for picnic (\"655\" in the case of falcon-512).\n\nI used len() function from py on the signature itself \n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246553237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T10:19:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"24004626170","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":22,"created_at":"2022-08-03T16:14:21Z","updated_at":"2022-09-14T13:59:35Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246808098","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1246808098","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1246808098,"node_id":"IC_kwDOA-eq3c5KUMgi","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T13:59:35Z","updated_at":"2022-09-14T13:59:35Z","author_association":"CONTRIBUTOR","body":"> @christianpaquin One of the failures we're getting on Windows with msvc2019 is due to variable length arrays. Do you know if any newer versions of msvc support variable length arrays?\r\n\r\nI don't know; I'll ask around. I don't see this failure in the CI tests; do you have something I can point people to?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246808098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T13:59:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"24006501647","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":24,"created_at":"2022-08-03T16:14:21Z","updated_at":"2022-09-14T15:10:21Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246914821","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1246914821","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1246914821,"node_id":"IC_kwDOA-eq3c5KUmkF","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T15:10:20Z","updated_at":"2022-09-14T15:10:20Z","author_association":"MEMBER","body":"> > @christianpaquin One of the failures we're getting on Windows with msvc2019 is due to variable length arrays. Do you know if any newer versions of msvc support variable length arrays?\r\n> \r\n> I don't know; I'll ask around. I don't see this failure in the CI tests; do you have something I can point people to?\r\n\r\nThere build failures occur near the end of https://ci.appveyor.com/project/dstebila/liboqs/builds/44510385/job/aj5ed4qj5dxxxa4v, which are pointing for example to https://github.com/open-quantum-safe/liboqs/blob/km-stateful-hashbased-signatures/src/sig_stateful/xmss/external/xmss_core_fast.c#L259","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1246914821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T15:10:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"24015459170","type":"IssueCommentEvent","actor":{"id":29024788,"login":"Solymanx7","display_login":"Solymanx7","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","avatar_url":"https://avatars.githubusercontent.com/u/29024788?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303","id":1371928800,"node_id":"I_kwDOA-eq3c5Rxfjg","number":1303,"title":"Signature length miscalculation of Falcon & Picnic Families - Python Wrapper","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-13T19:46:23Z","updated_at":"2022-09-14T23:53:27Z","closed_at":"2022-09-14T23:53:27Z","author_association":"NONE","active_lock_reason":null,"body":"I found this issue while I was working on a project that compares between different PQC algorithms regarding one of my subjects in master, and wanted to notify you about it.\r\n\r\nKindly check attached image, I compared 5 algorithms together the only one that has mismatching values of signature length is Falcon-512.\r\n\r\nHere is code snippet I used to calculate signature size which I believe it gives accurate value \r\n`print(\"Signature size: \",len(signature),\" Bytes\")`\r\n\r\n![2022-09-13_21h34_09](https://user-images.githubusercontent.com/29024788/189993705-1f676d57-e825-4068-a7aa-dbd7865ada3f.png)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1247412382","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1303#issuecomment-1247412382","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1303","id":1247412382,"node_id":"IC_kwDOA-eq3c5KWgCe","user":{"login":"Solymanx7","id":29024788,"node_id":"MDQ6VXNlcjI5MDI0Nzg4","avatar_url":"https://avatars.githubusercontent.com/u/29024788?v=4","gravatar_id":"","url":"https://api.github.com/users/Solymanx7","html_url":"https://github.com/Solymanx7","followers_url":"https://api.github.com/users/Solymanx7/followers","following_url":"https://api.github.com/users/Solymanx7/following{/other_user}","gists_url":"https://api.github.com/users/Solymanx7/gists{/gist_id}","starred_url":"https://api.github.com/users/Solymanx7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Solymanx7/subscriptions","organizations_url":"https://api.github.com/users/Solymanx7/orgs","repos_url":"https://api.github.com/users/Solymanx7/repos","events_url":"https://api.github.com/users/Solymanx7/events{/privacy}","received_events_url":"https://api.github.com/users/Solymanx7/received_events","type":"User","site_admin":false},"created_at":"2022-09-14T23:53:27Z","updated_at":"2022-09-14T23:53:27Z","author_association":"NONE","body":"Thanks for the cooperative team and for the quick response and fix, Thank you baentsch for your effort !\r\nI'm happy for contributing to this library \r\nIf no one minds, I'm closing this issue.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1247412382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-14T23:53:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
