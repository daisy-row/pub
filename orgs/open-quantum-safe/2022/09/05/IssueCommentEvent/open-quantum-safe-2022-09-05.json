{"id":"23827023371","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1300","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1300/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1300/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1300/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1300","id":1357179003,"node_id":"PR_kwDOA-eq3c4-H4ny","number":1300,"title":"Fallback code for `aligned_alloc` and use of `explicit_bzero`","user":{"login":"sebastinas","id":114613,"node_id":"MDQ6VXNlcjExNDYxMw==","avatar_url":"https://avatars.githubusercontent.com/u/114613?v=4","gravatar_id":"","url":"https://api.github.com/users/sebastinas","html_url":"https://github.com/sebastinas","followers_url":"https://api.github.com/users/sebastinas/followers","following_url":"https://api.github.com/users/sebastinas/following{/other_user}","gists_url":"https://api.github.com/users/sebastinas/gists{/gist_id}","starred_url":"https://api.github.com/users/sebastinas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebastinas/subscriptions","organizations_url":"https://api.github.com/users/sebastinas/orgs","repos_url":"https://api.github.com/users/sebastinas/repos","events_url":"https://api.github.com/users/sebastinas/events{/privacy}","received_events_url":"https://api.github.com/users/sebastinas/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-31T11:10:09Z","updated_at":"2022-09-05T15:43:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1300","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1300","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1300.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1300.patch","merged_at":null},"body":"There are two parts to this PR. The first one adds checks for `aligned_alloc` and friends and uses whatever is available. The second part fixes the check for `memset_s` (via cmake and Annex K support) and also uses `explicit_bzero` if available. \r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1300/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1237228755","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1300#issuecomment-1237228755","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1300","id":1237228755,"node_id":"IC_kwDOA-eq3c5JvpzT","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-09-05T15:43:16Z","updated_at":"2022-09-05T15:43:16Z","author_association":"MEMBER","body":"> So my question is: should the OQS provided function be close to the requirements outlined by the standard or should it mimic glib'c aligned_alloc?\r\n\r\nNo strong preference from my side. @jschanck : The comment was added by you: Any preference from your side?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1237228755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-05T15:43:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23827106410","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1299","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1299/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1299/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1299/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1299","id":1356961319,"node_id":"I_kwDOA-eq3c5Q4ZYn","number":1299,"title":"Why not Rust?","user":{"login":"dotridat","id":112381932,"node_id":"U_kgDOBrLP7A","avatar_url":"https://avatars.githubusercontent.com/u/112381932?v=4","gravatar_id":"","url":"https://api.github.com/users/dotridat","html_url":"https://github.com/dotridat","followers_url":"https://api.github.com/users/dotridat/followers","following_url":"https://api.github.com/users/dotridat/following{/other_user}","gists_url":"https://api.github.com/users/dotridat/gists{/gist_id}","starred_url":"https://api.github.com/users/dotridat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dotridat/subscriptions","organizations_url":"https://api.github.com/users/dotridat/orgs","repos_url":"https://api.github.com/users/dotridat/repos","events_url":"https://api.github.com/users/dotridat/events{/privacy}","received_events_url":"https://api.github.com/users/dotridat/received_events","type":"User","site_admin":false},"labels":[{"id":423520884,"node_id":"MDU6TGFiZWw0MjM1MjA4ODQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-31T08:05:30Z","updated_at":"2022-09-05T15:47:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Although liboqs-rust is written in Rust, but liboqs isn't.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1299/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1237234507","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1299#issuecomment-1237234507","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1299","id":1237234507,"node_id":"IC_kwDOA-eq3c5JvrNL","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-09-05T15:47:36Z","updated_at":"2022-09-05T15:47:36Z","author_association":"MEMBER","body":"> debugging C/C++ code is much more expensive\r\n\r\nProbably right. But the C code exists (and is being worked on upstream); Rust doesn't/isn't. So unless you (or anyone you know) would volunteer, this won't make our immediate task list.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1237234507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-05T15:47:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"23832393424","type":"IssueCommentEvent","actor":{"id":79326135,"login":"LittleTimmy63","display_login":"LittleTimmy63","gravatar_id":"","url":"https://api.github.com/users/LittleTimmy63","avatar_url":"https://avatars.githubusercontent.com/u/79326135?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1301","id":1360570757,"node_id":"I_kwDOA-eq3c5RGKmF","number":1301,"title":"Kyber1024 encapsulation causes shared secret to get mangled","user":{"login":"LittleTimmy63","id":79326135,"node_id":"MDQ6VXNlcjc5MzI2MTM1","avatar_url":"https://avatars.githubusercontent.com/u/79326135?v=4","gravatar_id":"","url":"https://api.github.com/users/LittleTimmy63","html_url":"https://github.com/LittleTimmy63","followers_url":"https://api.github.com/users/LittleTimmy63/followers","following_url":"https://api.github.com/users/LittleTimmy63/following{/other_user}","gists_url":"https://api.github.com/users/LittleTimmy63/gists{/gist_id}","starred_url":"https://api.github.com/users/LittleTimmy63/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LittleTimmy63/subscriptions","organizations_url":"https://api.github.com/users/LittleTimmy63/orgs","repos_url":"https://api.github.com/users/LittleTimmy63/repos","events_url":"https://api.github.com/users/LittleTimmy63/events{/privacy}","received_events_url":"https://api.github.com/users/LittleTimmy63/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-09-02T20:09:05Z","updated_at":"2022-09-05T23:31:41Z","closed_at":"2022-09-03T15:05:20Z","author_association":"NONE","active_lock_reason":null,"body":"I am trying to write a small program to encrypt and decrypt using Kyber1024.\r\nHowever, I have discovered an issue. Despite issuing the same input (11111111111111111111111111111111), and using the same key, the output is different each time. By printing out values, I have deduced that OQS_KEM_encaps, when using Kyber1024, somehow turns the input into garbage.\r\n\r\nReplication:\r\n```\r\nputs(\"pre encaps inp\");\r\nputs(inp);\r\nif ((OQS_KEM_encaps(kem, *out, inp, pub)) == OQS_ERROR) exit(EXIT_FAILURE);\r\nputs(\"post encaps inp\");\r\nputs(inp);\r\n```\r\n\r\nExpected output:\r\npre encaps inp\r\n11111111111111111111111111111111\r\npost encaps inp\r\n11111111111111111111111111111111\r\nActual output:\r\npre encaps inp\r\n11111111111111111111111111111111\r\npost encaps inp\r\n*{�c��_�@�p��H`�V���f@Ҳ�hb�S-��\r\n         \r\nIt should be noted that the exact string of garbage is different each time.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301/timeline","performed_via_github_app":null,"state_reason":"not_planned"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1237524389","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1301#issuecomment-1237524389","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1301","id":1237524389,"node_id":"IC_kwDOA-eq3c5Jwx-l","user":{"login":"LittleTimmy63","id":79326135,"node_id":"MDQ6VXNlcjc5MzI2MTM1","avatar_url":"https://avatars.githubusercontent.com/u/79326135?v=4","gravatar_id":"","url":"https://api.github.com/users/LittleTimmy63","html_url":"https://github.com/LittleTimmy63","followers_url":"https://api.github.com/users/LittleTimmy63/followers","following_url":"https://api.github.com/users/LittleTimmy63/following{/other_user}","gists_url":"https://api.github.com/users/LittleTimmy63/gists{/gist_id}","starred_url":"https://api.github.com/users/LittleTimmy63/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LittleTimmy63/subscriptions","organizations_url":"https://api.github.com/users/LittleTimmy63/orgs","repos_url":"https://api.github.com/users/LittleTimmy63/repos","events_url":"https://api.github.com/users/LittleTimmy63/events{/privacy}","received_events_url":"https://api.github.com/users/LittleTimmy63/received_events","type":"User","site_admin":false},"created_at":"2022-09-05T23:31:41Z","updated_at":"2022-09-05T23:31:41Z","author_association":"NONE","body":"So an arbitrary key cannot be used?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1237524389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-09-05T23:31:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
