{"id":"21281361043","type":"IssueCommentEvent","actor":{"id":60347669,"login":"judowha","display_login":"judowha","gravatar_id":"","url":"https://api.github.com/users/judowha","avatar_url":"https://avatars.githubusercontent.com/u/60347669?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/365","id":1203006774,"node_id":"I_kwDOA_fpb85HtG02","number":365,"title":"Issues of s_time function in real environment testing ","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-04-13T09:02:00Z","updated_at":"2022-04-14T02:37:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am testing the performance of **mutual TLS connection** with hybrid certificates on AWS EC2. The certificate chain of a test group is created in this way: \r\n```\r\nRootCA\r\n├── SecondCA\r\n│   └──server certificate\r\n└── ThirdCA\r\n     └── client certificate\r\n```\r\nThe signature algorithms used by RootCA, SecondCA, and ThirdCA are the same. \r\n\r\nI create many groups with different hybrid algorithms: rsa3072_dilithium2, rsa3072_dilithium2_aes, rsa3072_falcon512, p256_dilithium2, p256_dilithium2_aes, p256_falcon512, p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, p521_falcon1024.\r\n\r\nI first start the sever on AWS EC2 instance:\r\n`openssl s_server -key $1_test/server/server.key -cert_chain $1_test/secondCA/demoCA/secondCA.pem  -cert $1_test/server/server.pem -accept $2 -CAfile $1_test/client/client_chain.pem -verify_return_error -Verify 2 -state -WWW ` \r\n\r\nThen I will run `s_client` on local to test the connection:\r\n`openssl s_client -key $1_test/client/client.key  -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -verify_return_error -state`\r\n**The connection tests using `s_client` are ok for all groups. Therefore, I think the created certificate chain should be right**\r\n\r\nFinally I run `s_time` on local to test the performance:\r\n`openssl s_time -key $1_test/client/client.key -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -new`\r\nThe performance test using `s_time` for RSA combined algorithms are working well. **However, many problems for P256 combined algorithms.** \r\n\r\n- For  p256_dilithium2 and p256_dilithium2_aes, the server could not receive early data\r\n![Screenshot from 2022-04-13 11-18-40](https://user-images.githubusercontent.com/60347669/163135545-92e379c6-1a97-4dea-9c63-8a73e5ac1c14.png)\r\n- For p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, and p521_falcon1024. The server have problem in reading client's certificate\r\n![Screenshot from 2022-04-13 15-35-25](https://user-images.githubusercontent.com/60347669/163136765-16c79c71-6bf7-4963-8607-60c2d695999d.png)\r\n\r\nI am not sure the problems happans because of my mistakes or it is the problem of `s_time` function. Thanks a lot if anyone would like to help me! \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098652219","html_url":"https://github.com/open-quantum-safe/openssl/issues/365#issuecomment-1098652219","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","id":1098652219,"node_id":"IC_kwDOA_fpb85BfBo7","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T02:37:52Z","updated_at":"2022-04-14T02:37:52Z","author_association":"NONE","body":"> Thanks for this error report. Weird indeed. Some questions, if I may:\r\n> \r\n> * What's the output of ` openssl version`?\r\n> * Does the error above occur immediately or only after some (successful) s_time handshakes (printed \"*\")?\r\n> * Are there _any_ p256 hybrids that do work?\r\n> * Does `s_time` testing work OK if you don't provide/request client certificate authentication, i.e., is this an issue only triggered by client auth?\r\n> * Beyond the rsa-OQS hybrids, do simple/plain p256 certificates also work OK?\r\n> * Could you share the scripts generating all components in order for us to reproduce? Ideally something that creates all certs based on a parameter (OQS-signature algorithm), starting s_server as well as s_client (showing that the basics do work) followed by the s_time call (that fails).\r\n> \r\n> Looks like one has to debug into this: I don't recall us having done substantial client-auth testing...\r\n\r\nThanks for your help! I will clarify the question one by one\r\n- My OpenSSL version is `OpenSSL 1.1.1n  15 Mar 2022, Open Quantum Safe 2022-03 dev\r\n- \"*\" is always printed and the handshake test is continuing even if the error occurs. The errors occur randomly in the handshake test. In other words, the error will not interrupt s_time testing and it could happen at any time during the testing.\r\n- p256_falcon512 works\r\n- I will test it next\r\n- Simple p256 certificates work ok\r\n- shell file could not be uploaded so I just paste the code for you to reproduce the test.\r\n\r\nFor generating certs, I run the shell file named `environment_generator`:\r\n```\r\n#!/bin/bash\r\n\r\nmkdir $1_test\r\ncd $1_test\r\nmkdir rootCA \r\ncd rootCA \r\nmkdir certs  crl  demoCA  \r\ncd demoCA \r\nmkdir newcerts private  \r\ntouch index.txt serial   \r\necho 01 >> serial \r\ncd .. \r\nopenssl req -x509 -newkey $1 -passout pass:123456 -keyout demoCA/private/root.key -subj /C=CN/ST=test/L=test/O=test/OU=test/CN=root -out demoCA/root.pem || ! cd ../.. || ! rm -rf $1_test || exit\r\ncd ..\r\n\r\n\r\nmkdir secondCA \r\ncd secondCA \r\nmkdir certs  crl  demoCA  \r\ncd demoCA \r\nmkdir newcerts private  \r\ntouch index.txt serial  \r\necho 01 >> serial  \r\ncd .. \r\nopenssl req -new -newkey $1 -passout pass:123456 -keyout demoCA/private/second.key -out second.csr -subj /C=CN/ST=test/L=test/O=test/OU=test/CN=second  \r\ncd ../rootCA \r\nopenssl ca -extensions v3_ca -in ../secondCA/second.csr -days 3650 -out ../secondCA/demoCA/secondCA.pem -cert demoCA/root.pem -keyfile demoCA/private/root.key -passin pass:123456\r\ncd .. \r\n\r\nmkdir thirdCA \r\ncd thirdCA \r\nmkdir certs  crl  demoCA  \r\ncd demoCA \r\nmkdir newcerts private  \r\ntouch index.txt serial  \r\necho 01 >> serial  \r\ncd .. \r\nopenssl req -new -newkey $1 -passout pass:123456 -keyout demoCA/private/third.key -out third.csr -subj /C=CN/ST=test/L=test/O=test/OU=test/CN=third  \r\ncd ../rootCA \r\nopenssl ca -extensions v3_ca -in ../thirdCA/third.csr -days 3650 -out ../thirdCA/demoCA/thirdCA.pem -cert demoCA/root.pem -keyfile demoCA/private/root.key -passin pass:123456\r\ncd .. \r\n\r\n\r\nmkdir server\r\ncd server\r\nopenssl req -new -newkey $1 -passout pass:123456 -keyout server.key -out server.csr -subj /C=CN/ST=test/L=test/O=test/OU=test/CN=server \r\ncd ../secondCA \r\nopenssl ca -in ../server/server.csr -cert demoCA/secondCA.pem -keyfile demoCA/private/second.key -passin pass:123456 -out ../server/server.pem -days 365 -subj /C=CN/ST=test/L=test/O=test/OU=test/CN=server\r\ncd ..\r\n\r\nmkdir client\r\ncd client\r\nopenssl req -new -newkey $1 -passout pass:123456 -keyout client.key -out client.csr -subj /C=CN/ST=test/L=test/O=test/OU=test/CN=client \r\ncd ../thirdCA \r\nopenssl ca -in ../client/client.csr -cert demoCA/thirdCA.pem -keyfile demoCA/private/third.key -passin pass:123456 -out ../client/client.pem -days 365 -subj /C=CN/ST=test/L=test/O=test/OU=test/CN=client\r\n\r\n \r\ncd ../client\r\ncat ../thirdCA/demoCA/thirdCA.pem ../rootCA/demoCA/root.pem > client_chain.pem\r\n```\r\nTo use the file, you can run `./environment_generator ALGO_NAME` (i.e. `./environment_generator p256_dilithium2`). The password for the key and the cert will be 123456\r\n\r\nFor starting a server, here is the shell script named `start_server`:\r\n```\r\n#!/bin/bash\r\nopenssl s_server -key $1_test/server/server.key -cert_chain $1_test/secondCA/demoCA/secondCA.pem  -cert $1_test/server/server.pem -accept $2 -CAfile $1_test/client/client_chain.pem -verify_return_error -Verify 2 -WWW -state -tls1_3\r\n```  \r\nTo use the script, you can run `./start_server ALGO_NAME PROT ` (i.e. `./start_server p256_dilithium2 4433`)\r\n\r\nFor starting a client, here is the shell script named `start_server`:\r\n```\r\n#!/bin/bash\r\nopenssl s_client -key $1_test/client/client.key  -cert $1_test/client/client.pem -connect MY_IP:$2 -CAfile $1_test/rootCA/demoCA/root.pem -verify_return_error -state\r\n```  \r\nThe `MY_IP` inside needs to be changed to the public address of the server. To use the script, you can run `./start_client ALGO_NAME PROT ` (i.e. `./start_client p256_dilithium2 4433`)\r\n\r\nFor starting a test, here is the shell script named `start_test`:\r\n```\r\n#!/bin/bash\r\nopenssl s_time -key $1_test/client/client.key -cert $1_test/client/client.pem -connect MY_IP:$2 -CAfile $1_test/rootCA/demoCA/root.pem -new\r\n```  \r\nThe `MY_IP` inside needs to be changed to the public address of the server. To use the script, you can run `./start_test ALGO_NAME PROT ` (i.e. `./start_test p256_dilithium2 4433`)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098652219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T02:37:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21283778077","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/365","id":1203006774,"node_id":"I_kwDOA_fpb85HtG02","number":365,"title":"Issues of s_time function in real environment testing ","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-04-13T09:02:00Z","updated_at":"2022-04-14T06:51:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am testing the performance of **mutual TLS connection** with hybrid certificates on AWS EC2. The certificate chain of a test group is created in this way: \r\n```\r\nRootCA\r\n├── SecondCA\r\n│   └──server certificate\r\n└── ThirdCA\r\n     └── client certificate\r\n```\r\nThe signature algorithms used by RootCA, SecondCA, and ThirdCA are the same. \r\n\r\nI create many groups with different hybrid algorithms: rsa3072_dilithium2, rsa3072_dilithium2_aes, rsa3072_falcon512, p256_dilithium2, p256_dilithium2_aes, p256_falcon512, p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, p521_falcon1024.\r\n\r\nI first start the sever on AWS EC2 instance:\r\n`openssl s_server -key $1_test/server/server.key -cert_chain $1_test/secondCA/demoCA/secondCA.pem  -cert $1_test/server/server.pem -accept $2 -CAfile $1_test/client/client_chain.pem -verify_return_error -Verify 2 -state -WWW ` \r\n\r\nThen I will run `s_client` on local to test the connection:\r\n`openssl s_client -key $1_test/client/client.key  -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -verify_return_error -state`\r\n**The connection tests using `s_client` are ok for all groups. Therefore, I think the created certificate chain should be right**\r\n\r\nFinally I run `s_time` on local to test the performance:\r\n`openssl s_time -key $1_test/client/client.key -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -new`\r\nThe performance test using `s_time` for RSA combined algorithms are working well. **However, many problems for P256 combined algorithms.** \r\n\r\n- For  p256_dilithium2 and p256_dilithium2_aes, the server could not receive early data\r\n![Screenshot from 2022-04-13 11-18-40](https://user-images.githubusercontent.com/60347669/163135545-92e379c6-1a97-4dea-9c63-8a73e5ac1c14.png)\r\n- For p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, and p521_falcon1024. The server have problem in reading client's certificate\r\n![Screenshot from 2022-04-13 15-35-25](https://user-images.githubusercontent.com/60347669/163136765-16c79c71-6bf7-4963-8607-60c2d695999d.png)\r\n\r\nI am not sure the problems happans because of my mistakes or it is the problem of `s_time` function. Thanks a lot if anyone would like to help me! \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098768781","html_url":"https://github.com/open-quantum-safe/openssl/issues/365#issuecomment-1098768781","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","id":1098768781,"node_id":"IC_kwDOA_fpb85BfeGN","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T06:51:07Z","updated_at":"2022-04-14T06:51:07Z","author_association":"MEMBER","body":"Thanks for the additional information and scripts above. I get somewhat different results:\r\n\r\n- With no algorithm combination I get an error message other than \"SSL_accept:error in SSLv3/TLS write session ticket\"; this also holds for p256_falcon512, rsa_dilithium2 and p384_dilithium3 so can you please re-confirm or correct the statements above\r\n\r\n> p256_falcon512 works\r\n\r\n> The performance test using s_time for RSA combined algorithms are working well. \r\n\r\n?\r\n\r\n- The error messages appear for _every single handshake_ and not only randomly: e.g., \r\n\r\n```\r\n18884 connections in 14.69s; 1285.50 connections/user sec, bytes read 0\r\n18884 connections in 31 real seconds, 0 bytes read per connection\r\n\r\n$ grep error log-falcon | wc\r\n  18884  113304  963084\r\n```\r\n\r\n- Finally, when reading your error log above ending in \"error in read client cert\" I wonder how this possibly can be: The log entries above just show that the client cert has been read and validated, no? In all of my tests, the server-side log ends with\r\n\r\n```\r\nSSL_accept:TLSv1.3 early data\r\ndepth=2 C = CN, ST = test, L = test, O = test, OU = test, CN = root\r\nverify return:1\r\ndepth=1 C = CN, ST = test, O = test, OU = test, CN = third\r\nverify return:1\r\ndepth=0 C = CN, ST = test, O = test, OU = test, CN = client\r\nverify return:1\r\nSSL_accept:SSLv3/TLS read client certificate\r\nSSL_accept:SSLv3/TLS read certificate verify\r\nSSL_accept:SSLv3/TLS read finished\r\nSSL_accept:error in SSLv3/TLS write session ticket\r\n```\r\n\r\nSide notes: \r\n- I tested everything over the loopback interface in order to eliminate possible \"network artifacts\"; so to be sure we have the same setup, could you please also re-validate your findings with \"MY_IP\" set to \"localhost\"?\r\n- I disabled the use of passwords on the keys to test more quickly. The results above also occurred when still using your unchanged scripts, though.\r\n- I used a local computer for these tests, not an AWS VM. Can you confirm your findings also in such local environment? Maybe it's an AWS networking issue? If the latter, could you give me ssh access to your VM to check this out?\r\n\r\n--> If you agree to the above (?) the only question remaining is what causes the consistent \"write session ticket\" error (that does not occur when feeding your scripts with \"rsa:3072\"): Will look into that next...\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098768781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T06:51:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21284481021","type":"IssueCommentEvent","actor":{"id":60347669,"login":"judowha","display_login":"judowha","gravatar_id":"","url":"https://api.github.com/users/judowha","avatar_url":"https://avatars.githubusercontent.com/u/60347669?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/365","id":1203006774,"node_id":"I_kwDOA_fpb85HtG02","number":365,"title":"Issues of s_time function in real environment testing ","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-04-13T09:02:00Z","updated_at":"2022-04-14T07:39:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am testing the performance of **mutual TLS connection** with hybrid certificates on AWS EC2. The certificate chain of a test group is created in this way: \r\n```\r\nRootCA\r\n├── SecondCA\r\n│   └──server certificate\r\n└── ThirdCA\r\n     └── client certificate\r\n```\r\nThe signature algorithms used by RootCA, SecondCA, and ThirdCA are the same. \r\n\r\nI create many groups with different hybrid algorithms: rsa3072_dilithium2, rsa3072_dilithium2_aes, rsa3072_falcon512, p256_dilithium2, p256_dilithium2_aes, p256_falcon512, p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, p521_falcon1024.\r\n\r\nI first start the sever on AWS EC2 instance:\r\n`openssl s_server -key $1_test/server/server.key -cert_chain $1_test/secondCA/demoCA/secondCA.pem  -cert $1_test/server/server.pem -accept $2 -CAfile $1_test/client/client_chain.pem -verify_return_error -Verify 2 -state -WWW ` \r\n\r\nThen I will run `s_client` on local to test the connection:\r\n`openssl s_client -key $1_test/client/client.key  -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -verify_return_error -state`\r\n**The connection tests using `s_client` are ok for all groups. Therefore, I think the created certificate chain should be right**\r\n\r\nFinally I run `s_time` on local to test the performance:\r\n`openssl s_time -key $1_test/client/client.key -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -new`\r\nThe performance test using `s_time` for RSA combined algorithms are working well. **However, many problems for P256 combined algorithms.** \r\n\r\n- For  p256_dilithium2 and p256_dilithium2_aes, the server could not receive early data\r\n![Screenshot from 2022-04-13 11-18-40](https://user-images.githubusercontent.com/60347669/163135545-92e379c6-1a97-4dea-9c63-8a73e5ac1c14.png)\r\n- For p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, and p521_falcon1024. The server have problem in reading client's certificate\r\n![Screenshot from 2022-04-13 15-35-25](https://user-images.githubusercontent.com/60347669/163136765-16c79c71-6bf7-4963-8607-60c2d695999d.png)\r\n\r\nI am not sure the problems happans because of my mistakes or it is the problem of `s_time` function. Thanks a lot if anyone would like to help me! \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098803367","html_url":"https://github.com/open-quantum-safe/openssl/issues/365#issuecomment-1098803367","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","id":1098803367,"node_id":"IC_kwDOA_fpb85Bfmin","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T07:39:02Z","updated_at":"2022-04-14T07:39:02Z","author_association":"NONE","body":"Thanks for your reproduction test. \r\n>  If you agree to the above (?) the only question remaining is what causes the consistent \"write session ticket\" error (that does not occur when feeding your scripts with \"rsa:3072\")\r\n\r\nI agree with your result. However, if I test on localhost, **all groups including rsa3072 combined algorithms** are all showing \"write session ticket\" error. If I am using simple rsa3072 or p256 certificate I will get no error.\r\n\r\nMoreover, if I put sever into AWS VM, p256_falcon could finish the test with no error message and other groups will have the problems I mentioned before. It may be because of  AWS networking issues. \r\n\r\nI am very glad to provide you with my VM information if you need it, but here I couldn't upload the key pair because I couldn't upload pem files. Latter I can open a repository and put the key pair in the repository. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098803367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T07:39:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21284987529","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/365","id":1203006774,"node_id":"I_kwDOA_fpb85HtG02","number":365,"title":"Issues of s_time function in real environment testing ","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-04-13T09:02:00Z","updated_at":"2022-04-14T08:10:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am testing the performance of **mutual TLS connection** with hybrid certificates on AWS EC2. The certificate chain of a test group is created in this way: \r\n```\r\nRootCA\r\n├── SecondCA\r\n│   └──server certificate\r\n└── ThirdCA\r\n     └── client certificate\r\n```\r\nThe signature algorithms used by RootCA, SecondCA, and ThirdCA are the same. \r\n\r\nI create many groups with different hybrid algorithms: rsa3072_dilithium2, rsa3072_dilithium2_aes, rsa3072_falcon512, p256_dilithium2, p256_dilithium2_aes, p256_falcon512, p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, p521_falcon1024.\r\n\r\nI first start the sever on AWS EC2 instance:\r\n`openssl s_server -key $1_test/server/server.key -cert_chain $1_test/secondCA/demoCA/secondCA.pem  -cert $1_test/server/server.pem -accept $2 -CAfile $1_test/client/client_chain.pem -verify_return_error -Verify 2 -state -WWW ` \r\n\r\nThen I will run `s_client` on local to test the connection:\r\n`openssl s_client -key $1_test/client/client.key  -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -verify_return_error -state`\r\n**The connection tests using `s_client` are ok for all groups. Therefore, I think the created certificate chain should be right**\r\n\r\nFinally I run `s_time` on local to test the performance:\r\n`openssl s_time -key $1_test/client/client.key -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -new`\r\nThe performance test using `s_time` for RSA combined algorithms are working well. **However, many problems for P256 combined algorithms.** \r\n\r\n- For  p256_dilithium2 and p256_dilithium2_aes, the server could not receive early data\r\n![Screenshot from 2022-04-13 11-18-40](https://user-images.githubusercontent.com/60347669/163135545-92e379c6-1a97-4dea-9c63-8a73e5ac1c14.png)\r\n- For p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, and p521_falcon1024. The server have problem in reading client's certificate\r\n![Screenshot from 2022-04-13 15-35-25](https://user-images.githubusercontent.com/60347669/163136765-16c79c71-6bf7-4963-8607-60c2d695999d.png)\r\n\r\nI am not sure the problems happans because of my mistakes or it is the problem of `s_time` function. Thanks a lot if anyone would like to help me! \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098829048","html_url":"https://github.com/open-quantum-safe/openssl/issues/365#issuecomment-1098829048","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","id":1098829048,"node_id":"IC_kwDOA_fpb85Bfsz4","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T08:10:14Z","updated_at":"2022-04-14T08:10:14Z","author_association":"MEMBER","body":"Thanks for confirming that \r\n- only \"write session\" errors occur on localhost and \r\n- the behaviour is different when run on an AWS VM.\r\n\r\nWhen/if I understand the \"write session\" error, I'll then test on an AWS VM of my own first and will let you know my experiences -- possibly coming back with a request for access to your VM if I cannot reproduce things otherwise... Please let me know which AWS VM type you are using.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098829048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T08:10:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21285175981","type":"IssueCommentEvent","actor":{"id":60347669,"login":"judowha","display_login":"judowha","gravatar_id":"","url":"https://api.github.com/users/judowha","avatar_url":"https://avatars.githubusercontent.com/u/60347669?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/365","id":1203006774,"node_id":"I_kwDOA_fpb85HtG02","number":365,"title":"Issues of s_time function in real environment testing ","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-04-13T09:02:00Z","updated_at":"2022-04-14T08:20:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am testing the performance of **mutual TLS connection** with hybrid certificates on AWS EC2. The certificate chain of a test group is created in this way: \r\n```\r\nRootCA\r\n├── SecondCA\r\n│   └──server certificate\r\n└── ThirdCA\r\n     └── client certificate\r\n```\r\nThe signature algorithms used by RootCA, SecondCA, and ThirdCA are the same. \r\n\r\nI create many groups with different hybrid algorithms: rsa3072_dilithium2, rsa3072_dilithium2_aes, rsa3072_falcon512, p256_dilithium2, p256_dilithium2_aes, p256_falcon512, p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, p521_falcon1024.\r\n\r\nI first start the sever on AWS EC2 instance:\r\n`openssl s_server -key $1_test/server/server.key -cert_chain $1_test/secondCA/demoCA/secondCA.pem  -cert $1_test/server/server.pem -accept $2 -CAfile $1_test/client/client_chain.pem -verify_return_error -Verify 2 -state -WWW ` \r\n\r\nThen I will run `s_client` on local to test the connection:\r\n`openssl s_client -key $1_test/client/client.key  -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -verify_return_error -state`\r\n**The connection tests using `s_client` are ok for all groups. Therefore, I think the created certificate chain should be right**\r\n\r\nFinally I run `s_time` on local to test the performance:\r\n`openssl s_time -key $1_test/client/client.key -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -new`\r\nThe performance test using `s_time` for RSA combined algorithms are working well. **However, many problems for P256 combined algorithms.** \r\n\r\n- For  p256_dilithium2 and p256_dilithium2_aes, the server could not receive early data\r\n![Screenshot from 2022-04-13 11-18-40](https://user-images.githubusercontent.com/60347669/163135545-92e379c6-1a97-4dea-9c63-8a73e5ac1c14.png)\r\n- For p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, and p521_falcon1024. The server have problem in reading client's certificate\r\n![Screenshot from 2022-04-13 15-35-25](https://user-images.githubusercontent.com/60347669/163136765-16c79c71-6bf7-4963-8607-60c2d695999d.png)\r\n\r\nI am not sure the problems happans because of my mistakes or it is the problem of `s_time` function. Thanks a lot if anyone would like to help me! \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098840449","html_url":"https://github.com/open-quantum-safe/openssl/issues/365#issuecomment-1098840449","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","id":1098840449,"node_id":"IC_kwDOA_fpb85BfvmB","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T08:20:56Z","updated_at":"2022-04-14T08:20:56Z","author_association":"NONE","body":"I am using the Ubuntu Server 18.04 LTS, x86, AMI ID: ami-07315f74f3fa6a5a3. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1098840449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T08:20:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21288259468","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/365","id":1203006774,"node_id":"I_kwDOA_fpb85HtG02","number":365,"title":"Issues of s_time function in real environment testing ","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-04-13T09:02:00Z","updated_at":"2022-04-14T11:24:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am testing the performance of **mutual TLS connection** with hybrid certificates on AWS EC2. The certificate chain of a test group is created in this way: \r\n```\r\nRootCA\r\n├── SecondCA\r\n│   └──server certificate\r\n└── ThirdCA\r\n     └── client certificate\r\n```\r\nThe signature algorithms used by RootCA, SecondCA, and ThirdCA are the same. \r\n\r\nI create many groups with different hybrid algorithms: rsa3072_dilithium2, rsa3072_dilithium2_aes, rsa3072_falcon512, p256_dilithium2, p256_dilithium2_aes, p256_falcon512, p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, p521_falcon1024.\r\n\r\nI first start the sever on AWS EC2 instance:\r\n`openssl s_server -key $1_test/server/server.key -cert_chain $1_test/secondCA/demoCA/secondCA.pem  -cert $1_test/server/server.pem -accept $2 -CAfile $1_test/client/client_chain.pem -verify_return_error -Verify 2 -state -WWW ` \r\n\r\nThen I will run `s_client` on local to test the connection:\r\n`openssl s_client -key $1_test/client/client.key  -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -verify_return_error -state`\r\n**The connection tests using `s_client` are ok for all groups. Therefore, I think the created certificate chain should be right**\r\n\r\nFinally I run `s_time` on local to test the performance:\r\n`openssl s_time -key $1_test/client/client.key -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -new`\r\nThe performance test using `s_time` for RSA combined algorithms are working well. **However, many problems for P256 combined algorithms.** \r\n\r\n- For  p256_dilithium2 and p256_dilithium2_aes, the server could not receive early data\r\n![Screenshot from 2022-04-13 11-18-40](https://user-images.githubusercontent.com/60347669/163135545-92e379c6-1a97-4dea-9c63-8a73e5ac1c14.png)\r\n- For p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, and p521_falcon1024. The server have problem in reading client's certificate\r\n![Screenshot from 2022-04-13 15-35-25](https://user-images.githubusercontent.com/60347669/163136765-16c79c71-6bf7-4963-8607-60c2d695999d.png)\r\n\r\nI am not sure the problems happans because of my mistakes or it is the problem of `s_time` function. Thanks a lot if anyone would like to help me! \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1099087529","html_url":"https://github.com/open-quantum-safe/openssl/issues/365#issuecomment-1099087529","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","id":1099087529,"node_id":"IC_kwDOA_fpb85Bgr6p","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T11:24:31Z","updated_at":"2022-04-14T11:24:31Z","author_association":"MEMBER","body":"From https://wiki.openssl.org/index.php/TLS1.3:\r\n\r\n> If a client sends it's data and directly sends the close notify request and closes the connection, the server will still try to send tickets if configured to do so. Since the connection is already closed by the client, this might result in a write error and receiving the SIGPIPE signal. The write error will be ignored if it's a session ticket. But server applications can still get SIGPIPE they didn't get before.\r\n\r\nI think we're seeing permitted behaviour with the write session ticket \"error message\": \r\n1) It only becomes visible when activating \"-state\" \r\n2) As per the above, it is permitted behaviour -- and honestly, I'd expect it as the `s_trace` client _should_ close the connection immediately after handshake in order to begin the next handshake.\r\n\r\nThe question remaining in my mind is why the pure RSA:3072 test doesn't show this message -- but then again, the messages could be short enough to permit sending the session ticket right along with the handshake completion message -- which is something that longer certificates/certificate processing (QSC+classic crypto) arguably make less likely.\r\n\r\nI'll try to see how the behaviour on an AWS VM differs, but so far, no real _fault_ is visible. For the \"relative value\" of the \"write session ticket\" message also see [this code comment](https://github.com/openssl/openssl/blob/53137462f42f8673fbd5b0831f8ea051ddea509f/ssl/statem/statem_srvr.c#L985-L998)...\r\n\r\nFinally and FWIW, just add the `s_server` option \"-no_ticket\" to your \"start_server.sh\" script and the error is gone :-)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1099087529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T11:24:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21291396754","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/365","id":1203006774,"node_id":"I_kwDOA_fpb85HtG02","number":365,"title":"Issues of s_time function in real environment testing ","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2022-04-13T09:02:00Z","updated_at":"2022-04-14T14:18:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am testing the performance of **mutual TLS connection** with hybrid certificates on AWS EC2. The certificate chain of a test group is created in this way: \r\n```\r\nRootCA\r\n├── SecondCA\r\n│   └──server certificate\r\n└── ThirdCA\r\n     └── client certificate\r\n```\r\nThe signature algorithms used by RootCA, SecondCA, and ThirdCA are the same. \r\n\r\nI create many groups with different hybrid algorithms: rsa3072_dilithium2, rsa3072_dilithium2_aes, rsa3072_falcon512, p256_dilithium2, p256_dilithium2_aes, p256_falcon512, p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, p521_falcon1024.\r\n\r\nI first start the sever on AWS EC2 instance:\r\n`openssl s_server -key $1_test/server/server.key -cert_chain $1_test/secondCA/demoCA/secondCA.pem  -cert $1_test/server/server.pem -accept $2 -CAfile $1_test/client/client_chain.pem -verify_return_error -Verify 2 -state -WWW ` \r\n\r\nThen I will run `s_client` on local to test the connection:\r\n`openssl s_client -key $1_test/client/client.key  -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -verify_return_error -state`\r\n**The connection tests using `s_client` are ok for all groups. Therefore, I think the created certificate chain should be right**\r\n\r\nFinally I run `s_time` on local to test the performance:\r\n`openssl s_time -key $1_test/client/client.key -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -new`\r\nThe performance test using `s_time` for RSA combined algorithms are working well. **However, many problems for P256 combined algorithms.** \r\n\r\n- For  p256_dilithium2 and p256_dilithium2_aes, the server could not receive early data\r\n![Screenshot from 2022-04-13 11-18-40](https://user-images.githubusercontent.com/60347669/163135545-92e379c6-1a97-4dea-9c63-8a73e5ac1c14.png)\r\n- For p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, and p521_falcon1024. The server have problem in reading client's certificate\r\n![Screenshot from 2022-04-13 15-35-25](https://user-images.githubusercontent.com/60347669/163136765-16c79c71-6bf7-4963-8607-60c2d695999d.png)\r\n\r\nI am not sure the problems happans because of my mistakes or it is the problem of `s_time` function. Thanks a lot if anyone would like to help me! \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1099235042","html_url":"https://github.com/open-quantum-safe/openssl/issues/365#issuecomment-1099235042","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","id":1099235042,"node_id":"IC_kwDOA_fpb85BhP7i","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T14:18:01Z","updated_at":"2022-04-14T14:18:01Z","author_association":"MEMBER","body":"Now completed testing on an AWS VM: Absolutely the same behaviour: No other error than the by now known \"session ticket\" one and absolutely no error if passing \"-no_ticket\" to the `s_server` command. \r\n\r\nMaybe you ought to start another AWS VM and see whether things occur on that one again. \r\n\r\nPlatform I used (`uname -a`): \"Linux ip-172-31-40-63.us-east-2.compute.internal 5.10.93-87.444.amzn2.x86_64 #1 SMP Thu Jan 20 22:50:50 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\").\r\n\r\nSuggest to close the issue. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1099235042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T14:18:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21293503335","type":"IssueCommentEvent","actor":{"id":60347669,"login":"judowha","display_login":"judowha","gravatar_id":"","url":"https://api.github.com/users/judowha","avatar_url":"https://avatars.githubusercontent.com/u/60347669?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/365","id":1203006774,"node_id":"I_kwDOA_fpb85HtG02","number":365,"title":"Issues of s_time function in real environment testing ","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2022-04-13T09:02:00Z","updated_at":"2022-04-14T16:08:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am testing the performance of **mutual TLS connection** with hybrid certificates on AWS EC2. The certificate chain of a test group is created in this way: \r\n```\r\nRootCA\r\n├── SecondCA\r\n│   └──server certificate\r\n└── ThirdCA\r\n     └── client certificate\r\n```\r\nThe signature algorithms used by RootCA, SecondCA, and ThirdCA are the same. \r\n\r\nI create many groups with different hybrid algorithms: rsa3072_dilithium2, rsa3072_dilithium2_aes, rsa3072_falcon512, p256_dilithium2, p256_dilithium2_aes, p256_falcon512, p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, p521_falcon1024.\r\n\r\nI first start the sever on AWS EC2 instance:\r\n`openssl s_server -key $1_test/server/server.key -cert_chain $1_test/secondCA/demoCA/secondCA.pem  -cert $1_test/server/server.pem -accept $2 -CAfile $1_test/client/client_chain.pem -verify_return_error -Verify 2 -state -WWW ` \r\n\r\nThen I will run `s_client` on local to test the connection:\r\n`openssl s_client -key $1_test/client/client.key  -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -verify_return_error -state`\r\n**The connection tests using `s_client` are ok for all groups. Therefore, I think the created certificate chain should be right**\r\n\r\nFinally I run `s_time` on local to test the performance:\r\n`openssl s_time -key $1_test/client/client.key -cert $1_test/client/client.pem -connect ec2_ip:$2 -CAfile $1_test/rootCA/demoCA/root.pem -new`\r\nThe performance test using `s_time` for RSA combined algorithms are working well. **However, many problems for P256 combined algorithms.** \r\n\r\n- For  p256_dilithium2 and p256_dilithium2_aes, the server could not receive early data\r\n![Screenshot from 2022-04-13 11-18-40](https://user-images.githubusercontent.com/60347669/163135545-92e379c6-1a97-4dea-9c63-8a73e5ac1c14.png)\r\n- For p384_dilithium3, p384_dilithium3_aes, p521_dilithium5, p521_dilithium5_aes, and p521_falcon1024. The server have problem in reading client's certificate\r\n![Screenshot from 2022-04-13 15-35-25](https://user-images.githubusercontent.com/60347669/163136765-16c79c71-6bf7-4963-8607-60c2d695999d.png)\r\n\r\nI am not sure the problems happans because of my mistakes or it is the problem of `s_time` function. Thanks a lot if anyone would like to help me! \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1099348501","html_url":"https://github.com/open-quantum-safe/openssl/issues/365#issuecomment-1099348501","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/365","id":1099348501,"node_id":"IC_kwDOA_fpb85BhroV","user":{"login":"judowha","id":60347669,"node_id":"MDQ6VXNlcjYwMzQ3NjY5","avatar_url":"https://avatars.githubusercontent.com/u/60347669?v=4","gravatar_id":"","url":"https://api.github.com/users/judowha","html_url":"https://github.com/judowha","followers_url":"https://api.github.com/users/judowha/followers","following_url":"https://api.github.com/users/judowha/following{/other_user}","gists_url":"https://api.github.com/users/judowha/gists{/gist_id}","starred_url":"https://api.github.com/users/judowha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/judowha/subscriptions","organizations_url":"https://api.github.com/users/judowha/orgs","repos_url":"https://api.github.com/users/judowha/repos","events_url":"https://api.github.com/users/judowha/events{/privacy}","received_events_url":"https://api.github.com/users/judowha/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T16:08:12Z","updated_at":"2022-04-14T16:08:12Z","author_association":"NONE","body":"Thanks for your test. I just start another AWS VM but the connection test still shows the same problem. May I ask how you set up your VM and what is your security group? Also, can I try to ssh to your AWS VM and run the test again? I suspect my Internet may be a reason for the error. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1099348501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T16:08:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21294180361","type":"IssueCommentEvent","actor":{"id":38082993,"login":"tbraun96","display_login":"tbraun96","gravatar_id":"","url":"https://api.github.com/users/tbraun96","avatar_url":"https://avatars.githubusercontent.com/u/38082993?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1199","id":1194869331,"node_id":"I_kwDOA-eq3c5HOEJT","number":1199,"title":"WASM","user":{"login":"tpbraun96","id":93542359,"node_id":"U_kgDOBZNX1w","avatar_url":"https://avatars.githubusercontent.com/u/93542359?v=4","gravatar_id":"","url":"https://api.github.com/users/tpbraun96","html_url":"https://github.com/tpbraun96","followers_url":"https://api.github.com/users/tpbraun96/followers","following_url":"https://api.github.com/users/tpbraun96/following{/other_user}","gists_url":"https://api.github.com/users/tpbraun96/gists{/gist_id}","starred_url":"https://api.github.com/users/tpbraun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tpbraun96/subscriptions","organizations_url":"https://api.github.com/users/tpbraun96/orgs","repos_url":"https://api.github.com/users/tpbraun96/repos","events_url":"https://api.github.com/users/tpbraun96/events{/privacy}","received_events_url":"https://api.github.com/users/tpbraun96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-04-06T16:51:35Z","updated_at":"2022-04-14T16:49:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Ideally, this project should be compilable via emscripten to WASM. Adding compatibility and documentation to make this possible should exist.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1099397098","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1199#issuecomment-1099397098","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199","id":1099397098,"node_id":"IC_kwDOA-eq3c5Bh3fq","user":{"login":"tbraun96","id":38082993,"node_id":"MDQ6VXNlcjM4MDgyOTkz","avatar_url":"https://avatars.githubusercontent.com/u/38082993?v=4","gravatar_id":"","url":"https://api.github.com/users/tbraun96","html_url":"https://github.com/tbraun96","followers_url":"https://api.github.com/users/tbraun96/followers","following_url":"https://api.github.com/users/tbraun96/following{/other_user}","gists_url":"https://api.github.com/users/tbraun96/gists{/gist_id}","starred_url":"https://api.github.com/users/tbraun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbraun96/subscriptions","organizations_url":"https://api.github.com/users/tbraun96/orgs","repos_url":"https://api.github.com/users/tbraun96/repos","events_url":"https://api.github.com/users/tbraun96/events{/privacy}","received_events_url":"https://api.github.com/users/tbraun96/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T16:49:58Z","updated_at":"2022-04-14T16:49:58Z","author_association":"NONE","body":"I'm going to leave this here for now that way I can look into making liboqs compatible with WASM: https://stackoverflow.com/questions/70311540/compiling-c-with-external-library-to-wasm-using-wasmer","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1099397098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T16:49:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21295201997","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1199","id":1194869331,"node_id":"I_kwDOA-eq3c5HOEJT","number":1199,"title":"WASM","user":{"login":"tpbraun96","id":93542359,"node_id":"U_kgDOBZNX1w","avatar_url":"https://avatars.githubusercontent.com/u/93542359?v=4","gravatar_id":"","url":"https://api.github.com/users/tpbraun96","html_url":"https://github.com/tpbraun96","followers_url":"https://api.github.com/users/tpbraun96/followers","following_url":"https://api.github.com/users/tpbraun96/following{/other_user}","gists_url":"https://api.github.com/users/tpbraun96/gists{/gist_id}","starred_url":"https://api.github.com/users/tpbraun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tpbraun96/subscriptions","organizations_url":"https://api.github.com/users/tpbraun96/orgs","repos_url":"https://api.github.com/users/tpbraun96/repos","events_url":"https://api.github.com/users/tpbraun96/events{/privacy}","received_events_url":"https://api.github.com/users/tpbraun96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-04-06T16:51:35Z","updated_at":"2022-04-14T17:57:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Ideally, this project should be compilable via emscripten to WASM. Adding compatibility and documentation to make this possible should exist.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1099472054","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1199#issuecomment-1099472054","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1199","id":1099472054,"node_id":"IC_kwDOA-eq3c5BiJy2","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2022-04-14T17:57:52Z","updated_at":"2022-04-14T17:57:52Z","author_association":"MEMBER","body":"If you'd like us to look into this, please point to information how to install all required tooling for this sample build script to work? Are there docker images containing such tooling? A quick install on my local machine yields\r\n\r\n```\r\n$ wasimake cmake -GNinja ..\r\n-- The C compiler identification is Clang 9.0.0\r\n-- The ASM compiler identification is unknown\r\n-- Found assembler: /home/mib/.local/bin/wasicc\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /home/mib/.local/bin/wasicc - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Warning: Did not find file Compiler/-ASM\r\nCMake Error at CMakeLists.txt:82 (message):\r\n  Unknown or unsupported processor: x86.  Override by setting\r\n  OQS_PERMIT_UNSUPPORTED_ARCHITECTURE=ON\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/home/mib/git/oqs/liboqs/build/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/home/mib/git/oqs/liboqs/build/CMakeFiles/CMakeError.log\".\r\n```\r\n\r\n--> Where does this reference to \"clang-9\" come from (I've got 14 installed on the machine)? Why is the architecture reported to be \"x86\"? It's x86_64:\r\n\r\n```\r\n$ clang --version\r\nUbuntu clang version 14.0.0-1ubuntu1\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\n```\r\n\r\nHere's the result of running the \"simple\" wasienv install script: Pretty unhelpful output...\r\n\r\n```\r\n$ curl https://raw.githubusercontent.com/wasienv/wasienv/master/install.sh | sh\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  4788  100  4788    0     0   9516      0 --:--:-- --:--:-- --:--:--  9500\r\n\r\n ┏━━━━━━━━━┓\r\n ┃         ┃\r\n ┃   wasi ( env\r\n ┃         ┃\r\n ┗━━━━━━━━━┛\r\n\r\n> Installing wasienv\r\nWARNING: Skipping wasienv as it is not installed.\r\nCollecting wasienv\r\n  Downloading wasienv-0.5.4.tar.gz (24 kB)\r\n  Preparing metadata (setup.py) ... done\r\nRequirement already satisfied: requests in /usr/lib/python3/dist-packages (from wasienv) (2.25.1)\r\nBuilding wheels for collected packages: wasienv\r\n  Building wheel for wasienv (setup.py) ... done\r\n  Created wheel for wasienv: filename=wasienv-0.5.4-py3-none-any.whl size=32525 sha256=2db1b2da3f65e7787f941ec91734b467ce25379e3635af615f7f59c8df25b06f\r\n  Stored in directory: /home/mib/.cache/pip/wheels/da/7b/be/e1738169616e1732950f1e78969da47b36d9343f83057d23ad\r\nSuccessfully built wasienv\r\nInstalling collected packages: wasienv\r\nSuccessfully installed wasienv-0.5.4\r\nCollecting wasienv\r\n  Using cached wasienv-0.5.4-py3-none-any.whl\r\nRequirement already satisfied: requests in /usr/lib/python3/dist-packages (from wasienv) (2.25.1)\r\nInstalling collected packages: wasienv\r\nSuccessfully installed wasienv-0.5.4\r\n> Adding wasienv to bash profile... ✓\r\nsh: 1: /home/mib/.wasienv/bin/wasienv: not found\r\n> wasienv was installed, but doesn't seem to be working :(\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1099472054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2022-04-14T17:57:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
