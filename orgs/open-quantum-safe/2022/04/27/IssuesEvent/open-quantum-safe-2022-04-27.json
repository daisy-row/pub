{"id":"21494966041","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1204","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1204/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1204/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1204/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1204","id":1217170250,"node_id":"I_kwDOA-eq3c5IjItK","number":1204,"title":"Adhere to C99","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-04-27T10:43:58Z","updated_at":"2022-04-27T10:43:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As per [this discussion](https://github.com/open-quantum-safe/liboqs/issues/1199#issuecomment-1110578343) and the [feature announcement of clang-15](https://clang.llvm.org/docs/ReleaseNotes.html) consider ensuring `void` parameter lists are declared as such. Impacted code bases: liboqs (some few locations & generated code), Frodo, Bike. All PQClean code seems to be OK.\r\n\r\nAlternatively/until decision has been made, drop `-Wpedantic` build option.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1204/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-04-27T10:43:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21502086852","type":"IssuesEvent","actor":{"id":16035506,"login":"scottthomas007","display_login":"scottthomas007","gravatar_id":"","url":"https://api.github.com/users/scottthomas007","avatar_url":"https://avatars.githubusercontent.com/u/16035506?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1205","id":1217605700,"node_id":"I_kwDOA-eq3c5IkzBE","number":1205,"title":"Unable to Import a Post Quantum Certificate in PQ Chromium","user":{"login":"scottthomas007","id":16035506,"node_id":"MDQ6VXNlcjE2MDM1NTA2","avatar_url":"https://avatars.githubusercontent.com/u/16035506?v=4","gravatar_id":"","url":"https://api.github.com/users/scottthomas007","html_url":"https://github.com/scottthomas007","followers_url":"https://api.github.com/users/scottthomas007/followers","following_url":"https://api.github.com/users/scottthomas007/following{/other_user}","gists_url":"https://api.github.com/users/scottthomas007/gists{/gist_id}","starred_url":"https://api.github.com/users/scottthomas007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottthomas007/subscriptions","organizations_url":"https://api.github.com/users/scottthomas007/orgs","repos_url":"https://api.github.com/users/scottthomas007/repos","events_url":"https://api.github.com/users/scottthomas007/events{/privacy}","received_events_url":"https://api.github.com/users/scottthomas007/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-04-27T16:35:36Z","updated_at":"2022-04-27T16:35:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Bonjour,\r\n\r\nI created a CA of rsa3072_falcon512. When i try to import it in [PQCACerts.zip](https://github.com/open-quantum-safe/liboqs/files/8574550/PQCACerts.zip) as a trusted Root CA. I get the following error:\r\n\r\n[3742:3742:0426/180506.505104:ERROR:nsNSSCertificateDB.cpp(89)] PK11_ImportCert failed with error -8168\r\n\r\nI tried to import other certificate files which are part of the HTTPD & NGINX dockers \r\nhttps://hub.docker.com/r/openquantumsafe/httpd\r\nhttps://hub.docker.com/r/openquantumsafe/nginx\r\n\r\nAll the certs are attached as PQCACerts.zip\r\n\r\nPlease guide me on this.\r\n\r\nRegards\r\nScott Thomas","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-04-27T16:35:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21504346895","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1205","id":1217605700,"node_id":"I_kwDOA-eq3c5IkzBE","number":1205,"title":"Unable to Import a Post Quantum Certificate in PQ Chromium","user":{"login":"scottthomas007","id":16035506,"node_id":"MDQ6VXNlcjE2MDM1NTA2","avatar_url":"https://avatars.githubusercontent.com/u/16035506?v=4","gravatar_id":"","url":"https://api.github.com/users/scottthomas007","html_url":"https://github.com/scottthomas007","followers_url":"https://api.github.com/users/scottthomas007/followers","following_url":"https://api.github.com/users/scottthomas007/following{/other_user}","gists_url":"https://api.github.com/users/scottthomas007/gists{/gist_id}","starred_url":"https://api.github.com/users/scottthomas007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottthomas007/subscriptions","organizations_url":"https://api.github.com/users/scottthomas007/orgs","repos_url":"https://api.github.com/users/scottthomas007/repos","events_url":"https://api.github.com/users/scottthomas007/events{/privacy}","received_events_url":"https://api.github.com/users/scottthomas007/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-04-27T16:35:36Z","updated_at":"2022-04-27T18:46:01Z","closed_at":"2022-04-27T18:46:01Z","author_association":"NONE","active_lock_reason":null,"body":"Bonjour,\r\n\r\nI created a CA of rsa3072_falcon512. When i try to import it in [PQCACerts.zip](https://github.com/open-quantum-safe/liboqs/files/8574550/PQCACerts.zip) as a trusted Root CA. I get the following error:\r\n\r\n[3742:3742:0426/180506.505104:ERROR:nsNSSCertificateDB.cpp(89)] PK11_ImportCert failed with error -8168\r\n\r\nI tried to import other certificate files which are part of the HTTPD & NGINX dockers \r\nhttps://hub.docker.com/r/openquantumsafe/httpd\r\nhttps://hub.docker.com/r/openquantumsafe/nginx\r\n\r\nAll the certs are attached as PQCACerts.zip\r\n\r\nPlease guide me on this.\r\n\r\nRegards\r\nScott Thomas","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1205/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-04-27T18:46:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"21506880246","type":"IssuesEvent","actor":{"id":7863838,"login":"tedeaton","display_login":"tedeaton","gravatar_id":"","url":"https://api.github.com/users/tedeaton","avatar_url":"https://avatars.githubusercontent.com/u/7863838?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1206","id":1217903263,"node_id":"I_kwDOA-eq3c5Il7qf","number":1206,"title":"Adding a DeriveKeyPair functionality","user":{"login":"tedeaton","id":7863838,"node_id":"MDQ6VXNlcjc4NjM4Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/7863838?v=4","gravatar_id":"","url":"https://api.github.com/users/tedeaton","html_url":"https://github.com/tedeaton","followers_url":"https://api.github.com/users/tedeaton/followers","following_url":"https://api.github.com/users/tedeaton/following{/other_user}","gists_url":"https://api.github.com/users/tedeaton/gists{/gist_id}","starred_url":"https://api.github.com/users/tedeaton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tedeaton/subscriptions","organizations_url":"https://api.github.com/users/tedeaton/orgs","repos_url":"https://api.github.com/users/tedeaton/repos","events_url":"https://api.github.com/users/tedeaton/events{/privacy}","received_events_url":"https://api.github.com/users/tedeaton/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-04-27T21:30:19Z","updated_at":"2022-04-27T21:30:19Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"When a KEM keypair is derived in liboqs, it relies on randomness using [rand.h](https://github.com/open-quantum-safe/liboqs/blob/main/src/common/rand/rand.h). In some situations, it's useful to generate keypairs deterministically from a seed. When [RFC9180](https://www.rfc-editor.org/rfc/rfc9180#name-cryptographic-dependencies) defines a KEM, they include a `DeriveKeyPair` option to generate keypairs deterministically from a seed. As an example use case, [Messaging Layer Security](https://messaginglayersecurity.rocks/mls-protocol/draft-ietf-mls-protocol.html) makes extensive use of functionality to share multiple keypairs by communicating seeds. I think it would be nice to match RFC9180 and add a functionality to deterministically derive a keypair from a seed.\r\n\r\nThis is kind of possible in liboqs currently. You can set the randomness to use `OQS_RAND_alg_nist_kat`, and derive all the randomness used from a seed, but this is a somewhat imperfect solution for a few reasons:\r\n\r\n- The seed must be exactly 48 bytes\r\n- It references a global variable, resulting in concurrency issues\r\n- Modifying the randomness used is (to my knowledge) not available with any of the liboqs language wrappers\r\n\r\nI'm curious if others think this is a functionality worth adding and if so, what the proper way to tackle it might be. Some schemes, like Kyber, are already constructed in such a way that everything is derived from a seed, but liboqs provides limited ability to set that seed. I suspect the situation for other schemes is much more complex.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/timeline","performed_via_github_app":null}},"public":true,"created_at":"2022-04-27T21:30:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
