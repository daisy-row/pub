{"id":"37674441175","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/395","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/395/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/395/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/395/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/395","id":2239504521,"node_id":"I_kwDOE_A9l86FfCCJ","number":395,"title":"Linux x64 binary incorrect","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":2701983051,"node_id":"MDU6TGFiZWwyNzAxOTgzMDUx","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-04-12T09:14:08Z","updated_at":"2024-04-22T06:44:30Z","closed_at":"2024-04-22T06:44:30Z","author_association":"MEMBER","active_lock_reason":null,"body":"The [0.6.0 release](https://github.com/open-quantum-safe/oqs-provider/releases/tag/0.6.0) CI created a way too small Linux x64 binary artifact but I did not have the time before vacation to find the problem, let alone do PR and re-release. It would be nice if someone else would look into this while I'm gone. @thb-sb, you should have all required privileges to replace the binary in the release with a correct one when the bug has been found & fixed.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/395/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/395/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2024-04-22T06:44:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37694026846","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1760","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1760/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1760/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1760/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1760","id":2256803974,"node_id":"I_kwDOA-eq3c6GhBiG","number":1760,"title":"Document DCO utility and HOWTO","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-04-22T15:11:47Z","updated_at":"2024-04-22T15:11:47Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As per https://github.com/open-quantum-safe/liboqs/pull/1708#issuecomment-2069210942","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1760/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2024-04-22T15:11:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37708281995","type":"IssuesEvent","actor":{"id":63823484,"login":"crt26","display_login":"crt26","gravatar_id":"","url":"https://api.github.com/users/crt26","avatar_url":"https://avatars.githubusercontent.com/u/63823484?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1761","id":2257602107,"node_id":"I_kwDOA-eq3c6GkEY7","number":1761,"title":"Valgrind Massif Tool Breaks During Verify Operation of Falcon Algorithms on Raspberry Pi","user":{"login":"crt26","id":63823484,"node_id":"MDQ6VXNlcjYzODIzNDg0","avatar_url":"https://avatars.githubusercontent.com/u/63823484?v=4","gravatar_id":"","url":"https://api.github.com/users/crt26","html_url":"https://github.com/crt26","followers_url":"https://api.github.com/users/crt26/followers","following_url":"https://api.github.com/users/crt26/following{/other_user}","gists_url":"https://api.github.com/users/crt26/gists{/gist_id}","starred_url":"https://api.github.com/users/crt26/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crt26/subscriptions","organizations_url":"https://api.github.com/users/crt26/orgs","repos_url":"https://api.github.com/users/crt26/repos","events_url":"https://api.github.com/users/crt26/events{/privacy}","received_events_url":"https://api.github.com/users/crt26/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-04-22T23:01:53Z","updated_at":"2024-04-22T23:01:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Bug Description\r\n\r\nWhen using the Valgrind memory profiler (**version - 3.19.0**) with the Massif tool to gain information on the maxHeap and maxStack for an algorithm/operation combination, any Falcon algorithm variation with the verify operation will cause a break in Valgrind and ***produces the error below***. \r\n\r\n**Main Error:**\r\n```\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n```\r\n\r\nThe functions related to the issues appear to the [Valgrind Outputs](#valgrind-with-massif-tool-error-full) are:\r\n\r\n- PQCLEAN_FALCON512_AARCH64_is_short*\r\n- do_verify \r\n- OQS_SIG_verify\r\n\r\n*This comes from the [example output given](#valgrind-with-massif-tool-error-full), in the [verbose output files](#verbose-outputs) the functions with issues for the other Falcon variations are detailed.\r\n\r\nThis issue is persistent across Raspberry Pi 4 and 5 models and various build configurations. When using the test_sig_mem script by itself, the verification completes without issue. This is also the case when using the Valgrind profiler by itself without Massif. Furthermore, the issue is the same regardless if the ARM PMU is enabled or disabled.\r\n\r\n### Standard test_sig_mem Verify Output\r\n\r\n**Command:**\r\n```\r\n./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output**\r\n```\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n```\r\n\r\n### Valgrind Output without Massif\r\n**Command:**\r\n```\r\nvalgrind ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352773== Memcheck, a memory error detector\r\n==352773== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.\r\n==352773== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352773== Command: ./test_sig_mem Falcon-512 2\r\n==352773==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n==352773==\r\n==352773== HEAP SUMMARY:\r\n==352773==     in use at exit: 0 bytes in 0 blocks\r\n==352773==   total heap usage: 15 allocs, 15 frees, 22,622 bytes allocated\r\n==352773==\r\n==352773== All heap blocks were freed -- no leaks are possible\r\n==352773==\r\n==352773== For lists of detected and suppressed errors, rerun with: -s\r\n==352773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\n```\r\n\r\n### Valgrind with Massif Tool Error Full\r\n**Command:**\r\n```\r\nvalgrind --tool=massif --stacks=yes ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352334== Massif, a heap profiler\r\n==352334== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==352334== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352334== Command: ./test_sig_mem Falcon-512 2\r\n==352334==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n\r\nhost stacktrace:\r\n==352334==    at 0x58009114: show_sched_status_wrk (m_libcassert.c:406)\r\n==352334==    by 0x58009263: report_and_quit (m_libcassert.c:477)\r\n==352334==    by 0x5800949B: panic (m_libcassert.c:553)\r\n==352334==    by 0x5800949B: vgPlain_core_panic_at (m_libcassert.c:558)\r\n==352334==    by 0x580094BF: vgPlain_core_panic (m_libcassert.c:563)\r\n==352334==    by 0x5808277B: failure_exit (m_translate.c:761)\r\n==352334==    by 0x580EDD27: vex_assert_fail (main_util.c:245)\r\n==352334==    by 0x5814C973: genSpill_ARM64 (host_arm64_defs.c:2829)\r\n==352334==    by 0x581435DB: spill_vreg (host_generic_reg_alloc3.c:338)\r\n==352334==    by 0x58144B3F: doRegisterAllocation_v3 (host_generic_reg_alloc3.c:1280)\r\n==352334==    by 0x580EC843: libvex_BackEnd (main_main.c:1133)\r\n==352334==    by 0x580EC843: LibVEX_Translate (main_main.c:1236)\r\n==352334==    by 0x58084F6F: vgPlain_translate (m_translate.c:1831)\r\n==352334==    by 0x5805664B: handle_chain_me (scheduler.c:1169)\r\n==352334==    by 0x58059227: vgPlain_scheduler (scheduler.c:1514)\r\n==352334==    by 0x580A861F: thread_wrapper (syswrap-linux.c:101)\r\n==352334==    by 0x580A861F: run_a_thread_NORETURN (syswrap-linux.c:154)\r\n==352334==    by 0xFFFFFFFFFFFFFFFF: ???\r\n\r\nsched status:\r\n  running_tid=1\r\n\r\nThread 1: status = VgTs_Runnable (lwpid 352334)\r\n==352334==    at 0x18ADC8: PQCLEAN_FALCON512_AARCH64_is_short (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x131F1F: do_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x124217: OQS_SIG_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x1231AB: main (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\nclient stack range: [0x1FFF000000 0x1FFF003FFF] client SP: 0x1FFF002040\r\nvalgrind stack range: [0x1002C18000 0x1002D17FFF] top usage: 19776 of 1048576\r\n```\r\n\r\n### Verbose Outputs\r\nAn output of the issue with the verbose flag alongside outputs for each affected Falcon variation can be found in the following text files:\r\n- [valgrind-massif-verbose.txt](https://github.com/open-quantum-safe/liboqs/files/15069215/valgrind-massif-verbose.txt)\r\n- [valgrind-falcon-outputs.txt](https://github.com/open-quantum-safe/liboqs/files/15069217/valgrind-falcon-outputs.txt)\r\n\r\n## Build Configurations\r\nThe error is persistent across various setups using differing build flags:\r\n\r\n### Default Setup\r\n**Build Commands:**\r\n```\r\n cmake -GNinja ..\r\n ninja && sudo ninja install\r\n ```\r\n\r\n **Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       7b6d9f3326295fc80ea0c9026f3dd9d57f8436de\r\nOpenSSL enabled:  Yes (OpenSSL 3.0.11 19 Sep 2023)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n### Custom Setup\r\n**Build Commands (Contained within the script, but all paths variables have been verified):**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_SPEED_USE_ARM_PMU=ON \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n\r\nninja && sudo ninja install\r\n```\r\n\r\n**Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n## Expected behaviour\r\nThe setup and configurations detailed in this bug report were also tested on a **Debian 12 x86 machine**, and the issue was not present. The environment that this setup, when executed on a Debian 12 x86 system, gives the following outputs:\r\n\r\n**Valgrind with Massif Output**\r\n```\r\n==55823== Massif, a heap profiler\r\n==55823== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==55823== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==55823== Command: ./test_sig_mem Falcon-512 2\r\n==55823==\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Linux-6.1.0-20-amd64\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              NI\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES AVX AVX2 BMI1 BMI2 PCLMULQDQ POPCNT SSE SSE2 SSE3\r\nverification\r\n```\r\n\r\n**Massif File after Passing to ms_print:**\r\n[x86-ms_print.txt](https://github.com/open-quantum-safe/liboqs/files/15069226/x86-ms_print.txt)\r\n\r\n\r\n*Build details for the x86 machine are detailed below*\r\n\r\n## Environment Details\r\nThe issue was tested on both Raspberry Pi 4 and 5 models with the following details:\r\n\r\n### Pi-4:\r\n- OS - Raspbian OS Lite 64bit (Debian 11 Bullseye)\r\n- Kernel Version - 6.1.21-v8+\r\n- Architecture - aarch64 \r\n- OpenSSL Version - OpenSSL 1.1.1w (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (10.2.1)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Pi-5:\r\n- OS - Raspbian OS Lite 64bit (Debian 12 Bookworm)\r\n- Kernel Version - 6.6.20+rpt-rpi-2712\r\n- Architecture - aarch64\r\n- OpenSSL Version - OpenSSL 3.0.11 (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Debian x86 Machine used to Verify Issue:\r\n- OS - Debian GNU/Linux 12 (bookworm)\r\n- Kernel Version - 6.1.0-20-amd64\r\n- Architecture - x86_64\r\n- OpenSSL Version - OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Liboqs Version - 0.10.0\r\n\r\n\r\n**Debian x86 Build Commands**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n```\r\n\r\n\r\n## Additional context\r\nI would be happy to provide any additional information or outputs for this issue and, if necessary, the current developing branch for the repository where this environment is set up and run. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2024-04-22T23:01:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
