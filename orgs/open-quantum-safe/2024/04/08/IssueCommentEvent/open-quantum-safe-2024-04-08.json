{"id":"37249741581","type":"IssueCommentEvent","actor":{"id":147778033,"login":"smcmahonibm","display_login":"smcmahonibm","gravatar_id":"","url":"https://api.github.com/users/smcmahonibm","avatar_url":"https://avatars.githubusercontent.com/u/147778033?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1749","id":2227238516,"node_id":"I_kwDOA-eq3c6EwPZ0","number":1749,"title":"Windows build with \"-DBUILD_SHARED_LIBS=ON\"","user":{"login":"smcmahonibm","id":147778033,"node_id":"U_kgDOCM7p8Q","avatar_url":"https://avatars.githubusercontent.com/u/147778033?v=4","gravatar_id":"","url":"https://api.github.com/users/smcmahonibm","html_url":"https://github.com/smcmahonibm","followers_url":"https://api.github.com/users/smcmahonibm/followers","following_url":"https://api.github.com/users/smcmahonibm/following{/other_user}","gists_url":"https://api.github.com/users/smcmahonibm/gists{/gist_id}","starred_url":"https://api.github.com/users/smcmahonibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smcmahonibm/subscriptions","organizations_url":"https://api.github.com/users/smcmahonibm/orgs","repos_url":"https://api.github.com/users/smcmahonibm/repos","events_url":"https://api.github.com/users/smcmahonibm/events{/privacy}","received_events_url":"https://api.github.com/users/smcmahonibm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-04-05T07:09:36Z","updated_at":"2024-04-08T04:57:18Z","closed_at":"2024-04-07T17:00:09Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nBuilding on Windows with shared lib (.dll) setting \"-DBUILD_SHARED_LIBS=ON\" fails to build kat_kem and kat_sig.\r\nEither ninja or MSBuild or MSVC project files all get same error.\r\n\r\n**To Reproduce**\r\nclone liboqs main branch\r\n> mkdir build\r\n> cd build\r\n> cmake -GNinja -DBUILD_SHARED_LIBS=ON ..\r\n> ninja\r\n...\r\n... fails to link kat_kem.exe and kat_sig.exe\r\n(see screenshot below)\r\n\r\n**Expected behavior**\r\nkat_kem.exe and kat_sig.exe should build OK.\r\nThe oqs.dll and all other .exe build OK.\r\nThose test build OK with static lib only build - i.e. no \"-DBUILD_SHARED_LIBS=ON\".\r\n\r\n**Screenshots**\r\nninja console output:\r\n```\r\n[659/671] Linking C executable tests\\kat_kem.exe\r\nFAILED: tests/kat_kem.exe\r\ncmd.exe /C \"cd . && \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_exe --intdir=tests\\CMakeFiles\\kat_kem.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100226~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100226~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~1\\MIB055~1\\2022\\PROFES~1\\VC\\Tools\\MSVC\\1436~1.325\\bin\\Hostx64\\x64\\link.exe /nologo tests\\CMakeFiles\\kat_kem.dir\\kat_kem.c.obj tests\\CMakeFiles\\kat_kem.dir\\test_helpers.c.obj  /out:tests\\kat_kem.exe /implib:tests\\kat_kem.lib /pdb:tests\\kat_kem.pdb /version:0.0 /machine:x64 /debug /INCREMENTAL /subsystem:console   /STACK:8192000  lib\\oqs.lib  lib\\oqs-internal.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .\"\r\nLINK Pass 1: command \"C:\\PROGRA~1\\MIB055~1\\2022\\PROFES~1\\VC\\Tools\\MSVC\\1436~1.325\\bin\\Hostx64\\x64\\link.exe /nologo tests\\CMakeFiles\\kat_kem.dir\\kat_kem.c.obj tests\\CMakeFiles\\kat_kem.dir\\test_helpers.c.obj /out:tests\\kat_kem.exe /implib:tests\\kat_kem.lib /pdb:tests\\kat_kem.pdb /version:0.0 /machine:x64 /debug /INCREMENTAL /subsystem:console /STACK:8192000 lib\\oqs.lib lib\\oqs-internal.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:tests\\CMakeFiles\\kat_kem.dir/intermediate.manifest tests\\CMakeFiles\\kat_kem.dir/manifest.res\" failed (exit code 1169) with the following output:\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_CPU_has_extension already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_init already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_destroy already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_MEM_secure_free already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_MEM_insecure_free already defined in oqs.lib(oqs.dll)\r\n   Creating library tests\\kat_kem.lib and object tests\\kat_kem.exp\r\ntests\\kat_kem.exe : fatal error LNK1169: one or more multiply defined symbols found\r\n```\r\nLooks like some APIs (OQS_CPU_has_extension ...) in both oqs.dll and import library oqs.lib and also in a static lib oqs-internal.lib. Both include common.c.obj. The static lib build probably just links to the first one found. I tried removing oqs-internal.lib or just common.obj but then get other errors.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Windows 11\r\n - OpenSSL version n/a\r\n - Compiler version used : Microsoft (R) C/C++ Optimizing Compiler Version 19.36.32538 for x64\r\n - Build variables used: -DBUILD_SHARED_LIBS=ON\r\n - liboqs version:  main branch\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041862901","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1749#issuecomment-2041862901","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749","id":2041862901,"node_id":"IC_kwDOA-eq3c55tFr1","user":{"login":"smcmahonibm","id":147778033,"node_id":"U_kgDOCM7p8Q","avatar_url":"https://avatars.githubusercontent.com/u/147778033?v=4","gravatar_id":"","url":"https://api.github.com/users/smcmahonibm","html_url":"https://github.com/smcmahonibm","followers_url":"https://api.github.com/users/smcmahonibm/followers","following_url":"https://api.github.com/users/smcmahonibm/following{/other_user}","gists_url":"https://api.github.com/users/smcmahonibm/gists{/gist_id}","starred_url":"https://api.github.com/users/smcmahonibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smcmahonibm/subscriptions","organizations_url":"https://api.github.com/users/smcmahonibm/orgs","repos_url":"https://api.github.com/users/smcmahonibm/repos","events_url":"https://api.github.com/users/smcmahonibm/events{/privacy}","received_events_url":"https://api.github.com/users/smcmahonibm/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T04:57:17Z","updated_at":"2024-04-08T04:57:17Z","author_association":"NONE","body":"> Thanks again @matlimatli for the fix! In absence of a CI test, @smcmahonibm can you confirm this solves the issue for you?\r\n\r\nYes it worked thanks for the fix.\r\n\r\nThe shared library option (.dll) is an important build option for windows in my opinion.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041862901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T04:57:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37249867101","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/13","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/13/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/13/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/13/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/13","id":2229975835,"node_id":"I_kwDOLITcCM6E6rsb","number":13,"title":"Does OQS-BoringSSL respository require a license exemption?","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-04-07T21:55:29Z","updated_at":"2024-04-08T05:04:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As noted in https://github.com/open-quantum-safe/boringssl/pull/114#issuecomment-2041569815, the OQS-BoringSSL repository is under a mix of licenses, not just MIT License. The [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) says that \"all new inbound contributions to the Project must be made under the MIT License\", but that \"The TSC may approve the use of an alternative license or licenses for inbound or outbound contributions on an exception basis.\"  Does the fact that the repository was brought with the stated license mean that an exemption is implicitly already granted, or does the TSC need to explicitly vote to make such an exemption?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/13/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/13/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041869548","html_url":"https://github.com/open-quantum-safe/tsc/issues/13#issuecomment-2041869548","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/13","id":2041869548,"node_id":"IC_kwDOLITcCM55tHTs","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T05:04:21Z","updated_at":"2024-04-08T05:04:21Z","author_association":"MEMBER","body":"As stated [before](https://github.com/open-quantum-safe/boringssl/pull/114#issuecomment-2041406465) I'd think this is logical/implicit and we could save the hassle voting. But I guess the LF legal folks will want to have the final say, right @hartm?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041869548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T05:04:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37250218507","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1749","id":2227238516,"node_id":"I_kwDOA-eq3c6EwPZ0","number":1749,"title":"Windows build with \"-DBUILD_SHARED_LIBS=ON\"","user":{"login":"smcmahonibm","id":147778033,"node_id":"U_kgDOCM7p8Q","avatar_url":"https://avatars.githubusercontent.com/u/147778033?v=4","gravatar_id":"","url":"https://api.github.com/users/smcmahonibm","html_url":"https://github.com/smcmahonibm","followers_url":"https://api.github.com/users/smcmahonibm/followers","following_url":"https://api.github.com/users/smcmahonibm/following{/other_user}","gists_url":"https://api.github.com/users/smcmahonibm/gists{/gist_id}","starred_url":"https://api.github.com/users/smcmahonibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smcmahonibm/subscriptions","organizations_url":"https://api.github.com/users/smcmahonibm/orgs","repos_url":"https://api.github.com/users/smcmahonibm/repos","events_url":"https://api.github.com/users/smcmahonibm/events{/privacy}","received_events_url":"https://api.github.com/users/smcmahonibm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-04-05T07:09:36Z","updated_at":"2024-04-08T05:23:06Z","closed_at":"2024-04-07T17:00:09Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nBuilding on Windows with shared lib (.dll) setting \"-DBUILD_SHARED_LIBS=ON\" fails to build kat_kem and kat_sig.\r\nEither ninja or MSBuild or MSVC project files all get same error.\r\n\r\n**To Reproduce**\r\nclone liboqs main branch\r\n> mkdir build\r\n> cd build\r\n> cmake -GNinja -DBUILD_SHARED_LIBS=ON ..\r\n> ninja\r\n...\r\n... fails to link kat_kem.exe and kat_sig.exe\r\n(see screenshot below)\r\n\r\n**Expected behavior**\r\nkat_kem.exe and kat_sig.exe should build OK.\r\nThe oqs.dll and all other .exe build OK.\r\nThose test build OK with static lib only build - i.e. no \"-DBUILD_SHARED_LIBS=ON\".\r\n\r\n**Screenshots**\r\nninja console output:\r\n```\r\n[659/671] Linking C executable tests\\kat_kem.exe\r\nFAILED: tests/kat_kem.exe\r\ncmd.exe /C \"cd . && \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_exe --intdir=tests\\CMakeFiles\\kat_kem.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100226~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100226~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~1\\MIB055~1\\2022\\PROFES~1\\VC\\Tools\\MSVC\\1436~1.325\\bin\\Hostx64\\x64\\link.exe /nologo tests\\CMakeFiles\\kat_kem.dir\\kat_kem.c.obj tests\\CMakeFiles\\kat_kem.dir\\test_helpers.c.obj  /out:tests\\kat_kem.exe /implib:tests\\kat_kem.lib /pdb:tests\\kat_kem.pdb /version:0.0 /machine:x64 /debug /INCREMENTAL /subsystem:console   /STACK:8192000  lib\\oqs.lib  lib\\oqs-internal.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .\"\r\nLINK Pass 1: command \"C:\\PROGRA~1\\MIB055~1\\2022\\PROFES~1\\VC\\Tools\\MSVC\\1436~1.325\\bin\\Hostx64\\x64\\link.exe /nologo tests\\CMakeFiles\\kat_kem.dir\\kat_kem.c.obj tests\\CMakeFiles\\kat_kem.dir\\test_helpers.c.obj /out:tests\\kat_kem.exe /implib:tests\\kat_kem.lib /pdb:tests\\kat_kem.pdb /version:0.0 /machine:x64 /debug /INCREMENTAL /subsystem:console /STACK:8192000 lib\\oqs.lib lib\\oqs-internal.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:tests\\CMakeFiles\\kat_kem.dir/intermediate.manifest tests\\CMakeFiles\\kat_kem.dir/manifest.res\" failed (exit code 1169) with the following output:\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_CPU_has_extension already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_init already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_destroy already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_MEM_secure_free already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_MEM_insecure_free already defined in oqs.lib(oqs.dll)\r\n   Creating library tests\\kat_kem.lib and object tests\\kat_kem.exp\r\ntests\\kat_kem.exe : fatal error LNK1169: one or more multiply defined symbols found\r\n```\r\nLooks like some APIs (OQS_CPU_has_extension ...) in both oqs.dll and import library oqs.lib and also in a static lib oqs-internal.lib. Both include common.c.obj. The static lib build probably just links to the first one found. I tried removing oqs-internal.lib or just common.obj but then get other errors.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Windows 11\r\n - OpenSSL version n/a\r\n - Compiler version used : Microsoft (R) C/C++ Optimizing Compiler Version 19.36.32538 for x64\r\n - Build variables used: -DBUILD_SHARED_LIBS=ON\r\n - liboqs version:  main branch\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041887529","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1749#issuecomment-2041887529","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749","id":2041887529,"node_id":"IC_kwDOA-eq3c55tLsp","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T05:23:05Z","updated_at":"2024-04-08T05:23:05Z","author_association":"MEMBER","body":"> Yes it worked thanks for the fix.\r\n\r\nThanks for the confirmation.\r\n\r\n> The shared library option (.dll) is an important build option for windows in my opinion.\r\n\r\nThen by all means, please consider contributing a PR adding this to the (github) CI suite to avoid regressions that may impact you or others again.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041887529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T05:23:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37250254791","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","id":2228124161,"node_id":"PR_kwDOA-eq3c5r2Y51","number":1751,"title":"Allow windows linking of test programs","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-04-05T14:05:02Z","updated_at":"2024-04-08T05:24:48Z","closed_at":"2024-04-07T17:00:09Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1751","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.patch","merged_at":"2024-04-07T17:00:09Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe kat_kem and kat_sig programs could not be linked when building natively on windows. This was caused by multiple definitions of symbols. By using the `/FORCE:MULTIPLE` compiler option, this is allowed, similar in spirit to what was already used for cross-compiling to Windows.\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1749\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [No] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041889105","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751#issuecomment-2041889105","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","id":2041889105,"node_id":"IC_kwDOA-eq3c55tMFR","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T05:24:47Z","updated_at":"2024-04-08T05:24:47Z","author_association":"MEMBER","body":"Worthwhile a documentation PR, e.g., [here](https://github.com/open-quantum-safe/liboqs/blob/main/README.md#windows)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041889105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T05:24:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37250381432","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1750","id":2227998039,"node_id":"I_kwDOA-eq3c6EzI1X","number":1750,"title":"Return value from OQS_randombytes","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-04-05T13:07:09Z","updated_at":"2024-04-08T05:31:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The current signature of `OQS_Randombytes()` is to return `void`. This might be a limiting factor, which is also noted in `OQS_randombytes_openssl()` with the following comment:\r\n```\r\n// because of void signature we have no other way to signal the problem\r\n// we cannot possibly return without randomness\r\n```\r\nand the failure handling of this function is therefore to terminate the execution via `exit()`.\r\n\r\nIn cases where we supply our own randomness algorithm via `OQS_randombytes_custom_algorithm()`, the same problem applies. We have no other means of handling a failure than forcefully exiting. It is not unthinkable that the higher level code would want to take care of this situation in a custom way without having to resort to using an exit handler.\r\n\r\nWould it be feasible to change this signature to returning a status value, which can then be propagated through the higher level functions? For example, the keypair and encaps functions already return an `OQS_STATUS` value, which can be taken care of in the calling code. Wouldn't it make sense if OQS_ERROR was returned if an underlying randomness call failed?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041895897","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1750#issuecomment-2041895897","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750","id":2041895897,"node_id":"IC_kwDOA-eq3c55tNvZ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T05:31:27Z","updated_at":"2024-04-08T05:31:27Z","author_association":"MEMBER","body":"> I'm not sure it would be a good idea to let OQS_randombytes return a status code if it is not checked by the callers. It might be dangerous if it could return bad randomness without anyone noticing.\r\n\r\nAbsolutely agreed: All functions based on this (in upstream-imported algorithms) must stop working if entropy is bad.\r\n\r\n> In cases where we want to use a function with a different signature, it is probably more safe to use a wrapper, similar to OQS_randombytes_openssl.\r\n\r\nAlso agreed, but maybe thinking in reverse: What about adding such (result-returning) call to the public `liboqs` API and gradually introducing (or patching it) it to \"LTS\" code, e.g., the ML-* algorithms? The current (void) call could be a wrapper to this (still just exiting on bad retval)?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041895897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T05:31:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37250574029","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/389","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/389/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/389/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/389/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/389","id":2230296097,"node_id":"I_kwDOE_A9l86E754h","number":389,"title":"conduct 'Full stack' performance testing using standard client software like 'curl' and nginx as the Web Server","user":{"login":"sckhg1367","id":63298370,"node_id":"MDQ6VXNlcjYzMjk4Mzcw","avatar_url":"https://avatars.githubusercontent.com/u/63298370?v=4","gravatar_id":"","url":"https://api.github.com/users/sckhg1367","html_url":"https://github.com/sckhg1367","followers_url":"https://api.github.com/users/sckhg1367/followers","following_url":"https://api.github.com/users/sckhg1367/following{/other_user}","gists_url":"https://api.github.com/users/sckhg1367/gists{/gist_id}","starred_url":"https://api.github.com/users/sckhg1367/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sckhg1367/subscriptions","organizations_url":"https://api.github.com/users/sckhg1367/orgs","repos_url":"https://api.github.com/users/sckhg1367/repos","events_url":"https://api.github.com/users/sckhg1367/events{/privacy}","received_events_url":"https://api.github.com/users/sckhg1367/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-04-08T05:32:05Z","updated_at":"2024-04-08T05:42:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I'd like to conduct 'Full stack' performance testing using standard client software such as 'curl' and 'nginx' as the Web Server. Could you please advise me on how to get started? Thank you.\r\n\r\n\r\n![image](https://github.com/open-quantum-safe/oqs-provider/assets/63298370/180594ca-740b-4aa5-a74c-269d23b09d7e)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/389/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2041906307","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/389#issuecomment-2041906307","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/389","id":2041906307,"node_id":"IC_kwDOE_A9l855tQSD","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T05:42:00Z","updated_at":"2024-04-08T05:42:00Z","author_association":"MEMBER","body":"Thanks for your interest using, maybe contributing to the project. We already do something very similar in the [profiling](https://github.com/open-quantum-safe/profiling) sub project, most notably [here](https://github.com/open-quantum-safe/profiling/blob/main/perf/scripts/handshakes.py). It may be easiest for you to swap out the `openssl s_server` calls there with setup calls to a PQ-enabled `nginx` (e.g., following [this code](https://github.com/open-quantum-safe/oqs-demos/tree/main/nginx)).\r\n\r\nAlso tagging @SWilson4 for further input as he volunteered to revamp the current `profiling` code.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2041906307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T05:42:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37251262389","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/12","id":2226776752,"node_id":"I_kwDOLITcCM6Eueqw","number":12,"title":"Create a voting procedure for the OQS TSC","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":16,"created_at":"2024-04-05T01:12:07Z","updated_at":"2024-04-08T06:15:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"An action item from our March 2024 TSC meeting was to create a voting procedure for the TSC.\r\n\r\nThe voting procedure we come up with will need to respect the [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) as well as the ideas reflected in the [liboqs and oqs-provider governance documents](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md); those two documents currently disagree on a few matters (e.g., what constitutes quorum for electronic votes), in which case the Charter would prevail unless we amend it.  Additionally, the TSC operates according to Robert's Rules of Order, which provides several mechanisms for voting.\r\n\r\nAs I see it, we will have two types of things to vote on: general matters, and matters involving people (elections, additions/removals from TSC).  I make this distinction as Robert's Rules provides the option for elections to be done using either public or secret ballot.\r\n\r\nFor voting on general matters, my proposal would be:\r\n- Motions can be proposed either at a meeting or electronically on Github by opening a clearly labeled issue/pull request in the TSC repository.  \r\n- Motions can be voted on either at a meeting or electronically on Github. The Charter lays out the quorum/passing requirements for such votes (at a meeting: quorum is ≥50% of TSC voting members, passed by a majority vote of those in attendance; electronically: passed by a majority vote of TSC voting members). We can use built-in Github mechanisms for voting (thumbs up/thumbs down), or there are dedicated Github-based voting mechanisms like [gitvote](https://github.com/cncf/gitvote).\r\n\r\nFor voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot.  If public ballot, then we could just use the same procedure as for normal matters.  If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nAs we will have the option of voting on things both in meetings and electronically, we'll have to figure out which we actually prefer to do.  I think this will depend on how our TSC meeting culture develops -- do most people show up, do we have enough time in advance to think and enough time in meetings to discuss and make a well-informed vote during the meeting, or do we want the extra time that comes from being able to reflect and vote afterwards, albeit at the cost of potentially moving slower. I think I'd wait a few months to see how our meetings develop.\r\n\r\n@open-quantum-safe/tsc and others, please feel free to discuss here in advance of our next meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041942188","html_url":"https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2041942188","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","id":2041942188,"node_id":"IC_kwDOLITcCM55tZCs","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T06:15:15Z","updated_at":"2024-04-08T06:15:15Z","author_association":"MEMBER","body":"> If you look at any other large-scale production cryptography library, they will have some kind of license restrictions and some kind of CLA/DCO policy.\r\n\r\nI am well aware of this as a happy contributor to [openssl](https://www.openssl.org/policies/cla.html), say: Simple CLA (on-file-check using github ID), no additional DCO (tooling) nonsense.\r\n\r\nApologies for the choice of word, but there's no other word I can think of for something\r\n- prescribing the use of the `-s` option when committing: How many people know what this implies and don't just simply add it along with the `-m` option?\r\n- not cryptographically secure;\r\n- if forgotten, requiring a slew of commands to satisfy the tooling \"controlling\" its use.\r\n\r\nYes, I noticed your proposal for [an \"LFID\"](https://github.com/open-quantum-safe/boringssl/pull/114#issuecomment-2037899716) -- but as stated just adds another layer of IDs (most likely coming with their own additional legal handcuffs) without immediately visible benefit (to a github-ID-bound CLA).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041942188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T06:15:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37251327410","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/12","id":2226776752,"node_id":"I_kwDOLITcCM6Eueqw","number":12,"title":"Create a voting procedure for the OQS TSC","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":17,"created_at":"2024-04-05T01:12:07Z","updated_at":"2024-04-08T06:18:05Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"An action item from our March 2024 TSC meeting was to create a voting procedure for the TSC.\r\n\r\nThe voting procedure we come up with will need to respect the [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) as well as the ideas reflected in the [liboqs and oqs-provider governance documents](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md); those two documents currently disagree on a few matters (e.g., what constitutes quorum for electronic votes), in which case the Charter would prevail unless we amend it.  Additionally, the TSC operates according to Robert's Rules of Order, which provides several mechanisms for voting.\r\n\r\nAs I see it, we will have two types of things to vote on: general matters, and matters involving people (elections, additions/removals from TSC).  I make this distinction as Robert's Rules provides the option for elections to be done using either public or secret ballot.\r\n\r\nFor voting on general matters, my proposal would be:\r\n- Motions can be proposed either at a meeting or electronically on Github by opening a clearly labeled issue/pull request in the TSC repository.  \r\n- Motions can be voted on either at a meeting or electronically on Github. The Charter lays out the quorum/passing requirements for such votes (at a meeting: quorum is ≥50% of TSC voting members, passed by a majority vote of those in attendance; electronically: passed by a majority vote of TSC voting members). We can use built-in Github mechanisms for voting (thumbs up/thumbs down), or there are dedicated Github-based voting mechanisms like [gitvote](https://github.com/cncf/gitvote).\r\n\r\nFor voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot.  If public ballot, then we could just use the same procedure as for normal matters.  If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nAs we will have the option of voting on things both in meetings and electronically, we'll have to figure out which we actually prefer to do.  I think this will depend on how our TSC meeting culture develops -- do most people show up, do we have enough time in advance to think and enough time in meetings to discuss and make a well-informed vote during the meeting, or do we want the extra time that comes from being able to reflect and vote afterwards, albeit at the cost of potentially moving slower. I think I'd wait a few months to see how our meetings develop.\r\n\r\n@open-quantum-safe/tsc and others, please feel free to discuss here in advance of our next meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041945345","html_url":"https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2041945345","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","id":2041945345,"node_id":"IC_kwDOLITcCM55tZ0B","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T06:18:04Z","updated_at":"2024-04-08T06:18:04Z","author_association":"MEMBER","body":"> Here's the [Besu maintainer policy](https://github.com/hyperledger/besu/blob/main/MAINTAINERS.md). It's very explicit about what is required, and the Besu community really likes it.\r\n\r\nThis is a very good link, thanks, @hartm. Will go to work right away to add it to projects I currently still maintain.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041945345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T06:18:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37251973413","type":"IssueCommentEvent","actor":{"id":7438400,"login":"matlimatli","display_login":"matlimatli","gravatar_id":"","url":"https://api.github.com/users/matlimatli","avatar_url":"https://avatars.githubusercontent.com/u/7438400?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1750","id":2227998039,"node_id":"I_kwDOA-eq3c6EzI1X","number":1750,"title":"Return value from OQS_randombytes","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-04-05T13:07:09Z","updated_at":"2024-04-08T06:44:44Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The current signature of `OQS_Randombytes()` is to return `void`. This might be a limiting factor, which is also noted in `OQS_randombytes_openssl()` with the following comment:\r\n```\r\n// because of void signature we have no other way to signal the problem\r\n// we cannot possibly return without randomness\r\n```\r\nand the failure handling of this function is therefore to terminate the execution via `exit()`.\r\n\r\nIn cases where we supply our own randomness algorithm via `OQS_randombytes_custom_algorithm()`, the same problem applies. We have no other means of handling a failure than forcefully exiting. It is not unthinkable that the higher level code would want to take care of this situation in a custom way without having to resort to using an exit handler.\r\n\r\nWould it be feasible to change this signature to returning a status value, which can then be propagated through the higher level functions? For example, the keypair and encaps functions already return an `OQS_STATUS` value, which can be taken care of in the calling code. Wouldn't it make sense if OQS_ERROR was returned if an underlying randomness call failed?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041978146","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1750#issuecomment-2041978146","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750","id":2041978146,"node_id":"IC_kwDOA-eq3c55th0i","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T06:44:43Z","updated_at":"2024-04-08T06:44:43Z","author_association":"CONTRIBUTOR","body":"> What about adding such (result-returning) call to the public liboqs API and gradually introducing (or patching it) it to \"LTS\" code, e.g., the ML-* algorithms? The current (void) call could be a wrapper to this (still just exiting on bad retval)?\r\n\r\nAh, yes, I see. That sounds like a good plan!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041978146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T06:44:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37253440410","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/271","id":2206068517,"node_id":"I_kwDODP--n86Dfe8l","number":271,"title":"Update test server with liboqs 0.10.0 release","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"assignees":[{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2024-03-25T15:42:35Z","updated_at":"2024-04-08T07:36:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2042059866","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/271#issuecomment-2042059866","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271","id":2042059866,"node_id":"IC_kwDODP--n855t1xa","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T07:36:22Z","updated_at":"2024-04-08T07:36:22Z","author_association":"MEMBER","body":"@pi-314159 I think it's a great idea to add some QUIC-enabled ports to the test server. I'm ok if this means maintaining nginx-openssl and nginx-boringssl at the moment.\r\n\r\nRe. the server update: with https://github.com/open-quantum-safe/oqs-provider/pull/386 merged, I'll go ahead updating the server to liboqs-0.10.0 and will then have a look at QUIC.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2042059866/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T07:36:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37255067474","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1750","id":2227998039,"node_id":"I_kwDOA-eq3c6EzI1X","number":1750,"title":"Return value from OQS_randombytes","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-04-05T13:07:09Z","updated_at":"2024-04-08T08:26:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The current signature of `OQS_Randombytes()` is to return `void`. This might be a limiting factor, which is also noted in `OQS_randombytes_openssl()` with the following comment:\r\n```\r\n// because of void signature we have no other way to signal the problem\r\n// we cannot possibly return without randomness\r\n```\r\nand the failure handling of this function is therefore to terminate the execution via `exit()`.\r\n\r\nIn cases where we supply our own randomness algorithm via `OQS_randombytes_custom_algorithm()`, the same problem applies. We have no other means of handling a failure than forcefully exiting. It is not unthinkable that the higher level code would want to take care of this situation in a custom way without having to resort to using an exit handler.\r\n\r\nWould it be feasible to change this signature to returning a status value, which can then be propagated through the higher level functions? For example, the keypair and encaps functions already return an `OQS_STATUS` value, which can be taken care of in the calling code. Wouldn't it make sense if OQS_ERROR was returned if an underlying randomness call failed?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2042155563","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1750#issuecomment-2042155563","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750","id":2042155563,"node_id":"IC_kwDOA-eq3c55uNIr","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T08:26:51Z","updated_at":"2024-04-08T08:26:51Z","author_association":"MEMBER","body":"> Ah, yes, I see. That sounds like a good plan!\r\n\r\nPR welcome :-) Time permitting, of course.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2042155563/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T08:26:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37255402507","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/12","id":2226776752,"node_id":"I_kwDOLITcCM6Eueqw","number":12,"title":"Create a voting procedure for the OQS TSC","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":18,"created_at":"2024-04-05T01:12:07Z","updated_at":"2024-04-08T08:36:44Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"An action item from our March 2024 TSC meeting was to create a voting procedure for the TSC.\r\n\r\nThe voting procedure we come up with will need to respect the [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) as well as the ideas reflected in the [liboqs and oqs-provider governance documents](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md); those two documents currently disagree on a few matters (e.g., what constitutes quorum for electronic votes), in which case the Charter would prevail unless we amend it.  Additionally, the TSC operates according to Robert's Rules of Order, which provides several mechanisms for voting.\r\n\r\nAs I see it, we will have two types of things to vote on: general matters, and matters involving people (elections, additions/removals from TSC).  I make this distinction as Robert's Rules provides the option for elections to be done using either public or secret ballot.\r\n\r\nFor voting on general matters, my proposal would be:\r\n- Motions can be proposed either at a meeting or electronically on Github by opening a clearly labeled issue/pull request in the TSC repository.  \r\n- Motions can be voted on either at a meeting or electronically on Github. The Charter lays out the quorum/passing requirements for such votes (at a meeting: quorum is ≥50% of TSC voting members, passed by a majority vote of those in attendance; electronically: passed by a majority vote of TSC voting members). We can use built-in Github mechanisms for voting (thumbs up/thumbs down), or there are dedicated Github-based voting mechanisms like [gitvote](https://github.com/cncf/gitvote).\r\n\r\nFor voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot.  If public ballot, then we could just use the same procedure as for normal matters.  If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nAs we will have the option of voting on things both in meetings and electronically, we'll have to figure out which we actually prefer to do.  I think this will depend on how our TSC meeting culture develops -- do most people show up, do we have enough time in advance to think and enough time in meetings to discuss and make a well-informed vote during the meeting, or do we want the extra time that comes from being able to reflect and vote afterwards, albeit at the cost of potentially moving slower. I think I'd wait a few months to see how our meetings develop.\r\n\r\n@open-quantum-safe/tsc and others, please feel free to discuss here in advance of our next meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2042179617","html_url":"https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2042179617","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","id":2042179617,"node_id":"IC_kwDOLITcCM55uTAh","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T08:36:43Z","updated_at":"2024-04-08T08:36:43Z","author_association":"MEMBER","body":"Thanks @dstebila for starting this discussion. Your proposal makes sense to me. I also think it is important to leave sufficient time before or after a meeting to reflect before voting, and to give people unable to attend a meeting to the opportunity to vote online if they desire.\r\n\r\n> For voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot. If public ballot, then we could just use the same procedure as for normal matters. If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nA verifiable voting mechanism like Helios seems most important to me. I am open to public ballots as well, but not sure if this adds an advantage over a verifiable mechanism.\r\n\r\nFor the votes in the first TSC meeting, I'd however propose that the votes are published. For myself, I don't have an issue to disclose my vote.\r\n\r\n> @bhess as a representative of another integration company could commit to be maintainer of `oqs-demos`.\r\n\r\nCurrently the build of the [test server](https://test.openquantumsafe.org/) is part of oqs-demos. My proposal would be to promote this to a separate project (e.g., 'testserver'), and I would commit to be a maintainer of this project which includes operating the test server instance.\r\n\r\nOther commitments I can currently give is to be a committer of [liboqs](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md) and [oqs-provider](https://github.com/open-quantum-safe/oqs-provider/blob/main/GOVERNANCE.md), as documented in their GOVERNANCE.md files.\r\n\r\n> Contributors who make smaller contributions should be allowed to vote\r\n\r\n> I'd suggest having only Maintainers to have voting rights in the TSC\r\n\r\nThere are some voting rules defined in the [GOVERNANCE.md](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md) files for change of roles that sound quite reasonable to me:\r\n\r\n> Any Contributor can become a Committer by contributing sufficient code and displaying deep subject matter knowledge in discussions such that **a majority of Committers vote** for this change of role. **A Maintainer can veto such a vote. Such a veto can be overruled by a 2/3 majority of Committers.**\r\n\r\nWould it be considerable to adopt the same voting rights for the TSC? This way not it's not only maintainers who can vote, making the body more inclusive. Still, the maintainer role is honored with veto rights.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2042179617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T08:36:44Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37258763260","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/12","id":2226776752,"node_id":"I_kwDOLITcCM6Eueqw","number":12,"title":"Create a voting procedure for the OQS TSC","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":19,"created_at":"2024-04-05T01:12:07Z","updated_at":"2024-04-08T10:15:37Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"An action item from our March 2024 TSC meeting was to create a voting procedure for the TSC.\r\n\r\nThe voting procedure we come up with will need to respect the [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) as well as the ideas reflected in the [liboqs and oqs-provider governance documents](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md); those two documents currently disagree on a few matters (e.g., what constitutes quorum for electronic votes), in which case the Charter would prevail unless we amend it.  Additionally, the TSC operates according to Robert's Rules of Order, which provides several mechanisms for voting.\r\n\r\nAs I see it, we will have two types of things to vote on: general matters, and matters involving people (elections, additions/removals from TSC).  I make this distinction as Robert's Rules provides the option for elections to be done using either public or secret ballot.\r\n\r\nFor voting on general matters, my proposal would be:\r\n- Motions can be proposed either at a meeting or electronically on Github by opening a clearly labeled issue/pull request in the TSC repository.  \r\n- Motions can be voted on either at a meeting or electronically on Github. The Charter lays out the quorum/passing requirements for such votes (at a meeting: quorum is ≥50% of TSC voting members, passed by a majority vote of those in attendance; electronically: passed by a majority vote of TSC voting members). We can use built-in Github mechanisms for voting (thumbs up/thumbs down), or there are dedicated Github-based voting mechanisms like [gitvote](https://github.com/cncf/gitvote).\r\n\r\nFor voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot.  If public ballot, then we could just use the same procedure as for normal matters.  If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nAs we will have the option of voting on things both in meetings and electronically, we'll have to figure out which we actually prefer to do.  I think this will depend on how our TSC meeting culture develops -- do most people show up, do we have enough time in advance to think and enough time in meetings to discuss and make a well-informed vote during the meeting, or do we want the extra time that comes from being able to reflect and vote afterwards, albeit at the cost of potentially moving slower. I think I'd wait a few months to see how our meetings develop.\r\n\r\n@open-quantum-safe/tsc and others, please feel free to discuss here in advance of our next meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2042372941","html_url":"https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2042372941","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","id":2042372941,"node_id":"IC_kwDOLITcCM55vCNN","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T10:15:36Z","updated_at":"2024-04-08T10:15:36Z","author_association":"MEMBER","body":"> Other commitments I can currently give is to be a committer of [liboqs](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md) and [oqs-provider](https://github.com/open-quantum-safe/oqs-provider/blob/main/GOVERNANCE.md), as documented in their GOVERNANCE.md files.\r\n\r\nThanks!\r\n\r\n> Currently the build of the [test server](https://test.openquantumsafe.org/) is part of oqs-demos. My proposal would be to promote this to a separate project (e.g., 'testserver'), and I would commit to be a maintainer of this project which includes operating the test server instance.\r\n\r\nCan you please explain what you as well as the community would gain from such split?\r\n\r\nFrom my personal experience creating and running the testserver this is a \"running\" commitment worth about 5-10 minutes a week -- if done in conjunction with helping the community with integrations, e.g., the `nginx` code underlying the testserver in `oqs-demos`.\r\n\r\nSplitting out the test server seems pretty inefficient --and leaves the underlying `nginx` and other PQ integrations to the support of the community -- and it currently seems that means myself. This in turn doesn't feel right: With the OQS take-over initiated by IBM and executed via the corporate-driven LinuxFoundation I personally am not really motivated anymore to work more for (free) for for-profit companies, i.e., I'm trying to have my contribution levels not eclipse those by (paid) LF/corporate folks, most notably on [integrations arguably benefiting large IT integrators](https://github.com/open-quantum-safe/oqs-demos). And going below the above time doesn't make a lot of sense, indeed to me indicates two choices:\r\n1) I drop out as work for less than 5-10 minutes a week (and a meeting of course :) is not worth the effort of staying on top of technical development\r\n2) Take back control of the test server: I'd move it off IBM cloud and into AWS: That'd reduce the effort substantially, possibly fully automating things.\r\n\r\nBut then again --and tongue-in-cheek-- I don't want your employer to think that people working for free do more (and obviously much cheaper) than what their employees do :-) More seriously, I'd consider this commitment level too low for a self-respecting co-chair of the OQS TSC: If your employer doesn't give you more time for a stronger commitment, please let us know so this project can take this into consideration.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2042372941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T10:15:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37258941362","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/1","id":2117814404,"node_id":"I_kwDOLITcCM5-O0iE","number":1,"title":"OQS goal: non-committal research or production use?","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2024-02-05T06:57:10Z","updated_at":"2024-04-08T10:21:08Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Following up on [a discussion about the goal of OQS](https://github.com/dstebila/oqs-www-new/pull/169#discussion_r1477535726) this issue is to raise the question whether OQS shall remain limited to research-only use as per the currently [published goal](https://openquantumsafe.org)\r\n\r\n> aims to support the development and prototyping of [quantum-resistant cryptography](https://openquantumsafe.org/post-quantum-crypto)\r\n\r\nand [limitations](https://openquantumsafe.org/about/#overview)\r\n\r\n> OQS is intended for prototyping and evaluating quantum-resistant cryptography\r\n\r\n> WE DO NOT CURRENTLY RECOMMEND RELYING ON LIBOQS OR OUR APPLICATION INTEGRATIONS IN A PRODUCTION ENVIRONMENT OR TO PROTECT ANY SENSITIVE DATA. This project is meant to help with research and prototyping. \r\n\r\nor whether it should strive to become code that users may be able to rely on at some time -- and if the latter, when.\r\n\r\n@dstebila suggested I should propose text how to phrase this, but as a person not employed by a company that might benefit from such change of mission and considering that apparently all TSC members (again, except me) are within research organizations, I do not feel in a position to do so. I'd rather solicit input whether the TSC is interested at all in the goal of making OQS more geared to production use -- particularly as the companies funding PQCA are starting a [parallel project launched](https://github.com/pq-code-package) geared to the development of high-assurance, production-oriented code without the \"technical debt\" of OQS.\r\n\r\nBy retaining the goal of \"research-/evaluation-only\" for OQS \r\n- the integration of code with unclear licensing or APIs that have not been tested for actual usability is _much_ easier.\r\n- OQS can retain its current \"casual\" update pace\r\n- doesn't have to take at heart security considerations (e.g., FIPS) or stringently have to follow upstream security updates\r\n\r\nUnsure whether tagging @open-quantum-safe/tsc @ashman-p @thb-sb (the latter two apparently not members of this org?!) is necessary to get your attention.\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2042383095","html_url":"https://github.com/open-quantum-safe/tsc/issues/1#issuecomment-2042383095","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1","id":2042383095,"node_id":"IC_kwDOLITcCM55vEr3","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T10:21:07Z","updated_at":"2024-04-08T10:21:07Z","author_association":"MEMBER","body":"> I can't speak for the full organization.\r\n\r\nHence my request to disseminate this further to people in your organization that may have a \"beyond research\" perspective.\r\n\r\n> This reliefs OQS from owning and maintaining crypto-implementations and gives its sister project PQCP the mandate to provide such higher-assurance implementations that can be consumed by OQS.\r\n\r\nThis IMO doesn't make sense: Why add OQS as another layer (that will require certifications if part of a product handling crypto material) when one could simply add certified PQCP code to productive consumers (such as `openssl`) straight?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2042383095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T10:21:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37259073797","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/12","id":2226776752,"node_id":"I_kwDOLITcCM6Eueqw","number":12,"title":"Create a voting procedure for the OQS TSC","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":20,"created_at":"2024-04-05T01:12:07Z","updated_at":"2024-04-08T10:25:00Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"An action item from our March 2024 TSC meeting was to create a voting procedure for the TSC.\r\n\r\nThe voting procedure we come up with will need to respect the [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) as well as the ideas reflected in the [liboqs and oqs-provider governance documents](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md); those two documents currently disagree on a few matters (e.g., what constitutes quorum for electronic votes), in which case the Charter would prevail unless we amend it.  Additionally, the TSC operates according to Robert's Rules of Order, which provides several mechanisms for voting.\r\n\r\nAs I see it, we will have two types of things to vote on: general matters, and matters involving people (elections, additions/removals from TSC).  I make this distinction as Robert's Rules provides the option for elections to be done using either public or secret ballot.\r\n\r\nFor voting on general matters, my proposal would be:\r\n- Motions can be proposed either at a meeting or electronically on Github by opening a clearly labeled issue/pull request in the TSC repository.  \r\n- Motions can be voted on either at a meeting or electronically on Github. The Charter lays out the quorum/passing requirements for such votes (at a meeting: quorum is ≥50% of TSC voting members, passed by a majority vote of those in attendance; electronically: passed by a majority vote of TSC voting members). We can use built-in Github mechanisms for voting (thumbs up/thumbs down), or there are dedicated Github-based voting mechanisms like [gitvote](https://github.com/cncf/gitvote).\r\n\r\nFor voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot.  If public ballot, then we could just use the same procedure as for normal matters.  If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nAs we will have the option of voting on things both in meetings and electronically, we'll have to figure out which we actually prefer to do.  I think this will depend on how our TSC meeting culture develops -- do most people show up, do we have enough time in advance to think and enough time in meetings to discuss and make a well-informed vote during the meeting, or do we want the extra time that comes from being able to reflect and vote afterwards, albeit at the cost of potentially moving slower. I think I'd wait a few months to see how our meetings develop.\r\n\r\n@open-quantum-safe/tsc and others, please feel free to discuss here in advance of our next meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2042390144","html_url":"https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2042390144","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","id":2042390144,"node_id":"IC_kwDOLITcCM55vGaA","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T10:24:58Z","updated_at":"2024-04-08T10:24:58Z","author_association":"MEMBER","body":"> Would it be considerable to adopt the same voting rights for the TSC? This way not it's not only maintainers who can vote, making the body more inclusive. Still, the maintainer role is honored with veto rights.\r\n\r\nMay I take this as a supportive statement of\r\n\r\n> In this case, let's bring the charter in line with what's [documented in github](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md) \r\n\r\n?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2042390144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T10:25:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37271684271","type":"IssueCommentEvent","actor":{"id":74706004,"login":"pi-314159","display_login":"pi-314159","gravatar_id":"","url":"https://api.github.com/users/pi-314159","avatar_url":"https://avatars.githubusercontent.com/u/74706004?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/271","id":2206068517,"node_id":"I_kwDODP--n86Dfe8l","number":271,"title":"Update test server with liboqs 0.10.0 release","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"assignees":[{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2024-03-25T15:42:35Z","updated_at":"2024-04-08T16:17:09Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2043162102","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/271#issuecomment-2043162102","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/271","id":2043162102,"node_id":"IC_kwDODP--n855yC32","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T16:17:07Z","updated_at":"2024-04-08T16:17:07Z","author_association":"CONTRIBUTOR","body":"@bhess QUIC hasn’t been updated. I’ll update QUIC and create a new Dockerfile next month when I have time. Let’s leave it as-is for this release.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2043162102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T16:17:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37272668204","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/12","id":2226776752,"node_id":"I_kwDOLITcCM6Eueqw","number":12,"title":"Create a voting procedure for the OQS TSC","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":21,"created_at":"2024-04-05T01:12:07Z","updated_at":"2024-04-08T16:49:51Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"An action item from our March 2024 TSC meeting was to create a voting procedure for the TSC.\r\n\r\nThe voting procedure we come up with will need to respect the [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) as well as the ideas reflected in the [liboqs and oqs-provider governance documents](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md); those two documents currently disagree on a few matters (e.g., what constitutes quorum for electronic votes), in which case the Charter would prevail unless we amend it.  Additionally, the TSC operates according to Robert's Rules of Order, which provides several mechanisms for voting.\r\n\r\nAs I see it, we will have two types of things to vote on: general matters, and matters involving people (elections, additions/removals from TSC).  I make this distinction as Robert's Rules provides the option for elections to be done using either public or secret ballot.\r\n\r\nFor voting on general matters, my proposal would be:\r\n- Motions can be proposed either at a meeting or electronically on Github by opening a clearly labeled issue/pull request in the TSC repository.  \r\n- Motions can be voted on either at a meeting or electronically on Github. The Charter lays out the quorum/passing requirements for such votes (at a meeting: quorum is ≥50% of TSC voting members, passed by a majority vote of those in attendance; electronically: passed by a majority vote of TSC voting members). We can use built-in Github mechanisms for voting (thumbs up/thumbs down), or there are dedicated Github-based voting mechanisms like [gitvote](https://github.com/cncf/gitvote).\r\n\r\nFor voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot.  If public ballot, then we could just use the same procedure as for normal matters.  If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nAs we will have the option of voting on things both in meetings and electronically, we'll have to figure out which we actually prefer to do.  I think this will depend on how our TSC meeting culture develops -- do most people show up, do we have enough time in advance to think and enough time in meetings to discuss and make a well-informed vote during the meeting, or do we want the extra time that comes from being able to reflect and vote afterwards, albeit at the cost of potentially moving slower. I think I'd wait a few months to see how our meetings develop.\r\n\r\n@open-quantum-safe/tsc and others, please feel free to discuss here in advance of our next meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2043222830","html_url":"https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2043222830","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","id":2043222830,"node_id":"IC_kwDOLITcCM55yRsu","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T16:49:50Z","updated_at":"2024-04-08T16:49:50Z","author_association":"MEMBER","body":"> Can you please explain what you as well as the community would gain from such split?\r\n\r\nThe benefit would be to have a dedicated project that is fully maintained, in a similar way as, e.g., 'profiling' is a dedicated project with a web service associated with it. And nginx would be a component of such a 'testserver' project.\r\n\r\nBut it doesn't need to be done this way. Another model for oqs-demos could be to label it being supported on a best-effort basis, with the community contributing/updating those components they are interested in.\r\n\r\nRegarding the two choices you outline above @baentsch: by no means I want to take anything \"away from you\", you are the original author of the test server and nginx in oqs-demos. I deeply respect your dedication and contribution to the project. If you prefer to operate the server again, you are of course very welcome.\r\nMy motivation with my proposal is to help OQS to have this part continued to be maintained. I don't claim that this is the same contribution as maintaining bigger oqs-projects.\r\n\r\n> More seriously, I'd consider this commitment level too low for a self-respecting co-chair of the OQS TSC.\r\n\r\nWith my previous post I am transparent about the level of commitment I can currently offer to the project. Your rhetoric with _self-respect_ is personal, so please let me state my recollection of the TSC formation and the co-chair/vice-chair election: Douglas invited me to join the TSC, among long-running contributors to OQS, independent from my employer's membership in the PQCA. During the first TSC meeting, three candidates were nominated for the TSC co-chair/vice-chair role by other members of the TSC. Nobody did nominate themself. Arguments presented in the (short) discussion were the term of their contribution and the size of the company they are affiliated with. I accepted my nomination based on my desire to help the project and taking this in my view more administrative role. I wouldn't accept any privileges that allow me to perform actions on my own rather than the TSC consensus. I further do not fight for this role, if there are other candidates willing to do it and are elected, they are very welcome.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2043222830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T16:49:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37275221660","type":"IssueCommentEvent","actor":{"id":13785747,"login":"beldmit","display_login":"beldmit","gravatar_id":"","url":"https://api.github.com/users/beldmit","avatar_url":"https://avatars.githubusercontent.com/u/13785747?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/1","id":2117814404,"node_id":"I_kwDOLITcCM5-O0iE","number":1,"title":"OQS goal: non-committal research or production use?","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2024-02-05T06:57:10Z","updated_at":"2024-04-08T18:21:14Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Following up on [a discussion about the goal of OQS](https://github.com/dstebila/oqs-www-new/pull/169#discussion_r1477535726) this issue is to raise the question whether OQS shall remain limited to research-only use as per the currently [published goal](https://openquantumsafe.org)\r\n\r\n> aims to support the development and prototyping of [quantum-resistant cryptography](https://openquantumsafe.org/post-quantum-crypto)\r\n\r\nand [limitations](https://openquantumsafe.org/about/#overview)\r\n\r\n> OQS is intended for prototyping and evaluating quantum-resistant cryptography\r\n\r\n> WE DO NOT CURRENTLY RECOMMEND RELYING ON LIBOQS OR OUR APPLICATION INTEGRATIONS IN A PRODUCTION ENVIRONMENT OR TO PROTECT ANY SENSITIVE DATA. This project is meant to help with research and prototyping. \r\n\r\nor whether it should strive to become code that users may be able to rely on at some time -- and if the latter, when.\r\n\r\n@dstebila suggested I should propose text how to phrase this, but as a person not employed by a company that might benefit from such change of mission and considering that apparently all TSC members (again, except me) are within research organizations, I do not feel in a position to do so. I'd rather solicit input whether the TSC is interested at all in the goal of making OQS more geared to production use -- particularly as the companies funding PQCA are starting a [parallel project launched](https://github.com/pq-code-package) geared to the development of high-assurance, production-oriented code without the \"technical debt\" of OQS.\r\n\r\nBy retaining the goal of \"research-/evaluation-only\" for OQS \r\n- the integration of code with unclear licensing or APIs that have not been tested for actual usability is _much_ easier.\r\n- OQS can retain its current \"casual\" update pace\r\n- doesn't have to take at heart security considerations (e.g., FIPS) or stringently have to follow upstream security updates\r\n\r\nUnsure whether tagging @open-quantum-safe/tsc @ashman-p @thb-sb (the latter two apparently not members of this org?!) is necessary to get your attention.\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2043398788","html_url":"https://github.com/open-quantum-safe/tsc/issues/1#issuecomment-2043398788","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1","id":2043398788,"node_id":"IC_kwDOLITcCM55y8qE","user":{"login":"beldmit","id":13785747,"node_id":"MDQ6VXNlcjEzNzg1NzQ3","avatar_url":"https://avatars.githubusercontent.com/u/13785747?v=4","gravatar_id":"","url":"https://api.github.com/users/beldmit","html_url":"https://github.com/beldmit","followers_url":"https://api.github.com/users/beldmit/followers","following_url":"https://api.github.com/users/beldmit/following{/other_user}","gists_url":"https://api.github.com/users/beldmit/gists{/gist_id}","starred_url":"https://api.github.com/users/beldmit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beldmit/subscriptions","organizations_url":"https://api.github.com/users/beldmit/orgs","repos_url":"https://api.github.com/users/beldmit/repos","events_url":"https://api.github.com/users/beldmit/events{/privacy}","received_events_url":"https://api.github.com/users/beldmit/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T18:21:13Z","updated_at":"2024-04-08T18:21:13Z","author_association":"NONE","body":"We intend to use a subset of liboqs as a production-ready part of our distribution and plan contributing in various aspects (and already contribute)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2043398788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T18:21:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37277020416","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/12","id":2226776752,"node_id":"I_kwDOLITcCM6Eueqw","number":12,"title":"Create a voting procedure for the OQS TSC","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":22,"created_at":"2024-04-05T01:12:07Z","updated_at":"2024-04-08T19:32:38Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"An action item from our March 2024 TSC meeting was to create a voting procedure for the TSC.\r\n\r\nThe voting procedure we come up with will need to respect the [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) as well as the ideas reflected in the [liboqs and oqs-provider governance documents](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md); those two documents currently disagree on a few matters (e.g., what constitutes quorum for electronic votes), in which case the Charter would prevail unless we amend it.  Additionally, the TSC operates according to Robert's Rules of Order, which provides several mechanisms for voting.\r\n\r\nAs I see it, we will have two types of things to vote on: general matters, and matters involving people (elections, additions/removals from TSC).  I make this distinction as Robert's Rules provides the option for elections to be done using either public or secret ballot.\r\n\r\nFor voting on general matters, my proposal would be:\r\n- Motions can be proposed either at a meeting or electronically on Github by opening a clearly labeled issue/pull request in the TSC repository.  \r\n- Motions can be voted on either at a meeting or electronically on Github. The Charter lays out the quorum/passing requirements for such votes (at a meeting: quorum is ≥50% of TSC voting members, passed by a majority vote of those in attendance; electronically: passed by a majority vote of TSC voting members). We can use built-in Github mechanisms for voting (thumbs up/thumbs down), or there are dedicated Github-based voting mechanisms like [gitvote](https://github.com/cncf/gitvote).\r\n\r\nFor voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot.  If public ballot, then we could just use the same procedure as for normal matters.  If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nAs we will have the option of voting on things both in meetings and electronically, we'll have to figure out which we actually prefer to do.  I think this will depend on how our TSC meeting culture develops -- do most people show up, do we have enough time in advance to think and enough time in meetings to discuss and make a well-informed vote during the meeting, or do we want the extra time that comes from being able to reflect and vote afterwards, albeit at the cost of potentially moving slower. I think I'd wait a few months to see how our meetings develop.\r\n\r\n@open-quantum-safe/tsc and others, please feel free to discuss here in advance of our next meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2043507127","html_url":"https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2043507127","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","id":2043507127,"node_id":"IC_kwDOLITcCM55zXG3","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2024-04-08T19:32:36Z","updated_at":"2024-04-08T19:32:36Z","author_association":"NONE","body":"> What do you term \"administrative votes\" and what are \"close ballots\"? How does this work?\n\nElections, for example. Close ballots = secret ballot, but verifiable. We could use helios<https://vote.heliosvoting.org/> (as proposed by Douglas); that's the system used by the International Association for Cryptographic Research (IACR) to conduct its elections.\n\nFrom: Michael Baentsch ***@***.***>\nSent: Saturday, April 6, 2024 1:39 AM\nTo: open-quantum-safe/tsc ***@***.***>\nCc: Mention ***@***.***>; Comment ***@***.***>\nSubject: Re: [open-quantum-safe/tsc] Create a voting procedure for the OQS TSC (Issue #12)\n\n\nI'm actually ok if administrative votes use close ballots\n\nWhat do you term \"administrative votes\" and what are \"close ballots\"? How does this work?\n\nas long as they can be verified\n\nAbsolutely agree: This (un-verifiability of voting) was the biggest \"turn-off\" to me personally in the first TSC meeting: Some LF person announcing a ballot result putting exactly that LF company in (co-)chair position that initiated the LF take over of OQS: It felt like the completion of a hostile take-over. With this, I completely lost trust in the openness of LF, the sincerity of the people voting and in the open and mutually respectful cooperation that existed in OQS before.\n\n@hartm<https://github.com/hartm>, fyi: @christianpaquin<https://github.com/christianpaquin> with the addition of this single word (\"verified\") straightened out what the LF charter terms you quoted here<https://github.com/open-quantum-safe/boringssl/pull/114#issuecomment-2040073296> couldn't:\n\nYour charter states:\n\nThe output of all Project discussions, proposals, timelines, decisions,\nincluding voting results and status should be made open and easily visible to all.\n\nIf it stated instead\n\nAll Project discussions, proposals, timelines, decisions,\nincluding verified voting results and status will be made open and easily visible to all without limitation.\n\nI trust you see the differences, @hartm<https://github.com/hartm>: This way, LF no longer can\na) decide which voices/opinions to redact out (by publishing only the \"output\")\nb) create voting results it likes (by publishing only the \"results\" it likes as done here<https://github.com/open-quantum-safe/tsc/commit/7b4c74f35cd75d0085f51e4921e6190fd19e2196>)\nc) delete discussions in the future (by removing access to archives<https://github.com/open-quantum-safe/boringssl/pull/114#issuecomment-2040187032>)\n\nI strongly support conducting all technical decisions openly, given all stakeholders proper review time.\n\nThanks!\n\n-\nReply to this email directly, view it on GitHub<https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2040976977> or unsubscribe<https://github.com/notifications/unsubscribe-auth/AD36T5OSPUK7HDAAVP3YIRDY36C6JBFKMF2HI4TJMJ2XIZLTSOBKK5TBNR2WLJDUOJ2WLJDOMFWWLO3UNBZGKYLEL5YGC4TUNFRWS4DBNZ2F6YLDORUXM2LUPGBKK5TBNR2WLJDUOJ2WLJDOMFWWLLTXMF2GG2C7MFRXI2LWNF2HTAVFOZQWY5LFUVUXG43VMWSG4YLNMWVXI2DSMVQWIX3UPFYGLLDTOVRGUZLDORPXI6LQMWWES43TOVSUG33NNVSW45FGORXXA2LDOOJIFJDUPFYGLKTSMVYG643JORXXE6NFOZQWY5LFVE3TINRZGA2DKOBUQKSHI6LQMWSWS43TOVS2K5TBNR2WLKRSGIZDMNZXGY3TKMVHORZGSZ3HMVZKMY3SMVQXIZI>.\nYou are receiving this email because you were mentioned.\n\nTriage notifications on the go with GitHub Mobile for iOS<https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android<https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2043507127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-08T19:32:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
