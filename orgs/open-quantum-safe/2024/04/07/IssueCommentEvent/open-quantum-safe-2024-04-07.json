{"id":"37235148443","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/12","id":2226776752,"node_id":"I_kwDOLITcCM6Eueqw","number":12,"title":"Create a voting procedure for the OQS TSC","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":14,"created_at":"2024-04-05T01:12:07Z","updated_at":"2024-04-07T06:29:38Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"An action item from our March 2024 TSC meeting was to create a voting procedure for the TSC.\r\n\r\nThe voting procedure we come up with will need to respect the [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) as well as the ideas reflected in the [liboqs and oqs-provider governance documents](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md); those two documents currently disagree on a few matters (e.g., what constitutes quorum for electronic votes), in which case the Charter would prevail unless we amend it.  Additionally, the TSC operates according to Robert's Rules of Order, which provides several mechanisms for voting.\r\n\r\nAs I see it, we will have two types of things to vote on: general matters, and matters involving people (elections, additions/removals from TSC).  I make this distinction as Robert's Rules provides the option for elections to be done using either public or secret ballot.\r\n\r\nFor voting on general matters, my proposal would be:\r\n- Motions can be proposed either at a meeting or electronically on Github by opening a clearly labeled issue/pull request in the TSC repository.  \r\n- Motions can be voted on either at a meeting or electronically on Github. The Charter lays out the quorum/passing requirements for such votes (at a meeting: quorum is â‰¥50% of TSC voting members, passed by a majority vote of those in attendance; electronically: passed by a majority vote of TSC voting members). We can use built-in Github mechanisms for voting (thumbs up/thumbs down), or there are dedicated Github-based voting mechanisms like [gitvote](https://github.com/cncf/gitvote).\r\n\r\nFor voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot.  If public ballot, then we could just use the same procedure as for normal matters.  If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nAs we will have the option of voting on things both in meetings and electronically, we'll have to figure out which we actually prefer to do.  I think this will depend on how our TSC meeting culture develops -- do most people show up, do we have enough time in advance to think and enough time in meetings to discuss and make a well-informed vote during the meeting, or do we want the extra time that comes from being able to reflect and vote afterwards, albeit at the cost of potentially moving slower. I think I'd wait a few months to see how our meetings develop.\r\n\r\n@open-quantum-safe/tsc and others, please feel free to discuss here in advance of our next meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041335324","html_url":"https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2041335324","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","id":2041335324,"node_id":"IC_kwDOLITcCM55rE4c","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T06:29:37Z","updated_at":"2024-04-07T06:29:37Z","author_association":"MEMBER","body":"> Once there are so many maintainers that meetings become unwieldly, then usually some kind of elections are held \r\n\r\nWell, OQS has the opposite: Way too few maintainers and --\"courtesy\" the LF charter-- too many elections (one so far; the one that created a rift between TSC members voting openly and those executing a secret vote -- hence this discussion).\r\n\r\n> Contributors who make smaller contributions should be allowed to vote because likely they are users who familiar with the project;\r\n\r\nTwo thoughts speaking against this:\r\n1) There's doubtlessly many people familiar with the project due to their (in-house) use of it; but they show up rarely if ever and don't contribute back. Those \"leechers\" should not have the right to vote/change the course of the project in a direction that suits them just because of tiny contributions.\r\n2) I have seen many contributions crossing t's and dotting i's that don't document knowledge. Allowing such contributors to change the course of the project is against all principles of merit-based decision taking: We have reasonable [GOVERNANCE.md](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md) files clarifying what it takes to use, contribute, commit and maintain, respectively. Those simply shall now overrule any LF formalities -- except  the IP stuff protecting the profits of the companies paying your salary:\r\n\r\n> some things are unfortunately not due to legal constraints (DCO, licensing, etc.).\r\n\r\nPlease accept that people working for free on a project where profit-taking, err, \"legal constraints\", has become a major rule changer just can't stomach restrictions on freedom and openness while the entities introducing those restrictions don't substantially step up their contributions -- technical ones, not just procedural ones:\r\n\r\n> >     From that perspective, we could argue @pi-314159 should be on the TSC as maintainer of oqs-boringssl. I'd surely also invite @brian-jarvis-aws to commit being maintainer of oqs-opensshand @bhess as a representative of another integration company could commit to be maintainer of oqs-demos. This way, TSC representation and technical contribution activity would be much better aligned.\r\n\r\n> Makes sense to me!\r\n\r\nBeware: Being maintainer in my eyes (and the core sub projects of OQS) means commitment; particularly for employees it means commitment by their employers to give the employees time to work on this: Very often I have seen statements like \"I don't have agreement by my boss to work on this except in my free time\" or \"there's internal work I have to prioritize higher\".\r\n\r\nIf you'd have LF wording for this problem, by all means, please contribute that, @hartm. Maybe something along the lines \"voting members must be able to commit at least x% of their work time to the project\": That way people can meaningfully contribute and drive the project forward by votes based on experience.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041335324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T06:29:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37237282447","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/114","id":2221225015,"node_id":"PR_kwDOCrBzOM5rech1","number":114,"title":"Falcon Update April 2024","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":33,"created_at":"2024-04-02T19:00:54Z","updated_at":"2024-04-07T10:14:57Z","closed_at":"2024-04-02T22:04:02Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/114","html_url":"https://github.com/open-quantum-safe/boringssl/pull/114","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/114.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/114.patch","merged_at":"2024-04-02T22:04:02Z"},"body":"This update is compatible with liboqs 0.10.0.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/2041406465","html_url":"https://github.com/open-quantum-safe/boringssl/pull/114#issuecomment-2041406465","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114","id":2041406465,"node_id":"IC_kwDOCrBzOM55rWQB","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T10:14:56Z","updated_at":"2024-04-07T10:14:56Z","author_association":"MEMBER","body":"> Tagging @dstebila and @baentsch\r\n> \r\n> I have the following two questions regarding OQS-BoringSSL and hope they will be addressed at the next TSC meeting:\r\n> \r\n>     1. According to Article 7.b of the Charter, all new contributions must be made using the MIT license. This is not feasible for OQS-BoringSSL, so can an exception be made as per Article 7.c of the Charter?\r\n\r\nAFAIK, BoringSSL is not controlled by LinuxFoundation and therefore I do not see how a fork of it should be governed by LF rules. I'd therefore think it'd be logical to consider such exception automatically granted for such forks. But @hartm's lawyers most likely will have a comment on this...\r\n> \r\n>     2. Article 7.b of the Charter also requires that all commits must have a DCO. As I mentioned earlier, this is not possible when merging upstream commits (such as PR [Update to upstream df3b58e #109](https://github.com/open-quantum-safe/boringssl/pull/109)). How should this be handled in the future?\r\n\r\nThe way I see LF's DCO mechanism work is that it is not requiring a real cryptographic signature or actual CLA on file but just requires presence of some text hinting at the author doing the merge. So, would it be conceivable you'd simply add this text (also created by the `-s` option to `git commit`) to a squash merge PR of upstream commits to satisfy this process?\r\n> \r\n> \r\n> Due to time constraints, I regret that I'm unable to participate in TSC meetings, but I expect to attend in May. Thank you!\r\n\r\nPersonally, I'd completely exempt `oqs-boringssl` from these requirements, again, because this is a fork of a non-LF project.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/2041406465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T10:14:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37237371707","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1749","id":2227238516,"node_id":"I_kwDOA-eq3c6EwPZ0","number":1749,"title":"Windows build with \"-DBUILD_SHARED_LIBS=ON\"","user":{"login":"smcmahonibm","id":147778033,"node_id":"U_kgDOCM7p8Q","avatar_url":"https://avatars.githubusercontent.com/u/147778033?v=4","gravatar_id":"","url":"https://api.github.com/users/smcmahonibm","html_url":"https://github.com/smcmahonibm","followers_url":"https://api.github.com/users/smcmahonibm/followers","following_url":"https://api.github.com/users/smcmahonibm/following{/other_user}","gists_url":"https://api.github.com/users/smcmahonibm/gists{/gist_id}","starred_url":"https://api.github.com/users/smcmahonibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smcmahonibm/subscriptions","organizations_url":"https://api.github.com/users/smcmahonibm/orgs","repos_url":"https://api.github.com/users/smcmahonibm/repos","events_url":"https://api.github.com/users/smcmahonibm/events{/privacy}","received_events_url":"https://api.github.com/users/smcmahonibm/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-04-05T07:09:36Z","updated_at":"2024-04-07T10:22:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nBuilding on Windows with shared lib (.dll) setting \"-DBUILD_SHARED_LIBS=ON\" fails to build kat_kem and kat_sig.\r\nEither ninja or MSBuild or MSVC project files all get same error.\r\n\r\n**To Reproduce**\r\nclone liboqs main branch\r\n> mkdir build\r\n> cd build\r\n> cmake -GNinja -DBUILD_SHARED_LIBS=ON ..\r\n> ninja\r\n...\r\n... fails to link kat_kem.exe and kat_sig.exe\r\n(see screenshot below)\r\n\r\n**Expected behavior**\r\nkat_kem.exe and kat_sig.exe should build OK.\r\nThe oqs.dll and all other .exe build OK.\r\nThose test build OK with static lib only build - i.e. no \"-DBUILD_SHARED_LIBS=ON\".\r\n\r\n**Screenshots**\r\nninja console output:\r\n```\r\n[659/671] Linking C executable tests\\kat_kem.exe\r\nFAILED: tests/kat_kem.exe\r\ncmd.exe /C \"cd . && \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_exe --intdir=tests\\CMakeFiles\\kat_kem.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100226~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100226~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~1\\MIB055~1\\2022\\PROFES~1\\VC\\Tools\\MSVC\\1436~1.325\\bin\\Hostx64\\x64\\link.exe /nologo tests\\CMakeFiles\\kat_kem.dir\\kat_kem.c.obj tests\\CMakeFiles\\kat_kem.dir\\test_helpers.c.obj  /out:tests\\kat_kem.exe /implib:tests\\kat_kem.lib /pdb:tests\\kat_kem.pdb /version:0.0 /machine:x64 /debug /INCREMENTAL /subsystem:console   /STACK:8192000  lib\\oqs.lib  lib\\oqs-internal.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .\"\r\nLINK Pass 1: command \"C:\\PROGRA~1\\MIB055~1\\2022\\PROFES~1\\VC\\Tools\\MSVC\\1436~1.325\\bin\\Hostx64\\x64\\link.exe /nologo tests\\CMakeFiles\\kat_kem.dir\\kat_kem.c.obj tests\\CMakeFiles\\kat_kem.dir\\test_helpers.c.obj /out:tests\\kat_kem.exe /implib:tests\\kat_kem.lib /pdb:tests\\kat_kem.pdb /version:0.0 /machine:x64 /debug /INCREMENTAL /subsystem:console /STACK:8192000 lib\\oqs.lib lib\\oqs-internal.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:tests\\CMakeFiles\\kat_kem.dir/intermediate.manifest tests\\CMakeFiles\\kat_kem.dir/manifest.res\" failed (exit code 1169) with the following output:\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_CPU_has_extension already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_init already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_destroy already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_MEM_secure_free already defined in oqs.lib(oqs.dll)\r\noqs-internal.lib(common.c.obj) : error LNK2005: OQS_MEM_insecure_free already defined in oqs.lib(oqs.dll)\r\n   Creating library tests\\kat_kem.lib and object tests\\kat_kem.exp\r\ntests\\kat_kem.exe : fatal error LNK1169: one or more multiply defined symbols found\r\n```\r\nLooks like some APIs (OQS_CPU_has_extension ...) in both oqs.dll and import library oqs.lib and also in a static lib oqs-internal.lib. Both include common.c.obj. The static lib build probably just links to the first one found. I tried removing oqs-internal.lib or just common.obj but then get other errors.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Windows 11\r\n - OpenSSL version n/a\r\n - Compiler version used : Microsoft (R) C/C++ Optimizing Compiler Version 19.36.32538 for x64\r\n - Build variables used: -DBUILD_SHARED_LIBS=ON\r\n - liboqs version:  main branch\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041408550","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1749#issuecomment-2041408550","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1749","id":2041408550,"node_id":"IC_kwDOA-eq3c55rWwm","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T10:22:26Z","updated_at":"2024-04-07T10:22:26Z","author_association":"MEMBER","body":"Thanks again @matlimatli for the fix! In absence of a CI test, @smcmahonibm can you confirm this solves the issue for you?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041408550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T10:22:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37241659019","type":"IssueCommentEvent","actor":{"id":6188943,"login":"vsoftco","display_login":"vsoftco","gravatar_id":"","url":"https://api.github.com/users/vsoftco","avatar_url":"https://avatars.githubusercontent.com/u/6188943?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","id":2228124161,"node_id":"PR_kwDOA-eq3c5r2Y51","number":1751,"title":"Allow windows linking of test programs","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-04-05T14:05:02Z","updated_at":"2024-04-07T17:17:54Z","closed_at":"2024-04-07T17:00:09Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1751","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.patch","merged_at":"2024-04-07T17:00:09Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe kat_kem and kat_sig programs could not be linked when building natively on windows. This was caused by multiple definitions of symbols. By using the `/FORCE:MULTIPLE` compiler option, this is allowed, similar in spirit to what was already used for cross-compiling to Windows.\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1749\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [No] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041535607","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751#issuecomment-2041535607","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","id":2041535607,"node_id":"IC_kwDOA-eq3c55r1x3","user":{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T17:17:53Z","updated_at":"2024-04-07T17:17:53Z","author_association":"MEMBER","body":"@baentsch @SWilson4 @matlimatli  I saw this a bit late.. the easiest (imo) fix is to use the CMake flag ` -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=TRUE` when compiling for Windows, it takes care of the multiple defined symbols at linking.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041535607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T17:17:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37241784650","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","id":2228124161,"node_id":"PR_kwDOA-eq3c5r2Y51","number":1751,"title":"Allow windows linking of test programs","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-04-05T14:05:02Z","updated_at":"2024-04-07T17:29:22Z","closed_at":"2024-04-07T17:00:09Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1751","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.patch","merged_at":"2024-04-07T17:00:09Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe kat_kem and kat_sig programs could not be linked when building natively on windows. This was caused by multiple definitions of symbols. By using the `/FORCE:MULTIPLE` compiler option, this is allowed, similar in spirit to what was already used for cross-compiling to Windows.\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1749\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [No] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041538357","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751#issuecomment-2041538357","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","id":2041538357,"node_id":"IC_kwDOA-eq3c55r2c1","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T17:29:21Z","updated_at":"2024-04-07T17:29:21Z","author_association":"MEMBER","body":"Thanks for the suggestion, @vsoftco . I do like the fix in this PR, though, as it doesn't depend on the setting of a `cmake` flag: Do you also see it like that or is there something \"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS\" does \"better\"?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041538357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T17:29:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37242021260","type":"IssueCommentEvent","actor":{"id":7438400,"login":"matlimatli","display_login":"matlimatli","gravatar_id":"","url":"https://api.github.com/users/matlimatli","avatar_url":"https://avatars.githubusercontent.com/u/7438400?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1750","id":2227998039,"node_id":"I_kwDOA-eq3c6EzI1X","number":1750,"title":"Return value from OQS_randombytes","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-04-05T13:07:09Z","updated_at":"2024-04-07T17:54:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The current signature of `OQS_Randombytes()` is to return `void`. This might be a limiting factor, which is also noted in `OQS_randombytes_openssl()` with the following comment:\r\n```\r\n// because of void signature we have no other way to signal the problem\r\n// we cannot possibly return without randomness\r\n```\r\nand the failure handling of this function is therefore to terminate the execution via `exit()`.\r\n\r\nIn cases where we supply our own randomness algorithm via `OQS_randombytes_custom_algorithm()`, the same problem applies. We have no other means of handling a failure than forcefully exiting. It is not unthinkable that the higher level code would want to take care of this situation in a custom way without having to resort to using an exit handler.\r\n\r\nWould it be feasible to change this signature to returning a status value, which can then be propagated through the higher level functions? For example, the keypair and encaps functions already return an `OQS_STATUS` value, which can be taken care of in the calling code. Wouldn't it make sense if OQS_ERROR was returned if an underlying randomness call failed?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041544769","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1750#issuecomment-2041544769","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1750","id":2041544769,"node_id":"IC_kwDOA-eq3c55r4BB","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T17:54:53Z","updated_at":"2024-04-07T17:54:53Z","author_association":"CONTRIBUTOR","body":"Thanks for the explanation! It makes sense (but still is a bit unfortunate).\r\n\r\nMy use cases are mainly hypothetical at this time, but I am thinking of cases where a long-running system may for example temporarily run out of good entropy. In this case I would expect the cryptographic operations to fail, so that the calling code could remedy the situation (the obvious workaround here is to let the custom randombytes function handle it, which may or may not be a good idea) or shut down the system gracefully.\r\n\r\nI'm not sure it would be a good idea to let `OQS_randombytes` return a status code if it is not checked by the callers. It might be dangerous if it could return bad randomness without anyone noticing. In cases where we want to use a function with a different signature, it is probably more safe to use a wrapper, similar to `OQS_randombytes_openssl`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041544769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T17:54:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37242069953","type":"IssueCommentEvent","actor":{"id":16846129,"login":"hartm","display_login":"hartm","gravatar_id":"","url":"https://api.github.com/users/hartm","avatar_url":"https://avatars.githubusercontent.com/u/16846129?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/12","id":2226776752,"node_id":"I_kwDOLITcCM6Eueqw","number":12,"title":"Create a voting procedure for the OQS TSC","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":15,"created_at":"2024-04-05T01:12:07Z","updated_at":"2024-04-07T18:00:10Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"An action item from our March 2024 TSC meeting was to create a voting procedure for the TSC.\r\n\r\nThe voting procedure we come up with will need to respect the [OQS Technical Charter](https://github.com/open-quantum-safe/tsc/blob/main/charter/charter-2024-01-03.pdf) as well as the ideas reflected in the [liboqs and oqs-provider governance documents](https://github.com/open-quantum-safe/liboqs/blob/main/GOVERNANCE.md); those two documents currently disagree on a few matters (e.g., what constitutes quorum for electronic votes), in which case the Charter would prevail unless we amend it.  Additionally, the TSC operates according to Robert's Rules of Order, which provides several mechanisms for voting.\r\n\r\nAs I see it, we will have two types of things to vote on: general matters, and matters involving people (elections, additions/removals from TSC).  I make this distinction as Robert's Rules provides the option for elections to be done using either public or secret ballot.\r\n\r\nFor voting on general matters, my proposal would be:\r\n- Motions can be proposed either at a meeting or electronically on Github by opening a clearly labeled issue/pull request in the TSC repository.  \r\n- Motions can be voted on either at a meeting or electronically on Github. The Charter lays out the quorum/passing requirements for such votes (at a meeting: quorum is â‰¥50% of TSC voting members, passed by a majority vote of those in attendance; electronically: passed by a majority vote of TSC voting members). We can use built-in Github mechanisms for voting (thumbs up/thumbs down), or there are dedicated Github-based voting mechanisms like [gitvote](https://github.com/cncf/gitvote).\r\n\r\nFor voting on matters involving people (e.g., elections), the TSC should decide whether we want those types of votes to be done using public or secret ballot.  If public ballot, then we could just use the same procedure as for normal matters.  If secret ballot, then we should identify an online voting mechanism we want to use, such as [Helios voting](https://vote.heliosvoting.org/) which the IACR uses for its electronic elections.\r\n\r\nAs we will have the option of voting on things both in meetings and electronically, we'll have to figure out which we actually prefer to do.  I think this will depend on how our TSC meeting culture develops -- do most people show up, do we have enough time in advance to think and enough time in meetings to discuss and make a well-informed vote during the meeting, or do we want the extra time that comes from being able to reflect and vote afterwards, albeit at the cost of potentially moving slower. I think I'd wait a few months to see how our meetings develop.\r\n\r\n@open-quantum-safe/tsc and others, please feel free to discuss here in advance of our next meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041546120","html_url":"https://github.com/open-quantum-safe/tsc/issues/12#issuecomment-2041546120","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/12","id":2041546120,"node_id":"IC_kwDOLITcCM55r4WI","user":{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T18:00:10Z","updated_at":"2024-04-07T18:00:10Z","author_association":"NONE","body":"> Please accept that people working for free on a project where profit-taking, err, \"legal constraints\", has become a major rule changer just can't stomach restrictions on freedom and openness while the entities introducing those restrictions don't substantially step up their contributions -- technical ones, not just procedural ones:\r\n\r\nI want to reiterate that these are there to protect users and contributors to code.  Some users are definitely going to be corporations, and yes, they will benefit from these.  But these protections benefit *anyone* who wants to use the code in some kind of real world deployment, not just \"profit-takers\".  If you look at any other large-scale production cryptography library, they will have some kind of license restrictions and some kind of CLA/DCO policy.\r\n\r\n> If you'd have LF wording for this problem, by all means, please contribute that, @hartm. Maybe something along the lines \"voting members must be able to commit at least x% of their work time to the project\": That way people can meaningfully contribute and drive the project forward by votes based on experience.\r\n\r\nWe have plenty of wording for this, in the form of what other projects have done!  Different projects have taken many different approaches to this, so it would be much better if you all picked than if I wrote something.  One thing:  it's hard to verify that folks are actually committing a certain percent of their time, so this isn't typically used.\r\n\r\nHere's the [Besu maintainer policy](https://github.com/hyperledger/besu/blob/main/MAINTAINERS.md).  It's very explicit about what is required, and the Besu community really likes it.\r\n\r\nOn the other hand, here's the [Fabric maintainer policy](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html#maintainers).  It's a little less detailed, but it works for them too.\r\n\r\nYou can also look at other things, like the [Kubernetes leadership organization](https://github.com/kubernetes/community/blob/master/community-membership.md), although that is much too complicated for what OQS needs at this point.\r\n\r\nIn general, there's probably no need to reinvent the wheel here.  I'd recommend that you poke around, pick a maintainer policy that you generally like, and then tweak it to meet your needs.    \r\n\r\n> Beware: Being maintainer in my eyes (and the core sub projects of OQS) means commitment; particularly for employees it means commitment by their employers to give the employees time to work on this: Very often I have seen statements like \"I don't have agreement by my boss to work on this except in my free time\" or \"there's internal work I have to prioritize higher\".\r\n\r\nThis is also the sentiment of the LF.  If folks don't have time to respond to PRs and other things in a timely manner, they shouldn't be maintainers.  It's not necessarily a bad reflection on these folks that don't have time, but we do ask that folks \"gracefully step down\" when they realize they don't have time to fulfill the responsibilities of being a maintainer.  Most projects prominently list emeritus maintainers as a way of thanking them for all of the work they've done on a project!\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2041546120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T18:00:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37242705081","type":"IssueCommentEvent","actor":{"id":74706004,"login":"pi-314159","display_login":"pi-314159","gravatar_id":"","url":"https://api.github.com/users/pi-314159","avatar_url":"https://avatars.githubusercontent.com/u/74706004?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/114","id":2221225015,"node_id":"PR_kwDOCrBzOM5rech1","number":114,"title":"Falcon Update April 2024","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":34,"created_at":"2024-04-02T19:00:54Z","updated_at":"2024-04-07T18:57:26Z","closed_at":"2024-04-02T22:04:02Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/114","html_url":"https://github.com/open-quantum-safe/boringssl/pull/114","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/114.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/114.patch","merged_at":"2024-04-02T22:04:02Z"},"body":"This update is compatible with liboqs 0.10.0.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/2041569815","html_url":"https://github.com/open-quantum-safe/boringssl/pull/114#issuecomment-2041569815","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114","id":2041569815,"node_id":"IC_kwDOCrBzOM55r-IX","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T18:57:25Z","updated_at":"2024-04-07T18:57:25Z","author_association":"COLLABORATOR","body":"> would it be conceivable you'd simply add this text (also created by the -s option to git commit) to a squash merge PR of upstream commits to satisfy this process\r\n\r\nI don't want to do this because those commits are not created and authored by me. An exception made for OQS-BoringSSL will be the best.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/2041569815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T18:57:26Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37242744109","type":"IssueCommentEvent","actor":{"id":6188943,"login":"vsoftco","display_login":"vsoftco","gravatar_id":"","url":"https://api.github.com/users/vsoftco","avatar_url":"https://avatars.githubusercontent.com/u/6188943?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","id":2228124161,"node_id":"PR_kwDOA-eq3c5r2Y51","number":1751,"title":"Allow windows linking of test programs","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-04-05T14:05:02Z","updated_at":"2024-04-07T19:01:13Z","closed_at":"2024-04-07T17:00:09Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1751","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.patch","merged_at":"2024-04-07T17:00:09Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe kat_kem and kat_sig programs could not be linked when building natively on windows. This was caused by multiple definitions of symbols. By using the `/FORCE:MULTIPLE` compiler option, this is allowed, similar in spirit to what was already used for cross-compiling to Windows.\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1749\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [No] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041571161","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751#issuecomment-2041571161","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","id":2041571161,"node_id":"IC_kwDOA-eq3c55r-dZ","user":{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T19:01:12Z","updated_at":"2024-04-07T19:01:12Z","author_association":"MEMBER","body":"I don't think there's anything that CMAKE... does better, I just pointed out that CMake now has the option (since I bumped into the exact same issue a while ago). The only think CMAKE **may** (although I'not sure) do better is ensuring compatibility across different compilers (say that some other Win compiler comes along, not MSVC). But again, totally fine with this PR as long as it fixes it and works.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041571161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T19:01:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37243082518","type":"IssueCommentEvent","actor":{"id":7438400,"login":"matlimatli","display_login":"matlimatli","gravatar_id":"","url":"https://api.github.com/users/matlimatli","avatar_url":"https://avatars.githubusercontent.com/u/7438400?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","id":2228124161,"node_id":"PR_kwDOA-eq3c5r2Y51","number":1751,"title":"Allow windows linking of test programs","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-04-05T14:05:02Z","updated_at":"2024-04-07T19:35:53Z","closed_at":"2024-04-07T17:00:09Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1751","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1751.patch","merged_at":"2024-04-07T17:00:09Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe kat_kem and kat_sig programs could not be linked when building natively on windows. This was caused by multiple definitions of symbols. By using the `/FORCE:MULTIPLE` compiler option, this is allowed, similar in spirit to what was already used for cross-compiling to Windows.\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1749\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [No] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041579767","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1751#issuecomment-2041579767","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1751","id":2041579767,"node_id":"IC_kwDOA-eq3c55sAj3","user":{"login":"matlimatli","id":7438400,"node_id":"MDQ6VXNlcjc0Mzg0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7438400?v=4","gravatar_id":"","url":"https://api.github.com/users/matlimatli","html_url":"https://github.com/matlimatli","followers_url":"https://api.github.com/users/matlimatli/followers","following_url":"https://api.github.com/users/matlimatli/following{/other_user}","gists_url":"https://api.github.com/users/matlimatli/gists{/gist_id}","starred_url":"https://api.github.com/users/matlimatli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matlimatli/subscriptions","organizations_url":"https://api.github.com/users/matlimatli/orgs","repos_url":"https://api.github.com/users/matlimatli/repos","events_url":"https://api.github.com/users/matlimatli/events{/privacy}","received_events_url":"https://api.github.com/users/matlimatli/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T19:35:51Z","updated_at":"2024-04-07T19:35:51Z","author_association":"CONTRIBUTOR","body":"@vsoftco I didn't know about that option. Thanks for pointing it out, it might come in handy in some situations!\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2041579767/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T19:35:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37244379832","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/114","id":2221225015,"node_id":"PR_kwDOCrBzOM5rech1","number":114,"title":"Falcon Update April 2024","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":35,"created_at":"2024-04-02T19:00:54Z","updated_at":"2024-04-07T21:55:46Z","closed_at":"2024-04-02T22:04:02Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/114","html_url":"https://github.com/open-quantum-safe/boringssl/pull/114","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/114.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/114.patch","merged_at":"2024-04-02T22:04:02Z"},"body":"This update is compatible with liboqs 0.10.0.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/2041621178","html_url":"https://github.com/open-quantum-safe/boringssl/pull/114#issuecomment-2041621178","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/114","id":2041621178,"node_id":"IC_kwDOCrBzOM55sKq6","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T21:55:45Z","updated_at":"2024-04-07T21:55:45Z","author_association":"MEMBER","body":"> > would it be conceivable you'd simply add this text (also created by the -s option to git commit) to a squash merge PR of upstream commits to satisfy this process\r\n> \r\n> I don't want to do this because those commits are not created and authored by me. An exception made for OQS-BoringSSL will be the best.\r\n\r\nI've created https://github.com/open-quantum-safe/tsc/issues/13 to track this issue.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/2041621178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T21:55:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37245118156","type":"IssueCommentEvent","actor":{"id":162028714,"login":"dalibor-rada","display_login":"dalibor-rada","gravatar_id":"","url":"https://api.github.com/users/dalibor-rada","avatar_url":"https://avatars.githubusercontent.com/u/162028714?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/385","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/385/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/385/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/385/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/385","id":2225217308,"node_id":"I_kwDOE_A9l86Eoh8c","number":385,"title":"oqs-provider with openssl speed command - unknown algorithm","user":{"login":"dalibor-rada","id":162028714,"node_id":"U_kgDOCahcqg","avatar_url":"https://avatars.githubusercontent.com/u/162028714?v=4","gravatar_id":"","url":"https://api.github.com/users/dalibor-rada","html_url":"https://github.com/dalibor-rada","followers_url":"https://api.github.com/users/dalibor-rada/followers","following_url":"https://api.github.com/users/dalibor-rada/following{/other_user}","gists_url":"https://api.github.com/users/dalibor-rada/gists{/gist_id}","starred_url":"https://api.github.com/users/dalibor-rada/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dalibor-rada/subscriptions","organizations_url":"https://api.github.com/users/dalibor-rada/orgs","repos_url":"https://api.github.com/users/dalibor-rada/repos","events_url":"https://api.github.com/users/dalibor-rada/events{/privacy}","received_events_url":"https://api.github.com/users/dalibor-rada/received_events","type":"User","site_admin":false},"labels":[{"id":2701983051,"node_id":"MDU6TGFiZWwyNzAxOTgzMDUx","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-04-04T11:25:11Z","updated_at":"2024-04-07T23:13:15Z","closed_at":"2024-04-07T23:13:14Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nCannot use the openssl speed command for postquantum algorithms supported via liboqs with oqs-provider.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nHave a fresh Ubuntu 22.04.3 LTS\r\nliboqs\r\n     $ sudo apt install astyle cmake gcc ninja-build libssl-dev python3-pytest python3-pytest-xdist unzip xsltproc doxygen graphviz \r\n     python3-yaml valgrind\r\n     $ git clone -b main https://github.com/open-quantum-safe/liboqs.git\r\n     $ cd liboqs\r\n     $ mkdir build && cd build\r\n     $ cmake -GNinja ..\r\n     $ ninja\r\n     $ ninja install\r\noqs-provider\r\n     download and unzip latest version 0.5.3\r\n     $ cd into_oqs-provider_folder\r\n     $ scripts/fullbuild.sh\r\n     $ scripts/runtests.sh\r\n     $ cmake --install _build\r\n     edit the openssl.cnf file (https://github.com/open-quantum-safe/oqs-provider/blob/main/USAGE.md#activation, section \r\n     Configuration file)\r\n     $ openssl speed kyber512\r\n\r\n**Expected behavior**\r\nThis set of commands should led to the benchmark of postquantum algorithms via openssl speed command.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu 22.04.3 LTS\r\n - OpenSSL version 3.0.2\r\n - oqsprovider version 0.5.3\r\n\r\n**openssl version**\r\nOpenSSL 3.0.2 15 Mar 2022 (Library: OpenSSL 3.0.2 15 Mar 2022)\r\n**openssl list -providers**\r\nproviders:\r\ndefault\r\nname: OpenSSL Default Provider\r\nversion: 3.0.2\r\nstatus: active\r\noqsprovider\r\nname: OpenSSL OQS Provider\r\nversion: 0.5.3\r\nstatus: active\r\n\r\n![image](https://github.com/open-quantum-safe/oqs-provider/assets/162028714/89d63cf6-91bf-475b-8c15-9aad5dc5a369)\r\n![image](https://github.com/open-quantum-safe/oqs-provider/assets/162028714/7a9cc688-5cd1-443b-aa67-f9b3adf969c7)\r\n\r\nthe runtest.sh script output this:\r\nTest setup:\r\nLD_LIBRARY_PATH=/home/student/oqs-provider-0.5.3/.local/lib\r\nOPENSSL_APP=openssl\r\nOPENSSL_CONF=/home/student/oqs-provider-0.5.3/scripts/openssl-ca.cnf\r\nOPENSSL_MODULES=/home/student/oqs-provider-0.5.3/_build/lib\r\nVersion information:\r\nOpenSSL 3.0.2 15 Mar 2022 (Library: OpenSSL 3.0.2 15 Mar 2022)\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.0.2\r\n    status: active\r\n    build info: 3.0.2\r\n    gettable provider parameters:\r\n      name: pointer to a UTF8 encoded string (arbitrary size)\r\n      version: pointer to a UTF8 encoded string (arbitrary size)\r\n      buildinfo: pointer to a UTF8 encoded string (arbitrary size)\r\n      status: integer (arbitrary size)\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.3\r\n    status: active\r\n    build info: OQS Provider v.0.5.3 () based on liboqs v.0.10.1-dev\r\n    gettable provider parameters:\r\n      name: pointer to a UTF8 encoded string (arbitrary size)\r\n      version: pointer to a UTF8 encoded string (arbitrary size)\r\n      buildinfo: pointer to a UTF8 encoded string (arbitrary size)\r\n      status: integer (arbitrary size)\r\nCert gen/verify, CMS sign/verify, CA tests for all enabled OQS signature algorithms commencing: \r\n.......................\r\nExternal interop tests commencing\r\n Cloudflare:\r\nkex=X25519Kyber768Draft00\r\nkex=X25519Kyber512Draft00\r\nTest project /home/student/oqs-provider-0.5.3/_build\r\n    Start 1: oqs_signatures\r\n1/5 Test #1: oqs_signatures ...................   Passed   10.81 sec\r\n    Start 2: oqs_kems\r\n2/5 Test #2: oqs_kems .........................   Passed    0.73 sec\r\n    Start 3: oqs_groups\r\n3/5 Test #3: oqs_groups .......................   Passed    1.06 sec\r\n    Start 4: oqs_tlssig\r\n4/5 Test #4: oqs_tlssig .......................   Passed    0.01 sec\r\n    Start 5: oqs_endecode\r\n5/5 Test #5: oqs_endecode .....................   Passed   28.83 sec\r\n\r\n100% tests passed, 0 tests failed out of 5\r\n\r\nTotal Test time (real) =  41.44 sec\r\n\r\nAll oqsprovider tests passed.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/385/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2041639900","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/385#issuecomment-2041639900","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/385","id":2041639900,"node_id":"IC_kwDOE_A9l855sPPc","user":{"login":"dalibor-rada","id":162028714,"node_id":"U_kgDOCahcqg","avatar_url":"https://avatars.githubusercontent.com/u/162028714?v=4","gravatar_id":"","url":"https://api.github.com/users/dalibor-rada","html_url":"https://github.com/dalibor-rada","followers_url":"https://api.github.com/users/dalibor-rada/followers","following_url":"https://api.github.com/users/dalibor-rada/following{/other_user}","gists_url":"https://api.github.com/users/dalibor-rada/gists{/gist_id}","starred_url":"https://api.github.com/users/dalibor-rada/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dalibor-rada/subscriptions","organizations_url":"https://api.github.com/users/dalibor-rada/orgs","repos_url":"https://api.github.com/users/dalibor-rada/repos","events_url":"https://api.github.com/users/dalibor-rada/events{/privacy}","received_events_url":"https://api.github.com/users/dalibor-rada/received_events","type":"User","site_admin":false},"created_at":"2024-04-07T23:13:15Z","updated_at":"2024-04-07T23:13:15Z","author_association":"NONE","body":"Yep, you're right. Upgrade to OpenSSL 3.2.1 helped. Thank you for effort :)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2041639900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-04-07T23:13:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
