{"id":"37523242466","type":"PullRequestReviewCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1568135320","pull_request_review_id":2004885460,"id":1568135320,"node_id":"PRRC_kwDOA-eq3c5dd9iY","diff_hunk":"@@ -0,0 +1,1435 @@\n+// SPDX-License-Identifier: MIT\n+\n+#include <assert.h>\n+#include <stdlib.h>\n+#if defined(_WIN32)\n+#include <string.h>\n+#define strcasecmp _stricmp\n+#else\n+#include <strings.h>\n+#endif\n+\n+#include <oqs/oqs.h>\n+\n+#ifdef OQS_ENABLE_SIG_STFL_XMSS\n+#include <oqs/sig_stfl_xmss.h>\n+#endif // OQS_ENABLE_SIG_STFL_XMSS\n+\n+#ifdef OQS_ENABLE_SIG_STFL_LMS\n+#include <oqs/sig_stfl_lms.h>\n+#endif // OQS_ENABLE_SIG_STFL_LMS\n+\n+OQS_API const char *OQS_SIG_STFL_alg_identifier(size_t i) {\n+\n+\tconst char *a[OQS_SIG_STFL_algs_length] = {\n+\t\t// XMSS\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h20,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_12,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_12,\n+\t\t// LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w8,\n+\n+\t\t//2-Level LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8,\n+\t};\n+\n+\tif (i >= OQS_SIG_STFL_algs_length) {\n+\t\treturn NULL;\n+\t} else {\n+\t\treturn a[i];\n+\t}\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_count(void) {\n+\treturn OQS_SIG_STFL_algs_length;\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_is_enabled(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\t//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn 0;\n+\t}\n+}\n+\n+OQS_API OQS_SIG_STFL *OQS_SIG_STFL_new(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h28_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h28_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h20_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn NULL;\n+\t}\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_keypair(const OQS_SIG_STFL *sig, uint8_t *public_key, OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)public_key;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->keypair == NULL || sig->keypair(public_key, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+\treturn OQS_ERROR;\n+#endif\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sign(const OQS_SIG_STFL *sig, uint8_t *signature, size_t *signature_len, const uint8_t *message,\n+                                     size_t message_len, OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)signature;\n+\t(void)signature_len;\n+\t(void)message;\n+\t(void)message_len;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sign == NULL || sig->sign(signature, signature_len, message, message_len, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_verify(const OQS_SIG_STFL *sig, const uint8_t *message, size_t message_len, const uint8_t *signature, size_t signature_len, const uint8_t *public_key) {\n+\tif (sig == NULL || sig->verify == NULL || sig->verify(message, message_len, signature, signature_len, public_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sigs_remaining(const OQS_SIG_STFL *sig, unsigned long long *remain, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)remain;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sigs_remaining == NULL || sig->sigs_remaining(remain, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif //OQS_ALLOW_SFTL_KEY_AND_SIG_GEN \n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sigs_total(const OQS_SIG_STFL *sig, unsigned long long *max, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)max;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sigs_total == NULL || sig->sigs_total(max, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif //OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+}\n+\n+OQS_API void OQS_SIG_STFL_free(OQS_SIG_STFL *sig) {\n+\tOQS_MEM_insecure_free(sig);\n+}\n+\n+// ================================= OQS_SIG_STFL_SECRET_KEY FUNCTION ===============================================\n+\n+OQS_API OQS_SIG_STFL_SECRET_KEY *OQS_SIG_STFL_SECRET_KEY_new(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W2_H10_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_H10_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h20_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H20_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn NULL;\n+\t}\n+}\n+\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_free(OQS_SIG_STFL_SECRET_KEY *sk) {\n+\tif (sk == NULL || sk->free_key == NULL) {\n+\t\treturn;\n+\t}\n+\n+\t/* Call object specific free */\n+\tsk->free_key(sk);\n+\n+\t/* Free sk object */\n+\tOQS_MEM_secure_free(sk, sizeof(sk));\n+\tsk = NULL;\n+}","path":"src/sig_stfl/sig_stfl.c","commit_id":"fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79","original_commit_id":"af1077034a34cd7f2173a4bb6b9c79a9328e07e5","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"body":"So currently if I want to deserialize a secret key I need to give it an `OQS_SIG_STFL *` argument. If I want that struct to live for awhile, I would probably do something like `OQS_SIG_STFL *sig = malloc(sizeof(*sig));`. However, let's say that `deserialize` fails for some reason. Intuitively I could just call `free(sig)`, however I feel like it should also be valid to call `OQS_SIG_STFL_free(sig)`. With how it's implemented currently, it would not free the struct unless `free_key` was not null (or in other words deserialize succeeded).\r\n\r\nMy suggestions above ensures that the `OQS_SIG_STFL` being pointed to is always freed, even if it's not initialized. By changing the argument from a single pointer to a double pointer, this allows us to consume the `OQS_SIG_STFL *` and once `OQS_SIG_STFL_free` returns, ensures that it points to `NULL` instead of its old address.\r\n\r\nLine 1351 in the existing implementation is essentially a no-op. Here's an example!\r\n![Screenshot 2024-04-16 at 8 38 21 PM](https://github.com/open-quantum-safe/liboqs/assets/6541356/6ec30076-e506-4bc4-8f0f-49e9ecd2d564)","created_at":"2024-04-17T02:39:06Z","updated_at":"2024-04-17T02:39:06Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1568135320","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1568135320"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1568135320"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1568135320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":1341,"original_start_line":1341,"start_side":"RIGHT","line":1352,"original_line":1352,"side":"RIGHT","in_reply_to_id":1566359124,"original_position":1352,"position":1352,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-04-17T02:39:06Z","closed_at":null,"merged_at":null,"merge_commit_sha":"5791c4ab1c98735768337421c787991ec999e877","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/25","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/25","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/25/labels","id":10823145,"node_id":"MI_kwDOA-eq3c4ApSXp","number":25,"title":"0.11.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":0,"state":"open","created_at":"2024-04-16T00:06:48Z","updated_at":"2024-04-16T00:08:11Z","due_on":null,"closed_at":null},"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-04-16T17:07:20Z","pushed_at":"2024-04-16T19:30:09Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143236,"stargazers_count":1609,"watchers_count":1609,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":399,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":43,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":true,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":399,"open_issues":43,"watchers":1609,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"6f0c46187c94f763c5f4cd703ff633c4b28f3035","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-04-16T17:07:20Z","pushed_at":"2024-04-16T19:30:09Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143236,"stargazers_count":1609,"watchers_count":1609,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":399,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":43,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":true,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":399,"open_issues":43,"watchers":1609,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-04-17T02:39:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37523262698","type":"PullRequestReviewCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1568135950","pull_request_review_id":2004886272,"id":1568135950,"node_id":"PRRC_kwDOA-eq3c5dd9sO","diff_hunk":"@@ -0,0 +1,177 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+\n+#include <oqs/oqs.h>\n+#include <string.h>\n+#include <stdbool.h>\n+#include \"sig_stfl_xmss.h\"\n+\n+#if defined(__GNUC__) || defined(__clang__)\n+#define XMSS_UNUSED_ATT __attribute__((unused))\n+#else\n+#define XMSS_UNUSED_ATT\n+#endif\n+\n+extern inline OQS_SIG_STFL_SECRET_KEY *OQS_SECRET_KEY_XMSS_new(size_t length_secret_key) {\n+\n+\t// Initialize the secret key in the heap with adequate memory\n+\tOQS_SIG_STFL_SECRET_KEY *sk = malloc(sizeof(OQS_SIG_STFL_SECRET_KEY));","path":"src/sig_stfl/xmss/sig_stfl_xmss_secret_key_functions.c","commit_id":"fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79","original_commit_id":"af1077034a34cd7f2173a4bb6b9c79a9328e07e5","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"body":"Ah, we should probably add an `OQS_MEM_[m]alloc` for completeness, but for now nevermind. :)","created_at":"2024-04-17T02:40:09Z","updated_at":"2024-04-17T02:40:09Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1568135950","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1568135950"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1568135950"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1568135950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":17,"original_line":17,"side":"RIGHT","in_reply_to_id":1566371538,"original_position":17,"position":17,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-04-17T02:40:09Z","closed_at":null,"merged_at":null,"merge_commit_sha":"5791c4ab1c98735768337421c787991ec999e877","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/25","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/25","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/25/labels","id":10823145,"node_id":"MI_kwDOA-eq3c4ApSXp","number":25,"title":"0.11.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":0,"state":"open","created_at":"2024-04-16T00:06:48Z","updated_at":"2024-04-16T00:08:11Z","due_on":null,"closed_at":null},"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-04-16T17:07:20Z","pushed_at":"2024-04-16T19:30:09Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143236,"stargazers_count":1609,"watchers_count":1609,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":399,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":43,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":true,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":399,"open_issues":43,"watchers":1609,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"6f0c46187c94f763c5f4cd703ff633c4b28f3035","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-04-16T17:07:20Z","pushed_at":"2024-04-16T19:30:09Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143236,"stargazers_count":1609,"watchers_count":1609,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":399,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":43,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":true,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":399,"open_issues":43,"watchers":1609,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-04-17T02:40:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"37556634282","type":"PullRequestReviewCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1569434934","pull_request_review_id":2007010348,"id":1569434934,"node_id":"PRRC_kwDOA-eq3c5di602","diff_hunk":"@@ -0,0 +1,1435 @@\n+// SPDX-License-Identifier: MIT\n+\n+#include <assert.h>\n+#include <stdlib.h>\n+#if defined(_WIN32)\n+#include <string.h>\n+#define strcasecmp _stricmp\n+#else\n+#include <strings.h>\n+#endif\n+\n+#include <oqs/oqs.h>\n+\n+#ifdef OQS_ENABLE_SIG_STFL_XMSS\n+#include <oqs/sig_stfl_xmss.h>\n+#endif // OQS_ENABLE_SIG_STFL_XMSS\n+\n+#ifdef OQS_ENABLE_SIG_STFL_LMS\n+#include <oqs/sig_stfl_lms.h>\n+#endif // OQS_ENABLE_SIG_STFL_LMS\n+\n+OQS_API const char *OQS_SIG_STFL_alg_identifier(size_t i) {\n+\n+\tconst char *a[OQS_SIG_STFL_algs_length] = {\n+\t\t// XMSS\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h20,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_12,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_12,\n+\t\t// LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w8,\n+\n+\t\t//2-Level LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8,\n+\t};\n+\n+\tif (i >= OQS_SIG_STFL_algs_length) {\n+\t\treturn NULL;\n+\t} else {\n+\t\treturn a[i];\n+\t}\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_count(void) {\n+\treturn OQS_SIG_STFL_algs_length;\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_is_enabled(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\t//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn 0;\n+\t}\n+}\n+\n+OQS_API OQS_SIG_STFL *OQS_SIG_STFL_new(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h28_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h28_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h20_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn NULL;\n+\t}\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_keypair(const OQS_SIG_STFL *sig, uint8_t *public_key, OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)public_key;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->keypair == NULL || sig->keypair(public_key, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+\treturn OQS_ERROR;\n+#endif\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sign(const OQS_SIG_STFL *sig, uint8_t *signature, size_t *signature_len, const uint8_t *message,\n+                                     size_t message_len, OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)signature;\n+\t(void)signature_len;\n+\t(void)message;\n+\t(void)message_len;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sign == NULL || sig->sign(signature, signature_len, message, message_len, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_verify(const OQS_SIG_STFL *sig, const uint8_t *message, size_t message_len, const uint8_t *signature, size_t signature_len, const uint8_t *public_key) {\n+\tif (sig == NULL || sig->verify == NULL || sig->verify(message, message_len, signature, signature_len, public_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sigs_remaining(const OQS_SIG_STFL *sig, unsigned long long *remain, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)remain;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sigs_remaining == NULL || sig->sigs_remaining(remain, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif //OQS_ALLOW_SFTL_KEY_AND_SIG_GEN \n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sigs_total(const OQS_SIG_STFL *sig, unsigned long long *max, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)max;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sigs_total == NULL || sig->sigs_total(max, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif //OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+}\n+\n+OQS_API void OQS_SIG_STFL_free(OQS_SIG_STFL *sig) {\n+\tOQS_MEM_insecure_free(sig);\n+}\n+\n+// ================================= OQS_SIG_STFL_SECRET_KEY FUNCTION ===============================================\n+\n+OQS_API OQS_SIG_STFL_SECRET_KEY *OQS_SIG_STFL_SECRET_KEY_new(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W2_H10_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_H10_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h20_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H20_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn NULL;\n+\t}\n+}\n+\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_free(OQS_SIG_STFL_SECRET_KEY *sk) {\n+\tif (sk == NULL || sk->free_key == NULL) {\n+\t\treturn;\n+\t}\n+\n+\t/* Call object specific free */\n+\tsk->free_key(sk);\n+\n+\t/* Free sk object */\n+\tOQS_MEM_secure_free(sk, sizeof(sk));\n+\tsk = NULL;\n+}","path":"src/sig_stfl/sig_stfl.c","commit_id":"fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79","original_commit_id":"af1077034a34cd7f2173a4bb6b9c79a9328e07e5","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"body":"To address the problem, \"what if `free_key` is not assigned or NULL?\"\r\n\r\nIt's assigned at the struct creation. \r\n\r\nIn `sig_stfl_xmss_secret_key_functions.c`: \r\n\r\n```c\r\n// Set Secret Key free function\r\nsk->free_key = OQS_SECRET_KEY_XMSS_free;\r\n```\r\n\r\nIt's assigned a specific function to clean up XMSS key. \r\nSimilarly, at `sig_stfl_lms.c`: \r\n\r\n```c\r\nsk->free_key = OQS_SECRET_KEY_LMS_free;\r\n```\r\nTo conclude, `free_key` is assigned at the creation of struct `OQS_SIG_STFL_SECRET_KEY`. \r\nSo when `OQS_SIG_STFL_free(x)` is called, it cleans up all the underlying data in the struct and the struct itself. \r\nThe `free()` method wouldn't work, simply this struct is more complicated than a simple `free()`. \r\n\r\nDo you agree? We can talk about the use of double pointer later.  \r\n\r\n\r\n```\r\nIf I want that struct to live for awhile, I would probably do something like OQS_SIG_STFL *sig = malloc(sizeof(*sig));. However, let's say that deserialize fails for some reason. Intuitively I could just call free(sig), however I feel like it should also be valid to call OQS_SIG_STFL_free(sig). \r\n```\r\n\r\nHow about you create a new SIG_STFL object by `OQS_SIG_STFL_SECRET_KEY_new` instead of plain `malloc(sizeof(x))`? \r\n","created_at":"2024-04-17T19:54:00Z","updated_at":"2024-04-17T19:54:00Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1569434934","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1569434934"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1569434934"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1569434934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":1341,"original_start_line":1341,"start_side":"RIGHT","line":1352,"original_line":1352,"side":"RIGHT","in_reply_to_id":1566359124,"original_position":1352,"position":1352,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-04-17T19:54:00Z","closed_at":null,"merged_at":null,"merge_commit_sha":"5791c4ab1c98735768337421c787991ec999e877","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/25","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/25","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/25/labels","id":10823145,"node_id":"MI_kwDOA-eq3c4ApSXp","number":25,"title":"0.11.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":0,"state":"open","created_at":"2024-04-16T00:06:48Z","updated_at":"2024-04-16T00:08:11Z","due_on":null,"closed_at":null},"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-04-17T19:05:54Z","pushed_at":"2024-04-16T19:30:09Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143236,"stargazers_count":1611,"watchers_count":1611,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":399,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":43,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":true,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":399,"open_issues":43,"watchers":1611,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"6f0c46187c94f763c5f4cd703ff633c4b28f3035","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-04-17T19:05:54Z","pushed_at":"2024-04-16T19:30:09Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143236,"stargazers_count":1611,"watchers_count":1611,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":399,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":43,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":true,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":399,"open_issues":43,"watchers":1611,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fbb09d1b4eafc14fe231dbe8da8c4d60b9bdcd79"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-04-17T19:54:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
