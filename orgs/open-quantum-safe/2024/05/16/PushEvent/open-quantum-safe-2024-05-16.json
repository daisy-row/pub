{"id":"38433612982","type":"PushEvent","actor":{"id":466142,"login":"ryjones","display_login":"ryjones","gravatar_id":"","url":"https://api.github.com/users/ryjones","avatar_url":"https://avatars.githubusercontent.com/u/466142?"},"repo":{"id":282304934,"name":"open-quantum-safe/www","url":"https://api.github.com/repos/open-quantum-safe/www"},"payload":{"repository_id":282304934,"push_id":18446830655,"size":1,"distinct_size":1,"ref":"refs/heads/main","head":"5c56d9eb25434fd1c56e24e5ddb4f016b221736b","before":"a7238309d21c5e7ed0931df636d66a2b50905680","commits":[{"sha":"5c56d9eb25434fd1c56e24e5ddb4f016b221736b","author":{"email":"49699333+dependabot[bot]@users.noreply.github.com","name":"dependabot[bot]"},"message":"Bump _includes/liboqs from `36be574` to `a5ec23c`\n\nBumps [_includes/liboqs](https://github.com/open-quantum-safe/liboqs) from `36be574` to `a5ec23c`.\n- [Release notes](https://github.com/open-quantum-safe/liboqs/releases)\n- [Commits](https://github.com/open-quantum-safe/liboqs/compare/36be57445d8ca53f7095160fde548efe82ace09d...a5ec23cf19763d36a558b8358345823ae45d57e5)\n\n---\nupdated-dependencies:\n- dependency-name: _includes/liboqs\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/www/commits/5c56d9eb25434fd1c56e24e5ddb4f016b221736b"}]},"public":true,"created_at":"2024-05-16T11:01:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"38433628173","type":"PushEvent","actor":{"id":466142,"login":"ryjones","display_login":"ryjones","gravatar_id":"","url":"https://api.github.com/users/ryjones","avatar_url":"https://avatars.githubusercontent.com/u/466142?"},"repo":{"id":282304934,"name":"open-quantum-safe/www","url":"https://api.github.com/repos/open-quantum-safe/www"},"payload":{"repository_id":282304934,"push_id":18446837980,"size":1,"distinct_size":1,"ref":"refs/heads/main","head":"fcd22782d84e691e381a8e4bf8cfb1270a8f7ef1","before":"5c56d9eb25434fd1c56e24e5ddb4f016b221736b","commits":[{"sha":"fcd22782d84e691e381a8e4bf8cfb1270a8f7ef1","author":{"email":"49699333+dependabot[bot]@users.noreply.github.com","name":"dependabot[bot]"},"message":"Bump just-the-docs from 0.5.4 to 0.8.2\n\nBumps [just-the-docs](https://github.com/just-the-docs/just-the-docs) from 0.5.4 to 0.8.2.\n- [Release notes](https://github.com/just-the-docs/just-the-docs/releases)\n- [Changelog](https://github.com/just-the-docs/just-the-docs/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/just-the-docs/just-the-docs/commits)\n\n---\nupdated-dependencies:\n- dependency-name: just-the-docs\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/www/commits/fcd22782d84e691e381a8e4bf8cfb1270a8f7ef1"}]},"public":true,"created_at":"2024-05-16T11:02:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"38446827065","type":"PushEvent","actor":{"id":74706004,"login":"pi-314159","display_login":"pi-314159","gravatar_id":"","url":"https://api.github.com/users/pi-314159","avatar_url":"https://avatars.githubusercontent.com/u/74706004?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"repository_id":179335992,"push_id":18453080394,"size":131,"distinct_size":131,"ref":"refs/heads/master","head":"c4e62514e7f14ce5325226ccf9472617d810bcd0","before":"e11ac27e37ce100c2ad197a73ece9b46bf46737c","commits":[{"sha":"1e8461cc151960ad941ee7dd0e0bb13337e3c556","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"runner: Use go:embed\n\nThis removes the need to ship the PEM files with the built runner.\nInstead we can use go:embed to pick up the key files. We do, annoyingly,\nneed to write the Channel ID file to a temporary, but it's not a huge\ndeal. When/if we rework all this to JSON, we can avoid this.\n\nChange-Id: Ie0d187a5396546dc157906430639c26b3cc59ca2\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66627\nReviewed-by: Bob Beck <bbe@google.com>\nAuto-Submit: David Benjamin <davidben@google.com>\nCommit-Queue: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/1e8461cc151960ad941ee7dd0e0bb13337e3c556"},{"sha":"e3af7710ed006e228382c8041782cba81ff4040a","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"runner: Remove the ability to configure multiple certificates\n\nWhile we do want to add this to the shim and real TLS stack, we have no\nneed to configure this on the runner. This is a remnant of runner being\na production TLS stack. We only ever configure one certificate because\nwe know what we expect the peer to send.\n\nChange-Id: Idaafc66a2a7f83a929a6a61c19b97cdef158c534\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66647\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/e3af7710ed006e228382c8041782cba81ff4040a"},{"sha":"88a537fe4e99d45804a832fbab27a938f995336d","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Fold ssl_add_cert_chain into its caller\n\nI'm not sure why we pulled that out separately. Also remove the\nERR_R_INTERNAL_ERRORs. Those are a remnant of when CBB did not\nparticipate in the error queue and we wanted to leave something there.\n\nChange-Id: Ic7db602ddce6e6fa873c892f742126d9a628494c\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66547\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/88a537fe4e99d45804a832fbab27a938f995336d"},{"sha":"8037383527cd5105f38ef328db5171815b9c3ea4","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Use slices.Contains in ssl/test/runner\n\nMinor cleanup afforded by Go 1.21\n\nChange-Id: I49a0f257f2585e54159014f1f442497a816e6589\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66548\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/8037383527cd5105f38ef328db5171815b9c3ea4"},{"sha":"9f376b0694dfb8528fa2200369b48632563e972f","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Make DelegatedCredentials-KeyMismatch test less confusing\n\nThis is passing in a different TLS version, but the TLS version is both\nnonsense and doesn't figure into the delegated credential anyway. All\nthis test is doing is generating a different keypair and mixing them up.\nProbably we should move it to ssl_test, as it's not really testing\nanything about the protocol, but I've just left it alone and fixed the\ntest.\n\nAlso fix another issue in the test: the getSigner / signMessage chord\nshould just be a plain signMessage call. There were a few other issues\nof that shape, but they'll be fixed in a follow-up change because they\nreveal a deeper problem with\nhttps://boringssl-review.googlesource.com/c/34884\n\nChange-Id: I090b41a081f694b4ff8d97f3895645d6a620904d\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66549\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/9f376b0694dfb8528fa2200369b48632563e972f"},{"sha":"efad2bfc83544bb926921de61baf6f962e685671","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Fix delegated credential signature algorithm handling\n\nhttps://boringssl-review.googlesource.com/c/34884 tried to update to the\nnewer DC draft, but didn't quite do so. In that update, DCs\novercomplicated the signature algorithm negotiation so that there are\ntwo different signature algorithm lists, used in different contexts.\n\nThe existing signature_algorithms extension is used to verify the\nsignature *on* the DC, made by the end-entity certificate. On the server\nside, we should be using that to decide whether to use the DC, and we\nweren't.\n\nThe new delegated_credentials extension contains another sigalg list.\nThat is used to verify the signature *by* the DC, in the\nCertificateVerify message. (This means DC changes the operative sigalg\nlist for the CertificateVerify message, which is quite a mess.) On the\nserver side, the above CL mixed things up. When deciding whether to use\nDCs, it checked the correct list. When actually using DCs, it checked\nthe wrong one. As a result, any time the DC list wasn't a subset of the\nmain list, the connection would just break!\n\nFix both of these, in preparation for redoing DCs over the upcoming\nSSL_CREDENTIAL mechanism.\n\nThankfully we don't support one direction of DC usage (authenticating in\nC++ and verifying in Go), so there are fewer places to worry about\nmixing this up. Given this overcomplication, I'm now much, much less\ninclined to ever support DCs as a client, without an rfc9345bis to redo\nthis.\n\nBug: 249\nChange-Id: Id5257e89a6c8daf1635757be473c45029492d420\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66550\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/efad2bfc83544bb926921de61baf6f962e685671"},{"sha":"c9a9d8d5a90b55bea3ce019465821478e7036077","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Forbid RSA delegated credentials\n\nRFC 9345 has this bizarre special case forbiding the rsaEncryption OID\nfor delegated credentials. This doesn't make much sense as DCs already\nconstrain to a single signature algorithm. In fact, they didn't need to\nuse SPKIs at all and could have just encoded the type-specific values.\n\nNonetheless, this is where the spec went up. We have long rejected the\nRSASSA-PSS OID as being unusably complex, so this effectively means we\nwill never permit RSA delegated credentials.\n\nThis was another oversight in\nhttps://boringssl-review.googlesource.com/c/34884. Fix it separately\nbefore everything is reworked to SSL_CREDENTIAL.\n\nBug: 249\nChange-Id: I7eae1e8da9da8052b8d985e78388ef8f2b235942\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66567\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/c9a9d8d5a90b55bea3ce019465821478e7036077"},{"sha":"ad914954425b6f095bc974784c088ec00b0be8f2","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Slightly simplify ssl_x509.cc\n\nWe've got a few too many of these set1/set0 wrappers.\n\nChange-Id: I4bde492b1a2a90a151b26800076d085f7122f623\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66607\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/ad914954425b6f095bc974784c088ec00b0be8f2"},{"sha":"f4ac688b2bc19a5675dfd9cc17e796a9b8b692af","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Make bssl_shim's setup logic infallible\n\nTrying to handle malloc failures here is a bit tedious. Just suppress\nmalloc failures because nothing useful can progress when we can't even\nallocate ex_data.\n\nChange-Id: Ieaf417bcf9285783a76097319782282ce74e4734\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66648\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/f4ac688b2bc19a5675dfd9cc17e796a9b8b692af"},{"sha":"fc1f5213b61edc1da123c36e14ed3f7a70f8bb1b","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Align CRYPTO_get_ex_new_index with the public API's calling convention\n\nAlthough we usually prefer not to use special -1 returns for errors, the\npublic API does this across the board. Making the internal function\ndifferent doesn't do much good.\n\nChange-Id: I6bfe8c9d989da81affeb5cb652de8d3edcbf5efa\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66649\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/fc1f5213b61edc1da123c36e14ed3f7a70f8bb1b"},{"sha":"f1918380c4e21c84d203234ecefc645061befc9f","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"runner: Rename CertificateChain to Credential\n\nAfter https://boringssl-review.googlesource.com/c/boringssl/+/62565 just\nrenamed it. :-)\n\nThis is in preparation for the type being used to test the\nSSL_CREDENTIAL machinery. Since we'll be using this to specify a\ncredential on the shim, let's just make the name match.\n\nBug: 249\nChange-Id: I03e95d120266ccef2111f9bff4c97cef30deb7d3\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66667\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/f1918380c4e21c84d203234ecefc645061befc9f"},{"sha":"665194823b7e3973d988bc5d2ca1c2c635c1a4e8","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"runner: Configure all relevant fields from the Credential type\n\nThis is in preparation for configuring multiple Credential objects on\nthe shim in tests. As part of this, I've removed the OCSP response and\nSCT list from the default credentials and made the tests that need them\nexplicitly configure credentials with them.\n\nBug: 249\nChange-Id: I4623a55e184af18fbd9ac16261eaa6c4e41c69c1\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66668\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/665194823b7e3973d988bc5d2ca1c2c635c1a4e8"},{"sha":"2fb5cdb6c44506442fce110c2d3903a880888dfb","author":{"email":"bbe@google.com","name":"Bob Beck"},"message":"Move spx from internal to include/openssl/experimental\n\nChange-Id: I5c8db3bbca774c7f503538b43f79077421574b0f\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66487\nReviewed-by: Adam Langley <agl@google.com>\nCommit-Queue: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/2fb5cdb6c44506442fce110c2d3903a880888dfb"},{"sha":"4e8a84758d65656f3db91a609f6eaa0219999bbb","author":{"email":"agl@chromium.org","name":"Adam Langley"},"message":"Tidy up Rust HPKE binding.\n\nThe doc test didn't compile and needs support for generating keys in\norder to be a good example. Also bind all the AEADs that we support, and\nhave the encapsulated key be a second return value when creating a\nsender, rather than carrying it in memory for the whole lifetime.\n\nChange-Id: I1533560a925d4e239eedbfa0f4213d9e79085b77\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66527\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: Adam Langley <agl@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/4e8a84758d65656f3db91a609f6eaa0219999bbb"},{"sha":"9b34a3224062c456ff0d0b77fd9a34c5ad08dfea","author":{"email":"guillaumee@google.com","name":"Guillaume Endignoux"},"message":"Add a Dilithium implementation.\n\nThis is a reference implementation, not intended to be optimized, but\nreasonably efficient to be usable and (best-effort) constant time.\n\nChange-Id: I47489b566f65e946edd519aa168aee359d1e9f1a\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/63685\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: Adam Langley <agl@google.com>\nReviewed-by: Adam Langley <agl@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/9b34a3224062c456ff0d0b77fd9a34c5ad08dfea"},{"sha":"69eec38a25a709553db67e5cba43b43c23e26848","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"runner: Add a test for hint mismatch due to public key\n\nThe implementation itself does check for a match, but we never tested\nit. I suspect I omitted it because, in TLS 1.3, that check is actually\nredundant. However, in TLS 1.2, it's load-bearing.\n\nChange-Id: I51ed0b2b554ff2090b360db2c60e22ca0afe0c89\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66669\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/69eec38a25a709553db67e5cba43b43c23e26848"},{"sha":"60c2867092af66bbe369f00d8214b6d06fcb376a","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Check client certificate types in TLS <= 1.2\n\nTLS <= 1.2 servers indicate supported client certificate key types with\na certificate_types field in the CertificateRequest. Historically, we've\njust ignored this field, because we've always outsourced certificate\nselection to the caller anyway. This meant that, if you configured an\nRSA client certificate in response to a server that requested only ECDSA\ncertificates, we would happily send the certificate and leave it to the\nserver to decide if it was happy.\n\nStrictly speaking, this was in violation of RFC 5246:\n\n   -  The end-entity certificate provided by the client MUST contain a\n      key that is compatible with certificate_types. [...]\n\nAlthough prior TLS versions didn't say anything useful about this either\nway.\n\nOnce we move certificate selection into the library, we'll want to start\nevaluating supported algorithms ourselves. A natural implementation of\nit will, as a side effect, cause us to enforce this match, even when\nonly a single certificate is configured. Since this is unlikely to have\nany real compatibility impact (every TLS server I've seen just hardcodes\nthis list), let's just try turning it on. On the off chance it does\nbreak someone, I've left a flag, SSL_set_check_client_certificate_type,\nfor folks to turn this check off. The flag will most likely be\nunnecessary, in which case we can retire it after a few months.\n\nIf this does cause a problem, we can opt to turn it off for the default\ncertificate, or only enable it when multiple certificates are\nconfigured, or lean on the sigalgs list (doesn't work for 1.0/1.1), but\nthese all result in some slightly suboptimal behavior, so I think we\nshould treat them as contingency plans.\n\nUpdate-Note: A TLS 1.2 (or below) client, using client certificates,\nconnecting to a TLS server which doesn't support its certificate type\nwill now fail the connection slightly earlier, rather than sending the\ncertificate and waiting for the server to reject it. The connection\nshould fail either way, but now it will fail earlier with\nSSL_R_UNKNOWN_CERTIFICATE_TYPE. If the server was buggy and did not\ncorrectly advertise its own capabilities (very very unlikely), this may\ncause a connection to fail despite previously succeeding. We have\nincluded a temporary API, SSL_set_check_client_certificate_type, to\ndisable this behavior in the unlikely event this has any impact, but\nplease contact the BoringSSL team if you need it, as it will interfere\nwith improvements down the line.\n\nThis change does not affect servers requesting client certificates, only\nclients sending them.\n\nBug: 249\nChange-Id: I159bc444c4ee79fbe5c476d4253b48d58d2538be\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66687\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/60c2867092af66bbe369f00d8214b6d06fcb376a"},{"sha":"e202e51cb0912f36dafbd2e67cf04d6ec82f3180","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Inline CBS_init, CBS_data, and CBS_len\n\nThese are very basic accessors and we'll never make CBS opaque. Just\ninline them so the compiler can optimize around them.\n\nChange-Id: I65442acb9a89a611082c7e0c82b365c78adae7f4\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66727\nAuto-Submit: David Benjamin <davidben@google.com>\nReviewed-by: Bob Beck <bbe@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/e202e51cb0912f36dafbd2e67cf04d6ec82f3180"},{"sha":"9280f153df0e4c651d658fb1f137dfc18136144e","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Check ECDSA curves in TLS 1.2 servers\n\nIn TLS 1.2 and below, the supported_curves list simultaneously contrains\nECDH and ECDSA. Since BoringSSL, previously, did not handle ECDSA\ncertificate selection in the library, we ignored the latter and left it\nto the callers. If configured with an ECDSA certificate that didn't\nmatch the peer's curve list, we proceeded anyway, and left it to the\nclient to reject the connection.\n\nThis contradicts RFC 8422, which says:\n\n   The server constructs an appropriate certificate chain and conveys it\n   to the client in the Certificate message.  If the client has used a\n   Supported Elliptic Curves Extension, the public key in the server's\n   certificate MUST respect the client's choice of elliptic curves.  A\n   server that cannot satisfy this requirement MUST NOT choose an ECC\n   cipher suite in its ServerHello message.)\n\nAs with the previous client certificate change, once we move certificate\nselection into the library, we'll need to evaluate this ourselves. A\nnatural implementation of it will, as a side effect, cause us to enforce\nthis match, even when only a single certificate is configured. This CL\nlands that behavior change ahead of time and, in case there are\ncompatibility impats, leaves a flag, SSL_set_check_ecdsa_curve, to\nrestore the old behavior. If the change goes through fine, we can retire\nthe flag after a few months.\n\nIf this does cause a problem, we can opt to turn it off for the default\ncertificate, or only enable it when multiple certificates are\nconfigured, but these all result in some slightly suboptimal behavior,\nso I think we should treat them as contingency plans.\n\nTo help debugging, I gave this a dedicated error, though doing so is a\nlittle tricky because of the PSK fallback. (See the\nCheckECDSACurve-PSK-TLS12 test.)\n\nUpdate-Note: A TLS 1.2 (or below) server, using an ECDSA certificate,\nconnecting to a client which doesn't advertise its ECDSA curve will now\nfail the connection slightly earlier, rather than sending the\ncertificate and waiting for the client to reject it. The connection\nshould fail either way, but now it will fail earlier with\nSSL_R_WRONG_CURVE. If the client was buggy and did not correctly\nadvertise its own capabilities, this may cause a connection to fail\ndespite previously succeeding. We have included a temporary API,\nSSL_set_check_ecdsa_curve, to disable this behavior in the event this\nhas any impact, but please contact the BoringSSL team if you need it,\nas it will interfere with improvements down the line.\n\nTLS 1.3 is not impacted by this change, neither are clients, or RSA\ncertificiates. Additionally, if your server was already looking at the\ncurve list before configuring an ECDSA certificate in TLS 1.2, this\nwill also have no impact.\n\nBug: 249\nChange-Id: I2f1d4e2627641319556847cbbbcdddf347bbc8a9\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66688\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/9280f153df0e4c651d658fb1f137dfc18136144e"},{"sha":"860db9e98f23c6e2692afb143a04987cc232e1f5","author":{"email":"davidben@google.com","name":"David Benjamin"},"message":"Remove unused group_id parameter in TLS 1.3 cipher suite selection\n\nThis is a remnant of when we tried to correlate AEAD selection with\npost-quantum curves. Also remove a redundant call to\ntls1_get_shared_group. We already saved the result in hs->new_session,\nso there's no need to compute it again.\n\nChange-Id: I2425ad40bf664f4d248e1dcf610f574a6cad68bc\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/66689\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Bob Beck <bbe@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/860db9e98f23c6e2692afb143a04987cc232e1f5"}]},"public":true,"created_at":"2024-05-16T17:07:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"38450649848","type":"PushEvent","actor":{"id":132921394,"login":"praveksharma","display_login":"praveksharma","gravatar_id":"","url":"https://api.github.com/users/praveksharma","avatar_url":"https://avatars.githubusercontent.com/u/132921394?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"repository_id":65514205,"push_id":18454901994,"size":2,"distinct_size":2,"ref":"refs/heads/ps-jasmin","head":"19fb94d8db4cdc802549a634c66114f3af206d1b","before":"864be05738585e975540dd3ee1095d580904517f","commits":[{"sha":"2ab340d06af5be542459f11e8c9a7487dbd294ad","author":{"email":"sharmapravek@gmail.com","name":"Pravek Sharma"},"message":"track jasminc version in copy_from_libjade.yml; check jasminc version in copy_from_upstream.py\n\nSigned-off-by: Pravek Sharma <sharmapravek@gmail.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/2ab340d06af5be542459f11e8c9a7487dbd294ad"},{"sha":"19fb94d8db4cdc802549a634c66114f3af206d1b","author":{"email":"sharmapravek@gmail.com","name":"Pravek Sharma"},"message":"add OQS_LIBJADE_BUILD to build flags output\n\nSigned-off-by: Pravek Sharma <sharmapravek@gmail.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/19fb94d8db4cdc802549a634c66114f3af206d1b"}]},"public":true,"created_at":"2024-05-16T19:24:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"38451800003","type":"PushEvent","actor":{"id":132921394,"login":"praveksharma","display_login":"praveksharma","gravatar_id":"","url":"https://api.github.com/users/praveksharma","avatar_url":"https://avatars.githubusercontent.com/u/132921394?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"repository_id":65514205,"push_id":18455446378,"size":6,"distinct_size":1,"ref":"refs/heads/ps-jasmin","head":"8cc04c89a42a04249896cb8d69bb7892dc0c813f","before":"19fb94d8db4cdc802549a634c66114f3af206d1b","commits":[{"sha":"9c8db18ec164492c352fe5748a8badc9f4ce3156","author":{"email":"vsoftco@gmail.com","name":"Vlad Gheorghiu"},"message":"Update README.md (#1769)\n\nfixed typo in link\r\n\r\nSigned-off-by: Vlad Gheorghiu <vsoftco@gmail.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/9c8db18ec164492c352fe5748a8badc9f4ce3156"},{"sha":"a23046ffcea9b16b6bf9e2a4dc9c045316134dc2","author":{"email":"sharmapravek@gmail.com","name":"Pravek Sharma"},"message":"Fix README.md to work with Doxygen release 1.10.0 (#1775)\n\n* fix link in README.md\r\n\r\nSigned-off-by: Pravek Sharma <sharmapravek@gmail.com>\r\n\r\n* simplify linux and mac link in README.md\r\n\r\nSigned-off-by: Pravek Sharma <sharmapravek@gmail.com>\r\n\r\n* update Doxyfile\r\n\r\nSigned-off-by: Pravek Sharma <sharmapravek@gmail.com>\r\n\r\n* update CI to use /scripts/run_doxygen.sh\r\n\r\nSigned-off-by: Pravek Sharma <sharmapravek@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Pravek Sharma <sharmapravek@gmail.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/a23046ffcea9b16b6bf9e2a4dc9c045316134dc2"},{"sha":"b392919f6eb1ff4daa9eee7da2d2812fb2f0c987","author":{"email":"ry@linux.com","name":"Ry Jones"},"message":"Add workflow dispatch to action\n\nSigned-off-by: Ry Jones <ry@linux.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/b392919f6eb1ff4daa9eee7da2d2812fb2f0c987"},{"sha":"4b8d10d65fcb4a5798559537d9ab7ec47d65a739","author":{"email":"49699333+dependabot[bot]@users.noreply.github.com","name":"dependabot[bot]"},"message":"Bump jinja2 from 3.1.3 to 3.1.4 in /scripts/copy_from_upstream (#1782)\n\nBumps [jinja2](https://github.com/pallets/jinja) from 3.1.3 to 3.1.4.\r\n- [Release notes](https://github.com/pallets/jinja/releases)\r\n- [Changelog](https://github.com/pallets/jinja/blob/main/CHANGES.rst)\r\n- [Commits](https://github.com/pallets/jinja/compare/3.1.3...3.1.4)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: jinja2\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/4b8d10d65fcb4a5798559537d9ab7ec47d65a739"},{"sha":"a5ec23cf19763d36a558b8358345823ae45d57e5","author":{"email":"beldmit@users.noreply.github.com","name":"Dmitry Belyavskiy"},"message":"Algorithm selection clarification (#1784)\n\nResolves: #1781\r\n\r\nSigned-off-by: Dmitry Belyavskiy <beldmit@gmail.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/a5ec23cf19763d36a558b8358345823ae45d57e5"},{"sha":"8cc04c89a42a04249896cb8d69bb7892dc0c813f","author":{"email":"sharmapravek@gmail.com","name":"Pravek Sharma"},"message":"Merge branch 'main' into ps-jasmin","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/8cc04c89a42a04249896cb8d69bb7892dc0c813f"}]},"public":true,"created_at":"2024-05-16T20:09:25Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
