{"id":"35305055398","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1681","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1681/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1681/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1681/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1681","id":2110589498,"node_id":"I_kwDOA-eq3c59zQo6","number":1681,"title":"Appveyor builds failing on main","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[{"id":5700733396,"node_id":"LA_kwDOA-eq3c8AAAABU8pJ1A","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/platform-specific","name":"platform-specific","color":"C4AA6F","default":false,"description":"Issue related to a specific platform configuration; core team may not have required platform"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-01-31T17:14:12Z","updated_at":"2024-02-01T08:54:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The daily AppVeyor builds have been failing for some time. I've manually re-triggered builds on older commits that passed originally, and now they fail too. For example: [build 1](https://ci.appveyor.com/project/dstebila/liboqs/builds/48946257) vs [build 2](https://ci.appveyor.com/project/dstebila/liboqs/builds/49070481). It looks to me like the only difference between the two environments is that the successful build used OpenSSL 3.1.1 and the failed build used OpenSSL 3.2.0.\r\n\r\nI don't think it's a great use of our time trying to debug this, especially given that our GitHub Actions Windows tests are passing with no issues (and are set up to run on PRs). The GH CI builds all use MSVC 19, so the only reason I see to keep AppVeyor around is to support cygwin / msys2. Is this something we want to do?\r\n\r\nAside: The most recent AppVeyor tests are failing in a lot more places because I missed disabling the long KAT tests in AppVeyor in #1560... oops. These are expected to fail for Falcon-1024 for the time being.\r\n\r\nTagging @baentsch @christianpaquin for input since this came up in a previous meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1681/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1920809320","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1681#issuecomment-1920809320","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1681","id":1920809320,"node_id":"IC_kwDOA-eq3c5yfTlo","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-02-01T08:54:19Z","updated_at":"2024-02-01T08:54:19Z","author_association":"MEMBER","body":"> so the only reason I see to keep AppVeyor around is to support cygwin / msys2. Is this something we want to do?\r\n\r\nI'd argue the answer is encoded in [PLATFORMS.md](https://github.com/open-quantum-safe/liboqs/blob/main/PLATFORMS.md): No. Neither cygwin nor msys2 are documented there. If someone wants this they should speak up.\r\n\r\nIn addition, a [certain subproject does (github-based) cygwin builds](https://github.com/open-quantum-safe/oqs-provider/blob/7b21bd3bf35ba5fec53d5e5ab20f071b8afcd8b8/.github/workflows/windows.yml#L9)... So I'd vote for eliminating AppVeyor for good.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1920809320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-01T08:54:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35312098013","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1671","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1671/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1671/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1671/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1671","id":2091114263,"node_id":"PR_kwDOA-eq3c5kk6OO","number":1671,"title":"Call set_available_cpu_extensions using pthread_once","user":{"login":"zxjtan","id":32562011,"node_id":"MDQ6VXNlcjMyNTYyMDEx","avatar_url":"https://avatars.githubusercontent.com/u/32562011?v=4","gravatar_id":"","url":"https://api.github.com/users/zxjtan","html_url":"https://github.com/zxjtan","followers_url":"https://api.github.com/users/zxjtan/followers","following_url":"https://api.github.com/users/zxjtan/following{/other_user}","gists_url":"https://api.github.com/users/zxjtan/gists{/gist_id}","starred_url":"https://api.github.com/users/zxjtan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxjtan/subscriptions","organizations_url":"https://api.github.com/users/zxjtan/orgs","repos_url":"https://api.github.com/users/zxjtan/repos","events_url":"https://api.github.com/users/zxjtan/events{/privacy}","received_events_url":"https://api.github.com/users/zxjtan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-01-19T18:45:07Z","updated_at":"2024-02-01T12:36:20Z","closed_at":"2024-02-01T12:35:50Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1671","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1671","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1671.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1671.patch","merged_at":"2024-02-01T12:35:50Z"},"body":"Dependent on #1653.\r\n\r\n`set_available_cpu_extensions()` is synchronized with a thread-unsafe array element. This is similar to #1549, except in this case instead of causing any crashes, the thread-unsafe behaviour simply leads some early callers to believe that the relevant CPU extensions are not available, and hence use reference implementations instead before the extensions are eventually calculated. This can and has set off TSAN.\r\n\r\nIt is also possible in rare instances for the thread calling `set_available_cpu_extensions()` to set `cpu_ext_data[OQS_CPU_EXT_INIT] = 1` and then crash before setting any of the other `cpu_ext_data` fields, preventing future callers from ever calling `set_available_cpu_extensions()` again, thus causing the program to use only reference implementations for its entire lifetime. This PR would also fix this edge case.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1671/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1921230929","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1671#issuecomment-1921230929","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1671","id":1921230929,"node_id":"IC_kwDOA-eq3c5yg6hR","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-02-01T12:36:19Z","updated_at":"2024-02-01T12:36:19Z","author_association":"MEMBER","body":"Thanks for the contribution!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1921230929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-01T12:36:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35312294738","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","id":2070604770,"node_id":"PR_kwDOA-eq3c5je_JE","number":1654,"title":"Run oqs-provider release tests in CI on release candidate branches","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-01-08T14:44:08Z","updated_at":"2024-02-01T12:42:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1654","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nCurrently, our [release process](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) requires that the `oqs-provider` release tests be run manually for `liboqs` release candidate branches. This PR automates this process in CI, setting them to run automatically on pull requests for any branch whose name has the prefix `dev-`. This prefix is up for discussion; I used `dev-` because it's what we used for the latest release, and because using `rc-` would cause issues if we ever get a PR from somebody named, say, Ray Charles.\r\n\r\nThe full release tests complete in about 50 minutes in CI—see [https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581](https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581)—which I think is not too bad. Note that although the linked workflow says it uses a \"minimal set\" of algorithm combinations, it actually does run all combinations; I just didn't update the workflow documentation before pushing. The full set of tests should run again on this PR as a proof of concept; I'll revert to running them only on release candidate PRs once that workflow completes.\r\n\r\nThe CI workflow is based on the [`release-test.sh` script in the `oqs-provider` repo](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh). I didn't call the script directly since some aspects (checking out a new temporary branch then resetting back to main, cloning liboqs, etc) were either unnecessary in the CI setting or better handled by a built-in action.\r\n\r\nDiscussion points:\r\n- What prefix do we want to use for release candidates?\r\n- Is there a way to ensure that this script stays in sync with `oqs-provider` release testing requirements?\r\n- For @baentsch specifically: what version of OpenSSL should we be checking against here? I defaulted to `master` as the [release test documentation](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh#L33) said to use the \"latest\" version.\r\n- Do we want to also automate some of the other release testing? We could, for example, also run the full constant time tests as part of this workflow.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1647 (assuming that `oqs-provider` is the only downstream for which we want automated release testing).\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1921243018","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654#issuecomment-1921243018","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","id":1921243018,"node_id":"IC_kwDOA-eq3c5yg9eK","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-02-01T12:42:25Z","updated_at":"2024-02-01T12:42:25Z","author_association":"MEMBER","body":"FWIW, we now have a similar case that could be used for testing proper downstream integration: #1626 changes algs and https://github.com/open-quantum-safe/oqs-provider/pull/344 is there to prove this PR to be useful... Its own PR obviously fails (using `liboqs`-main) but a new CI run triggered in #1626 targeting the branch underlying https://github.com/open-quantum-safe/oqs-provider/pull/344 would prove both code bases right before merging either. Suggestions how to facilitate that? Maybe some form of suitable branch-labelling supporting & triggering this?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1921243018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-01T12:42:26Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35312693508","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","id":2070604770,"node_id":"PR_kwDOA-eq3c5je_JE","number":1654,"title":"Run oqs-provider release tests in CI on release candidate branches","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-01-08T14:44:08Z","updated_at":"2024-02-01T12:54:33Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1654","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nCurrently, our [release process](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) requires that the `oqs-provider` release tests be run manually for `liboqs` release candidate branches. This PR automates this process in CI, setting them to run automatically on pull requests for any branch whose name has the prefix `dev-`. This prefix is up for discussion; I used `dev-` because it's what we used for the latest release, and because using `rc-` would cause issues if we ever get a PR from somebody named, say, Ray Charles.\r\n\r\nThe full release tests complete in about 50 minutes in CI—see [https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581](https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581)—which I think is not too bad. Note that although the linked workflow says it uses a \"minimal set\" of algorithm combinations, it actually does run all combinations; I just didn't update the workflow documentation before pushing. The full set of tests should run again on this PR as a proof of concept; I'll revert to running them only on release candidate PRs once that workflow completes.\r\n\r\nThe CI workflow is based on the [`release-test.sh` script in the `oqs-provider` repo](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh). I didn't call the script directly since some aspects (checking out a new temporary branch then resetting back to main, cloning liboqs, etc) were either unnecessary in the CI setting or better handled by a built-in action.\r\n\r\nDiscussion points:\r\n- What prefix do we want to use for release candidates?\r\n- Is there a way to ensure that this script stays in sync with `oqs-provider` release testing requirements?\r\n- For @baentsch specifically: what version of OpenSSL should we be checking against here? I defaulted to `master` as the [release test documentation](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh#L33) said to use the \"latest\" version.\r\n- Do we want to also automate some of the other release testing? We could, for example, also run the full constant time tests as part of this workflow.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1647 (assuming that `oqs-provider` is the only downstream for which we want automated release testing).\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1921264874","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654#issuecomment-1921264874","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","id":1921264874,"node_id":"IC_kwDOA-eq3c5yhCzq","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-02-01T12:54:33Z","updated_at":"2024-02-01T12:54:33Z","author_association":"CONTRIBUTOR","body":"> FWIW, we now have a similar case that could be used for testing proper downstream integration: #1626 changes algs and [open-quantum-safe/oqs-provider#344](https://github.com/open-quantum-safe/oqs-provider/pull/344) is there to prove this PR to be useful... Its own PR obviously fails (using `liboqs`-main) but a new CI run triggered in #1626 targeting the branch underlying [open-quantum-safe/oqs-provider#344](https://github.com/open-quantum-safe/oqs-provider/pull/344) would prove both code bases right before merging either. Suggestions how to facilitate that? Maybe some form of suitable branch-labelling supporting & triggering this?\r\n\r\nI actually just got back to working on this yesterday using the setup that you suggested above. I have a branch on the `oqs-provider` side that I'll make a PR for later today: https://github.com/open-quantum-safe/oqs-provider/tree/sw-automate-release-tests.\r\n\r\nOnce merged, the release tests would trigger automatically on releases (looking for a `-tracker` branch for the release tag) but could also be triggered via `curl` for _any_ `liboqs` GitHub ref. For instance...\r\n```bash\r\ncurl --silent \\\r\n       --write-out \"\\n%{response_code}\\n\" \\\r\n       --request POST \\\r\n       --header \"Accept: application/vnd.github+json\" \\\r\n       --header \"Authorization: Bearer $PERSONAL_ACCESS_TOKEN\" \\\r\n       --header \"X-GitHub-Api-Version: 2022-11-28\" \\\r\n       --data '{ \"event_type\": \"liboqs-release\", \"client_payload\": { \"tag\": \"bhe-fips-ipd\" } }' \\\r\n       https://api.github.com/repos/open-quantum-safe/oqs-provider/dispatches\r\n```\r\nwould trigger the release tests to run using the `bhe-fips-ipd` branch of `liboqs` and the `bhe-fips-ipd-tracker` branch of `oqs-provider` (if it exists, otherwise `main`).\r\n\r\nI'll open a draft PR right now so that you can suggest any changes or extensions you might like.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1921264874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-01T12:54:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35330588897","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/345","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/345/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/345/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/345/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/345","id":2112463846,"node_id":"PR_kwDOE_A9l85lssBY","number":345,"title":"Automatically run release tests on liboqs release candidates","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-02-01T12:59:41Z","updated_at":"2024-02-01T22:55:36Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/345","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/345","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/345.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/345.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nThis PR proposes a release test workflow which can be triggered by `repository_dispatch` events. For example, with a corresponding PR in `liboqs`, we could trigger these workflows to run automatically on release candidates.\r\n\r\nFor a proof-of-concept, see https://github.com/SWilson4/cicd-playground-upstream and https://github.com/SWilson4/cicd-playground-downstream.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/345/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1922436715","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/345#issuecomment-1922436715","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/345","id":1922436715,"node_id":"IC_kwDOE_A9l85ylg5r","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-02-01T22:55:35Z","updated_at":"2024-02-01T22:55:35Z","author_association":"CONTRIBUTOR","body":"Upstream PR to trigger this: liboqs#1654.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1922436715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-01T22:55:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35330665838","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","id":2070604770,"node_id":"PR_kwDOA-eq3c5je_JE","number":1654,"title":"Run oqs-provider release tests in CI on release candidate branches","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-01-08T14:44:08Z","updated_at":"2024-02-01T22:59:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1654","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nEDIT 2023-02-01: This now simply adds a trigger for functionality proposed in https://github.com/open-quantum-safe/oqs-provider/pull/345. It will function when somebody with the appropriate permissions (presumably @dstebila?) adds an `oqsbot` (classic) personal access token with `repo` and `workflow` permissions as an Actions secret with the variable name `OQSBOT_GITHUB_ACTIONS`. We already have one of these in use in CircleCI.\r\n\r\n### Previous description (prior to 2023-02-01)\r\n\r\nCurrently, our [release process](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) requires that the `oqs-provider` release tests be run manually for `liboqs` release candidate branches. This PR automates this process in CI, setting them to run automatically on pull requests for any branch whose name has the prefix `dev-`. This prefix is up for discussion; I used `dev-` because it's what we used for the latest release, and because using `rc-` would cause issues if we ever get a PR from somebody named, say, Ray Charles.\r\n\r\nThe full release tests complete in about 50 minutes in CI—see [https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581](https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581)—which I think is not too bad. Note that although the linked workflow says it uses a \"minimal set\" of algorithm combinations, it actually does run all combinations; I just didn't update the workflow documentation before pushing. The full set of tests should run again on this PR as a proof of concept; I'll revert to running them only on release candidate PRs once that workflow completes.\r\n\r\nThe CI workflow is based on the [`release-test.sh` script in the `oqs-provider` repo](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh). I didn't call the script directly since some aspects (checking out a new temporary branch then resetting back to main, cloning liboqs, etc) were either unnecessary in the CI setting or better handled by a built-in action.\r\n\r\nDiscussion points:\r\n- What prefix do we want to use for release candidates?\r\n- Is there a way to ensure that this script stays in sync with `oqs-provider` release testing requirements?\r\n- For @baentsch specifically: what version of OpenSSL should we be checking against here? I defaulted to `master` as the [release test documentation](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh#L33) said to use the \"latest\" version.\r\n- Do we want to also automate some of the other release testing? We could, for example, also run the full constant time tests as part of this workflow.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1647 (assuming that `oqs-provider` is the only downstream for which we want automated release testing).\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1922441116","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654#issuecomment-1922441116","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","id":1922441116,"node_id":"IC_kwDOA-eq3c5ylh-c","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-02-01T22:59:37Z","updated_at":"2024-02-01T22:59:37Z","author_association":"CONTRIBUTOR","body":"I've tested the functionality via swilson4/cicd-playground-upstream and swilson4/cicd-playground-downstream as best I can, but it's a little finicky, and hard to test properly without actually doing a release here.\r\n\r\nFollow-up to this PR, perhaps: would we also like to automate the other release testing? For instance, perhaps we could run the entire constant-time test suite in CI in the same workflow.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1922441116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-01T22:59:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
