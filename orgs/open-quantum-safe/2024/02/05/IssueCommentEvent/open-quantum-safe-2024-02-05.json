{"id":"35411196522","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1677","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1677/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1677/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1677/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1677","id":2096237711,"node_id":"PR_kwDOA-eq3c5k2E8o","number":1677,"title":"Update McEliece suppression files for generic config","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/23","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23/labels","id":9830315,"node_id":"MI_kwDOA-eq3c4Alf-r","number":23,"title":"0.10.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":8,"closed_issues":11,"state":"open","created_at":"2023-08-23T17:18:24Z","updated_at":"2024-01-30T21:01:48Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2024-01-23T14:40:33Z","updated_at":"2024-02-05T14:50:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1677","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1677","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1677.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1677.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR updates the suppression files for the \"clean\" (pure C) implementation of Classic McEliece. I've run the tests both in a container built from the CI image and locally on my machine.\r\n\r\nFor now, I've labelled all of these as \"issues\", as I'm not knowledgeable enough about McEliece to confidently classify them as false positives or true instances of secret-dependent behaviour. I believe that this is in line with what we had done previously for the AVX2 constant-time failures.\r\n\r\nTo test:\r\n```bash\r\nrm -rf build && mkdir build && cd build\r\ncmake -GNinja -DOQS_DIST_BUILD=OFF -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON .. && ninja ; cd -\r\npython3 -m pytest -n=auto -k \"McEliece\" -v tests/test_constant_time.py\r\n```\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nPartially addresses #1666.\r\n\r\nI suspect that this may also address #1540. @bhess @praveksharma is it plausible that the \"env-specific\" constant-time errors were simply caused by building without AVX2 optimization? There were previously no suppressions for the \"clean\" implementation.\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1677/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927174331","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1677#issuecomment-1927174331","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1677","id":1927174331,"node_id":"IC_kwDOA-eq3c5y3li7","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-02-05T14:50:04Z","updated_at":"2024-02-05T14:50:04Z","author_association":"CONTRIBUTOR","body":"I've just updated the weekly constant-time runs so that the smallest parameter set of McEliece is tested there. I don't think it will add too much overhead, and it will (hopefully) make sure that we don't let these suppression files get out of sync in the future.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927174331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-05T14:50:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35412646479","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","id":2070604770,"node_id":"PR_kwDOA-eq3c5je_JE","number":1654,"title":"Run oqs-provider release tests in CI on release candidate branches","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2024-01-08T14:44:08Z","updated_at":"2024-02-05T15:29:48Z","closed_at":"2024-02-05T14:54:50Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1654","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.patch","merged_at":"2024-02-05T14:54:50Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nEDIT 2023-02-01: This now simply adds a trigger for functionality proposed in https://github.com/open-quantum-safe/oqs-provider/pull/345. It will function when somebody with the appropriate permissions (presumably @dstebila?) adds an `oqsbot` (classic) personal access token with `repo` and `workflow` permissions as an Actions secret with the variable name `OQSBOT_GITHUB_ACTIONS`. We already have one of these in use in CircleCI.\r\n\r\n### Previous description (prior to 2023-02-01)\r\n\r\nCurrently, our [release process](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) requires that the `oqs-provider` release tests be run manually for `liboqs` release candidate branches. This PR automates this process in CI, setting them to run automatically on pull requests for any branch whose name has the prefix `dev-`. This prefix is up for discussion; I used `dev-` because it's what we used for the latest release, and because using `rc-` would cause issues if we ever get a PR from somebody named, say, Ray Charles.\r\n\r\nThe full release tests complete in about 50 minutes in CI—see [https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581](https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581)—which I think is not too bad. Note that although the linked workflow says it uses a \"minimal set\" of algorithm combinations, it actually does run all combinations; I just didn't update the workflow documentation before pushing. The full set of tests should run again on this PR as a proof of concept; I'll revert to running them only on release candidate PRs once that workflow completes.\r\n\r\nThe CI workflow is based on the [`release-test.sh` script in the `oqs-provider` repo](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh). I didn't call the script directly since some aspects (checking out a new temporary branch then resetting back to main, cloning liboqs, etc) were either unnecessary in the CI setting or better handled by a built-in action.\r\n\r\nDiscussion points:\r\n- What prefix do we want to use for release candidates?\r\n- Is there a way to ensure that this script stays in sync with `oqs-provider` release testing requirements?\r\n- For @baentsch specifically: what version of OpenSSL should we be checking against here? I defaulted to `master` as the [release test documentation](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh#L33) said to use the \"latest\" version.\r\n- Do we want to also automate some of the other release testing? We could, for example, also run the full constant time tests as part of this workflow.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1647 (assuming that `oqs-provider` is the only downstream for which we want automated release testing).\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927262040","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654#issuecomment-1927262040","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","id":1927262040,"node_id":"IC_kwDOA-eq3c5y369Y","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2024-02-05T15:29:47Z","updated_at":"2024-02-05T15:29:47Z","author_association":"MEMBER","body":"> @baentsch @dstebila Could you take a look at the config related to personal access tokens? [This CircleCI job](https://app.circleci.com/pipelines/github/open-quantum-safe/liboqs/3334/workflows/8f01e768-7abe-453f-b145-0ff46966d8a2/jobs/26636) that triggers GitHub Actions via a (classic) personal access token is now failing.\r\n> \r\n> Edit to add: Based on the error message, I suspect that the CircleCI access token will need to be replaced with a fine-grained one.\r\n\r\nI'll need some help doing this, pop by when you can work with me on this.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927262040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-05T15:29:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35416546939","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","id":2070604770,"node_id":"PR_kwDOA-eq3c5je_JE","number":1654,"title":"Run oqs-provider release tests in CI on release candidate branches","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2024-01-08T14:44:08Z","updated_at":"2024-02-05T17:24:50Z","closed_at":"2024-02-05T14:54:50Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1654","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.patch","merged_at":"2024-02-05T14:54:50Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nEDIT 2023-02-01: This now simply adds a trigger for functionality proposed in https://github.com/open-quantum-safe/oqs-provider/pull/345. It will function when somebody with the appropriate permissions (presumably @dstebila?) adds an `oqsbot` (classic) personal access token with `repo` and `workflow` permissions as an Actions secret with the variable name `OQSBOT_GITHUB_ACTIONS`. We already have one of these in use in CircleCI.\r\n\r\n### Previous description (prior to 2023-02-01)\r\n\r\nCurrently, our [release process](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) requires that the `oqs-provider` release tests be run manually for `liboqs` release candidate branches. This PR automates this process in CI, setting them to run automatically on pull requests for any branch whose name has the prefix `dev-`. This prefix is up for discussion; I used `dev-` because it's what we used for the latest release, and because using `rc-` would cause issues if we ever get a PR from somebody named, say, Ray Charles.\r\n\r\nThe full release tests complete in about 50 minutes in CI—see [https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581](https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581)—which I think is not too bad. Note that although the linked workflow says it uses a \"minimal set\" of algorithm combinations, it actually does run all combinations; I just didn't update the workflow documentation before pushing. The full set of tests should run again on this PR as a proof of concept; I'll revert to running them only on release candidate PRs once that workflow completes.\r\n\r\nThe CI workflow is based on the [`release-test.sh` script in the `oqs-provider` repo](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh). I didn't call the script directly since some aspects (checking out a new temporary branch then resetting back to main, cloning liboqs, etc) were either unnecessary in the CI setting or better handled by a built-in action.\r\n\r\nDiscussion points:\r\n- What prefix do we want to use for release candidates?\r\n- Is there a way to ensure that this script stays in sync with `oqs-provider` release testing requirements?\r\n- For @baentsch specifically: what version of OpenSSL should we be checking against here? I defaulted to `master` as the [release test documentation](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh#L33) said to use the \"latest\" version.\r\n- Do we want to also automate some of the other release testing? We could, for example, also run the full constant time tests as part of this workflow.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1647 (assuming that `oqs-provider` is the only downstream for which we want automated release testing).\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927524925","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654#issuecomment-1927524925","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","id":1927524925,"node_id":"IC_kwDOA-eq3c5y47I9","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-02-05T17:24:50Z","updated_at":"2024-02-05T17:24:50Z","author_association":"MEMBER","body":"Please retry. Should work again: Default when activating fine-grained access tokens was disabling classic tokens. My mistake. Now changed. But we may want to consider only using fine-grained tokens in the future.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927524925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-05T17:24:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35417982441","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1684","id":2118944551,"node_id":"PR_kwDOA-eq3c5mC3TI","number":1684,"title":"Rename weekly runs and skip Falcon-1024 [skip ci]","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-02-05T16:22:19Z","updated_at":"2024-02-05T18:12:00Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1684","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1684","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1684.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1684.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAs expected, Falcon-1024 fails the weekly extended KAT tests. This will be the case until #1561 is resolved. For now, the failure creates unnecessary noise. This PR\r\n1. renames the weekly test workflow to reflect that it's no longer just a constant-time test run and\r\n2. skips the Falcon-1024 extended KAT tests.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927680191","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1684#issuecomment-1927680191","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684","id":1927680191,"node_id":"IC_kwDOA-eq3c5y5hC_","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2024-02-05T18:11:59Z","updated_at":"2024-02-05T18:11:59Z","author_association":"MEMBER","body":"> LGTM. I wonder whether we may even want to drop weekly tests altogether: I see these as a feature supporting \"production grade\" code. And as this doesn't seem to be a clear(ly articulated) goal, why waste these compute cycles? Maybe add the test to release testing to not lose the work, but that should suffice, no?\r\n\r\nIt's a goal to work towards, let's not throw away the work we've done now towards it.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927680191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-05T18:12:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35419538622","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/1","id":2117814404,"node_id":"I_kwDOLITcCM5-O0iE","number":1,"title":"OQS goal: non-committal research or production use?","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-02-05T06:57:10Z","updated_at":"2024-02-05T19:05:41Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Following up on [a discussion about the goal of OQS](https://github.com/dstebila/oqs-www-new/pull/169#discussion_r1477535726) this issue is to raise the question whether OQS shall remain limited to research-only use as per the currently [published goal](https://openquantumsafe.org)\r\n\r\n> aims to support the development and prototyping of [quantum-resistant cryptography](https://openquantumsafe.org/post-quantum-crypto)\r\n\r\nand [limitations](https://openquantumsafe.org/about/#overview)\r\n\r\n> OQS is intended for prototyping and evaluating quantum-resistant cryptography\r\n\r\n> WE DO NOT CURRENTLY RECOMMEND RELYING ON LIBOQS OR OUR APPLICATION INTEGRATIONS IN A PRODUCTION ENVIRONMENT OR TO PROTECT ANY SENSITIVE DATA. This project is meant to help with research and prototyping. \r\n\r\nor whether it should strive to become code that users may be able to rely on at some time -- and if the latter, when.\r\n\r\n@dstebila suggested I should propose text how to phrase this, but as a person not employed by a company that might benefit from such change of mission and considering that apparently all TSC members (again, except me) are within research organizations, I do not feel in a position to do so. I'd rather solicit input whether the TSC is interested at all in the goal of making OQS more geared to production use -- particularly as the companies funding PQCA are starting a [parallel project launched](https://github.com/pq-code-package) geared to the development of high-assurance, production-oriented code without the \"technical debt\" of OQS.\r\n\r\nBy retaining the goal of \"research-/evaluation-only\" for OQS \r\n- the integration of code with unclear licensing or APIs that have not been tested for actual usability is _much_ easier.\r\n- OQS can retain its current \"casual\" update pace\r\n- doesn't have to take at heart security considerations (e.g., FIPS) or stringently have to follow upstream security updates\r\n\r\nUnsure whether tagging @open-quantum-safe/tsc @ashman-p @thb-sb (the latter two apparently not members of this org?!) is necessary to get your attention.\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/1927849222","html_url":"https://github.com/open-quantum-safe/tsc/issues/1#issuecomment-1927849222","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/1","id":1927849222,"node_id":"IC_kwDOLITcCM5y6KUG","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2024-02-05T19:05:39Z","updated_at":"2024-02-05T19:05:39Z","author_association":"MEMBER","body":"### How I see PQ Code Package\r\n\r\nThe goal of PQ Code Package is to produce high-assurance source code implementations of individual standards-track PQ algorithms.  PQCP will start with Kyber / ML-KEM, and if that goes well, would consider expanding to Dilithium / ML-DSA, Falcon, and SPHINCS+ / SLH-DSA, probably not sooner than a year from now.\r\n\r\nThe intended adopters of PQ Code Package are cryptography library authors who want source code for these algorithms that they can incorporate into their own library, without introducing a new binary dependency.  For example, Mozilla wants to pull in a high-assurance implementation of Kyber, but needs to add that to their source repository in a way that they have control without adding a binary library dependency.  I had originally anticipated that OpenSSL would also want to take this approach, although the recent discussions around CLA requirements throw a wrench in that.\r\n\r\nVery early in the brainstorming of PQCP there was raised the possibility of making a \"Kyber OpenSSL 3 provider\" based on the Kyber implementations in PQCP, but that hasn't been discussed much lately.  There haven't really been other discussions around distributing binaries from the PQCP initiative.\r\n\r\n### How I see OQS\r\n\r\nOQS started off as \"software for prototyping quantum-resistant cryptography\", and in our OQS visioning exercises last year the group made it clear that they wanted a dual mandate going forward: a production-ready library for standards-track algorithms, and a platform for continuing to support prototypes and experiments for emerging PQ algorithms.\r\n\r\nFor OQS to achieve the production-ready side of the intended dual mandate, it will need high-assurance implementations: these would come from the PQ Code Package, once they're ready.  OQS will probably be the first consumer of PQCP implementations, and indeed Pravek is already laying some groundwork for this with trying to understand how to bring the Kyber implementation from libjade into liboqs.\r\n\r\n### Directly comparing PQCP and OQS\r\n\r\nOQS (and OQS Provider) would be a multi-algorithm full-featured suite of post-quantum cryptography, distributed in binary form.  The production-ready track of OQS would be just that: production-ready, and would use the highest quality algorithm implementations we can get, coming from the PQ Code Package where available.  People using the production-track version of OQS would also be able to use the experiment-track version of OQS in their testing infrastructure to see how emerging non-standardized PQ algorithms perform. \r\n\r\nPQCP has standalone implementations of standards-track PQ algorithms, written to be production-ready from the start.  Focus solely on Kyber / ML-KEM for probably at least a year.  Current intention is to distribute only as source code, not as binaries, but not inconceivable that there could be single-algorithm binaries available (e.g., an ML-KEM OpenSSL 3 provider).  \r\n\r\nTo some extent I view the relationship between OQS and PQCP as similar to the current relationship between OQS and PQClean.  But compared to PQClean, PQCP will be narrower in terms of algorithms (initially just Kyber / ML-KEM), more focused on high-assurance and formal verification, and have a bigger community around it.\r\n\r\nI don't think a PQCP-based ML-KEM OpenSSL 3 provider would obviate demand for OQS Provider, as OQS Provider would support more algorithms and probably more functionality than a single algorithm provider.\r\n\r\n### Production-track OQS\r\n\r\nThe OQS visioning exercise laid out a clear desire for a dual-mandate future for OQS: a production-ready library complemented by contiuing to support experimentation with new algorithms.\r\n\r\nI have at least three key questions on getting to production-ready:\r\n\r\n1. What criteria would a production-track version of OQS need to meet?\r\n2. How do we organize the OQS codebase to achieve the dual-mandate of a production-track version of OQS and an experimental-track version of OQS?\r\n3. How do we get from where we are now to there?\r\n\r\nI don't have complete answers to any of these questions, these are things we have to work on as a group over the coming months.  For question 1, I at least know a few factors we will have to consider:\r\n\r\n- Release process\r\n- Security responses\r\n- Code review - internal and external\r\n\r\nI think the forthcoming external review of OQS Provider will be really useful information feeding into this process, giving us an initial indicator of how close/far we are.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/1927849222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-05T19:05:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35419979934","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","id":2070604770,"node_id":"PR_kwDOA-eq3c5je_JE","number":1654,"title":"Run oqs-provider release tests in CI on release candidate branches","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2024-01-08T14:44:08Z","updated_at":"2024-02-05T19:22:21Z","closed_at":"2024-02-05T14:54:50Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1654","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1654.patch","merged_at":"2024-02-05T14:54:50Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nEDIT 2023-02-01: This now simply adds a trigger for functionality proposed in https://github.com/open-quantum-safe/oqs-provider/pull/345. It will function when somebody with the appropriate permissions (presumably @dstebila?) adds an `oqsbot` (classic) personal access token with `repo` and `workflow` permissions as an Actions secret with the variable name `OQSBOT_GITHUB_ACTIONS`. We already have one of these in use in CircleCI.\r\n\r\n### Previous description (prior to 2023-02-01)\r\n\r\nCurrently, our [release process](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) requires that the `oqs-provider` release tests be run manually for `liboqs` release candidate branches. This PR automates this process in CI, setting them to run automatically on pull requests for any branch whose name has the prefix `dev-`. This prefix is up for discussion; I used `dev-` because it's what we used for the latest release, and because using `rc-` would cause issues if we ever get a PR from somebody named, say, Ray Charles.\r\n\r\nThe full release tests complete in about 50 minutes in CI—see [https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581](https://github.com/open-quantum-safe/liboqs/actions/runs/7426702581)—which I think is not too bad. Note that although the linked workflow says it uses a \"minimal set\" of algorithm combinations, it actually does run all combinations; I just didn't update the workflow documentation before pushing. The full set of tests should run again on this PR as a proof of concept; I'll revert to running them only on release candidate PRs once that workflow completes.\r\n\r\nThe CI workflow is based on the [`release-test.sh` script in the `oqs-provider` repo](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh). I didn't call the script directly since some aspects (checking out a new temporary branch then resetting back to main, cloning liboqs, etc) were either unnecessary in the CI setting or better handled by a built-in action.\r\n\r\nDiscussion points:\r\n- What prefix do we want to use for release candidates?\r\n- Is there a way to ensure that this script stays in sync with `oqs-provider` release testing requirements?\r\n- For @baentsch specifically: what version of OpenSSL should we be checking against here? I defaulted to `master` as the [release test documentation](https://github.com/open-quantum-safe/oqs-provider/blob/eb80076d1683121db35fabf8c1b0c6f9125c1b6d/scripts/release-test.sh#L33) said to use the \"latest\" version.\r\n- Do we want to also automate some of the other release testing? We could, for example, also run the full constant time tests as part of this workflow.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1647 (assuming that `oqs-provider` is the only downstream for which we want automated release testing).\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927874930","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1654#issuecomment-1927874930","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1654","id":1927874930,"node_id":"IC_kwDOA-eq3c5y6Qly","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-02-05T19:22:20Z","updated_at":"2024-02-05T19:22:20Z","author_association":"MEMBER","body":"> Please retry. Should work again: Default when activating fine-grained access tokens was disabling classic tokens. My mistake. Now changed. But we may want to consider only using fine-grained tokens in the future.\r\n\r\nConcurrently I worked with @dstebila to generate an `oqs-bot` fine-grained access token which is now stored in both CircleCI GitHub Actions environments, so it sounds like it's covered on both fronts. At any rate, `main` is green again.\r\n\r\nFollowing the principle of least privilege, I like the idea of only allowing fine-grained tokens. However, I could see it being useful to be able to trigger `oqs-provider` release tests on arbitrary (non `-tracker`) refs from the command line using a \"classic\" personal access token. Perhaps we can revisit the decision after seeing how the new functionality is used.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1927874930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-05T19:22:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"35421420431","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1684","id":2118944551,"node_id":"PR_kwDOA-eq3c5mC3TI","number":1684,"title":"Rename weekly runs and skip Falcon-1024 [skip ci]","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-02-05T16:22:19Z","updated_at":"2024-02-05T20:16:43Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1684","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1684","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1684.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1684.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAs expected, Falcon-1024 fails the weekly extended KAT tests. This will be the case until #1561 is resolved. For now, the failure creates unnecessary noise. This PR\r\n1. renames the weekly test workflow to reflect that it's no longer just a constant-time test run and\r\n2. skips the Falcon-1024 extended KAT tests.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1928023572","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1684#issuecomment-1928023572","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1684","id":1928023572,"node_id":"IC_kwDOA-eq3c5y604U","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-02-05T20:16:42Z","updated_at":"2024-02-05T20:16:42Z","author_association":"MEMBER","body":"> LGTM. I wonder whether we may even want to drop weekly tests altogether: I see these as a feature supporting \"production grade\" code. And as this doesn't seem to be a clear(ly articulated) goal, why waste these compute cycles? Maybe add the test to release testing to not lose the work, but that should suffice, no?\r\n\r\nI think that it's worth running the extended KAT tests on a weekly basis regardless of the focus of `liboqs`. Having implementations that match the full set of available KATs is (IMO) important from both experimental and production perspectives. The utility of those tests is, I think, illustrated by the fact that they caught a Falcon implementation inconsistency in PQClean that had existed for a couple of years.\r\n\r\nThe constant-time tests are perhaps more production-focused, but there is active research on side-channel attacks on standards candidates, and our tests are (again IMO) useful for this. For example, they [detected](https://github.com/open-quantum-safe/liboqs/issues/995) the non-CT behaviour that led to [a key-recovery attack on HQC](https://eprint.iacr.org/2021/1485). This attack led to the HQC Round 4 submission being revised. I don't think our tests directly contributed to that attack being discovered, but I could see them providing a starting point for side-channel analysis of (say) the signature on-ramp candidates if/when those are integrated into the library.\r\n\r\nI suppose that running the extended KAT tests and CT tests only at release time would eventually catch these issues, but from a maintenance point of view I'd rather find out about them before we get to the point of cutting a release candidate.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1928023572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-02-05T20:16:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
