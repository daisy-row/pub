{"id":"40141361575","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/449","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/449/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/449/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/449/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/449","id":2397056744,"node_id":"I_kwDOE_A9l86O4C7o","number":449,"title":"Convert EVP_PKEY to uint8_t","user":{"login":"xianglingzhang","id":62652233,"node_id":"MDQ6VXNlcjYyNjUyMjMz","avatar_url":"https://avatars.githubusercontent.com/u/62652233?v=4","gravatar_id":"","url":"https://api.github.com/users/xianglingzhang","html_url":"https://github.com/xianglingzhang","followers_url":"https://api.github.com/users/xianglingzhang/followers","following_url":"https://api.github.com/users/xianglingzhang/following{/other_user}","gists_url":"https://api.github.com/users/xianglingzhang/gists{/gist_id}","starred_url":"https://api.github.com/users/xianglingzhang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xianglingzhang/subscriptions","organizations_url":"https://api.github.com/users/xianglingzhang/orgs","repos_url":"https://api.github.com/users/xianglingzhang/repos","events_url":"https://api.github.com/users/xianglingzhang/events{/privacy}","received_events_url":"https://api.github.com/users/xianglingzhang/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-07-09T03:59:54Z","updated_at":"2024-07-15T06:58:30Z","closed_at":"2024-07-15T06:58:29Z","author_association":"NONE","active_lock_reason":null,"body":"I want to input the public key in a certificate into the interface\r\n\r\n`OQS_KEM_encaps(const OQS_KEM *kem, uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key)`\r\n\r\nbut it is \"EVP_PKEY\" type, so how to convert it to \"uint8_t\" ?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/449/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227816102","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/449#issuecomment-2227816102","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/449","id":2227816102,"node_id":"IC_kwDOE_A9l86Eycam","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T06:58:29Z","updated_at":"2024-07-15T06:58:29Z","author_association":"MEMBER","body":"Extracting public key material from an `openssl` data structure is an OpenSSL question and has nothing to do with OQS(provider).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227816102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T06:58:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40141394118","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/447","id":2389190625,"node_id":"I_kwDOE_A9l86OaCfh","number":447,"title":"Can we use an EVP_RAND instance?","user":{"login":"knightcode","id":1806693,"node_id":"MDQ6VXNlcjE4MDY2OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1806693?v=4","gravatar_id":"","url":"https://api.github.com/users/knightcode","html_url":"https://github.com/knightcode","followers_url":"https://api.github.com/users/knightcode/followers","following_url":"https://api.github.com/users/knightcode/following{/other_user}","gists_url":"https://api.github.com/users/knightcode/gists{/gist_id}","starred_url":"https://api.github.com/users/knightcode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knightcode/subscriptions","organizations_url":"https://api.github.com/users/knightcode/orgs","repos_url":"https://api.github.com/users/knightcode/repos","events_url":"https://api.github.com/users/knightcode/events{/privacy}","received_events_url":"https://api.github.com/users/knightcode/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-07-03T18:11:45Z","updated_at":"2024-07-15T06:59:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Is it possible to pass an EVP_RAND instance to be used in the key generation calls? Could it potentially be possible?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227817887","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/447#issuecomment-2227817887","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447","id":2227817887,"node_id":"IC_kwDOE_A9l86Eyc2f","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T06:59:53Z","updated_at":"2024-07-15T06:59:53Z","author_association":"MEMBER","body":"@SWilson4 would it be sensible then to assign this issue to this person so everyone immediately sees this issue as being worked on?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227817887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T06:59:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40141488271","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/328","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/328/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/328/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/328/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/328","id":2060788201,"node_id":"I_kwDOE_A9l8561SHp","number":328,"title":"Automate testing for backlevel liboqs variants","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":2701983054,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU0","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2701983055,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU1","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-12-30T16:12:23Z","updated_at":"2024-07-15T07:03:30Z","closed_at":"2024-07-15T07:03:30Z","author_association":"MEMBER","active_lock_reason":null,"body":"`oqsprovider` can & must be built independently of `liboqs`. Together with separate packaging and distribution mechanisms for `liboqs` and `oqsprovider` this necessitates the capability to generate suitable `oqsprovider` code for different, possibly pre-installed, versions of `liboqs`. This capability is enabled by retaining and using suitable \"generator.yml\" files for different `liboqs` versions. \r\n\r\nThis issue it to suggest automating correct code generation and testing for (various) such `oqsprovider`+specific (downlevel) `liboqs` versions. \r\n\r\nTagging particularly @dstebila for input/suggestions how, whether & how far back to enable this as well as whether it is worth while integrating such test facility into the CI chain of `liboqs` to avoid the possibility to create mismatching versions of `liboqs` and `oqsprovider` (as happened with 0.9.1).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/328/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227822824","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/328#issuecomment-2227822824","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/328","id":2227822824,"node_id":"IC_kwDOE_A9l86EyeDo","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T07:03:30Z","updated_at":"2024-07-15T07:03:30Z","author_association":"MEMBER","body":"Closing as no feedback received as to the value of supporting downlevel versions of `liboqs`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227822824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T07:03:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40141527983","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/269","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/269/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/269/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/269/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/269","id":1924042887,"node_id":"I_kwDOE_A9l85yrpCH","number":269,"title":"What hybrid key concepts should be supported?","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":2701983059,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU5","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/futurework","name":"futurework","color":"ffffff","default":false,"description":"This may or may not be worked on"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-03T12:29:53Z","updated_at":"2024-07-15T07:05:06Z","closed_at":"2024-07-15T07:05:06Z","author_association":"MEMBER","active_lock_reason":null,"body":"Followup to https://github.com/open-quantum-safe/oqs-provider/pull/268#discussion_r1342092145: This is to review all code for proper use of \"numkeys\" struct for hybrid keys","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/269/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227824996","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/269#issuecomment-2227824996","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/269","id":2227824996,"node_id":"IC_kwDOE_A9l86Eyelk","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T07:05:06Z","updated_at":"2024-07-15T07:05:06Z","author_association":"MEMBER","body":"Closing due to no feedback/interest for other hybrid key concepts expressed.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227824996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T07:05:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40142507933","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/450","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/450/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/450/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/450/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/450","id":2408036386,"node_id":"I_kwDOE_A9l86Ph7gi","number":450,"title":"Generate a Kyber Certificate","user":{"login":"xianglingzhang","id":62652233,"node_id":"MDQ6VXNlcjYyNjUyMjMz","avatar_url":"https://avatars.githubusercontent.com/u/62652233?v=4","gravatar_id":"","url":"https://api.github.com/users/xianglingzhang","html_url":"https://github.com/xianglingzhang","followers_url":"https://api.github.com/users/xianglingzhang/followers","following_url":"https://api.github.com/users/xianglingzhang/following{/other_user}","gists_url":"https://api.github.com/users/xianglingzhang/gists{/gist_id}","starred_url":"https://api.github.com/users/xianglingzhang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xianglingzhang/subscriptions","organizations_url":"https://api.github.com/users/xianglingzhang/orgs","repos_url":"https://api.github.com/users/xianglingzhang/repos","events_url":"https://api.github.com/users/xianglingzhang/events{/privacy}","received_events_url":"https://api.github.com/users/xianglingzhang/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-07-15T07:18:17Z","updated_at":"2024-07-15T07:42:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nHow to generate a Kyber certificate containing a Kyber public key? I think OQS-provider can only generate a Dilithium certificate, but I need to create a CSR for a key pair whose algorithm does not allow signing (like Kyber). How to do it?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/450/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227878453","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/450#issuecomment-2227878453","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/450","id":2227878453,"node_id":"IC_kwDOE_A9l86Eyro1","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T07:42:26Z","updated_at":"2024-07-15T07:42:26Z","author_association":"MEMBER","body":"Hmm -- isn't a CSR a digitally signed data structure? How should that work with an algorithm than cannot sign? Which spec are you referring to with this request?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2227878453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T07:42:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40142888744","type":"IssueCommentEvent","actor":{"id":49699333,"login":"dependabot[bot]","display_login":"dependabot","gravatar_id":"","url":"https://api.github.com/users/dependabot[bot]","avatar_url":"https://avatars.githubusercontent.com/u/49699333?"},"repo":{"id":282304934,"name":"open-quantum-safe/www","url":"https://api.github.com/repos/open-quantum-safe/www"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/www/issues/205","repository_url":"https://api.github.com/repos/open-quantum-safe/www","labels_url":"https://api.github.com/repos/open-quantum-safe/www/issues/205/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/www/issues/205/comments","events_url":"https://api.github.com/repos/open-quantum-safe/www/issues/205/events","html_url":"https://github.com/open-quantum-safe/www/pull/205","id":2394921945,"node_id":"PR_kwDOENOhps50qEKo","number":205,"title":"Bump _includes/liboqs from `a5ec23c` to `d2089c5`","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2734248192,"node_id":"MDU6TGFiZWwyNzM0MjQ4MTky","url":"https://api.github.com/repos/open-quantum-safe/www/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"},{"id":2742558684,"node_id":"MDU6TGFiZWwyNzQyNTU4Njg0","url":"https://api.github.com/repos/open-quantum-safe/www/labels/submodules","name":"submodules","color":"000000","default":false,"description":"Pull requests that update Submodules code"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-07-08T07:56:49Z","updated_at":"2024-07-15T07:56:13Z","closed_at":"2024-07-15T07:56:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/www/pulls/205","html_url":"https://github.com/open-quantum-safe/www/pull/205","diff_url":"https://github.com/open-quantum-safe/www/pull/205.diff","patch_url":"https://github.com/open-quantum-safe/www/pull/205.patch","merged_at":null},"body":"Bumps [_includes/liboqs](https://github.com/open-quantum-safe/liboqs) from `a5ec23c` to `d2089c5`.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/d2089c5017fc45f4dce2f6516b3e9ad337946600\"><code>d2089c5</code></a> Add OpenSSF scorecard</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/51ddd33cc04d12bd47c8639c1254714879f4cdf3\"><code>51ddd33</code></a> Add XMSS-SHAKE256_{10, 16, 20}_256 parameters (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1819\">#1819</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/e3f05cbfba4552067e2c0de524c1049a864c5f2d\"><code>e3f05cb</code></a> add XMSS-SHAKE256_*_192 parameters (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1818\">#1818</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/5e3111617b56cea11c8b867bd6ca7ec792bf45d3\"><code>5e31116</code></a> Add XMSS-SHA256_{10, 16, 20}_192 parameters (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1817\">#1817</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/21ab5930f0d64d8eb5f78b1a104bea8dd4c1e2f0\"><code>21ab593</code></a> Increment version [skip ci] (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1813\">#1813</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/c8a2beb5a6f73d3e4b1180b8f9bb25c43e3858d9\"><code>c8a2beb</code></a> Fix test_alg_info.py on Windows platform (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1821\">#1821</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/6ee5de25220e490cf7c895939c0fa001e5f8e2ce\"><code>6ee5de2</code></a> Move Linux ARM64 &quot;build&quot; test from CircleCI to GitHub Actions (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1814\">#1814</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/39688e908b239b77b9775c5469df244021953d5d\"><code>39688e9</code></a> Forward-declare OQS_SIG type in sig_stfl.h (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1820\">#1820</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/971173ad82327ede5027b6d48e81bcaff92f417c\"><code>971173a</code></a> Add Stateful Signature (XMSS and LMS) (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1650\">#1650</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/0a89cf6fd4b8937c4d458ca333bfac00f70bbf52\"><code>0a89cf6</code></a> ensure no autoupdate</li>\n<li>Additional commits viewable in <a href=\"https://github.com/open-quantum-safe/liboqs/compare/a5ec23cf19763d36a558b8358345823ae45d57e5...d2089c5017fc45f4dce2f6516b3e9ad337946600\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/www/issues/205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/www/issues/205/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/www/issues/comments/2227900641","html_url":"https://github.com/open-quantum-safe/www/pull/205#issuecomment-2227900641","issue_url":"https://api.github.com/repos/open-quantum-safe/www/issues/205","id":2227900641,"node_id":"IC_kwDOENOhps6EyxDh","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"created_at":"2024-07-15T07:56:12Z","updated_at":"2024-07-15T07:56:12Z","author_association":"CONTRIBUTOR","body":"Superseded by #206.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/www/issues/comments/2227900641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":{"id":29110,"slug":"dependabot","node_id":"MDM6QXBwMjkxMTA=","owner":{"login":"github","id":9919,"node_id":"MDEyOk9yZ2FuaXphdGlvbjk5MTk=","avatar_url":"https://avatars.githubusercontent.com/u/9919?v=4","gravatar_id":"","url":"https://api.github.com/users/github","html_url":"https://github.com/github","followers_url":"https://api.github.com/users/github/followers","following_url":"https://api.github.com/users/github/following{/other_user}","gists_url":"https://api.github.com/users/github/gists{/gist_id}","starred_url":"https://api.github.com/users/github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github/subscriptions","organizations_url":"https://api.github.com/users/github/orgs","repos_url":"https://api.github.com/users/github/repos","events_url":"https://api.github.com/users/github/events{/privacy}","received_events_url":"https://api.github.com/users/github/received_events","type":"Organization","site_admin":false},"name":"Dependabot","description":"","external_url":"https://dependabot-api.githubapp.com","html_url":"https://github.com/apps/dependabot","created_at":"2019-04-16T22:34:25Z","updated_at":"2024-03-20T21:06:35Z","permissions":{"actions":"read","checks":"write","contents":"write","issues":"write","members":"read","metadata":"read","pull_requests":"write","statuses":"read","vulnerability_alerts":"read","workflows":"write"},"events":["check_suite","issues","issue_comment","label","pull_request","pull_request_review","pull_request_review_comment","repository"]}}},"public":true,"created_at":"2024-07-15T07:56:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40144684663","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/319","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/319/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/319/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/319/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/319","id":2046708667,"node_id":"I_kwDOE_A9l855_ku7","number":319,"title":"how to integrate provider with openssl no-shared static build","user":{"login":"vkosuri","id":13664257,"node_id":"MDQ6VXNlcjEzNjY0MjU3","avatar_url":"https://avatars.githubusercontent.com/u/13664257?v=4","gravatar_id":"","url":"https://api.github.com/users/vkosuri","html_url":"https://github.com/vkosuri","followers_url":"https://api.github.com/users/vkosuri/followers","following_url":"https://api.github.com/users/vkosuri/following{/other_user}","gists_url":"https://api.github.com/users/vkosuri/gists{/gist_id}","starred_url":"https://api.github.com/users/vkosuri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vkosuri/subscriptions","organizations_url":"https://api.github.com/users/vkosuri/orgs","repos_url":"https://api.github.com/users/vkosuri/repos","events_url":"https://api.github.com/users/vkosuri/events{/privacy}","received_events_url":"https://api.github.com/users/vkosuri/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-12-18T13:50:42Z","updated_at":"2024-07-15T08:56:58Z","closed_at":"2024-07-15T08:56:57Z","author_association":"NONE","active_lock_reason":null,"body":"\r\nCurrently the fullbuild.sh https://github.com/open-quantum-safe/oqs-provider/blob/main/scripts/fullbuild.sh#L54 is configuring openssl without no-shared.\r\n\r\nI tried to build openssl static with no-shared, build provider.so, and try to do it's not listing any oqs provider. Ami I missing anything here?\r\n\r\nOPENSSL_MODULES=. ./openssl-static list -provider oqsprovider -verbose\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/319/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228007860","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/319#issuecomment-2228007860","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/319","id":2228007860,"node_id":"IC_kwDOE_A9l86EzLO0","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T08:56:57Z","updated_at":"2024-07-15T08:56:57Z","author_association":"MEMBER","body":"Closing without further input received. Please re-open if new information is available (or comment with your solution if you found one for the benefit of others), @vkosuri ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228007860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T08:56:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40144862655","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Using PKCS#7 OpenSSL API","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[{"id":6086045309,"node_id":"LA_kwDOE_A9l88AAAABasGufQ","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/upstream","name":"upstream","color":"bfdadc","default":false,"description":"openssl dependency"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2023-09-08T14:40:38Z","updated_at":"2024-07-15T09:02:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228018791","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-2228018791","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":2228018791,"node_id":"IC_kwDOE_A9l86EzN5n","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T09:02:35Z","updated_at":"2024-07-15T09:02:35Z","author_association":"MEMBER","body":"While \"cleaning up\" I came across this issue again, @levitte Any news on this? Would it make sense to move this into an (new or existing?) OpenSSL issue for more people to notice/possibly contribute as it doesn't seem OQS-specific?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228018791/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T09:02:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40153217604","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/447","id":2389190625,"node_id":"I_kwDOE_A9l86OaCfh","number":447,"title":"Support deterministic key generation","user":{"login":"knightcode","id":1806693,"node_id":"MDQ6VXNlcjE4MDY2OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1806693?v=4","gravatar_id":"","url":"https://api.github.com/users/knightcode","html_url":"https://github.com/knightcode","followers_url":"https://api.github.com/users/knightcode/followers","following_url":"https://api.github.com/users/knightcode/following{/other_user}","gists_url":"https://api.github.com/users/knightcode/gists{/gist_id}","starred_url":"https://api.github.com/users/knightcode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knightcode/subscriptions","organizations_url":"https://api.github.com/users/knightcode/orgs","repos_url":"https://api.github.com/users/knightcode/repos","events_url":"https://api.github.com/users/knightcode/events{/privacy}","received_events_url":"https://api.github.com/users/knightcode/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2024-07-03T18:11:45Z","updated_at":"2024-07-15T13:28:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Is it possible to pass an EVP_RAND instance to be used in the key generation calls? Could it potentially be possible?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228507072","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/447#issuecomment-2228507072","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447","id":2228507072,"node_id":"IC_kwDOE_A9l86E1FHA","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T13:28:05Z","updated_at":"2024-07-15T13:28:05Z","author_association":"MEMBER","body":"> @SWilson4 would it be sensible then to assign this issue to this person so everyone immediately sees this issue as being worked on?\r\n\r\nGood call---I tried just now, but the developer (@Eddy-M-K) isn't actually part of any of our GitHub teams, so I don't believe I can assign him issues. I assigned the liboqs issue to myself as I'm overseeing the work. I don't actually know the required steps/effort to lift the future deterministic keygen functionality from liboqs into the provider, but for now I've assigned this one to myself as well to reflect that it is at least in the pipeline pending ongoing work. I also took the liberty of renaming this issue to reflect the discussion after the initial question.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228507072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T13:28:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40153502040","type":"IssueCommentEvent","actor":{"id":698918,"login":"levitte","display_login":"levitte","gravatar_id":"","url":"https://api.github.com/users/levitte","avatar_url":"https://avatars.githubusercontent.com/u/698918?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Using PKCS#7 OpenSSL API","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[{"id":6086045309,"node_id":"LA_kwDOE_A9l88AAAABasGufQ","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/upstream","name":"upstream","color":"bfdadc","default":false,"description":"openssl dependency"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2023-09-08T14:40:38Z","updated_at":"2024-07-15T13:36:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228524587","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-2228524587","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":2228524587,"node_id":"IC_kwDOE_A9l86E1JYr","user":{"login":"levitte","id":698918,"node_id":"MDQ6VXNlcjY5ODkxOA==","avatar_url":"https://avatars.githubusercontent.com/u/698918?v=4","gravatar_id":"","url":"https://api.github.com/users/levitte","html_url":"https://github.com/levitte","followers_url":"https://api.github.com/users/levitte/followers","following_url":"https://api.github.com/users/levitte/following{/other_user}","gists_url":"https://api.github.com/users/levitte/gists{/gist_id}","starred_url":"https://api.github.com/users/levitte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levitte/subscriptions","organizations_url":"https://api.github.com/users/levitte/orgs","repos_url":"https://api.github.com/users/levitte/repos","events_url":"https://api.github.com/users/levitte/events{/privacy}","received_events_url":"https://api.github.com/users/levitte/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T13:36:00Z","updated_at":"2024-07-15T13:36:00Z","author_association":"CONTRIBUTOR","body":"Well, I actually have some work items coming up that are related to the ctrls that are mentioned here.  They are basically all about passing the AlgorithmIdentifier params back and forth, just that the ctrls are [ahem] quite convoluted.  I'm taking the approach that the AlgoID params can be passed through the usual OSSL_PARAM passing in a more general way (we already have this sort of functionality for ciphers, specifically), and it will be up to the provider to react appropriately.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228524587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T13:36:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40158396363","type":"IssueCommentEvent","actor":{"id":7552310,"login":"geedo0","display_login":"geedo0","gravatar_id":"","url":"https://api.github.com/users/geedo0","avatar_url":"https://avatars.githubusercontent.com/u/7552310?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/135","id":1570324001,"node_id":"I_kwDOBsoLV85dmT4h","number":135,"title":"Migrate to OpenSSH 9.2","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-02-03T19:17:26Z","updated_at":"2024-07-15T15:52:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Migrate to the 9.x branch. Interestingly, hybrid PQC is now the *default* since 9.0.\r\n\r\nFrom the 9.0 [release notes](https://www.openssh.com/releasenotes.html):\r\n```\r\n* [ssh(1)](https://man.openbsd.org/ssh.1), [sshd(8)](https://man.openbsd.org/sshd.8): use the hybrid Streamlined NTRU Prime + x25519 key\r\n   exchange method by default (\"sntrup761x25519-sha512@openssh.com\").\r\n   The NTRU algorithm is believed to resist attacks enabled by future\r\n   quantum computers and is paired with the X25519 ECDH key exchange\r\n   (the previous default) as a backstop against any weaknesses in\r\n   NTRU Prime that may be discovered in the future. The combination\r\n   ensures that the hybrid exchange offers at least as good security\r\n   as the status quo.\r\n\r\n   We are making this change now (i.e. ahead of cryptographically-\r\n   relevant quantum computers) to prevent \"capture now, decrypt\r\n   later\" attacks where an adversary who can record and store SSH\r\n   session ciphertext would be able to decrypt it once a sufficiently\r\n   advanced quantum computer is available.\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2228837823","html_url":"https://github.com/open-quantum-safe/openssh/issues/135#issuecomment-2228837823","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","id":2228837823,"node_id":"IC_kwDOBsoLV86E2V2_","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T15:52:30Z","updated_at":"2024-07-15T15:52:30Z","author_association":"NONE","body":"Can someone [disable](https://docs.github.com/en/actions/using-workflows/disabling-and-enabling-a-workflow) the upstream Github workflows on the v9 branch/repository? Historically, I see that only the Circle CI checks should be running (e.g. [last PR on v8](https://github.com/open-quantum-safe/openssh/pull/157)). My latest PR [here](https://github.com/open-quantum-safe/openssh/pull/160) is getting a wall of failures from the upstream CI checks.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2228837823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T15:52:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40159984500","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/135","id":1570324001,"node_id":"I_kwDOBsoLV85dmT4h","number":135,"title":"Migrate to OpenSSH 9.2","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-02-03T19:17:26Z","updated_at":"2024-07-15T16:45:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Migrate to the 9.x branch. Interestingly, hybrid PQC is now the *default* since 9.0.\r\n\r\nFrom the 9.0 [release notes](https://www.openssh.com/releasenotes.html):\r\n```\r\n* [ssh(1)](https://man.openbsd.org/ssh.1), [sshd(8)](https://man.openbsd.org/sshd.8): use the hybrid Streamlined NTRU Prime + x25519 key\r\n   exchange method by default (\"sntrup761x25519-sha512@openssh.com\").\r\n   The NTRU algorithm is believed to resist attacks enabled by future\r\n   quantum computers and is paired with the X25519 ECDH key exchange\r\n   (the previous default) as a backstop against any weaknesses in\r\n   NTRU Prime that may be discovered in the future. The combination\r\n   ensures that the hybrid exchange offers at least as good security\r\n   as the status quo.\r\n\r\n   We are making this change now (i.e. ahead of cryptographically-\r\n   relevant quantum computers) to prevent \"capture now, decrypt\r\n   later\" attacks where an adversary who can record and store SSH\r\n   session ciphertext would be able to decrypt it once a sufficiently\r\n   advanced quantum computer is available.\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2228950473","html_url":"https://github.com/open-quantum-safe/openssh/issues/135#issuecomment-2228950473","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","id":2228950473,"node_id":"IC_kwDOBsoLV86E2xXJ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T16:45:52Z","updated_at":"2024-07-15T16:45:52Z","author_association":"MEMBER","body":"> Can someone [disable](https://docs.github.com/en/actions/using-workflows/disabling-and-enabling-a-workflow) the upstream Github workflows on the v9 branch/repository?\r\n\r\nJust completely disabled these long-running beasts. Also better for the environment. Please let us know when they would be good to run again.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2228950473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T16:45:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40160059490","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/447","id":2389190625,"node_id":"I_kwDOE_A9l86OaCfh","number":447,"title":"Support deterministic key generation","user":{"login":"knightcode","id":1806693,"node_id":"MDQ6VXNlcjE4MDY2OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1806693?v=4","gravatar_id":"","url":"https://api.github.com/users/knightcode","html_url":"https://github.com/knightcode","followers_url":"https://api.github.com/users/knightcode/followers","following_url":"https://api.github.com/users/knightcode/following{/other_user}","gists_url":"https://api.github.com/users/knightcode/gists{/gist_id}","starred_url":"https://api.github.com/users/knightcode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knightcode/subscriptions","organizations_url":"https://api.github.com/users/knightcode/orgs","repos_url":"https://api.github.com/users/knightcode/repos","events_url":"https://api.github.com/users/knightcode/events{/privacy}","received_events_url":"https://api.github.com/users/knightcode/received_events","type":"User","site_admin":false},"labels":[{"id":2701983054,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU0","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"assignees":[{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2024-07-03T18:11:45Z","updated_at":"2024-07-15T16:48:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Is it possible to pass an EVP_RAND instance to be used in the key generation calls? Could it potentially be possible?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228955281","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/447#issuecomment-2228955281","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447","id":2228955281,"node_id":"IC_kwDOE_A9l86E2yiR","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T16:48:35Z","updated_at":"2024-07-15T16:48:35Z","author_association":"MEMBER","body":"> I don't actually know the required steps/effort to lift the future deterministic keygen functionality from liboqs into the provider\r\n\r\nWell, that depends a bit on the API that `liboqs` will make available for that. When in draft PR status, let's discuss if you didn't already find a good spot to add it yourself (most likely in the init routines of the provider).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228955281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T16:48:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40160105906","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Using PKCS#7 OpenSSL API","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[{"id":6086045309,"node_id":"LA_kwDOE_A9l88AAAABasGufQ","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/upstream","name":"upstream","color":"bfdadc","default":false,"description":"openssl dependency"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2023-09-08T14:40:38Z","updated_at":"2024-07-15T16:50:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228958327","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-2228958327","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":2228958327,"node_id":"IC_kwDOE_A9l86E2zR3","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T16:50:17Z","updated_at":"2024-07-15T16:50:17Z","author_association":"MEMBER","body":"> it will be up to the provider to react appropriately.\r\n\r\nThis provider's all too eager to react ... :-) Let's see whether it's appropriate... :-/ Seriously, thanks for letting me know. Please touch base when I could try something.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2228958327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T16:50:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40160205725","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/135","id":1570324001,"node_id":"I_kwDOBsoLV85dmT4h","number":135,"title":"Migrate to OpenSSH 9.2","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-02-03T19:17:26Z","updated_at":"2024-07-15T16:53:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Migrate to the 9.x branch. Interestingly, hybrid PQC is now the *default* since 9.0.\r\n\r\nFrom the 9.0 [release notes](https://www.openssh.com/releasenotes.html):\r\n```\r\n* [ssh(1)](https://man.openbsd.org/ssh.1), [sshd(8)](https://man.openbsd.org/sshd.8): use the hybrid Streamlined NTRU Prime + x25519 key\r\n   exchange method by default (\"sntrup761x25519-sha512@openssh.com\").\r\n   The NTRU algorithm is believed to resist attacks enabled by future\r\n   quantum computers and is paired with the X25519 ECDH key exchange\r\n   (the previous default) as a backstop against any weaknesses in\r\n   NTRU Prime that may be discovered in the future. The combination\r\n   ensures that the hybrid exchange offers at least as good security\r\n   as the status quo.\r\n\r\n   We are making this change now (i.e. ahead of cryptographically-\r\n   relevant quantum computers) to prevent \"capture now, decrypt\r\n   later\" attacks where an adversary who can record and store SSH\r\n   session ciphertext would be able to decrypt it once a sufficiently\r\n   advanced quantum computer is available.\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2228964817","html_url":"https://github.com/open-quantum-safe/openssh/issues/135#issuecomment-2228964817","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","id":2228964817,"node_id":"IC_kwDOBsoLV86E203R","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T16:53:55Z","updated_at":"2024-07-15T16:53:55Z","author_association":"MEMBER","body":"> Can someone [disable](https://docs.github.com/en/actions/using-workflows/disabling-and-enabling-a-workflow) the upstream Github workflows on the v9 branch/repository?\r\n\r\nJust completely disabled these long-running beasts. Also better for the environment. Please let us know when they would be good to run again.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2228964817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T16:53:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40161427028","type":"IssueCommentEvent","actor":{"id":7552310,"login":"geedo0","display_login":"geedo0","gravatar_id":"","url":"https://api.github.com/users/geedo0","avatar_url":"https://avatars.githubusercontent.com/u/7552310?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/135","id":1570324001,"node_id":"I_kwDOBsoLV85dmT4h","number":135,"title":"Migrate to OpenSSH 9.2","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-02-03T19:17:26Z","updated_at":"2024-07-15T17:37:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Migrate to the 9.x branch. Interestingly, hybrid PQC is now the *default* since 9.0.\r\n\r\nFrom the 9.0 [release notes](https://www.openssh.com/releasenotes.html):\r\n```\r\n* [ssh(1)](https://man.openbsd.org/ssh.1), [sshd(8)](https://man.openbsd.org/sshd.8): use the hybrid Streamlined NTRU Prime + x25519 key\r\n   exchange method by default (\"sntrup761x25519-sha512@openssh.com\").\r\n   The NTRU algorithm is believed to resist attacks enabled by future\r\n   quantum computers and is paired with the X25519 ECDH key exchange\r\n   (the previous default) as a backstop against any weaknesses in\r\n   NTRU Prime that may be discovered in the future. The combination\r\n   ensures that the hybrid exchange offers at least as good security\r\n   as the status quo.\r\n\r\n   We are making this change now (i.e. ahead of cryptographically-\r\n   relevant quantum computers) to prevent \"capture now, decrypt\r\n   later\" attacks where an adversary who can record and store SSH\r\n   session ciphertext would be able to decrypt it once a sufficiently\r\n   advanced quantum computer is available.\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2229042477","html_url":"https://github.com/open-quantum-safe/openssh/issues/135#issuecomment-2229042477","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","id":2229042477,"node_id":"IC_kwDOBsoLV86E3H0t","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T17:37:07Z","updated_at":"2024-07-15T17:37:07Z","author_association":"NONE","body":"Thanks! Getting these to run seem to be long-running issue (Issues #89, #90). I took a peek and it looks like two things need to get done: 1 - build/setup scripts need to be updated to support compile/link against liboqs (straightforward) 2 - `make tests` target needs to succeed for all tests. The latter piece requires a lot of net-new development on the OQS fork to root-cause and workaround all the failures and feature gaps.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2229042477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T17:37:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40168593733","type":"IssueCommentEvent","actor":{"id":13952758,"login":"ajbozarth","display_login":"ajbozarth","gravatar_id":"","url":"https://api.github.com/users/ajbozarth","avatar_url":"https://avatars.githubusercontent.com/u/13952758?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/286","id":2378817858,"node_id":"I_kwDODP--n86NyeFC","number":286,"title":"Update OQS Demos Project","user":{"login":"ajbozarth","id":13952758,"node_id":"MDQ6VXNlcjEzOTUyNzU4","avatar_url":"https://avatars.githubusercontent.com/u/13952758?v=4","gravatar_id":"","url":"https://api.github.com/users/ajbozarth","html_url":"https://github.com/ajbozarth","followers_url":"https://api.github.com/users/ajbozarth/followers","following_url":"https://api.github.com/users/ajbozarth/following{/other_user}","gists_url":"https://api.github.com/users/ajbozarth/gists{/gist_id}","starred_url":"https://api.github.com/users/ajbozarth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajbozarth/subscriptions","organizations_url":"https://api.github.com/users/ajbozarth/orgs","repos_url":"https://api.github.com/users/ajbozarth/repos","events_url":"https://api.github.com/users/ajbozarth/events{/privacy}","received_events_url":"https://api.github.com/users/ajbozarth/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-06-27T18:19:29Z","updated_at":"2024-07-15T22:33:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"OQS Demos as a project has gotten out of date due to lack of contribution. In order to bring the demos project back up to date and reinvigorate it we had a planning meeting on June 27th 2024. The minutes for that meeting will be posted below and a more in depth planning proposal will be shared and discussed here in the coming weeks.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2229546972","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/286#issuecomment-2229546972","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286","id":2229546972,"node_id":"IC_kwDODP--n86E5C_c","user":{"login":"ajbozarth","id":13952758,"node_id":"MDQ6VXNlcjEzOTUyNzU4","avatar_url":"https://avatars.githubusercontent.com/u/13952758?v=4","gravatar_id":"","url":"https://api.github.com/users/ajbozarth","html_url":"https://github.com/ajbozarth","followers_url":"https://api.github.com/users/ajbozarth/followers","following_url":"https://api.github.com/users/ajbozarth/following{/other_user}","gists_url":"https://api.github.com/users/ajbozarth/gists{/gist_id}","starred_url":"https://api.github.com/users/ajbozarth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajbozarth/subscriptions","organizations_url":"https://api.github.com/users/ajbozarth/orgs","repos_url":"https://api.github.com/users/ajbozarth/repos","events_url":"https://api.github.com/users/ajbozarth/events{/privacy}","received_events_url":"https://api.github.com/users/ajbozarth/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T22:33:01Z","updated_at":"2024-07-15T22:33:01Z","author_association":"NONE","body":"# Plan to revitalize OQS Demos\r\n\r\nThis is a proposed road map to revitalize the OQS demos project, the phases do not need to be executed sequentially and can handled in parallel for any given demo. Once I have received general approval for the road map I will begin work on Phase 1. If Phase 1 begins to take too long, we will start Phase 2 early and work on them in parallel. We can define \"too long\" as a community prior to starting Phase 1 (examples: 1 month, 3 months, 6 months)\r\n\r\n## Phase 1: Creating the project board\r\n\r\n1. Create a GitHub project board for tracking the revitalization issues (both existing and yet to be opened).\r\n\r\n2. Go through each existing demo and create a tracking issue. In each tracking issue answer the following questions. There are some existing issues that may be repurposed and added to the project board to handle these items (eg #272 for tracking HAPRoxy)\r\n\r\n    1. What is the current state of the demo? Is it working, out of date, or broken?\r\n    2. What version of code is the demo running on? (eg OpenSSL 1.1.1 vs 3)\r\n    3. What changes does the demo make to the various projects it installs? What configurations are made?\r\n    4. What elements of the demo distinguish it from other demos or the default installation? (eg non-default liboqs configs)\r\n\r\n3. Open actionable sub-issues for updating demos based on the information gathered above.\r\n\r\n4. Prioritize the project board with an aim to focus on higher priority demos first, even starting phase 2 on higher priority demos before finishing phase 1 if necessary. \r\n\r\n## Phase 2: Executing the project board\r\n\r\n1. Start work on the actionable issues created in Phase 1. This step in Phase 2 can start separately for each demo as its action items are ready, allowing for Phase II to run in parallel with parts of Phase I if there is interest in the project.\r\n\r\n2. Update and create documentation. In addition to documentation for each demo we will want to create project documentation.\r\n\r\n    1. Online demo lifecycle and contribution guidance\r\n    2. Project purpose and goals\r\n\r\n## Phase 3: The future\r\n\r\n1. Open issues and PRs on upstream projects based on the changes demos make to enable PQ. Our goal for any given demo is for its content to eventually exist natively in the various upstream projects it uses.\r\n\r\n3. Reach out to the PQCA member companies to donate internal demos they have created","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2229546972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T22:33:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40168627397","type":"IssueCommentEvent","actor":{"id":13952758,"login":"ajbozarth","display_login":"ajbozarth","gravatar_id":"","url":"https://api.github.com/users/ajbozarth","avatar_url":"https://avatars.githubusercontent.com/u/13952758?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/286","id":2378817858,"node_id":"I_kwDODP--n86NyeFC","number":286,"title":"Update OQS Demos Project","user":{"login":"ajbozarth","id":13952758,"node_id":"MDQ6VXNlcjEzOTUyNzU4","avatar_url":"https://avatars.githubusercontent.com/u/13952758?v=4","gravatar_id":"","url":"https://api.github.com/users/ajbozarth","html_url":"https://github.com/ajbozarth","followers_url":"https://api.github.com/users/ajbozarth/followers","following_url":"https://api.github.com/users/ajbozarth/following{/other_user}","gists_url":"https://api.github.com/users/ajbozarth/gists{/gist_id}","starred_url":"https://api.github.com/users/ajbozarth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajbozarth/subscriptions","organizations_url":"https://api.github.com/users/ajbozarth/orgs","repos_url":"https://api.github.com/users/ajbozarth/repos","events_url":"https://api.github.com/users/ajbozarth/events{/privacy}","received_events_url":"https://api.github.com/users/ajbozarth/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-06-27T18:19:29Z","updated_at":"2024-07-15T22:35:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"OQS Demos as a project has gotten out of date due to lack of contribution. In order to bring the demos project back up to date and reinvigorate it we had a planning meeting on June 27th 2024. The minutes for that meeting will be posted below and a more in depth planning proposal will be shared and discussed here in the coming weeks.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2229548992","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/286#issuecomment-2229548992","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/286","id":2229548992,"node_id":"IC_kwDODP--n86E5DfA","user":{"login":"ajbozarth","id":13952758,"node_id":"MDQ6VXNlcjEzOTUyNzU4","avatar_url":"https://avatars.githubusercontent.com/u/13952758?v=4","gravatar_id":"","url":"https://api.github.com/users/ajbozarth","html_url":"https://github.com/ajbozarth","followers_url":"https://api.github.com/users/ajbozarth/followers","following_url":"https://api.github.com/users/ajbozarth/following{/other_user}","gists_url":"https://api.github.com/users/ajbozarth/gists{/gist_id}","starred_url":"https://api.github.com/users/ajbozarth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajbozarth/subscriptions","organizations_url":"https://api.github.com/users/ajbozarth/orgs","repos_url":"https://api.github.com/users/ajbozarth/repos","events_url":"https://api.github.com/users/ajbozarth/events{/privacy}","received_events_url":"https://api.github.com/users/ajbozarth/received_events","type":"User","site_admin":false},"created_at":"2024-07-15T22:34:59Z","updated_at":"2024-07-15T22:34:59Z","author_association":"NONE","body":"Sorry for the delay, I've shared my proposed plan above and expect further discussion here and in this week's OQS call. Depending on feedback I expect well will leave it open to discussion for at least a week (if not longer)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2229548992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-15T22:35:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
