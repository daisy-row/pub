{"id":"40450126684","type":"IssueCommentEvent","actor":{"id":698918,"login":"levitte","display_login":"levitte","gravatar_id":"","url":"https://api.github.com/users/levitte","avatar_url":"https://avatars.githubusercontent.com/u/698918?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Using PKCS#7 OpenSSL API","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[{"id":6086045309,"node_id":"LA_kwDOE_A9l88AAAABasGufQ","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/upstream","name":"upstream","color":"bfdadc","default":false,"description":"openssl dependency"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":20,"created_at":"2023-09-08T14:40:38Z","updated_at":"2024-07-25T07:17:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2249626191","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-2249626191","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":2249626191,"node_id":"IC_kwDOE_A9l86GFpJP","user":{"login":"levitte","id":698918,"node_id":"MDQ6VXNlcjY5ODkxOA==","avatar_url":"https://avatars.githubusercontent.com/u/698918?v=4","gravatar_id":"","url":"https://api.github.com/users/levitte","html_url":"https://github.com/levitte","followers_url":"https://api.github.com/users/levitte/followers","following_url":"https://api.github.com/users/levitte/following{/other_user}","gists_url":"https://api.github.com/users/levitte/gists{/gist_id}","starred_url":"https://api.github.com/users/levitte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levitte/subscriptions","organizations_url":"https://api.github.com/users/levitte/orgs","repos_url":"https://api.github.com/users/levitte/repos","events_url":"https://api.github.com/users/levitte/events{/privacy}","received_events_url":"https://api.github.com/users/levitte/received_events","type":"User","site_admin":false},"created_at":"2024-07-25T07:17:30Z","updated_at":"2024-07-25T07:17:30Z","author_association":"CONTRIBUTOR","body":"I've finally started specifying how that should work.  The base idea is that it should all work through OSSL_PARAM, like I said earlier.\r\n\r\nThe supporting OSSL_PARAM keys are (hopefully, pending approval) going to be:\r\n\r\n- \"algorithm-id\" (macro: `ALG_PARAM_ALGORITHM_ID`), a gettable, for which the provider implementation is expected to respond with a DER coded AlgorithmIdentifier for the current invocation.\r\n- \"algorithm-id-params\" (macro: `ALG_PARAM_ALGORITHM_ID_PARAMS`), both a gettable and a settable, to pass AlgorithmIdentifier.parameters, in its exact binary form.\r\n  (it shouldn't be necessary to have it as a gettable, most applications should find the full AlgorithmIdentifier, i.e. \"algorithm-id\", more suitable, but we already have a precedent with `EVP_CIPHER_param_to_asn1()`, which utilizes this OSSL_PARAM key.\r\n\r\nThat should cover all the *intended* uses of `EVP_PKEY_CTRL_{PKCS7,CMS}_{DECRYPT,ENCRYPT,SIGN}` insofar as passing data between the calling application/library and the backend (provider implementation).  Anything else, at least on the backend, should simply be the backend reacting to being passed AlgorithmIdentifier.parameters.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2249626191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-25T07:17:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40450585252","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/45","id":2380046475,"node_id":"I_kwDOLITcCM6N3KCL","number":45,"title":"Roles of maintainers & contributors","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":7138969578,"node_id":"LA_kwDOLITcCM8AAAABqYQH6g","url":"https://api.github.com/repos/open-quantum-safe/tsc/labels/High%20priority","name":"High priority","color":"006b75","default":false,"description":"Should be dealt with soon"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-06-28T09:55:05Z","updated_at":"2024-07-25T07:33:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The core sub projects, `liboqs` and `oqs-provider` had well-defined roles, responsibilities and expectations as documented in their respective GOVERNANCE.md files.\r\n\r\nAs part of their take-over, the LF/PQCA team has chosen to disregard and invalidate those files and rules: Maintainers for example don't have administrative GH rights any more, leading to all kinds of new discussions and complications, e.g., when doing releases.\r\n\r\nThereby (?) and at least in my mind there does not seem to exist a well-defined understanding as to which responsibilities and obligations PQCA assigns to contributors and maintainers and how these map to GH rights.\r\n\r\nThis issue is to propose a discussion as to what tasks, responsibilities and rights are to be assigned to contributors and maintainers. This should serve to let any present and future contributors and maintainers see what are the project's expectations towards them and also inform the (automated) setting of GH rights. If no discussion is wanted, this issue is to request the LF/PQCA team to post a documentation as to what they want maintainers and contributors do so present contributors and maintainers can adjust their expectations or contribution level accordingly.\r\n\r\nFor example, are maintainers in the PQCA sense\r\n- still expected to know the code of a specific project inside-out (i.e., be active contributors) or not, i.e., have more of a \"management\" function? \r\n- expected to do releases or should that be done by different people?\r\n- expected to review & fix security vulnerabilities or is that to be delegated to people specializing in such task but not necessarily knowing the code?\r\n- expected to review PRs and discussion entries or is that to be delegated to yet other team(s)?\r\n- still to be attributed with the GH \"maintainer\" label (AFAIK externally understood as carried by people who know the code) or does that need to be reconsidered (IMO on a per-sub project basis)?\r\n\r\nAs usual, any input, e.g., pointers to existing documentation on these roles very welcome.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2249652624","html_url":"https://github.com/open-quantum-safe/tsc/issues/45#issuecomment-2249652624","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45","id":2249652624,"node_id":"IC_kwDOLITcCM6GFvmQ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-25T07:33:15Z","updated_at":"2024-07-25T07:33:15Z","author_association":"MEMBER","body":"The documented (currently only in oqsprovider) release procedure exactly did away with \"key person risk\". Everyone with Commit rights can now do releases.\n\nBut I wonder whether this is the real problem ( @ryjones now seems to be a \"key person\" everyone has to request for help or permission): As you correctly point out, things worked well before LF took over OQS. What has changed since is that the 2 \"key persons\", coincidentally also the  maintainers and responsible for more than 50% of all code, have practically ceased to technically contribute. For Douglas I can only speculate, but I guess all the LF overhead meetings have siphoned off the time for actual technical work that he could contribute to OQS next to his main/day job. I had fortunately decided from the start to not be involved in any of the PQCA management entities but the lack of help received from the LF team (just one tiny point in case: their feedback on this issue) stopped me from working effectively in the limited environment they created. About a year ago, when IBM and LF approached us I very probably made a mistake: I told them that I will not cough up the LF membership fee from my personal savings such as to be allowed to continue working on this software (in the case of oqsprovider, something that I _created_ from scratch). Ever since, the words and the actions of LF staff towards my person diverged (e.g., \"we also help non-LF participants\") -- and admittedly, also my willingness shrank to work around their possible time- or resource constraints wrt \"OQS matters\".\n\nSo my question to you @anvega : Are you aware of any other LF project where someone not affiliated with an LF member is a  maintainer? Maybe such people could help resolve this issue?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2249652624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-25T07:33:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40450920449","type":"IssueCommentEvent","actor":{"id":698918,"login":"levitte","display_login":"levitte","gravatar_id":"","url":"https://api.github.com/users/levitte","avatar_url":"https://avatars.githubusercontent.com/u/698918?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Using PKCS#7 OpenSSL API","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[{"id":6086045309,"node_id":"LA_kwDOE_A9l88AAAABasGufQ","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/upstream","name":"upstream","color":"bfdadc","default":false,"description":"openssl dependency"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":21,"created_at":"2023-09-08T14:40:38Z","updated_at":"2024-07-25T07:44:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2249673648","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-2249673648","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":2249673648,"node_id":"IC_kwDOE_A9l86GF0uw","user":{"login":"levitte","id":698918,"node_id":"MDQ6VXNlcjY5ODkxOA==","avatar_url":"https://avatars.githubusercontent.com/u/698918?v=4","gravatar_id":"","url":"https://api.github.com/users/levitte","html_url":"https://github.com/levitte","followers_url":"https://api.github.com/users/levitte/followers","following_url":"https://api.github.com/users/levitte/following{/other_user}","gists_url":"https://api.github.com/users/levitte/gists{/gist_id}","starred_url":"https://api.github.com/users/levitte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levitte/subscriptions","organizations_url":"https://api.github.com/users/levitte/orgs","repos_url":"https://api.github.com/users/levitte/repos","events_url":"https://api.github.com/users/levitte/events{/privacy}","received_events_url":"https://api.github.com/users/levitte/received_events","type":"User","site_admin":false},"created_at":"2024-07-25T07:44:44Z","updated_at":"2024-07-25T07:44:44Z","author_association":"CONTRIBUTOR","body":"There's actually an OpenSSL design document talking about this: https://github.com/openssl/openssl/blob/master/doc/designs/passing-algorithmidentifier-parameters.md\r\n\r\nI had forgotten I wrote that...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2249673648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-25T07:44:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40454654347","type":"IssueCommentEvent","actor":{"id":13785747,"login":"beldmit","display_login":"beldmit","gravatar_id":"","url":"https://api.github.com/users/beldmit","avatar_url":"https://avatars.githubusercontent.com/u/13785747?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Using PKCS#7 OpenSSL API","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[{"id":6086045309,"node_id":"LA_kwDOE_A9l88AAAABasGufQ","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/upstream","name":"upstream","color":"bfdadc","default":false,"description":"openssl dependency"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":22,"created_at":"2023-09-08T14:40:38Z","updated_at":"2024-07-25T09:39:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2249909529","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-2249909529","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":2249909529,"node_id":"IC_kwDOE_A9l86GGuUZ","user":{"login":"beldmit","id":13785747,"node_id":"MDQ6VXNlcjEzNzg1NzQ3","avatar_url":"https://avatars.githubusercontent.com/u/13785747?v=4","gravatar_id":"","url":"https://api.github.com/users/beldmit","html_url":"https://github.com/beldmit","followers_url":"https://api.github.com/users/beldmit/followers","following_url":"https://api.github.com/users/beldmit/following{/other_user}","gists_url":"https://api.github.com/users/beldmit/gists{/gist_id}","starred_url":"https://api.github.com/users/beldmit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beldmit/subscriptions","organizations_url":"https://api.github.com/users/beldmit/orgs","repos_url":"https://api.github.com/users/beldmit/repos","events_url":"https://api.github.com/users/beldmit/events{/privacy}","received_events_url":"https://api.github.com/users/beldmit/received_events","type":"User","site_admin":false},"created_at":"2024-07-25T09:39:30Z","updated_at":"2024-07-25T09:39:30Z","author_association":"CONTRIBUTOR","body":"@levitte shouldn't we really leave PKCS7 as is and add new features to CMS only?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2249909529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-25T09:39:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40455050090","type":"IssueCommentEvent","actor":{"id":698918,"login":"levitte","display_login":"levitte","gravatar_id":"","url":"https://api.github.com/users/levitte","avatar_url":"https://avatars.githubusercontent.com/u/698918?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Using PKCS#7 OpenSSL API","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[{"id":6086045309,"node_id":"LA_kwDOE_A9l88AAAABasGufQ","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/upstream","name":"upstream","color":"bfdadc","default":false,"description":"openssl dependency"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":23,"created_at":"2023-09-08T14:40:38Z","updated_at":"2024-07-25T09:51:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2249931215","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-2249931215","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":2249931215,"node_id":"IC_kwDOE_A9l86GGznP","user":{"login":"levitte","id":698918,"node_id":"MDQ6VXNlcjY5ODkxOA==","avatar_url":"https://avatars.githubusercontent.com/u/698918?v=4","gravatar_id":"","url":"https://api.github.com/users/levitte","html_url":"https://github.com/levitte","followers_url":"https://api.github.com/users/levitte/followers","following_url":"https://api.github.com/users/levitte/following{/other_user}","gists_url":"https://api.github.com/users/levitte/gists{/gist_id}","starred_url":"https://api.github.com/users/levitte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levitte/subscriptions","organizations_url":"https://api.github.com/users/levitte/orgs","repos_url":"https://api.github.com/users/levitte/repos","events_url":"https://api.github.com/users/levitte/events{/privacy}","received_events_url":"https://api.github.com/users/levitte/received_events","type":"User","site_admin":false},"created_at":"2024-07-25T09:51:40Z","updated_at":"2024-07-25T09:51:40Z","author_association":"CONTRIBUTOR","body":"That would effectively kill any use of PKCS#7 with providers.  However, that discussion is better suited in an OpenSSL discussion than here 😉 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2249931215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-25T09:51:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40463554974","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/454","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/454/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/454/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/454/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/454","id":2426040542,"node_id":"PR_kwDOE_A9l852QreY","number":454,"title":"update the composite to draft-ietf-lamps-pq-composite-sigs-02","user":{"login":"feventura","id":37639194,"node_id":"MDQ6VXNlcjM3NjM5MTk0","avatar_url":"https://avatars.githubusercontent.com/u/37639194?v=4","gravatar_id":"","url":"https://api.github.com/users/feventura","html_url":"https://github.com/feventura","followers_url":"https://api.github.com/users/feventura/followers","following_url":"https://api.github.com/users/feventura/following{/other_user}","gists_url":"https://api.github.com/users/feventura/gists{/gist_id}","starred_url":"https://api.github.com/users/feventura/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/feventura/subscriptions","organizations_url":"https://api.github.com/users/feventura/orgs","repos_url":"https://api.github.com/users/feventura/repos","events_url":"https://api.github.com/users/feventura/events{/privacy}","received_events_url":"https://api.github.com/users/feventura/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-07-23T20:11:52Z","updated_at":"2024-07-25T14:10:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/454","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/454","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/454.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/454.patch","merged_at":null},"body":"Added changes to composite that implement the changes from draft-ietf-lamps-pq-composite-sigs-02.\r\n\r\n- MLDSA44-RSA2048-PSS-SHA256 (mldsa44_pss2048) now uses a salt length of 256 instead of 512.\r\n- Change references pointing at new version of the draft.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/454/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2250421863","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/454#issuecomment-2250421863","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/454","id":2250421863,"node_id":"IC_kwDOE_A9l86GIrZn","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-07-25T14:10:08Z","updated_at":"2024-07-25T14:10:08Z","author_association":"MEMBER","body":"Thanks for the update @feventura . ConceptuallyLGTM (without having checked the Composite spec :-) Please rebase after the Mayo PR has merged to get CI through.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2250421863/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-25T14:10:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40469392021","type":"IssueCommentEvent","actor":{"id":8332785,"login":"anvega","display_login":"anvega","gravatar_id":"","url":"https://api.github.com/users/anvega","avatar_url":"https://avatars.githubusercontent.com/u/8332785?"},"repo":{"id":746904584,"name":"open-quantum-safe/tsc","url":"https://api.github.com/repos/open-quantum-safe/tsc"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45","repository_url":"https://api.github.com/repos/open-quantum-safe/tsc","labels_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/comments","events_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/events","html_url":"https://github.com/open-quantum-safe/tsc/issues/45","id":2380046475,"node_id":"I_kwDOLITcCM6N3KCL","number":45,"title":"Roles of maintainers & contributors","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":7138969578,"node_id":"LA_kwDOLITcCM8AAAABqYQH6g","url":"https://api.github.com/repos/open-quantum-safe/tsc/labels/High%20priority","name":"High priority","color":"006b75","default":false,"description":"Should be dealt with soon"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-06-28T09:55:05Z","updated_at":"2024-07-25T17:01:57Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The core sub projects, `liboqs` and `oqs-provider` had well-defined roles, responsibilities and expectations as documented in their respective GOVERNANCE.md files.\r\n\r\nAs part of their take-over, the LF/PQCA team has chosen to disregard and invalidate those files and rules: Maintainers for example don't have administrative GH rights any more, leading to all kinds of new discussions and complications, e.g., when doing releases.\r\n\r\nThereby (?) and at least in my mind there does not seem to exist a well-defined understanding as to which responsibilities and obligations PQCA assigns to contributors and maintainers and how these map to GH rights.\r\n\r\nThis issue is to propose a discussion as to what tasks, responsibilities and rights are to be assigned to contributors and maintainers. This should serve to let any present and future contributors and maintainers see what are the project's expectations towards them and also inform the (automated) setting of GH rights. If no discussion is wanted, this issue is to request the LF/PQCA team to post a documentation as to what they want maintainers and contributors do so present contributors and maintainers can adjust their expectations or contribution level accordingly.\r\n\r\nFor example, are maintainers in the PQCA sense\r\n- still expected to know the code of a specific project inside-out (i.e., be active contributors) or not, i.e., have more of a \"management\" function? \r\n- expected to do releases or should that be done by different people?\r\n- expected to review & fix security vulnerabilities or is that to be delegated to people specializing in such task but not necessarily knowing the code?\r\n- expected to review PRs and discussion entries or is that to be delegated to yet other team(s)?\r\n- still to be attributed with the GH \"maintainer\" label (AFAIK externally understood as carried by people who know the code) or does that need to be reconsidered (IMO on a per-sub project basis)?\r\n\r\nAs usual, any input, e.g., pointers to existing documentation on these roles very welcome.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2250990168","html_url":"https://github.com/open-quantum-safe/tsc/issues/45#issuecomment-2250990168","issue_url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/45","id":2250990168,"node_id":"IC_kwDOLITcCM6GK2JY","user":{"login":"anvega","id":8332785,"node_id":"MDQ6VXNlcjgzMzI3ODU=","avatar_url":"https://avatars.githubusercontent.com/u/8332785?v=4","gravatar_id":"","url":"https://api.github.com/users/anvega","html_url":"https://github.com/anvega","followers_url":"https://api.github.com/users/anvega/followers","following_url":"https://api.github.com/users/anvega/following{/other_user}","gists_url":"https://api.github.com/users/anvega/gists{/gist_id}","starred_url":"https://api.github.com/users/anvega/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anvega/subscriptions","organizations_url":"https://api.github.com/users/anvega/orgs","repos_url":"https://api.github.com/users/anvega/repos","events_url":"https://api.github.com/users/anvega/events{/privacy}","received_events_url":"https://api.github.com/users/anvega/received_events","type":"User","site_admin":false},"created_at":"2024-07-25T17:01:56Z","updated_at":"2024-07-25T17:01:56Z","author_association":"NONE","body":"I’ll want to acknowledge that PQCA might have specific bylaws that I may not be aware that I want to be mindful of, but I still believe we can advocate for positive changes in the collective interest.\r\n\r\nFrom my understanding, LF owns the trademark, but governance of the project is left to the project's community leadership. Even some LF Community Management tools are designed to provide maintainers with admin rights if necessary: [LF Community Management FAQ](https://docs.linuxfoundation.org/lfx/community-management/faqs).\r\n\r\nFor example, the SPIFFE project that I have visibility over the setup has six owners at an org level. One of these is the Linux Foundation account, and the rest are five members of the steering committee. Additionally, there are 26 people with varying levels of access, including seven enterprise owners who have complete control over the [CNCF GitHub organization](https://github.com/enterprises/cncf). Other members have admin permissions specific to certain repositories. There are seven members spread across five teams: two core projects with maintainers, one team responsible for documentation, and another for a collection of smaller projects.\r\n\r\nYou can also see how another project approached reducing their \"bus factor\": https://github.com/cloud-custodian/cloud-custodian/issues/7149\r\n\r\nThe CNI project has governance guidelines stating, \"Maintainers will be added to the containernetworking GitHub organization and the GitHub cni-maintainers team, and made a GitHub maintainer of that team. After 6 months, a maintainer will be made an 'owner' of the GitHub organization\" https://github.com/containernetworking/cni/blob/main/GOVERNANCE.md\r\n\r\nSimilarly, Envoy Proxy outlines different levels of maintainer access for individuals from various organizations: https://github.com/envoyproxy/envoy/blob/main/GOVERNANCE.md\r\n\r\nThese examples from well known projects show that sharing responsibilities with trusted maintainers, who started the project, can help mitigate risks. You clearly care about the project's best interests. No one is more concerned about the risks and security rsiks than those directly involved over the years.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/tsc/issues/comments/2250990168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-25T17:01:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40473608845","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1859","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1859/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1859/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1859/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1859","id":2429364092,"node_id":"I_kwDOA-eq3c6QzSd8","number":1859,"title":"Multi-threaded performance testing issues","user":{"login":"MMDHBZ","id":41887480,"node_id":"MDQ6VXNlcjQxODg3NDgw","avatar_url":"https://avatars.githubusercontent.com/u/41887480?v=4","gravatar_id":"","url":"https://api.github.com/users/MMDHBZ","html_url":"https://github.com/MMDHBZ","followers_url":"https://api.github.com/users/MMDHBZ/followers","following_url":"https://api.github.com/users/MMDHBZ/following{/other_user}","gists_url":"https://api.github.com/users/MMDHBZ/gists{/gist_id}","starred_url":"https://api.github.com/users/MMDHBZ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MMDHBZ/subscriptions","organizations_url":"https://api.github.com/users/MMDHBZ/orgs","repos_url":"https://api.github.com/users/MMDHBZ/repos","events_url":"https://api.github.com/users/MMDHBZ/events{/privacy}","received_events_url":"https://api.github.com/users/MMDHBZ/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-07-25T08:31:55Z","updated_at":"2024-07-25T19:42:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I wrote a multi-threaded test function myself, but when testing performance, the performance of multi-threading and single-threading are almost the same, and even multi-threading is slower than single-threading. I want to know why？\r\n\r\nCPU：Intel(R) Core(TM) i9-10920X CPU @ 3.50GHz\r\nOS：centos7\r\n\r\nCompilation of liboqs is followed：\r\nmkdir build && cd build\r\ncmake -GNinja .. -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=../install -DOQS_USE_PTHREADS=ON\r\nninja\r\nninja install\r\n\r\nThe function that calls liboqs.so for performance testing is as follows:\r\n\r\n#include \"oqs/kem_kyber.h\"\r\n#include <stdio.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n\r\n\r\n#include <unistd.h>\r\n#include <pthread.h>\r\n\r\n#define SLEEP sleep(1)\r\n\r\n\r\nunsigned int isContinue = 0;\r\nunsigned int g_unTotalTimes[100];\r\nunsigned int loop = 0;\r\n\r\n/*********TEST_KYBER************/\r\nvoid PerformanceTestStatFunc_Kyber512_Keygen(void* argv)\r\n{\t//\r\n\tint _g_unTotalTimes;\r\n\tint i;\r\n\tint times;\r\n\tclock_t ctStart, ctEnd;\r\n\r\n\ttime_t t0, t1;\r\n\tt0 = time(0);\r\n\tctStart = clock();\r\n\twhile (isContinue)\r\n\t{\r\n\r\n\t\tSLEEP;\r\n\t\tt1 = time(0);\r\n\t\tprintf(\"once: test time:%d sec\\n\", times = t1 - t0);//times);\r\n\t\t_g_unTotalTimes = 0;\r\n\t\tfor (i = 0; i < 100; i++)\r\n\t\t{\r\n\t\t\t//printf(\"%d %d\\n\", i, g_unTotalTimes[i]);\r\n\t\t\t_g_unTotalTimes += g_unTotalTimes[i];\r\n\t\t}\r\n\t\tprintf(\"once: Kyber512_Keygen times:%d times\\n\", _g_unTotalTimes);\r\n\t\tprintf(\"once: performance: %dTps\\n\\n\", _g_unTotalTimes / times);\r\n\t}\r\n\tctEnd = clock();\r\n\tt1 = time(0);\r\n\r\n\ttimes = (ctEnd - ctStart) / CLOCKS_PER_SEC / loop;\r\n\tprintf(\"test time:%d sec\\n\", t1 - t0);//times);\r\n\r\n\t_g_unTotalTimes = 0;\r\n\tfor (i = 0; i < 100; i++)\r\n\t{\r\n\t\t//printf(\"%d %d\\n\", i, g_unTotalTimes[i]);\r\n\t\t_g_unTotalTimes += g_unTotalTimes[i];\r\n\t}\r\n\tprintf(\"Kyber512_Keygen times:%d times\\n\", _g_unTotalTimes);\r\n\tprintf(\"performance: %dTps\\n\", _g_unTotalTimes / times);\r\n}\r\n\r\n\r\nint myThread_Kyber512_Keygen(void* argv)\r\n{\r\n    unsigned char  public_key[OQS_KEM_kyber_512_length_public_key];\r\n    unsigned char secret_key[OQS_KEM_kyber_512_length_secret_key];\r\n    unsigned char ciphertext[OQS_KEM_kyber_512_length_ciphertext];\r\n    unsigned char shared_secreta[OQS_KEM_kyber_512_length_shared_secret];\r\n    unsigned char shared_secretb[OQS_KEM_kyber_512_length_shared_secret];\r\n    int ret = 5, i;\r\n\r\n    OQS_KEM_new(\"Kyber512\");\r\n    ret = OQS_KEM_kyber_512_keypair(public_key, secret_key);\r\n    ret = OQS_KEM_kyber_512_encaps(ciphertext, shared_secreta, public_key);\r\n    ret = OQS_KEM_kyber_512_decaps(shared_secretb, ciphertext, secret_key);\r\n    if(ret !=0 || memcmp(shared_secreta, shared_secretb, OQS_KEM_kyber_512_length_shared_secret) !=0)\r\n    {printf(\"\\n OQS_KEM_kyber_512 failed\\n\");}\r\n    else{printf(\"\\n OQS_KEM_kyber_512 sucess\\n\");}\r\n\r\n\twhile (isContinue)\r\n\t{\r\n\t    ret = OQS_KEM_kyber_512_keypair(public_key, secret_key);\r\n\t\tif (ret != 0)\r\n\t\t{\r\n\t\t\tprintf(\"OQS_KEM_kyber_512_keypair: ERROR\");\r\n\t\t\tbreak;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t(*(int*)argv)++;\r\n\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\n\r\nvoid PerformanceTestStatFunc_Kyber512_Enc(void* argv)\r\n{\t//\r\n\tint _g_unTotalTimes;\r\n\tint i;\r\n\tint times;\r\n\tclock_t ctStart, ctEnd;\r\n\r\n\ttime_t t0, t1;\r\n\tt0 = time(0);\r\n\tctStart = clock();\r\n\twhile (isContinue)\r\n\t{\r\n\r\n\t\tSLEEP;\r\n\t\tt1 = time(0);\r\n\t\tprintf(\"once: test time:%d sec\\n\", times = t1 - t0);//times);\r\n\t\t_g_unTotalTimes = 0;\r\n\t\tfor (i = 0; i < 100; i++)\r\n\t\t{\r\n\t\t\t//printf(\"%d %d\\n\", i, g_unTotalTimes[i]);\r\n\t\t\t_g_unTotalTimes += g_unTotalTimes[i];\r\n\t\t}\r\n\t\tprintf(\"once: Kyber512_Enc times:%d times\\n\", _g_unTotalTimes);\r\n\t\tprintf(\"once: performance: %dTps\\n\\n\", _g_unTotalTimes / times);\r\n\t}\r\n\tctEnd = clock();\r\n\tt1 = time(0);\r\n\r\n\ttimes = (ctEnd - ctStart) / CLOCKS_PER_SEC / loop;\r\n\tprintf(\"test time:%d sec\\n\", t1 - t0);//times);\r\n\r\n\t_g_unTotalTimes = 0;\r\n\tfor (i = 0; i < 100; i++)\r\n\t{\r\n\t\t//printf(\"%d %d\\n\", i, g_unTotalTimes[i]);\r\n\t\t_g_unTotalTimes += g_unTotalTimes[i];\r\n\t}\r\n\tprintf(\"Kyber512_Enc times:%d times\\n\", _g_unTotalTimes);\r\n\tprintf(\"performance: %dTps\\n\", _g_unTotalTimes / times);\r\n}\r\n\r\n\r\nint myThread_Kyber512_Enc(void* argv)\r\n{\r\n\r\n    unsigned char  public_key[OQS_KEM_kyber_512_length_public_key];\r\n    unsigned char secret_key[OQS_KEM_kyber_512_length_secret_key];\r\n    unsigned char ciphertext[OQS_KEM_kyber_512_length_ciphertext];\r\n    unsigned char shared_secreta[OQS_KEM_kyber_512_length_shared_secret];\r\n    unsigned char shared_secretb[OQS_KEM_kyber_512_length_shared_secret];\r\n    int ret = 5, i;\r\n\r\n    OQS_KEM_new(\"Kyber512\");\r\n    ret = OQS_KEM_kyber_512_keypair(public_key, secret_key);\r\n    ret = OQS_KEM_kyber_512_encaps(ciphertext, shared_secreta, public_key);\r\n    ret = OQS_KEM_kyber_512_decaps(shared_secretb, ciphertext, secret_key);\r\n    if(ret !=0 || memcmp(shared_secreta, shared_secretb, OQS_KEM_kyber_512_length_shared_secret) !=0)\r\n    {printf(\"\\n OQS_KEM_kyber_512 failed\\n\");}\r\n    else{printf(\"\\n OQS_KEM_kyber_512 sucess\\n\");}\r\n\r\n\twhile (isContinue)\r\n\t{\r\n\t    ret =  OQS_KEM_kyber_512_encaps(ciphertext, shared_secreta, public_key);\r\n\t\tif (ret != 0)\r\n\t\t{\r\n\t\t\tprintf(\"Kyber512_Enc: ERROR\");\r\n\t\t\tbreak;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t(*(int*)argv)++;\r\n\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\n\r\n\r\nvoid test_speed() {\r\n\r\n#ifndef WIN32\r\n\tpthread_t ntid;\r\n#endif\r\n\r\n\tint i;\r\n\tint ID;\r\n\r\n\tisContinue = 1;\r\n\tgetchar();\r\n\tprintf(\"\\n please scanf loops (threads'number)....\\n\");\r\n\tscanf(\"%d\", &loop);\r\n\tprintf(\"loops:%d\\n\", loop);\r\n\tprintf(\"\\n Choosed ID....\\n\");\r\n\tprintf(\"\\n0:Kyber512_Keygen\\n\");\r\n\tprintf(\"\\n1:Kyber512_Enc\\n\");\r\n\r\n\r\n\r\n\r\n\tprintf(\"\\n please scanf ID....\\n\");\r\n\tscanf(\"%d\", &ID);\r\n\tprintf(\"ID:%d\\n\", ID);\r\n\tif (ID == 0)\r\n\t{\r\n\r\n#ifdef WIN32\r\n\t\t_beginthread(PerformanceTestStatFunc_Kyber512_Keygen, 0, NULL);\t//性能统计线程\r\n\t\tfor (i = 0; i < loop; i++)\r\n\t\t{\r\n\r\n\t\t\t_beginthread(myThread_Kyber512_Keygen, 0, g_unTotalTimes + i);\r\n\r\n\t\t\t//SLEEP(10);\t\r\n\t\t}\r\n#else\r\n        // struct params t_params[100] ;\r\n\t\tpthread_create(&ntid, NULL, (void*)PerformanceTestStatFunc_Kyber512_Keygen, NULL);\r\n\r\n\t\tfor (i = 0; i < loop; i++)\r\n\t\t{\t\r\n\t\t\t// t_params[i].g_unTotalTimes = g_unTotalTimes + i;\r\n\t\t\t// t_params[i].p = 4;\r\n\t\t\tpthread_create(&ntid, NULL, (void*)myThread_Kyber512_Keygen, g_unTotalTimes + i);\r\n\t\t\t// pthread_create(&ntid, NULL, (void*)myThread_Kyber512_Keygen, t_params + i);\r\n\t\t\t//SLEEP(10);\t\r\n\t\t}\r\n#endif\r\n\r\n\t\tprintf(\"testing....press any key to stop...\\n\");\r\n\t\tgetchar();\r\n\t\tgetchar();\r\n\t\tisContinue = 0;\r\n\t\tgetchar();\r\n\t\tputs(\"press CTL+C to exit\");\r\n\t\tSLEEP;\r\n\t}\r\n\r\n    if (ID == 1)\r\n\t{\r\n\r\n#ifdef WIN32\r\n\t\t_beginthread(PerformanceTestStatFunc_Kyber512_Keygen, 0, NULL);\t//性能统计线程\r\n\t\tfor (i = 0; i < loop; i++)\r\n\t\t{\r\n\r\n\t\t\t_beginthread(myThread_Kyber512_Keygen, 0, g_unTotalTimes + i);\r\n\r\n\t\t\t//SLEEP(10);\t\r\n\t\t}\r\n#else\r\n\t\tpthread_create(&ntid, NULL, (void*)PerformanceTestStatFunc_Kyber512_Keygen, NULL);\r\n\r\n\t\tfor (i = 0; i < loop; i++)\r\n\t\t{\r\n\t\t\tpthread_create(&ntid, NULL, (void*)myThread_Kyber512_Keygen, g_unTotalTimes + i);\r\n\t\t\t//SLEEP(10);\t\r\n\t\t}\r\n#endif\r\n\r\n\t\tprintf(\"testing....press any key to stop...\\n\");\r\n\t\tgetchar();\r\n\t\tgetchar();\r\n\t\tisContinue = 0;\r\n\t\tgetchar();\r\n\t\tputs(\"press CTL+C to exit\");\r\n\t\tSLEEP;\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\nvoid main()\r\n{\r\n    test_speed();\r\n}\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1859/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2251270877","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1859#issuecomment-2251270877","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1859","id":2251270877,"node_id":"IC_kwDOA-eq3c6GL6rd","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-07-25T19:42:11Z","updated_at":"2024-07-25T19:42:11Z","author_association":"COLLABORATOR","body":"First of all, you clearly didn't put effort to format your code properly. It's hard to read. I stop reading after the `Cmake` command.\r\nInstead of posting the code and ask community to \"hey, figure out my code\", can you briefly explain what are the numbers you got? And the numbers from A are slower compare to B,  and can you show the numbers in B as well? \r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2251270877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-25T19:42:12Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
