{"id":"39984857320","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1831","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1831/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1831/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1831/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1831","id":2384272968,"node_id":"I_kwDOA-eq3c6OHR5I","number":1831,"title":"Update CBOM to CycloneDX 1.6 format","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-07-01T16:38:40Z","updated_at":"2024-07-09T10:00:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## State of current BOM:\r\n\r\nThe current BOM at `docs/cbom.json` mostly validates against the [1.4 spec](https://github.com/IBM/CBOM/blob/main/bom-1.4-cbom-1.0.schema.json) with just 1 issue\r\n\r\n* metadata.,*timestamp* value of `2024-03-05T11:49:42.428605` fails with `String is not a RFC3339 date-time.`\r\n\r\nIn [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) a time-offset is required, ie can be `Z`.\r\n\r\nUsing `2024-03-05T11:49:42.428605Z` passes validation.\r\n\r\nThis change is needed in the tooling that builds/tests the BOM\r\n\r\n## Improvement to include pointer to schema\r\n\r\nMany BOMs include a pointer to the spec ie we could add\r\n```\r\n  \"$schema\": \"https://raw.githubusercontent.com/IBM/CBOM/main/bom-1.4-cbom-1.0.schema.json#\",\r\n```\r\n\r\nAside - as an alternative, and for testing, the following can be added in .vscode settings:\r\n```\r\n    \"json.schemas\": [\r\n        \r\n\r\n        {\r\n            \"fileMatch\": [\r\n                \"cbom.json\"\r\n            ],\r\n            \"url\": \"https://raw.githubusercontent.com/IBM/CBOM/main/bom-1.4-cbom-1.0.schema.json\"\r\n        }\r\n    ]\r\n```\r\n\r\n## Cyclone DX 1.6\r\n\r\nCBOM is now incorporated into CycloneDX 1.6, but here the schema as evolved a little\r\n\r\nWe can validate against the [new spec](http://cyclonedx.org/schema/bom-1.6.schema.json) - the example below includes the vscode definition:\r\n\r\n```\r\n    \"json.schemas\": [\r\n\r\n\r\n        {\r\n            \"fileMatch\": [\r\n                \"cbom.json\"\r\n            ],\r\n            \"url\": \"http://cyclonedx.org/schema/bom-1.6.schema.json\"\r\n        }\r\n    ]\r\n```\r\n\r\nIf `$schema` is included in the bom, then other tools wouldn't need to explicitly be configured, and should find the schema definition automatically\r\n\r\nIn CycloneDX 1.6 the following is noted:\r\n\r\n* ` \"bomFormat\": \"CBOM\",` -> can only be 'CycloneDX'\r\n* `\"type\": \"crypto-asset\",` -> 'cryptographic-asset'\r\n* In `algorithmProperties`, `variant` & `implementationLevel` are not allowed. where the last segment of Variant includes a platform like `x86_64` this probably is now best matched to `implementationPlatform` , whilst `implementationLevel` is `executionEnvironment`\r\n* in `cryptoProperties`, `nistQuantumSecurityLevel` is not allowed - it has moved under `algorithmProperties`\r\n* `\"primitive\": \"blockcipher\",` -> `block-cipher`\r\n* \"dependencyType\": \"uses\" - not allowed. there is a new property `provides` which seems to make sense where an algorithm is provided, whilst just having a dependency presumes uses ..?\r\n\r\nNote the above is from a quick scan - need to check in more detail...\r\n\r\n@bhess @dstebila I think it would be useful to consider this update now that the 1.6 spec is out, and we're seeing more tooling support CBOM.\r\n\r\nHappy to work on some updates if it's helpful - or perhaps you plan to @bhess ?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1831/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2217214349","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1831#issuecomment-2217214349","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1831","id":2217214349,"node_id":"IC_kwDOA-eq3c6EKAGN","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2024-07-09T10:00:08Z","updated_at":"2024-07-09T10:00:08Z","author_association":"MEMBER","body":"See PR #1834 which should include the updates you propose @planetf1.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2217214349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-09T10:00:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39992586250","type":"IssueCommentEvent","actor":{"id":1806693,"login":"knightcode","display_login":"knightcode","gravatar_id":"","url":"https://api.github.com/users/knightcode","avatar_url":"https://avatars.githubusercontent.com/u/1806693?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1206","id":1217903263,"node_id":"I_kwDOA-eq3c5Il7qf","number":1206,"title":"Adding a DeriveKeyPair functionality","user":{"login":"tedeaton","id":7863838,"node_id":"MDQ6VXNlcjc4NjM4Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/7863838?v=4","gravatar_id":"","url":"https://api.github.com/users/tedeaton","html_url":"https://github.com/tedeaton","followers_url":"https://api.github.com/users/tedeaton/followers","following_url":"https://api.github.com/users/tedeaton/following{/other_user}","gists_url":"https://api.github.com/users/tedeaton/gists{/gist_id}","starred_url":"https://api.github.com/users/tedeaton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tedeaton/subscriptions","organizations_url":"https://api.github.com/users/tedeaton/orgs","repos_url":"https://api.github.com/users/tedeaton/repos","events_url":"https://api.github.com/users/tedeaton/events{/privacy}","received_events_url":"https://api.github.com/users/tedeaton/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"},{"id":5748933254,"node_id":"LA_kwDOA-eq3c8AAAABVqnChg","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/good%20first%20issue","name":"good first issue","color":"fbca04","default":true,"description":"Issue for new contributors"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":22,"created_at":"2022-04-27T21:30:19Z","updated_at":"2024-07-09T13:48:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When a KEM keypair is derived in liboqs, it relies on randomness using [rand.h](https://github.com/open-quantum-safe/liboqs/blob/main/src/common/rand/rand.h). In some situations, it's useful to generate keypairs deterministically from a seed. When [RFC9180](https://www.rfc-editor.org/rfc/rfc9180#name-cryptographic-dependencies) defines a KEM, they include a `DeriveKeyPair` option to generate keypairs deterministically from a seed. As an example use case, [Messaging Layer Security](https://messaginglayersecurity.rocks/mls-protocol/draft-ietf-mls-protocol.html) makes extensive use of functionality to share multiple keypairs by communicating seeds. I think it would be nice to match RFC9180 and add a functionality to deterministically derive a keypair from a seed.\r\n\r\nThis is kind of possible in liboqs currently. You can set the randomness to use `OQS_RAND_alg_nist_kat`, and derive all the randomness used from a seed, but this is a somewhat imperfect solution for a few reasons:\r\n\r\n- The seed must be exactly 48 bytes\r\n- It references a global variable, resulting in concurrency issues\r\n- Modifying the randomness used is (to my knowledge) not available with any of the liboqs language wrappers\r\n\r\nI'm curious if others think this is a functionality worth adding and if so, what the proper way to tackle it might be. Some schemes, like Kyber, are already constructed in such a way that everything is derived from a seed, but liboqs provides limited ability to set that seed. I suspect the situation for other schemes is much more complex.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2217798392","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1206#issuecomment-2217798392","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1206","id":2217798392,"node_id":"IC_kwDOA-eq3c6EMOr4","user":{"login":"knightcode","id":1806693,"node_id":"MDQ6VXNlcjE4MDY2OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1806693?v=4","gravatar_id":"","url":"https://api.github.com/users/knightcode","html_url":"https://github.com/knightcode","followers_url":"https://api.github.com/users/knightcode/followers","following_url":"https://api.github.com/users/knightcode/following{/other_user}","gists_url":"https://api.github.com/users/knightcode/gists{/gist_id}","starred_url":"https://api.github.com/users/knightcode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knightcode/subscriptions","organizations_url":"https://api.github.com/users/knightcode/orgs","repos_url":"https://api.github.com/users/knightcode/repos","events_url":"https://api.github.com/users/knightcode/events{/privacy}","received_events_url":"https://api.github.com/users/knightcode/received_events","type":"User","site_admin":false},"created_at":"2024-07-09T13:48:47Z","updated_at":"2024-07-09T13:48:47Z","author_association":"NONE","body":"Two questions:\r\n\r\n1. Separation of concerns would suggests it's best to abstract the entropy input dependency away from the algorithms if doing so can work for all algorithms, maintain security, and be thread-safe. Is there a way to achieve that? For example, could we allow oqs-provider to inject an function that ultimately uses an given EVP_RAND struct?\r\n\r\n2. Assuming a separate API call is preferable, would it be bad form to expand/extract (HKDF) the entropy input into a sequence of bytes of sufficient size for the given algorithm? ...I'm guessing there's no access to this KDF(?) and that it's just easy to require the caller to pass something of sufficient size?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2217798392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-09T13:48:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39996417853","type":"IssueCommentEvent","actor":{"id":7552310,"login":"geedo0","display_login":"geedo0","gravatar_id":"","url":"https://api.github.com/users/geedo0","avatar_url":"https://avatars.githubusercontent.com/u/7552310?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/events","html_url":"https://github.com/open-quantum-safe/openssh/pull/159","id":2370847093,"node_id":"PR_kwDOBsoLV85zZmoH","number":159,"title":" Upgrade to OpenSSH v9.7 ","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-06-24T18:26:53Z","updated_at":"2024-07-09T15:32:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/pulls/159","html_url":"https://github.com/open-quantum-safe/openssh/pull/159","diff_url":"https://github.com/open-quantum-safe/openssh/pull/159.diff","patch_url":"https://github.com/open-quantum-safe/openssh/pull/159.patch","merged_at":null},"body":"This is a first pass at resolving all of the merge conflicts between the current tip of `OQS-v8` and the `V_9_7_P1` tag in upstream OpenSSH (Issue #135).\r\n\r\nThe merge strategy here differs a bit from previous upstream merges (e.g. PR https://github.com/open-quantum-safe/openssh/pull/106 and PR https://github.com/open-quantum-safe/openssh/pull/121) where all of the changes were squashed and incorporated into a single commit and applied to the trunk. This is a more typical `git merge` in that we retain both parents and their commit histories. This will make future merges more straightforward by allowing git to notice the shared history and avoid marking these merged commits as conflicting changes. For the maintainers, make sure to merge using the default \"Merge Pull Request\" button. I tested this on my own fork and seems to be the only one of Github's options that preserves the history.\r\n\r\nHere's the git-foo used to script the merge and handle the false positives from the \"squash merges\".\r\n\r\n```\r\noqs_tip=OQS-v8\r\nopenssh_release=V_9_7_P1\r\ngit merge ${openssh_release}\r\nbase=`git merge-base ${oqs_tip} ${openssh_release}`\r\nfor f in `git diff --name-only --diff-filter=U`; do\r\n  # This fetches all of the commits which touched the file since the merge base\r\n  # Filter out the two commits for the 8.6 and 8.9 merges since they are technically already incorporated\r\n  conflicts=$(git log --oneline ${base}..${oqs_tip} -- $f | ggrep -v -P '(1f58edd59|f058d3168)')\r\n  # Check if we have no OQS-OpenSSH conflicts specific\r\n  if [[ -z ${conflicts} ]]; then\r\n    echo \"$f has no conflicts\"\r\n    # Resolve the conflict by taking the upstream version of the file\r\n    git checkout --theirs -- $f\r\n    git add $f\r\n  else\r\n    echo \"$f has conflicts\"\r\n    echo ${conflicts}\r\n    # Send all of the OQS diffs to a file to help resolve the merge conflicts\r\n    for c in `echo ${conflicts} | cut -d ' ' -f1`; do\r\n      git show $c -- $f >> ~/conflicting_diffs.t\r\n    done\r\n  fi\r\ndone\r\n```\r\n\r\nFor the remaining conflicts, I went through each file one-by-one with this pseudo-algorithm:\r\n1. Incorporate all changes from both sides that have no direct conflicts.\r\n2. Look for OQS specific changes with conflicts and apply them as-appropriate.\r\n3. Take the upstream version for any remaining conflicts.\r\n\r\nCallouts from this process:\r\n- `sshkey.c` and `sshkey.h` experienced a major refactor upstream that impacted how OQS modified these files. I simply took the upstream versions for now and plan to address the conflict properly in a separate PR.\r\n- Kept `README.md` as-is from OQS and applied changes to `README.original.md`.\r\n- Took `.depend` from upstream, will update in a subsequent commit.\r\n- `version.h` retained the 2022-01 datestamp from OQS, will update this when we're ready to stage a release.\r\n- In `ssh-keygen.c` the `OQS_TEMPLATE_FRAGMENT_PRINT_RESOURCE_RECORDS_START` template changed to accept two additional arguments `opts` and `nopts`. I added these in manually for now.\r\n\r\nTo self-check I did the following:\r\n- Test build by running `build_openssh.sh` and finding compiler errors.\r\n- Run `git diff HEAD V_9_7_P1` to highlight all the changes and assert that all changes were introduced by OQS alone.\r\n\r\nThis last process flagged a handful of issues. Mostly around duplicated code blocks from taking them from previous upstream merges and this current merge and git not noticing it. With that out of the way, I'm reasonably confident that this PR is pretty close to upstream v9.7 with only the changes from OQS applied to it.\r\n\r\nSo after all that, what's working so far? `build_openssh.sh` will build the project but fail to install with some error about unknown key types. The failure I had locally is the same one reported by the CI job.\r\n\r\nWhat's next?\r\n- Properly handle the merge conflicts in `sshkey.(c|h)`.\r\n- Regenerate `.depend`.\r\n- Fix the impacted OQS templates and regenerate the source.\r\n- Cut a new `OQS-v9` branch and update `version.h`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2218030466","html_url":"https://github.com/open-quantum-safe/openssh/pull/159#issuecomment-2218030466","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159","id":2218030466,"node_id":"IC_kwDOBsoLV86ENHWC","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"created_at":"2024-07-09T15:32:48Z","updated_at":"2024-07-09T15:32:48Z","author_association":"NONE","body":"> My only comment would be about whether we should omit the .get_allowed_signers* files from our repository; I'm not sure what the purpose of these files is, but if it's about who's authorized to sign certain things, then we may nto intend to authorize the OpenSSH team to sign things related to our fork.\r\n\r\nGood catch, you got me curious and I looked into it. It looks like you're allowed to use SSH keys to sign commits (instead of GPG keys). This file gives you granular control over the SSH keys authorized to do that. This fork doesn't enforce anything related to commit signing, but it's certainly good hygeine to not pull-in such enforcement from upstream.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2218030466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-09T15:32:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39996606287","type":"IssueCommentEvent","actor":{"id":7552310,"login":"geedo0","display_login":"geedo0","gravatar_id":"","url":"https://api.github.com/users/geedo0","avatar_url":"https://avatars.githubusercontent.com/u/7552310?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/events","html_url":"https://github.com/open-quantum-safe/openssh/pull/159","id":2370847093,"node_id":"PR_kwDOBsoLV85zZmoH","number":159,"title":" Upgrade to OpenSSH v9.7 ","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-06-24T18:26:53Z","updated_at":"2024-07-09T15:38:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/pulls/159","html_url":"https://github.com/open-quantum-safe/openssh/pull/159","diff_url":"https://github.com/open-quantum-safe/openssh/pull/159.diff","patch_url":"https://github.com/open-quantum-safe/openssh/pull/159.patch","merged_at":null},"body":"This is a first pass at resolving all of the merge conflicts between the current tip of `OQS-v8` and the `V_9_7_P1` tag in upstream OpenSSH (Issue #135).\r\n\r\nThe merge strategy here differs a bit from previous upstream merges (e.g. PR https://github.com/open-quantum-safe/openssh/pull/106 and PR https://github.com/open-quantum-safe/openssh/pull/121) where all of the changes were squashed and incorporated into a single commit and applied to the trunk. This is a more typical `git merge` in that we retain both parents and their commit histories. This will make future merges more straightforward by allowing git to notice the shared history and avoid marking these merged commits as conflicting changes. For the maintainers, make sure to merge using the default \"Merge Pull Request\" button. I tested this on my own fork and seems to be the only one of Github's options that preserves the history.\r\n\r\nHere's the git-foo used to script the merge and handle the false positives from the \"squash merges\".\r\n\r\n```\r\noqs_tip=OQS-v8\r\nopenssh_release=V_9_7_P1\r\ngit merge ${openssh_release}\r\nbase=`git merge-base ${oqs_tip} ${openssh_release}`\r\nfor f in `git diff --name-only --diff-filter=U`; do\r\n  # This fetches all of the commits which touched the file since the merge base\r\n  # Filter out the two commits for the 8.6 and 8.9 merges since they are technically already incorporated\r\n  conflicts=$(git log --oneline ${base}..${oqs_tip} -- $f | ggrep -v -P '(1f58edd59|f058d3168)')\r\n  # Check if we have no OQS-OpenSSH conflicts specific\r\n  if [[ -z ${conflicts} ]]; then\r\n    echo \"$f has no conflicts\"\r\n    # Resolve the conflict by taking the upstream version of the file\r\n    git checkout --theirs -- $f\r\n    git add $f\r\n  else\r\n    echo \"$f has conflicts\"\r\n    echo ${conflicts}\r\n    # Send all of the OQS diffs to a file to help resolve the merge conflicts\r\n    for c in `echo ${conflicts} | cut -d ' ' -f1`; do\r\n      git show $c -- $f >> ~/conflicting_diffs.t\r\n    done\r\n  fi\r\ndone\r\n```\r\n\r\nFor the remaining conflicts, I went through each file one-by-one with this pseudo-algorithm:\r\n1. Incorporate all changes from both sides that have no direct conflicts.\r\n2. Look for OQS specific changes with conflicts and apply them as-appropriate.\r\n3. Take the upstream version for any remaining conflicts.\r\n\r\nCallouts from this process:\r\n- `sshkey.c` and `sshkey.h` experienced a major refactor upstream that impacted how OQS modified these files. I simply took the upstream versions for now and plan to address the conflict properly in a separate PR.\r\n- Kept `README.md` as-is from OQS and applied changes to `README.original.md`.\r\n- Took `.depend` from upstream, will update in a subsequent commit.\r\n- `version.h` retained the 2022-01 datestamp from OQS, will update this when we're ready to stage a release.\r\n- In `ssh-keygen.c` the `OQS_TEMPLATE_FRAGMENT_PRINT_RESOURCE_RECORDS_START` template changed to accept two additional arguments `opts` and `nopts`. I added these in manually for now.\r\n\r\nTo self-check I did the following:\r\n- Test build by running `build_openssh.sh` and finding compiler errors.\r\n- Run `git diff HEAD V_9_7_P1` to highlight all the changes and assert that all changes were introduced by OQS alone.\r\n\r\nThis last process flagged a handful of issues. Mostly around duplicated code blocks from taking them from previous upstream merges and this current merge and git not noticing it. With that out of the way, I'm reasonably confident that this PR is pretty close to upstream v9.7 with only the changes from OQS applied to it.\r\n\r\nSo after all that, what's working so far? `build_openssh.sh` will build the project but fail to install with some error about unknown key types. The failure I had locally is the same one reported by the CI job.\r\n\r\nWhat's next?\r\n- Properly handle the merge conflicts in `sshkey.(c|h)`.\r\n- Regenerate `.depend`.\r\n- Fix the impacted OQS templates and regenerate the source.\r\n- Cut a new `OQS-v9` branch and update `version.h`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2218042345","html_url":"https://github.com/open-quantum-safe/openssh/pull/159#issuecomment-2218042345","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159","id":2218042345,"node_id":"IC_kwDOBsoLV86ENKPp","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"created_at":"2024-07-09T15:38:26Z","updated_at":"2024-07-09T15:38:26Z","author_association":"NONE","body":"I removed the `.git_allowed_signers` file. As long as you the default \"Merge Pull Request\" button, that should do what we want and preserve the Git history. This is important as the latest upstream is actually 9.8 now and I need to follow this PR up with yet another upstream merge to keep us up to date.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2218042345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-09T15:38:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40001387041","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/447","id":2389190625,"node_id":"I_kwDOE_A9l86OaCfh","number":447,"title":"Can we use an EVP_RAND instance?","user":{"login":"knightcode","id":1806693,"node_id":"MDQ6VXNlcjE4MDY2OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1806693?v=4","gravatar_id":"","url":"https://api.github.com/users/knightcode","html_url":"https://github.com/knightcode","followers_url":"https://api.github.com/users/knightcode/followers","following_url":"https://api.github.com/users/knightcode/following{/other_user}","gists_url":"https://api.github.com/users/knightcode/gists{/gist_id}","starred_url":"https://api.github.com/users/knightcode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knightcode/subscriptions","organizations_url":"https://api.github.com/users/knightcode/orgs","repos_url":"https://api.github.com/users/knightcode/repos","events_url":"https://api.github.com/users/knightcode/events{/privacy}","received_events_url":"https://api.github.com/users/knightcode/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-07-03T18:11:45Z","updated_at":"2024-07-09T18:24:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Is it possible to pass an EVP_RAND instance to be used in the key generation calls? Could it potentially be possible?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2218374225","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/447#issuecomment-2218374225","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/447","id":2218374225,"node_id":"IC_kwDOE_A9l86EObRR","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-07-09T18:24:53Z","updated_at":"2024-07-09T18:24:53Z","author_association":"MEMBER","body":"> Looks like stalled last year. I could maybe pick it up if I get some time from my company, but I'd need some direction.\r\n\r\nHi @knightcode, we do have somebody actively working on it. As Douglas wrote, development has slowed down recently due to the developer's other commitments, but the feature is on the horizon.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2218374225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-09T18:24:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40001845455","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1823","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1823/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1823/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1823/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1823","id":2372945686,"node_id":"I_kwDOA-eq3c6NcEcW","number":1823,"title":"Replace malloc/free with OPENSSL_malloc/OpenSSL_free","user":{"login":"songlingatpan","id":62972259,"node_id":"MDQ6VXNlcjYyOTcyMjU5","avatar_url":"https://avatars.githubusercontent.com/u/62972259?v=4","gravatar_id":"","url":"https://api.github.com/users/songlingatpan","html_url":"https://github.com/songlingatpan","followers_url":"https://api.github.com/users/songlingatpan/followers","following_url":"https://api.github.com/users/songlingatpan/following{/other_user}","gists_url":"https://api.github.com/users/songlingatpan/gists{/gist_id}","starred_url":"https://api.github.com/users/songlingatpan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songlingatpan/subscriptions","organizations_url":"https://api.github.com/users/songlingatpan/orgs","repos_url":"https://api.github.com/users/songlingatpan/repos","events_url":"https://api.github.com/users/songlingatpan/events{/privacy}","received_events_url":"https://api.github.com/users/songlingatpan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-06-25T15:09:14Z","updated_at":"2024-07-09T18:42:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In OpenSSL code, we can customize malloc/free functions with CRYPTO_set_mem_functions.\r\nin oqs provider, it also utilized OPENSSL_malloc/OPENSSL_free. so CRYPTO_set_mem_functions can be used to customize allocator.\r\nWe should replace malloc/free with OPENSSL_malloc/OpenSSL_free in liboqs as well.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1823/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2218404762","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1823#issuecomment-2218404762","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1823","id":2218404762,"node_id":"IC_kwDOA-eq3c6EOiua","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-07-09T18:42:22Z","updated_at":"2024-07-09T18:42:22Z","author_association":"MEMBER","body":"We certainly could do this, but I don't think it's very high on our priority list given the amount of manual effort it would require and the minimal (to my knowledge) improvement to the library. However, if you would like to take a stab at it, please feel free to open a PR for us to review.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2218404762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-09T18:42:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"40002890551","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1824","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1824/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1824/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1824/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1824","id":2372967010,"node_id":"I_kwDOA-eq3c6NcJpi","number":1824,"title":"huge stack usage","user":{"login":"songlingatpan","id":62972259,"node_id":"MDQ6VXNlcjYyOTcyMjU5","avatar_url":"https://avatars.githubusercontent.com/u/62972259?v=4","gravatar_id":"","url":"https://api.github.com/users/songlingatpan","html_url":"https://github.com/songlingatpan","followers_url":"https://api.github.com/users/songlingatpan/followers","following_url":"https://api.github.com/users/songlingatpan/following{/other_user}","gists_url":"https://api.github.com/users/songlingatpan/gists{/gist_id}","starred_url":"https://api.github.com/users/songlingatpan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songlingatpan/subscriptions","organizations_url":"https://api.github.com/users/songlingatpan/orgs","repos_url":"https://api.github.com/users/songlingatpan/repos","events_url":"https://api.github.com/users/songlingatpan/events{/privacy}","received_events_url":"https://api.github.com/users/songlingatpan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-06-25T15:18:36Z","updated_at":"2024-07-09T19:23:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"My stack limit is 64kb.\r\nIn multiple KEM implementation, it utilized much stack memory. It causes stack overflow.\r\nWe can increase the stack size to 384kb to solve the issue. However, can we use heap to reduce stack usage? Thanks a lot.\r\n\r\n#0  0x00007ffff158871a in PQCLEAN_HQC192_CLEAN_vect_mul (o=<error reading variable: Cannot access memory at address 0x7ffff1ab69e8>, v1=<error reading variable: Cannot access memory at address 0x7ffff1ab69e0>,\r\n    v2=<error reading variable: Cannot access memory at address 0x7ffff1ab69d8>) at ../src/kem/hqc/pqclean_hqc-192_clean/gf2x.c:191\r\n#1  0x00007ffff1588961 in PQCLEAN_HQC192_CLEAN_hqc_pke_keygen (pk=0xd3e075dd3c \"\", sk=0xd3e075c93c \"\") at ../src/kem/hqc/pqclean_hqc-192_clean/hqc.c:51\r\n#2  0x00007ffff1588dd9 in PQCLEAN_HQC192_CLEAN_crypto_kem_keypair (pk=0xd3e075dd3c \"\", sk=0xd3e075c93c \"\") at ../src/kem/hqc/pqclean_hqc-192_clean/kem.c:31\r\n#3  0x00007ffff1586498 in OQS_KEM_hqc_192_keypair (public_key=0xd3e075dd3c \"\", secret_key=0xd3e075c93c \"\") at ../src/kem/hqc/kem_hqc_192.c:38\r\n#4  0x00007ffff19da46f in OQS_KEM_keypair (kem=0xd3e0b24100, public_key=0xd3e075dd3c \"\", secret_key=0xd3e075c93c \"\") at ../src/kem/kem.c:518\r\n#5  0x00007ffff1f2c9f5 in oqsx_key_gen_oqs (gen_kem=<optimized out>, key=0xd3e05d0a00) at ../oqsprov/oqsprov_keys.c:1685\r\n#6  oqsx_key_gen_oqs (gen_kem=<optimized out>, key=0xd3e05d0a00) at ../oqsprov/oqsprov_keys.c:1682\r\n\r\nSome big stack usages as below:\r\nvoid PQCLEAN_HQC192_CLEAN_vect_mul(uint64_t *o, const uint64_t *v1, const uint64_t *v2) {\r\n    uint64_t stack[VEC_N_SIZE_64 << 3] = {0};\r\n    uint64_t o_karat[VEC_N_SIZE_64 << 1] = {0};","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1824/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2218472131","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1824#issuecomment-2218472131","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1824","id":2218472131,"node_id":"IC_kwDOA-eq3c6EOzLD","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-07-09T19:23:44Z","updated_at":"2024-07-09T19:23:44Z","author_association":"MEMBER","body":"We do note large stack usage of some algorithms (i.e., McEliece) in the README and other documentation. However, our cutoff for what we consider \"large\" is (I believe) ~1 MB.\r\n\r\nWe don't currently provide any mechanism for using heap over stack. To do so would require us to modify upstream code, which would require significant maintenance effort on our part.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2218472131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-07-09T19:23:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
