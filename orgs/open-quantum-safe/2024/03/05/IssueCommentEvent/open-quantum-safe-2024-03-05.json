{"id":"36247110574","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/112","id":2166224838,"node_id":"PR_kwDOCrBzOM5ojoex","number":112,"title":"Add Module-Lattice-Based Algorithms (ML-*) Support","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-03-04T08:16:25Z","updated_at":"2024-03-05T05:33:11Z","closed_at":"2024-03-04T17:58:02Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/112","html_url":"https://github.com/open-quantum-safe/boringssl/pull/112","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/112.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/112.patch","merged_at":"2024-03-04T17:58:02Z"},"body":"This brings support for ML-DSA and ML-KEM","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1977998823","html_url":"https://github.com/open-quantum-safe/boringssl/pull/112#issuecomment-1977998823","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112","id":1977998823,"node_id":"IC_kwDOCrBzOM515d3n","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-03-05T05:33:09Z","updated_at":"2024-03-05T05:33:09Z","author_association":"MEMBER","body":"> In short, the clienthello includes more KEX/SIG options; however, when we run the test, it still picks SSL_GROUP_X25519_FRODO640AES.\r\n\r\nThat is understood. But wouldn't it be more accurate to state \"the clienthello size comprising all active client side algorithms is 10026\" (possibly listing those) instead of \"the clienthello size of SSL_GROUP_X25519_FRODO640AES is 10026\"?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1977998823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-05T05:33:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36253677003","type":"IssueCommentEvent","actor":{"id":74706004,"login":"pi-314159","display_login":"pi-314159","gravatar_id":"","url":"https://api.github.com/users/pi-314159","avatar_url":"https://avatars.githubusercontent.com/u/74706004?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/112","id":2166224838,"node_id":"PR_kwDOCrBzOM5ojoex","number":112,"title":"Add Module-Lattice-Based Algorithms (ML-*) Support","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-03-04T08:16:25Z","updated_at":"2024-03-05T09:44:42Z","closed_at":"2024-03-04T17:58:02Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/112","html_url":"https://github.com/open-quantum-safe/boringssl/pull/112","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/112.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/112.patch","merged_at":"2024-03-04T17:58:02Z"},"body":"This brings support for ML-DSA and ML-KEM","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1978346112","html_url":"https://github.com/open-quantum-safe/boringssl/pull/112#issuecomment-1978346112","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112","id":1978346112,"node_id":"IC_kwDOCrBzOM516yqA","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"created_at":"2024-03-05T09:44:41Z","updated_at":"2024-03-05T09:44:41Z","author_association":"COLLABORATOR","body":"@baentsch I want to specify SSL_GROUP_X25519_FRODO640AES because if the test uses other KEX (like BIKEL), the clienthello size will change dramatically. But I like the idea, probably we can change the comment to something like this:\r\n\r\nAny changes to signature algorithms and key exchange algorithms will result in a change in the size of the ClientHello, so the size should be recalculated every time.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1978346112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-05T09:44:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36254357885","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1716","id":2164019279,"node_id":"PR_kwDOA-eq3c5ocU_V","number":1716,"title":"Fix for alg_support.cmake","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2024-03-01T19:12:01Z","updated_at":"2024-03-05T10:03:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1716","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1716","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1716.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1716.patch","merged_at":null},"body":"Addresses the following cases:\r\n\r\n- If I compile with `-DOQS_ALGS_ENABLED=STD`, I still expect the aarch64 (or avx2) variants available by default if they are supported on the target machine.\r\n- If I compile with `-DOQS_ALGS_ENABLED=STD`, I expect both ml-dsa-44-ipd and its alias ml-dsa-44 to be available, although only the alias was specified in the \"STD\" list.\r\n\r\nIt's addressed by refactoring alg_support.cmake and the fragments that generate it, by moving the cmake statements to conditionally activate platform-specific code and aliases below the calls to \"filter_algs\". filter_algs would otherwise remove these dependencies.\r\n\r\nAdds a test to CI to check if both a ml-dsa-ipd and a ml-dsa alias is available with the STD build.\r\n\r\nAdds missing bike_l5 to the NIST_R4 algs list (unless this variant wasn't there intentionally).\r\n\r\nFixes #1703 \r\nFixes #1704\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1978389645","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1716#issuecomment-1978389645","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716","id":1978389645,"node_id":"IC_kwDOA-eq3c5169SN","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2024-03-05T10:03:56Z","updated_at":"2024-03-05T10:03:56Z","author_association":"MEMBER","body":"The aliases give the possibility to support different versions at the same time. I don't see why you imply that algorithms therefore need to be supported forever.\r\n\r\nI also don't mean to replace OIDs in certificates with names, but simply to support a use case where libOQS can be used (by software handling certificates) with different versions at the same time. I don't see a different way to do this other than a separate identifier.\r\n\r\n> The two cannot and shall not be used interchangeably\r\n\r\nIt seemed logical to me that the name and the alias are either both available or none, since they are the same algorithm. But I don't have a strong enough opinion on it to insist. I'm ok to update the PR to change this: for example, activating the ML-DSA macros won't automatically activate the ML-DSA-ipd macro (and vice versa).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1978389645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-05T10:03:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36260844634","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1716","id":2164019279,"node_id":"PR_kwDOA-eq3c5ocU_V","number":1716,"title":"Fix for alg_support.cmake","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2024-03-01T19:12:01Z","updated_at":"2024-03-05T13:18:13Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1716","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1716","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1716.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1716.patch","merged_at":null},"body":"Addresses the following cases:\r\n\r\n- If I compile with `-DOQS_ALGS_ENABLED=STD`, I still expect the aarch64 (or avx2) variants available by default if they are supported on the target machine.\r\n- If I compile with `-DOQS_ALGS_ENABLED=STD`, I expect both ml-dsa-44-ipd and its alias ml-dsa-44 to be available, although only the alias was specified in the \"STD\" list.\r\n\r\nIt's addressed by refactoring alg_support.cmake and the fragments that generate it, by moving the cmake statements to conditionally activate platform-specific code and aliases below the calls to \"filter_algs\". filter_algs would otherwise remove these dependencies.\r\n\r\nAdds a test to CI to check if both a ml-dsa-ipd and a ml-dsa alias is available with the STD build.\r\n\r\nAdds missing bike_l5 to the NIST_R4 algs list (unless this variant wasn't there intentionally).\r\n\r\nFixes #1703 \r\nFixes #1704\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1978760390","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1716#issuecomment-1978760390","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1716","id":1978760390,"node_id":"IC_kwDOA-eq3c518XzG","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-03-05T13:18:11Z","updated_at":"2024-03-05T13:18:11Z","author_association":"MEMBER","body":"> I don't see why you imply that algorithms therefore need to be supported forever.\r\n\r\nI don't imply this. You introduce this demand with the statement\r\n\r\n> Having an explicit \"ipd\" option that guarantees compatibility won't break in the future\r\n\r\nAdditionally you state,\r\n\r\n> I also don't mean to replace OIDs in certificates with names, but simply to support a use case where libOQS can be used (by software handling certificates) with different versions at the same time.\r\n\r\n\"different versions at the same time\" exactly states that you want to keep supporting \"ml-kem/dsa-ipd\" for an unspecified \"future\" _in parallel_ to the standardized \"ml-kem/dsa\"\r\n\r\n> I don't see a different way to do this other than a separate identifier.\r\n\r\nMe neither. We simply need to accept your demand to retain several versions of the same algorithm in the library at the same time. We have not done this so far -- one reason for which was to reduce the support and testing effort.\r\n\r\nAn obvious alternative to support your use case is to create a \"legacy provider\" supporting old OIDs (e.g., those that you currently reserved for ml-dsa-ipd) built against a version of `liboqs` containing that (then old -ipd) code base. This way, neither `liboqs` nor `oqsprovider` would have to keep maintaining the \"-ipd\" code bases but can move forward as the standards evolve.\r\n\r\n> I'm ok to update the PR to change this: for example, activating the ML-DSA macros won't automatically activate the ML-DSA-ipd macro (and vice versa).\r\n\r\nThat would be a great (re)solution. That way we can manage these two separate algorithms separately. Yes, I know, right now they are identical -- and may well remain so; but if there's a different \"ipd2\" or final standard, we're covered and can prune \"-ipd\" without impacting the downstreams.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1978760390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-05T13:18:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36271619920","type":"IssueCommentEvent","actor":{"id":74706004,"login":"pi-314159","display_login":"pi-314159","gravatar_id":"","url":"https://api.github.com/users/pi-314159","avatar_url":"https://avatars.githubusercontent.com/u/74706004?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/113","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/113/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/113/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/113/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/113","id":2168735050,"node_id":"PR_kwDOCrBzOM5osOsp","number":113,"title":"Allow libpki to verify quantum safe signatures","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-03-05T09:37:13Z","updated_at":"2024-03-05T18:21:16Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/113","html_url":"https://github.com/open-quantum-safe/boringssl/pull/113","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/113.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/113.patch","merged_at":null},"body":"Will create some new templates in oqs_template later","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/113/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1979377064","html_url":"https://github.com/open-quantum-safe/boringssl/pull/113#issuecomment-1979377064","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/113","id":1979377064,"node_id":"IC_kwDOCrBzOM51-uWo","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"created_at":"2024-03-05T18:21:15Z","updated_at":"2024-03-05T18:21:15Z","author_association":"COLLABORATOR","body":"> I'm a bit surprised to find all OQS sigalgs in a function called \"IsAcceptableCurveForEcdsa\": What's the rationale for this?\r\n\r\nThank you for pointing this out! This was an old implementation that has been replaced by the change in `IsPublicKeyAcceptable`. I forgot to remove it :D","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1979377064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-05T18:21:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36271788283","type":"IssueCommentEvent","actor":{"id":74706004,"login":"pi-314159","display_login":"pi-314159","gravatar_id":"","url":"https://api.github.com/users/pi-314159","avatar_url":"https://avatars.githubusercontent.com/u/74706004?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/112","id":2166224838,"node_id":"PR_kwDOCrBzOM5ojoex","number":112,"title":"Add Module-Lattice-Based Algorithms (ML-*) Support","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-03-04T08:16:25Z","updated_at":"2024-03-05T18:27:02Z","closed_at":"2024-03-04T17:58:02Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/112","html_url":"https://github.com/open-quantum-safe/boringssl/pull/112","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/112.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/112.patch","merged_at":"2024-03-04T17:58:02Z"},"body":"This brings support for ML-DSA and ML-KEM","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1979386839","html_url":"https://github.com/open-quantum-safe/boringssl/pull/112#issuecomment-1979386839","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/112","id":1979386839,"node_id":"IC_kwDOCrBzOM51-wvX","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"created_at":"2024-03-05T18:27:01Z","updated_at":"2024-03-05T18:27:01Z","author_association":"COLLABORATOR","body":"@baentsch also it might not be a good idea to list all client side algorithms because there are too many.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1979386839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-03-05T18:27:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
