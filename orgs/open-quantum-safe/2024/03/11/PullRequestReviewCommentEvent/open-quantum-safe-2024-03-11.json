{"id":"36439992612","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519916393","pull_request_review_id":1928156857,"id":1519916393,"node_id":"PRRC_kwDOA-eq3c5amBVp","diff_hunk":"@@ -0,0 +1,1438 @@\n+// SPDX-License-Identifier: MIT\n+\n+#include <assert.h>\n+#include <stdlib.h>\n+#if defined(_WIN32)\n+#include <string.h>\n+#define strcasecmp _stricmp\n+#else\n+#include <strings.h>\n+#endif\n+\n+#include <oqs/oqs.h>\n+\n+#ifdef OQS_ENABLE_SIG_STFL_XMSS\n+#include <oqs/sig_stfl_xmss.h>\n+#endif // OQS_ENABLE_SIG_STFL_XMSS\n+\n+#ifdef OQS_ENABLE_SIG_STFL_LMS\n+#include <oqs/sig_stfl_lms.h>\n+#endif // OQS_ENABLE_SIG_STFL_LMS\n+\n+OQS_API const char *OQS_SIG_STFL_alg_identifier(size_t i) {\n+\n+\tconst char *a[OQS_SIG_STFL_algs_length] = {\n+\t\t// XMSS\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h20,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_12,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_12,\n+\t\t// LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w8,\n+\n+\t\t//2-Level LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8,\n+\t};\n+\n+\tif (i >= OQS_SIG_STFL_algs_length) {\n+\t\treturn NULL;\n+\t} else {\n+\t\treturn a[i];\n+\t}\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_count(void) {\n+\treturn OQS_SIG_STFL_algs_length;\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_is_enabled(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\t//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn 0;\n+\t}\n+}\n+\n+OQS_API OQS_SIG_STFL *OQS_SIG_STFL_new(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {","path":"src/sig_stfl/sig_stfl.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"actually this is from the template I and Norm follow. Anyway the `if (0)` will be remove in the compile process. \r\nLike `{} while 0` macro. ","created_at":"2024-03-11T15:28:16Z","updated_at":"2024-03-11T15:28:16Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519916393","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519916393"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519916393"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519916393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":501,"original_line":501,"side":"RIGHT","in_reply_to_id":1504248924,"original_position":501,"position":501,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:28:16Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:28:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440015164","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917359","pull_request_review_id":1928158453,"id":1519917359,"node_id":"PRRC_kwDOA-eq3c5amBkv","diff_hunk":"@@ -0,0 +1,164 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdint.h>\n+#include <string.h>\n+\n+#include <oqs/sha2.h>\n+#include <oqs/sha3.h>\n+\n+#include \"hash_address.h\"\n+#include \"utils.h\"\n+#include \"params.h\"\n+#include \"hash.h\"\n+\n+#define XMSS_HASH_PADDING_F 0\n+#define XMSS_HASH_PADDING_H 1\n+#define XMSS_HASH_PADDING_HASH 2\n+#define XMSS_HASH_PADDING_PRF 3\n+#define XMSS_HASH_PADDING_PRF_KEYGEN 4\n+\n+void addr_to_bytes(unsigned char *bytes, const uint32_t addr[8])\n+{\n+    int i;\n+    for (i = 0; i < 8; i++) {\n+        ull_to_bytes(bytes + i*4, 4, addr[i]);\n+    }\n+}\n+\n+/*\n+ * Computes PRF(key, in), for a key of params->n bytes, and a 32-byte input.\n+ */\n+int prf(const xmss_params *params,\n+        unsigned char *out, const unsigned char in[32],\n+        const unsigned char *key)\n+{\n+    unsigned char* buf = malloc(params->padding_len + params->n + 32);","path":"src/sig_stfl/xmss/external/hash.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in #1724 ","created_at":"2024-03-11T15:28:52Z","updated_at":"2024-03-11T15:28:52Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519917359","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917359"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519917359"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":34,"original_line":34,"side":"RIGHT","in_reply_to_id":1504434858,"original_position":34,"position":34,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:28:52Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:28:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440019794","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917542","pull_request_review_id":1928158749,"id":1519917542,"node_id":"PRRC_kwDOA-eq3c5amBnm","diff_hunk":"@@ -0,0 +1,164 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdint.h>\n+#include <string.h>\n+\n+#include <oqs/sha2.h>\n+#include <oqs/sha3.h>\n+\n+#include \"hash_address.h\"\n+#include \"utils.h\"\n+#include \"params.h\"\n+#include \"hash.h\"\n+\n+#define XMSS_HASH_PADDING_F 0\n+#define XMSS_HASH_PADDING_H 1\n+#define XMSS_HASH_PADDING_HASH 2\n+#define XMSS_HASH_PADDING_PRF 3\n+#define XMSS_HASH_PADDING_PRF_KEYGEN 4\n+\n+void addr_to_bytes(unsigned char *bytes, const uint32_t addr[8])\n+{\n+    int i;\n+    for (i = 0; i < 8; i++) {\n+        ull_to_bytes(bytes + i*4, 4, addr[i]);\n+    }\n+}\n+\n+/*\n+ * Computes PRF(key, in), for a key of params->n bytes, and a 32-byte input.\n+ */\n+int prf(const xmss_params *params,\n+        unsigned char *out, const unsigned char in[32],\n+        const unsigned char *key)\n+{\n+    unsigned char* buf = malloc(params->padding_len + params->n + 32);\n+\n+    ull_to_bytes(buf, params->padding_len, XMSS_HASH_PADDING_PRF);\n+    memcpy(buf + params->padding_len, key, params->n);\n+    memcpy(buf + params->padding_len + params->n, in, 32);\n+\n+    int ret = core_hash(params, out, buf, params->padding_len + params->n + 32);\n+\n+    OQS_MEM_insecure_free(buf);\n+\n+    return ret;\n+}\n+\n+/*\n+ * Computes PRF_keygen(key, in), for a key of params->n bytes, and an input\n+ * of 32 + params->n bytes\n+ */\n+int prf_keygen(const xmss_params *params,\n+        unsigned char *out, const unsigned char *in,\n+        const unsigned char *key)\n+{\n+    unsigned char *buf = malloc(params->padding_len + 2*params->n + 32);\n+\n+    ull_to_bytes(buf, params->padding_len, XMSS_HASH_PADDING_PRF_KEYGEN);\n+    memcpy(buf + params->padding_len, key, params->n);\n+    memcpy(buf + params->padding_len + params->n, in, params->n + 32);\n+\n+    int ret = core_hash(params, out, buf, params->padding_len + 2*params->n + 32);\n+\n+    OQS_MEM_insecure_free(buf);\n+\n+    return ret;\n+}\n+\n+/*\n+ * Computes the message hash using R, the public root, the index of the leaf\n+ * node, and the message. Notably, it requires m_with_prefix to have 3*n plus\n+ * the length of the padding as free space available before the message,\n+ * to use for the prefix. This is necessary to prevent having to move the\n+ * message around (and thus allocate memory for it).\n+ */\n+int hash_message(const xmss_params *params, unsigned char *out,\n+                 const unsigned char *R, const unsigned char *root,\n+                 unsigned long long idx,\n+                 unsigned char *m_with_prefix, unsigned long long mlen)\n+{\n+    /* We're creating a hash using input of the form:\n+       toByte(X, 32) || R || root || index || M */\n+    ull_to_bytes(m_with_prefix, params->padding_len, XMSS_HASH_PADDING_HASH);\n+    memcpy(m_with_prefix + params->padding_len, R, params->n);\n+    memcpy(m_with_prefix + params->padding_len + params->n, root, params->n);\n+    ull_to_bytes(m_with_prefix + params->padding_len + 2*params->n, params->n, idx);\n+\n+    return core_hash(params, out, m_with_prefix, mlen + params->padding_len + 3*params->n);\n+}\n+\n+/**\n+ * We assume the left half is in in[0]...in[n-1]\n+ */\n+int thash_h(const xmss_params *params,\n+            unsigned char *out, const unsigned char *in,\n+            const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned char *tmp = malloc(params->padding_len + 3 * params->n + 2 * params->n);","path":"src/sig_stfl/xmss/external/hash.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in #1724 ","created_at":"2024-03-11T15:28:59Z","updated_at":"2024-03-11T15:28:59Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519917542","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917542"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519917542"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":97,"original_line":97,"side":"RIGHT","in_reply_to_id":1504439478,"original_position":97,"position":97,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:28:59Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:28:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440022065","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917622","pull_request_review_id":1928158898,"id":1519917622,"node_id":"PRRC_kwDOA-eq3c5amBo2","diff_hunk":"@@ -0,0 +1,164 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdint.h>\n+#include <string.h>\n+\n+#include <oqs/sha2.h>\n+#include <oqs/sha3.h>\n+\n+#include \"hash_address.h\"\n+#include \"utils.h\"\n+#include \"params.h\"\n+#include \"hash.h\"\n+\n+#define XMSS_HASH_PADDING_F 0\n+#define XMSS_HASH_PADDING_H 1\n+#define XMSS_HASH_PADDING_HASH 2\n+#define XMSS_HASH_PADDING_PRF 3\n+#define XMSS_HASH_PADDING_PRF_KEYGEN 4\n+\n+void addr_to_bytes(unsigned char *bytes, const uint32_t addr[8])\n+{\n+    int i;\n+    for (i = 0; i < 8; i++) {\n+        ull_to_bytes(bytes + i*4, 4, addr[i]);\n+    }\n+}\n+\n+/*\n+ * Computes PRF(key, in), for a key of params->n bytes, and a 32-byte input.\n+ */\n+int prf(const xmss_params *params,\n+        unsigned char *out, const unsigned char in[32],\n+        const unsigned char *key)\n+{\n+    unsigned char* buf = malloc(params->padding_len + params->n + 32);\n+\n+    ull_to_bytes(buf, params->padding_len, XMSS_HASH_PADDING_PRF);\n+    memcpy(buf + params->padding_len, key, params->n);\n+    memcpy(buf + params->padding_len + params->n, in, 32);\n+\n+    int ret = core_hash(params, out, buf, params->padding_len + params->n + 32);\n+\n+    OQS_MEM_insecure_free(buf);\n+\n+    return ret;\n+}\n+\n+/*\n+ * Computes PRF_keygen(key, in), for a key of params->n bytes, and an input\n+ * of 32 + params->n bytes\n+ */\n+int prf_keygen(const xmss_params *params,\n+        unsigned char *out, const unsigned char *in,\n+        const unsigned char *key)\n+{\n+    unsigned char *buf = malloc(params->padding_len + 2*params->n + 32);\n+\n+    ull_to_bytes(buf, params->padding_len, XMSS_HASH_PADDING_PRF_KEYGEN);\n+    memcpy(buf + params->padding_len, key, params->n);\n+    memcpy(buf + params->padding_len + params->n, in, params->n + 32);\n+\n+    int ret = core_hash(params, out, buf, params->padding_len + 2*params->n + 32);\n+\n+    OQS_MEM_insecure_free(buf);\n+\n+    return ret;\n+}\n+\n+/*\n+ * Computes the message hash using R, the public root, the index of the leaf\n+ * node, and the message. Notably, it requires m_with_prefix to have 3*n plus\n+ * the length of the padding as free space available before the message,\n+ * to use for the prefix. This is necessary to prevent having to move the\n+ * message around (and thus allocate memory for it).\n+ */\n+int hash_message(const xmss_params *params, unsigned char *out,\n+                 const unsigned char *R, const unsigned char *root,\n+                 unsigned long long idx,\n+                 unsigned char *m_with_prefix, unsigned long long mlen)\n+{\n+    /* We're creating a hash using input of the form:\n+       toByte(X, 32) || R || root || index || M */\n+    ull_to_bytes(m_with_prefix, params->padding_len, XMSS_HASH_PADDING_HASH);\n+    memcpy(m_with_prefix + params->padding_len, R, params->n);\n+    memcpy(m_with_prefix + params->padding_len + params->n, root, params->n);\n+    ull_to_bytes(m_with_prefix + params->padding_len + 2*params->n, params->n, idx);\n+\n+    return core_hash(params, out, m_with_prefix, mlen + params->padding_len + 3*params->n);\n+}\n+\n+/**\n+ * We assume the left half is in in[0]...in[n-1]\n+ */\n+int thash_h(const xmss_params *params,\n+            unsigned char *out, const unsigned char *in,\n+            const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned char *tmp = malloc(params->padding_len + 3 * params->n + 2 * params->n);\n+\n+    unsigned char *buf = tmp;\n+    unsigned char *bitmask = tmp + (params->padding_len + 3 * params->n);\n+\n+    unsigned char addr_as_bytes[32];\n+    unsigned int i;\n+\n+    /* Set the function padding. */\n+    ull_to_bytes(buf, params->padding_len, XMSS_HASH_PADDING_H);\n+\n+    /* Generate the n-byte key. */\n+    set_key_and_mask(addr, 0);\n+    addr_to_bytes(addr_as_bytes, addr);\n+    prf(params, buf + params->padding_len, addr_as_bytes, pub_seed);\n+\n+    /* Generate the 2n-byte mask. */\n+    set_key_and_mask(addr, 1);\n+    addr_to_bytes(addr_as_bytes, addr);\n+    prf(params, bitmask, addr_as_bytes, pub_seed);\n+\n+    set_key_and_mask(addr, 2);\n+    addr_to_bytes(addr_as_bytes, addr);\n+    prf(params, bitmask + params->n, addr_as_bytes, pub_seed);\n+\n+    for (i = 0; i < 2 * params->n; i++) {\n+        buf[params->padding_len + params->n + i] = in[i] ^ bitmask[i];\n+    }\n+    int ret = core_hash(params, out, buf, params->padding_len + 3 * params->n);\n+\n+    OQS_MEM_insecure_free(tmp);\n+\n+    return ret;\n+}\n+\n+int thash_f(const xmss_params *params,\n+            unsigned char *out, const unsigned char *in,\n+            const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned char *tmp = malloc(params->padding_len + 2 * params->n + params->n);","path":"src/sig_stfl/xmss/external/hash.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in #1724 ","created_at":"2024-03-11T15:29:02Z","updated_at":"2024-03-11T15:29:03Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519917622","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917622"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519917622"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917622/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":136,"original_line":136,"side":"RIGHT","in_reply_to_id":1504440230,"original_position":136,"position":136,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:29:03Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:29:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440031183","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917976","pull_request_review_id":1928159517,"id":1519917976,"node_id":"PRRC_kwDOA-eq3c5amBuY","diff_hunk":"@@ -0,0 +1,754 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdint.h>\n+#include <string.h>\n+\n+#include \"params.h\"\n+#include \"xmss_core.h\"\n+\n+int xmss_str_to_oid(uint32_t *oid, const char *s)\n+{\n+    if (!strcmp(s, \"XMSS-SHA2_10_256\")) {\n+        *oid = 0x00000001;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_16_256\")) {\n+        *oid = 0x00000002;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_20_256\")) {\n+        *oid = 0x00000003;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_10_512\")) {\n+        *oid = 0x00000004;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_16_512\")) {\n+        *oid = 0x00000005;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_20_512\")) {\n+        *oid = 0x00000006;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_10_256\")) {\n+        *oid = 0x00000007;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_16_256\")) {\n+        *oid = 0x00000008;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_20_256\")) {\n+        *oid = 0x00000009;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_10_512\")) {\n+        *oid = 0x0000000a;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_16_512\")) {\n+        *oid = 0x0000000b;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_20_512\")) {\n+        *oid = 0x0000000c;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_10_192\")) {\n+        *oid = 0x0000000d;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_16_192\")) {\n+        *oid = 0x0000000e;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_20_192\")) {\n+        *oid = 0x0000000f;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_10_256\")) {\n+        *oid = 0x00000010;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_16_256\")) {\n+        *oid = 0x00000011;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_20_256\")) {\n+        *oid = 0x00000012;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_10_192\")) {\n+        *oid = 0x00000013;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_16_192\")) {\n+        *oid = 0x00000014;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_20_192\")) {\n+        *oid = 0x00000015;\n+    }\n+    else {\n+        return -1;\n+    }\n+    return 0;\n+}\n+\n+int xmssmt_str_to_oid(uint32_t *oid, const char *s)\n+{\n+    if (!strcmp(s, \"XMSSMT-SHA2_20/2_256\")) {\n+        *oid = 0x00000001;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/4_256\")) {\n+        *oid = 0x00000002;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/2_256\")) {\n+        *oid = 0x00000003;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/4_256\")) {\n+        *oid = 0x00000004;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/8_256\")) {\n+        *oid = 0x00000005;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/3_256\")) {\n+        *oid = 0x00000006;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/6_256\")) {\n+        *oid = 0x00000007;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/12_256\")) {\n+        *oid = 0x00000008;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/2_512\")) {\n+        *oid = 0x00000009;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/4_512\")) {\n+        *oid = 0x0000000a;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/2_512\")) {\n+        *oid = 0x0000000b;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/4_512\")) {\n+        *oid = 0x0000000c;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/8_512\")) {\n+        *oid = 0x0000000d;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/3_512\")) {\n+        *oid = 0x0000000e;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/6_512\")) {\n+        *oid = 0x0000000f;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/12_512\")) {\n+        *oid = 0x00000010;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_20/2_256\")) {\n+        *oid = 0x00000011;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_20/4_256\")) {\n+        *oid = 0x00000012;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/2_256\")) {\n+        *oid = 0x00000013;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/4_256\")) {\n+        *oid = 0x00000014;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/8_256\")) {\n+        *oid = 0x00000015;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/3_256\")) {\n+        *oid = 0x00000016;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/6_256\")) {\n+        *oid = 0x00000017;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/12_256\")) {\n+        *oid = 0x00000018;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_20/2_512\")) {\n+        *oid = 0x00000019;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_20/4_512\")) {\n+        *oid = 0x0000001a;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/2_512\")) {\n+        *oid = 0x0000001b;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/4_512\")) {\n+        *oid = 0x0000001c;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/8_512\")) {\n+        *oid = 0x0000001d;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/3_512\")) {\n+        *oid = 0x0000001e;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/6_512\")) {\n+        *oid = 0x0000001f;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/12_512\")) {\n+        *oid = 0x00000020;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/2_192\")) {\n+        *oid = 0x00000021;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/4_192\")) {\n+        *oid = 0x00000022;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/2_192\")) {\n+        *oid = 0x00000023;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/4_192\")) {\n+        *oid = 0x00000024;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/8_192\")) {\n+        *oid = 0x00000025;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/3_192\")) {\n+        *oid = 0x00000026;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/6_192\")) {\n+        *oid = 0x00000027;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/12_192\")) {\n+        *oid = 0x00000028;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_20/2_256\")) {\n+        *oid = 0x00000029;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_20/4_256\")) {\n+        *oid = 0x0000002a;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/2_256\")) {\n+        *oid = 0x0000002b;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/4_256\")) {\n+        *oid = 0x0000002c;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/8_256\")) {\n+        *oid = 0x0000002d;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/3_256\")) {\n+        *oid = 0x0000002e;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/6_256\")) {\n+        *oid = 0x0000002f;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/12_256\")) {\n+        *oid = 0x00000030;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_20/2_192\")) {\n+        *oid = 0x00000031;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_20/4_192\")) {\n+        *oid = 0x00000032;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/2_192\")) {\n+        *oid = 0x00000033;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/4_192\")) {\n+        *oid = 0x00000034;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/8_192\")) {\n+        *oid = 0x00000035;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/3_192\")) {\n+        *oid = 0x00000036;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/6_192\")) {\n+        *oid = 0x00000037;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/12_192\")) {\n+        *oid = 0x00000038;\n+    }\n+    else {\n+        return -1;\n+    }\n+    return 0;\n+}\n+\n+int xmss_parse_oid(xmss_params *params, const uint32_t oid)\n+{\n+    switch (oid) {\n+        case 0x00000001:\n+        case 0x00000002:\n+        case 0x00000003:\n+        case 0x00000004:\n+        case 0x00000005:\n+        case 0x00000006:\n+\n+        case 0x0000000d:\n+        case 0x0000000e:\n+        case 0x0000000f:\n+            params->func = XMSS_SHA2;\n+            break;\n+\n+        case 0x00000007:\n+        case 0x00000008:\n+        case 0x00000009:\n+            params->func = XMSS_SHAKE128;\n+            break;\n+\n+        case 0x0000000a:\n+        case 0x0000000b:\n+        case 0x0000000c:\n+\n+        case 0x00000010:\n+        case 0x00000011:\n+        case 0x00000012:\n+        case 0x00000013:\n+        case 0x00000014:\n+        case 0x00000015:\n+            params->func = XMSS_SHAKE256;\n+            break;\n+\n+        default:\n+            return -1;\n+    }\n+    switch (oid) {\n+        case 0x0000000d:\n+        case 0x0000000e:\n+        case 0x0000000f:\n+\n+        case 0x00000013:\n+        case 0x00000014:\n+        case 0x00000015:\n+            params->n = 24;\n+            params->padding_len = 4;\n+            break;\n+\n+        case 0x00000001:\n+        case 0x00000002:\n+        case 0x00000003:\n+\n+        case 0x00000007:\n+        case 0x00000008:\n+        case 0x00000009:\n+\n+        case 0x00000010:\n+        case 0x00000011:\n+        case 0x00000012:\n+            params->n = 32;\n+            params->padding_len = 32;\n+            break;\n+\n+        case 0x00000004:\n+        case 0x00000005:\n+        case 0x00000006:\n+\n+        case 0x0000000a:\n+        case 0x0000000b:\n+        case 0x0000000c:\n+            params->n = 64;\n+            params->padding_len = 64;\n+            break;\n+\n+        default:\n+            return -1;\n+    }\n+    switch (oid) {\n+        case 0x00000001:\n+        case 0x00000004:\n+        case 0x00000007:\n+        case 0x0000000a:\n+        case 0x0000000d:\n+        case 0x00000010:\n+        case 0x00000013:\n+            params->full_height = 10;\n+            break;\n+\n+        case 0x00000002:\n+        case 0x00000005:\n+        case 0x00000008:\n+        case 0x0000000b:\n+        case 0x0000000e:\n+        case 0x00000011:\n+        case 0x00000014:\n+            params->full_height = 16;\n+            break;\n+\n+        case 0x00000003:\n+        case 0x00000006:\n+        case 0x00000009:\n+        case 0x0000000c:\n+        case 0x0000000f:\n+        case 0x00000012:\n+        case 0x00000015:\n+            params->full_height = 20;\n+\n+            break;\n+        default:\n+            return -1;\n+    }\n+\n+    params->d = 1;\n+    params->wots_w = 16;\n+\n+    // TODO figure out sensible and legal values for this based on the above","path":"src/sig_stfl/xmss/external/params.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"it's from upstream. Fixed in #1724 ","created_at":"2024-03-11T15:29:17Z","updated_at":"2024-03-11T15:29:17Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519917976","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917976"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519917976"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519917976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":372,"original_line":372,"side":"RIGHT","in_reply_to_id":1506413604,"original_position":372,"position":372,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:29:17Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:29:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440035798","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519918164","pull_request_review_id":1928159823,"id":1519918164,"node_id":"PRRC_kwDOA-eq3c5amBxU","diff_hunk":"@@ -0,0 +1,754 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdint.h>\n+#include <string.h>\n+\n+#include \"params.h\"\n+#include \"xmss_core.h\"\n+\n+int xmss_str_to_oid(uint32_t *oid, const char *s)\n+{\n+    if (!strcmp(s, \"XMSS-SHA2_10_256\")) {\n+        *oid = 0x00000001;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_16_256\")) {\n+        *oid = 0x00000002;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_20_256\")) {\n+        *oid = 0x00000003;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_10_512\")) {\n+        *oid = 0x00000004;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_16_512\")) {\n+        *oid = 0x00000005;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_20_512\")) {\n+        *oid = 0x00000006;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_10_256\")) {\n+        *oid = 0x00000007;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_16_256\")) {\n+        *oid = 0x00000008;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_20_256\")) {\n+        *oid = 0x00000009;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_10_512\")) {\n+        *oid = 0x0000000a;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_16_512\")) {\n+        *oid = 0x0000000b;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE_20_512\")) {\n+        *oid = 0x0000000c;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_10_192\")) {\n+        *oid = 0x0000000d;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_16_192\")) {\n+        *oid = 0x0000000e;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHA2_20_192\")) {\n+        *oid = 0x0000000f;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_10_256\")) {\n+        *oid = 0x00000010;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_16_256\")) {\n+        *oid = 0x00000011;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_20_256\")) {\n+        *oid = 0x00000012;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_10_192\")) {\n+        *oid = 0x00000013;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_16_192\")) {\n+        *oid = 0x00000014;\n+    }\n+    else if (!strcmp(s, \"XMSS-SHAKE256_20_192\")) {\n+        *oid = 0x00000015;\n+    }\n+    else {\n+        return -1;\n+    }\n+    return 0;\n+}\n+\n+int xmssmt_str_to_oid(uint32_t *oid, const char *s)\n+{\n+    if (!strcmp(s, \"XMSSMT-SHA2_20/2_256\")) {\n+        *oid = 0x00000001;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/4_256\")) {\n+        *oid = 0x00000002;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/2_256\")) {\n+        *oid = 0x00000003;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/4_256\")) {\n+        *oid = 0x00000004;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/8_256\")) {\n+        *oid = 0x00000005;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/3_256\")) {\n+        *oid = 0x00000006;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/6_256\")) {\n+        *oid = 0x00000007;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/12_256\")) {\n+        *oid = 0x00000008;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/2_512\")) {\n+        *oid = 0x00000009;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/4_512\")) {\n+        *oid = 0x0000000a;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/2_512\")) {\n+        *oid = 0x0000000b;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/4_512\")) {\n+        *oid = 0x0000000c;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/8_512\")) {\n+        *oid = 0x0000000d;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/3_512\")) {\n+        *oid = 0x0000000e;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/6_512\")) {\n+        *oid = 0x0000000f;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/12_512\")) {\n+        *oid = 0x00000010;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_20/2_256\")) {\n+        *oid = 0x00000011;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_20/4_256\")) {\n+        *oid = 0x00000012;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/2_256\")) {\n+        *oid = 0x00000013;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/4_256\")) {\n+        *oid = 0x00000014;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/8_256\")) {\n+        *oid = 0x00000015;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/3_256\")) {\n+        *oid = 0x00000016;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/6_256\")) {\n+        *oid = 0x00000017;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/12_256\")) {\n+        *oid = 0x00000018;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_20/2_512\")) {\n+        *oid = 0x00000019;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_20/4_512\")) {\n+        *oid = 0x0000001a;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/2_512\")) {\n+        *oid = 0x0000001b;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/4_512\")) {\n+        *oid = 0x0000001c;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_40/8_512\")) {\n+        *oid = 0x0000001d;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/3_512\")) {\n+        *oid = 0x0000001e;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/6_512\")) {\n+        *oid = 0x0000001f;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE_60/12_512\")) {\n+        *oid = 0x00000020;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/2_192\")) {\n+        *oid = 0x00000021;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_20/4_192\")) {\n+        *oid = 0x00000022;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/2_192\")) {\n+        *oid = 0x00000023;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/4_192\")) {\n+        *oid = 0x00000024;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_40/8_192\")) {\n+        *oid = 0x00000025;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/3_192\")) {\n+        *oid = 0x00000026;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/6_192\")) {\n+        *oid = 0x00000027;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHA2_60/12_192\")) {\n+        *oid = 0x00000028;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_20/2_256\")) {\n+        *oid = 0x00000029;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_20/4_256\")) {\n+        *oid = 0x0000002a;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/2_256\")) {\n+        *oid = 0x0000002b;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/4_256\")) {\n+        *oid = 0x0000002c;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/8_256\")) {\n+        *oid = 0x0000002d;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/3_256\")) {\n+        *oid = 0x0000002e;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/6_256\")) {\n+        *oid = 0x0000002f;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/12_256\")) {\n+        *oid = 0x00000030;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_20/2_192\")) {\n+        *oid = 0x00000031;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_20/4_192\")) {\n+        *oid = 0x00000032;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/2_192\")) {\n+        *oid = 0x00000033;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/4_192\")) {\n+        *oid = 0x00000034;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_40/8_192\")) {\n+        *oid = 0x00000035;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/3_192\")) {\n+        *oid = 0x00000036;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/6_192\")) {\n+        *oid = 0x00000037;\n+    }\n+    else if (!strcmp(s, \"XMSSMT-SHAKE256_60/12_192\")) {\n+        *oid = 0x00000038;\n+    }\n+    else {\n+        return -1;\n+    }\n+    return 0;\n+}\n+\n+int xmss_parse_oid(xmss_params *params, const uint32_t oid)\n+{\n+    switch (oid) {\n+        case 0x00000001:\n+        case 0x00000002:\n+        case 0x00000003:\n+        case 0x00000004:\n+        case 0x00000005:\n+        case 0x00000006:\n+\n+        case 0x0000000d:\n+        case 0x0000000e:\n+        case 0x0000000f:\n+            params->func = XMSS_SHA2;\n+            break;\n+\n+        case 0x00000007:\n+        case 0x00000008:\n+        case 0x00000009:\n+            params->func = XMSS_SHAKE128;\n+            break;\n+\n+        case 0x0000000a:\n+        case 0x0000000b:\n+        case 0x0000000c:\n+\n+        case 0x00000010:\n+        case 0x00000011:\n+        case 0x00000012:\n+        case 0x00000013:\n+        case 0x00000014:\n+        case 0x00000015:\n+            params->func = XMSS_SHAKE256;\n+            break;\n+\n+        default:\n+            return -1;\n+    }\n+    switch (oid) {\n+        case 0x0000000d:\n+        case 0x0000000e:\n+        case 0x0000000f:\n+\n+        case 0x00000013:\n+        case 0x00000014:\n+        case 0x00000015:\n+            params->n = 24;\n+            params->padding_len = 4;\n+            break;\n+\n+        case 0x00000001:\n+        case 0x00000002:\n+        case 0x00000003:\n+\n+        case 0x00000007:\n+        case 0x00000008:\n+        case 0x00000009:\n+\n+        case 0x00000010:\n+        case 0x00000011:\n+        case 0x00000012:\n+            params->n = 32;\n+            params->padding_len = 32;\n+            break;\n+\n+        case 0x00000004:\n+        case 0x00000005:\n+        case 0x00000006:\n+\n+        case 0x0000000a:\n+        case 0x0000000b:\n+        case 0x0000000c:\n+            params->n = 64;\n+            params->padding_len = 64;\n+            break;\n+\n+        default:\n+            return -1;\n+    }\n+    switch (oid) {\n+        case 0x00000001:\n+        case 0x00000004:\n+        case 0x00000007:\n+        case 0x0000000a:\n+        case 0x0000000d:\n+        case 0x00000010:\n+        case 0x00000013:\n+            params->full_height = 10;\n+            break;\n+\n+        case 0x00000002:\n+        case 0x00000005:\n+        case 0x00000008:\n+        case 0x0000000b:\n+        case 0x0000000e:\n+        case 0x00000011:\n+        case 0x00000014:\n+            params->full_height = 16;\n+            break;\n+\n+        case 0x00000003:\n+        case 0x00000006:\n+        case 0x00000009:\n+        case 0x0000000c:\n+        case 0x0000000f:\n+        case 0x00000012:\n+        case 0x00000015:\n+            params->full_height = 20;\n+\n+            break;\n+        default:\n+            return -1;\n+    }\n+\n+    params->d = 1;\n+    params->wots_w = 16;\n+\n+    // TODO figure out sensible and legal values for this based on the above\n+    params->bds_k = 0;\n+\n+    return xmss_xmssmt_initialize_params(params);\n+}\n+\n+int xmssmt_parse_oid(xmss_params *params, const uint32_t oid)\n+{\n+    switch (oid) {\n+        case 0x00000001:\n+        case 0x00000002:\n+        case 0x00000003:\n+        case 0x00000004:\n+        case 0x00000005:\n+        case 0x00000006:\n+        case 0x00000007:\n+        case 0x00000008:\n+        case 0x00000009:\n+        case 0x0000000a:\n+        case 0x0000000b:\n+        case 0x0000000c:\n+        case 0x0000000d:\n+        case 0x0000000e:\n+        case 0x0000000f:\n+        case 0x00000010:\n+\n+        case 0x00000021:\n+        case 0x00000022:\n+        case 0x00000023:\n+        case 0x00000024:\n+        case 0x00000025:\n+        case 0x00000026:\n+        case 0x00000027:\n+        case 0x00000028:\n+            params->func = XMSS_SHA2;\n+            break;\n+\n+        case 0x00000011:\n+        case 0x00000012:\n+        case 0x00000013:\n+        case 0x00000014:\n+        case 0x00000015:\n+        case 0x00000016:\n+        case 0x00000017:\n+        case 0x00000018:\n+            params->func = XMSS_SHAKE128;\n+            break;\n+\n+        case 0x00000019:\n+        case 0x0000001a:\n+        case 0x0000001b:\n+        case 0x0000001c:\n+        case 0x0000001e:\n+        case 0x0000001d:\n+        case 0x0000001f:\n+        case 0x00000020:\n+\n+        case 0x00000029:\n+        case 0x0000002a:\n+        case 0x0000002b:\n+        case 0x0000002c:\n+        case 0x0000002d:\n+        case 0x0000002e:\n+        case 0x0000002f:\n+        case 0x00000030:\n+        case 0x00000031:\n+        case 0x00000032:\n+        case 0x00000033:\n+        case 0x00000034:\n+        case 0x00000035:\n+        case 0x00000036:\n+        case 0x00000037:\n+        case 0x00000038:\n+            params->func = XMSS_SHAKE256;\n+            break;\n+\n+        default:\n+            return -1;\n+    }\n+    switch (oid) {\n+        case 0x00000021:\n+        case 0x00000022:\n+        case 0x00000023:\n+        case 0x00000024:\n+        case 0x00000025:\n+        case 0x00000026:\n+        case 0x00000027:\n+        case 0x00000028:\n+\n+        case 0x00000031:\n+        case 0x00000032:\n+        case 0x00000033:\n+        case 0x00000034:\n+        case 0x00000035:\n+        case 0x00000036:\n+        case 0x00000037:\n+        case 0x00000038:\n+            params->n = 24;\n+            params->padding_len = 4;\n+            break;\n+\n+        case 0x00000001:\n+        case 0x00000002:\n+        case 0x00000003:\n+        case 0x00000004:\n+        case 0x00000005:\n+        case 0x00000006:\n+        case 0x00000007:\n+        case 0x00000008:\n+\n+        case 0x00000011:\n+        case 0x00000012:\n+        case 0x00000013:\n+        case 0x00000014:\n+        case 0x00000015:\n+        case 0x00000016:\n+        case 0x00000017:\n+        case 0x00000018:\n+\n+        case 0x00000029:\n+        case 0x0000002a:\n+        case 0x0000002b:\n+        case 0x0000002c:\n+        case 0x0000002d:\n+        case 0x0000002e:\n+        case 0x0000002f:\n+        case 0x00000030:\n+            params->n = 32;\n+            params->padding_len = 32;\n+            break;\n+\n+        case 0x00000009:\n+        case 0x0000000a:\n+        case 0x0000000b:\n+        case 0x0000000c:\n+        case 0x0000000d:\n+        case 0x0000000e:\n+        case 0x0000000f:\n+        case 0x00000010:\n+\n+        case 0x00000019:\n+        case 0x0000001a:\n+        case 0x0000001b:\n+        case 0x0000001c:\n+        case 0x0000001d:\n+        case 0x0000001e:\n+        case 0x0000001f:\n+        case 0x00000020:\n+            params->n = 64;\n+            params->padding_len = 64;\n+            break;\n+\n+        default:\n+            return -1;\n+    }\n+    switch (oid) {\n+        case 0x00000001:\n+        case 0x00000002:\n+\n+        case 0x00000009:\n+        case 0x0000000a:\n+\n+        case 0x00000011:\n+        case 0x00000012:\n+\n+        case 0x00000019:\n+        case 0x0000001a:\n+\n+        case 0x00000021:\n+        case 0x00000022:\n+\n+        case 0x00000029:\n+        case 0x0000002a:\n+\n+        case 0x00000031:\n+        case 0x00000032:\n+            params->full_height = 20;\n+            break;\n+\n+        case 0x00000003:\n+        case 0x00000004:\n+        case 0x00000005:\n+\n+        case 0x0000000b:\n+        case 0x0000000c:\n+        case 0x0000000d:\n+\n+        case 0x00000013:\n+        case 0x00000014:\n+        case 0x00000015:\n+\n+        case 0x0000001b:\n+        case 0x0000001c:\n+        case 0x0000001d:\n+\n+        case 0x00000023:\n+        case 0x00000024:\n+        case 0x00000025:\n+\n+        case 0x0000002b:\n+        case 0x0000002c:\n+        case 0x0000002d:\n+\n+        case 0x00000033:\n+        case 0x00000034:\n+        case 0x00000035:\n+            params->full_height = 40;\n+            break;\n+\n+        case 0x00000006:\n+        case 0x00000007:\n+        case 0x00000008:\n+\n+        case 0x0000000e:\n+        case 0x0000000f:\n+        case 0x00000010:\n+\n+        case 0x00000016:\n+        case 0x00000017:\n+        case 0x00000018:\n+\n+        case 0x0000001e:\n+        case 0x0000001f:\n+        case 0x00000020:\n+\n+        case 0x00000026:\n+        case 0x00000027:\n+        case 0x00000028:\n+\n+        case 0x0000002e:\n+        case 0x0000002f:\n+        case 0x00000030:\n+\n+        case 0x00000036:\n+        case 0x00000037:\n+        case 0x00000038:\n+            params->full_height = 60;\n+            break;\n+\n+        default:\n+            return -1;\n+    }\n+    switch (oid) {\n+        case 0x00000001:\n+        case 0x00000003:\n+        case 0x00000009:\n+        case 0x0000000b:\n+        case 0x00000011:\n+        case 0x00000013:\n+        case 0x00000019:\n+        case 0x0000001b:\n+        case 0x00000021:\n+        case 0x00000023:\n+        case 0x00000029:\n+        case 0x0000002b:\n+        case 0x00000031:\n+        case 0x00000033:\n+            params->d = 2;\n+            break;\n+\n+        case 0x00000002:\n+        case 0x00000004:\n+        case 0x0000000a:\n+        case 0x0000000c:\n+        case 0x00000012:\n+        case 0x00000014:\n+        case 0x0000001a:\n+        case 0x0000001c:\n+        case 0x00000022:\n+        case 0x00000024:\n+        case 0x0000002a:\n+        case 0x0000002c:\n+        case 0x00000032:\n+        case 0x00000034:\n+            params->d = 4;\n+            break;\n+\n+        case 0x00000005:\n+        case 0x0000000d:\n+        case 0x00000015:\n+        case 0x0000001d:\n+        case 0x00000025:\n+        case 0x0000002d:\n+        case 0x00000035:\n+            params->d = 8;\n+            break;\n+\n+        case 0x00000006:\n+        case 0x0000000e:\n+        case 0x00000016:\n+        case 0x0000001e:\n+        case 0x00000026:\n+        case 0x0000002e:\n+        case 0x00000036:\n+            params->d = 3;\n+            break;\n+\n+        case 0x00000007:\n+        case 0x0000000f:\n+        case 0x00000017:\n+        case 0x0000001f:\n+        case 0x00000027:\n+        case 0x0000002f:\n+        case 0x00000037:\n+            params->d = 6;\n+            break;\n+\n+        case 0x00000008:\n+        case 0x00000010:\n+        case 0x00000018:\n+        case 0x00000020:\n+        case 0x00000028:\n+        case 0x00000030:\n+        case 0x00000038:\n+            params->d = 12;\n+            break;\n+\n+        default:\n+            return -1;\n+    }\n+\n+    params->wots_w = 16;\n+\n+    // TODO figure out sensible and legal values for this based on the above","path":"src/sig_stfl/xmss/external/params.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"it's from upstream. Fixed in https://github.com/open-quantum-safe/liboqs/pull/1724","created_at":"2024-03-11T15:29:24Z","updated_at":"2024-03-11T15:29:24Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519918164","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519918164"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519918164"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519918164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":695,"original_line":695,"side":"RIGHT","in_reply_to_id":1506414456,"original_position":695,"position":695,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:29:24Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:29:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440044801","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519918514","pull_request_review_id":1928160397,"id":1519918514,"node_id":"PRRC_kwDOA-eq3c5amB2y","diff_hunk":"@@ -0,0 +1,186 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdint.h>\n+#include <string.h>\n+\n+#include \"utils.h\"\n+#include \"hash.h\"\n+#include \"wots.h\"\n+#include \"hash_address.h\"\n+#include \"params.h\"\n+\n+/**\n+ * Helper method for pseudorandom key generation.\n+ * Expands an n-byte array into a len*n byte array using the `prf_keygen` function.\n+ */\n+static void expand_seed(const xmss_params *params,\n+                        unsigned char *outseeds, const unsigned char *inseed,\n+                        const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned int i;\n+    unsigned char *buf = malloc(params->n + 32);","path":"src/sig_stfl/xmss/external/wots.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in https://github.com/open-quantum-safe/liboqs/pull/1724","created_at":"2024-03-11T15:29:38Z","updated_at":"2024-03-11T15:29:38Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519918514","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519918514"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519918514"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519918514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":20,"original_line":20,"side":"RIGHT","in_reply_to_id":1506417001,"original_position":20,"position":20,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:29:38Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:29:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440046920","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519918596","pull_request_review_id":1928160531,"id":1519918596,"node_id":"PRRC_kwDOA-eq3c5amB4E","diff_hunk":"@@ -0,0 +1,186 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdint.h>\n+#include <string.h>\n+\n+#include \"utils.h\"\n+#include \"hash.h\"\n+#include \"wots.h\"\n+#include \"hash_address.h\"\n+#include \"params.h\"\n+\n+/**\n+ * Helper method for pseudorandom key generation.\n+ * Expands an n-byte array into a len*n byte array using the `prf_keygen` function.\n+ */\n+static void expand_seed(const xmss_params *params,\n+                        unsigned char *outseeds, const unsigned char *inseed,\n+                        const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned int i;\n+    unsigned char *buf = malloc(params->n + 32);\n+\n+    set_hash_addr(addr, 0);\n+    set_key_and_mask(addr, 0);\n+    memcpy(buf, pub_seed, params->n);\n+    for (i = 0; i < params->wots_len; i++) {\n+        set_chain_addr(addr, i);\n+        addr_to_bytes(buf + params->n, addr);\n+        prf_keygen(params, outseeds + i*params->n, buf, inseed);\n+    }\n+\n+    OQS_MEM_insecure_free(buf);\n+}\n+\n+/**\n+ * Computes the chaining function.\n+ * out and in have to be n-byte arrays.\n+ *\n+ * Interprets in as start-th value of the chain.\n+ * addr has to contain the address of the chain.\n+ */\n+static void gen_chain(const xmss_params *params,\n+                      unsigned char *out, const unsigned char *in,\n+                      unsigned int start, unsigned int steps,\n+                      const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned int i;\n+\n+    /* Initialize out with the value at position 'start'. */\n+    memcpy(out, in, params->n);\n+\n+    /* Iterate 'steps' calls to the hash function. */\n+    for (i = start; i < (start+steps) && i < params->wots_w; i++) {\n+        set_hash_addr(addr, i);\n+        thash_f(params, out, out, pub_seed, addr);\n+    }\n+}\n+\n+/**\n+ * base_w algorithm as described in draft.\n+ * Interprets an array of bytes as integers in base w.\n+ * This only works when log_w is a divisor of 8.\n+ */\n+static void base_w(const xmss_params *params,\n+                   unsigned int *output, const unsigned int out_len, const unsigned char *input)\n+{\n+    unsigned int in = 0;\n+    unsigned int out = 0;\n+    unsigned char total;\n+    unsigned int bits = 0;\n+    unsigned int consumed;\n+\n+    for (consumed = 0; consumed < out_len; consumed++) {\n+        if (bits == 0) {\n+            total = input[in];\n+            in++;\n+            bits += 8;\n+        }\n+        bits -= params->wots_log_w;\n+        output[out] = (total >> bits) & (params->wots_w - 1);\n+        out++;\n+    }\n+}\n+\n+/* Computes the WOTS+ checksum over a message (in base_w). */\n+static void wots_checksum(const xmss_params *params,\n+                          unsigned int *csum_base_w, const unsigned int *msg_base_w)\n+{\n+    int csum = 0;\n+    unsigned int csum_bytes_length =  (params->wots_len2 * params->wots_log_w + 7) / 8;\n+    unsigned char *csum_bytes = malloc(csum_bytes_length);\n+    unsigned int i;\n+\n+    /* Compute checksum. */\n+    for (i = 0; i < params->wots_len1; i++) {\n+        csum += params->wots_w - 1 - msg_base_w[i];\n+    }\n+\n+    /* Convert checksum to base_w. */\n+    /* Make sure expected empty zero bits are the least significant bits. */\n+    csum = csum << (8 - ((params->wots_len2 * params->wots_log_w) % 8));\n+    ull_to_bytes(csum_bytes, csum_bytes_length, csum);\n+    base_w(params, csum_base_w, params->wots_len2, csum_bytes);\n+\n+    OQS_MEM_insecure_free(csum_bytes);\n+}\n+\n+/* Takes a message and derives the matching chain lengths. */\n+static void chain_lengths(const xmss_params *params,\n+                          unsigned int *lengths, const unsigned char *msg)\n+{\n+    base_w(params, lengths, params->wots_len1, msg);\n+    wots_checksum(params, lengths + params->wots_len1, lengths);\n+}\n+\n+/**\n+ * WOTS key generation. Takes a 32 byte seed for the private key, expands it to\n+ * a full WOTS private key and computes the corresponding public key.\n+ * It requires the seed pub_seed (used to generate bitmasks and hash keys)\n+ * and the address of this WOTS key pair.\n+ *\n+ * Writes the computed public key to 'pk'.\n+ */\n+void wots_pkgen(const xmss_params *params,\n+                unsigned char *pk, const unsigned char *seed,\n+                const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned int i;\n+\n+    /* The WOTS+ private key is derived from the seed. */\n+    expand_seed(params, pk, seed, pub_seed, addr);\n+\n+    for (i = 0; i < params->wots_len; i++) {\n+        set_chain_addr(addr, i);\n+        gen_chain(params, pk + i*params->n, pk + i*params->n,\n+                  0, params->wots_w - 1, pub_seed, addr);\n+    }\n+}\n+\n+/**\n+ * Takes a n-byte message and the 32-byte seed for the private key to compute a\n+ * signature that is placed at 'sig'.\n+ */\n+void wots_sign(const xmss_params *params,\n+               unsigned char *sig, const unsigned char *msg,\n+               const unsigned char *seed, const unsigned char *pub_seed,\n+               uint32_t addr[8])\n+{\n+    unsigned int *lengths = calloc(params->wots_len, sizeof(unsigned int));","path":"src/sig_stfl/xmss/external/wots.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in https://github.com/open-quantum-safe/liboqs/pull/1724","created_at":"2024-03-11T15:29:42Z","updated_at":"2024-03-11T15:29:42Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519918596","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519918596"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519918596"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519918596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":148,"original_line":148,"side":"RIGHT","in_reply_to_id":1506417535,"original_position":148,"position":148,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:29:42Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:29:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440057031","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919010","pull_request_review_id":1928161218,"id":1519919010,"node_id":"PRRC_kwDOA-eq3c5amB-i","diff_hunk":"@@ -0,0 +1,233 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdlib.h>\n+#include <string.h>\n+#include <stdint.h>\n+\n+#include \"hash.h\"\n+#include \"hash_address.h\"\n+#include \"params.h\"\n+#include \"wots.h\"\n+#include \"utils.h\"\n+#include \"xmss_commons.h\"\n+\n+/**\n+ * Computes a leaf node from a WOTS public key using an L-tree.\n+ * Note that this destroys the used WOTS public key.\n+ */\n+static void l_tree(const xmss_params *params,\n+                   unsigned char *leaf, unsigned char *wots_pk,\n+                   const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned int l = params->wots_len;\n+    unsigned int parent_nodes;\n+    uint32_t i;\n+    uint32_t height = 0;\n+\n+    set_tree_height(addr, height);\n+\n+    while (l > 1) {\n+        parent_nodes = l >> 1;\n+        for (i = 0; i < parent_nodes; i++) {\n+            set_tree_index(addr, i);\n+            /* Hashes the nodes at (i*2)*params->n and (i*2)*params->n + 1 */\n+            thash_h(params, wots_pk + i*params->n,\n+                           wots_pk + (i*2)*params->n, pub_seed, addr);\n+        }\n+        /* If the row contained an odd number of nodes, the last node was not\n+           hashed. Instead, we pull it up to the next layer. */\n+        if (l & 1) {\n+            memcpy(wots_pk + (l >> 1)*params->n,\n+                   wots_pk + (l - 1)*params->n, params->n);\n+            l = (l >> 1) + 1;\n+        }\n+        else {\n+            l = l >> 1;\n+        }\n+        height++;\n+        set_tree_height(addr, height);\n+    }\n+    memcpy(leaf, wots_pk, params->n);\n+}\n+\n+/**\n+ * Computes a root node given a leaf and an auth path\n+ */\n+static void compute_root(const xmss_params *params, unsigned char *root,\n+                         const unsigned char *leaf, unsigned long leafidx,\n+                         const unsigned char *auth_path,\n+                         const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    uint32_t i;\n+    unsigned char *buffer = malloc(2*params->n);","path":"src/sig_stfl/xmss/external/xmss_commons.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in https://github.com/open-quantum-safe/liboqs/pull/1724","created_at":"2024-03-11T15:29:57Z","updated_at":"2024-03-11T15:29:57Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919010","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919010"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919010"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":61,"original_line":61,"side":"RIGHT","in_reply_to_id":1509150120,"original_position":61,"position":61,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:29:57Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:29:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440059209","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919092","pull_request_review_id":1928161364,"id":1519919092,"node_id":"PRRC_kwDOA-eq3c5amB_0","diff_hunk":"@@ -0,0 +1,233 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdlib.h>\n+#include <string.h>\n+#include <stdint.h>\n+\n+#include \"hash.h\"\n+#include \"hash_address.h\"\n+#include \"params.h\"\n+#include \"wots.h\"\n+#include \"utils.h\"\n+#include \"xmss_commons.h\"\n+\n+/**\n+ * Computes a leaf node from a WOTS public key using an L-tree.\n+ * Note that this destroys the used WOTS public key.\n+ */\n+static void l_tree(const xmss_params *params,\n+                   unsigned char *leaf, unsigned char *wots_pk,\n+                   const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned int l = params->wots_len;\n+    unsigned int parent_nodes;\n+    uint32_t i;\n+    uint32_t height = 0;\n+\n+    set_tree_height(addr, height);\n+\n+    while (l > 1) {\n+        parent_nodes = l >> 1;\n+        for (i = 0; i < parent_nodes; i++) {\n+            set_tree_index(addr, i);\n+            /* Hashes the nodes at (i*2)*params->n and (i*2)*params->n + 1 */\n+            thash_h(params, wots_pk + i*params->n,\n+                           wots_pk + (i*2)*params->n, pub_seed, addr);\n+        }\n+        /* If the row contained an odd number of nodes, the last node was not\n+           hashed. Instead, we pull it up to the next layer. */\n+        if (l & 1) {\n+            memcpy(wots_pk + (l >> 1)*params->n,\n+                   wots_pk + (l - 1)*params->n, params->n);\n+            l = (l >> 1) + 1;\n+        }\n+        else {\n+            l = l >> 1;\n+        }\n+        height++;\n+        set_tree_height(addr, height);\n+    }\n+    memcpy(leaf, wots_pk, params->n);\n+}\n+\n+/**\n+ * Computes a root node given a leaf and an auth path\n+ */\n+static void compute_root(const xmss_params *params, unsigned char *root,\n+                         const unsigned char *leaf, unsigned long leafidx,\n+                         const unsigned char *auth_path,\n+                         const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    uint32_t i;\n+    unsigned char *buffer = malloc(2*params->n);\n+\n+    /* If leafidx is odd (last bit = 1), current path element is a right child\n+       and auth_path has to go left. Otherwise it is the other way around. */\n+    if (leafidx & 1) {\n+        memcpy(buffer + params->n, leaf, params->n);\n+        memcpy(buffer, auth_path, params->n);\n+    }\n+    else {\n+        memcpy(buffer, leaf, params->n);\n+        memcpy(buffer + params->n, auth_path, params->n);\n+    }\n+    auth_path += params->n;\n+\n+    for (i = 0; i < params->tree_height - 1; i++) {\n+        set_tree_height(addr, i);\n+        leafidx >>= 1;\n+        set_tree_index(addr, leafidx);\n+\n+        /* Pick the right or left neighbor, depending on parity of the node. */\n+        if (leafidx & 1) {\n+            thash_h(params, buffer + params->n, buffer, pub_seed, addr);\n+            memcpy(buffer, auth_path, params->n);\n+        }\n+        else {\n+            thash_h(params, buffer, buffer, pub_seed, addr);\n+            memcpy(buffer + params->n, auth_path, params->n);\n+        }\n+        auth_path += params->n;\n+    }\n+\n+    /* The last iteration is exceptional; we do not copy an auth_path node. */\n+    set_tree_height(addr, params->tree_height - 1);\n+    leafidx >>= 1;\n+    set_tree_index(addr, leafidx);\n+    thash_h(params, root, buffer, pub_seed, addr);\n+\n+    OQS_MEM_insecure_free(buffer);\n+}\n+\n+\n+/**\n+ * Computes the leaf at a given address. First generates the WOTS key pair,\n+ * then computes leaf using l_tree. As this happens position independent, we\n+ * only require that addr encodes the right ltree-address.\n+ */\n+void gen_leaf_wots(const xmss_params *params, unsigned char *leaf,\n+                   const unsigned char *sk_seed, const unsigned char *pub_seed,\n+                   uint32_t ltree_addr[8], uint32_t ots_addr[8])\n+{\n+    unsigned char *pk = malloc(params->wots_sig_bytes);","path":"src/sig_stfl/xmss/external/xmss_commons.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in https://github.com/open-quantum-safe/liboqs/pull/1724","created_at":"2024-03-11T15:30:00Z","updated_at":"2024-03-11T15:30:00Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919092","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919092"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919092"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":111,"original_line":111,"side":"RIGHT","in_reply_to_id":1509150309,"original_position":111,"position":111,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:30:00Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:30:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440066061","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919385","pull_request_review_id":1928161807,"id":1519919385,"node_id":"PRRC_kwDOA-eq3c5amCEZ","diff_hunk":"@@ -0,0 +1,233 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdlib.h>\n+#include <string.h>\n+#include <stdint.h>\n+\n+#include \"hash.h\"\n+#include \"hash_address.h\"\n+#include \"params.h\"\n+#include \"wots.h\"\n+#include \"utils.h\"\n+#include \"xmss_commons.h\"\n+\n+/**\n+ * Computes a leaf node from a WOTS public key using an L-tree.\n+ * Note that this destroys the used WOTS public key.\n+ */\n+static void l_tree(const xmss_params *params,\n+                   unsigned char *leaf, unsigned char *wots_pk,\n+                   const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned int l = params->wots_len;\n+    unsigned int parent_nodes;\n+    uint32_t i;\n+    uint32_t height = 0;\n+\n+    set_tree_height(addr, height);\n+\n+    while (l > 1) {\n+        parent_nodes = l >> 1;\n+        for (i = 0; i < parent_nodes; i++) {\n+            set_tree_index(addr, i);\n+            /* Hashes the nodes at (i*2)*params->n and (i*2)*params->n + 1 */\n+            thash_h(params, wots_pk + i*params->n,\n+                           wots_pk + (i*2)*params->n, pub_seed, addr);\n+        }\n+        /* If the row contained an odd number of nodes, the last node was not\n+           hashed. Instead, we pull it up to the next layer. */\n+        if (l & 1) {\n+            memcpy(wots_pk + (l >> 1)*params->n,\n+                   wots_pk + (l - 1)*params->n, params->n);\n+            l = (l >> 1) + 1;\n+        }\n+        else {\n+            l = l >> 1;\n+        }\n+        height++;\n+        set_tree_height(addr, height);\n+    }\n+    memcpy(leaf, wots_pk, params->n);\n+}\n+\n+/**\n+ * Computes a root node given a leaf and an auth path\n+ */\n+static void compute_root(const xmss_params *params, unsigned char *root,\n+                         const unsigned char *leaf, unsigned long leafidx,\n+                         const unsigned char *auth_path,\n+                         const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    uint32_t i;\n+    unsigned char *buffer = malloc(2*params->n);\n+\n+    /* If leafidx is odd (last bit = 1), current path element is a right child\n+       and auth_path has to go left. Otherwise it is the other way around. */\n+    if (leafidx & 1) {\n+        memcpy(buffer + params->n, leaf, params->n);\n+        memcpy(buffer, auth_path, params->n);\n+    }\n+    else {\n+        memcpy(buffer, leaf, params->n);\n+        memcpy(buffer + params->n, auth_path, params->n);\n+    }\n+    auth_path += params->n;\n+\n+    for (i = 0; i < params->tree_height - 1; i++) {\n+        set_tree_height(addr, i);\n+        leafidx >>= 1;\n+        set_tree_index(addr, leafidx);\n+\n+        /* Pick the right or left neighbor, depending on parity of the node. */\n+        if (leafidx & 1) {\n+            thash_h(params, buffer + params->n, buffer, pub_seed, addr);\n+            memcpy(buffer, auth_path, params->n);\n+        }\n+        else {\n+            thash_h(params, buffer, buffer, pub_seed, addr);\n+            memcpy(buffer + params->n, auth_path, params->n);\n+        }\n+        auth_path += params->n;\n+    }\n+\n+    /* The last iteration is exceptional; we do not copy an auth_path node. */\n+    set_tree_height(addr, params->tree_height - 1);\n+    leafidx >>= 1;\n+    set_tree_index(addr, leafidx);\n+    thash_h(params, root, buffer, pub_seed, addr);\n+\n+    OQS_MEM_insecure_free(buffer);\n+}\n+\n+\n+/**\n+ * Computes the leaf at a given address. First generates the WOTS key pair,\n+ * then computes leaf using l_tree. As this happens position independent, we\n+ * only require that addr encodes the right ltree-address.\n+ */\n+void gen_leaf_wots(const xmss_params *params, unsigned char *leaf,\n+                   const unsigned char *sk_seed, const unsigned char *pub_seed,\n+                   uint32_t ltree_addr[8], uint32_t ots_addr[8])\n+{\n+    unsigned char *pk = malloc(params->wots_sig_bytes);\n+\n+    wots_pkgen(params, pk, sk_seed, pub_seed, ots_addr);\n+\n+    l_tree(params, leaf, pk, pub_seed, ltree_addr);\n+\n+    OQS_MEM_insecure_free(pk);\n+}\n+\n+\n+/**\n+ * Verifies a given message signature pair under a given public key.\n+ * Note that this assumes a pk without an OID, i.e. [root || PUB_SEED]\n+ */\n+int xmss_core_sign_open(const xmss_params *params,\n+                        const unsigned char *m, unsigned long long mlen,\n+                        const unsigned char *sm, unsigned long long smlen,\n+                        const unsigned char *pk)\n+{\n+    /* XMSS signatures are fundamentally an instance of XMSSMT signatures.\n+       For d=1, as is the case with XMSS, some of the calls in the XMSSMT\n+       routine become vacuous (i.e. the loop only iterates once, and address\n+       management can be simplified a bit).*/\n+    return xmssmt_core_sign_open(params, m, mlen, sm, smlen, pk);\n+}\n+\n+/**\n+ * Verifies a given message signature pair under a given public key.\n+ * Note that this assumes a pk without an OID, i.e. [root || PUB_SEED]\n+ */\n+int xmssmt_core_sign_open(const xmss_params *params,\n+                          const unsigned char *m, unsigned long long mlen,\n+                          const unsigned char *sm, unsigned long long smlen,\n+                          const unsigned char *pk)\n+{\n+    const unsigned char *pub_root = pk;\n+    const unsigned char *pub_seed = pk + params->n;\n+\n+    unsigned char *tmp = malloc(params->wots_sig_bytes + params->n + params->n);","path":"src/sig_stfl/xmss/external/xmss_commons.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in https://github.com/open-quantum-safe/liboqs/pull/1724","created_at":"2024-03-11T15:30:10Z","updated_at":"2024-03-11T15:30:10Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919385","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919385"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919385"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":149,"original_line":149,"side":"RIGHT","in_reply_to_id":1509150469,"original_position":149,"position":149,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:30:10Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:30:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440072750","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919633","pull_request_review_id":1928162187,"id":1519919633,"node_id":"PRRC_kwDOA-eq3c5amCIR","diff_hunk":"@@ -0,0 +1,1054 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdlib.h>\n+#include <string.h>\n+#include <stdint.h>\n+#include <oqs/rand.h>\n+\n+#include \"hash.h\"\n+#include \"hash_address.h\"\n+#include \"params.h\"\n+#include \"wots.h\"\n+#include \"utils.h\"\n+#include \"xmss_commons.h\"\n+#include \"xmss_core.h\"\n+\n+typedef struct{\n+    unsigned char h;\n+    unsigned long long next_idx;\n+    unsigned char stackusage;\n+    unsigned char completed;\n+    unsigned char *node;\n+} treehash_inst;\n+\n+typedef struct {\n+    unsigned char *stack;\n+    unsigned int stackoffset;\n+    unsigned char *stacklevels;\n+    unsigned char *auth;\n+    unsigned char *keep;\n+    treehash_inst *treehash;\n+    unsigned char *retain;\n+    unsigned long long next_leaf;\n+} bds_state;\n+\n+/* These serialization functions provide a transition between the current\n+   way of storing the state in an exposed struct, and storing it as part of the\n+   byte array that is the secret key.\n+   They will probably be refactored in a non-backwards-compatible way, soon. */\n+\n+static void xmssmt_serialize_state(const xmss_params *params,\n+                                   unsigned char *sk, bds_state *states)\n+{\n+    unsigned int i, j;\n+\n+    /* Skip past the 'regular' sk */\n+    sk += params->index_bytes + 4*params->n;\n+\n+    for (i = 0; i < 2*params->d - 1; i++) {\n+        sk += (params->tree_height + 1) * params->n; /* stack */\n+\n+        ull_to_bytes(sk, 4, states[i].stackoffset);\n+        sk += 4;\n+\n+        sk += params->tree_height + 1; /* stacklevels */\n+        sk += params->tree_height * params->n; /* auth */\n+        sk += (params->tree_height >> 1) * params->n; /* keep */\n+\n+        for (j = 0; j < params->tree_height - params->bds_k; j++) {\n+            ull_to_bytes(sk, 1, states[i].treehash[j].h);\n+            sk += 1;\n+\n+            ull_to_bytes(sk, 4, states[i].treehash[j].next_idx);\n+            sk += 4;\n+\n+            ull_to_bytes(sk, 1, states[i].treehash[j].stackusage);\n+            sk += 1;\n+\n+            ull_to_bytes(sk, 1, states[i].treehash[j].completed);\n+            sk += 1;\n+\n+            sk += params->n; /* node */\n+        }\n+\n+        /* retain */\n+        sk += ((1 << params->bds_k) - params->bds_k - 1) * params->n;\n+\n+        ull_to_bytes(sk, 4, states[i].next_leaf);\n+        sk += 4;\n+    }\n+}\n+\n+static void xmssmt_deserialize_state(const xmss_params *params,\n+                                     bds_state *states,\n+                                     unsigned char **wots_sigs,\n+                                     unsigned char *sk)\n+{\n+    unsigned int i, j;\n+\n+    /* Skip past the 'regular' sk */\n+    sk += params->index_bytes + 4*params->n;\n+\n+    // TODO These data sizes follow from the (former) test xmss_core_fast.c\n+    // TODO They should be reconsidered / motivated more explicitly","path":"src/sig_stfl/xmss/external/xmss_core_fast.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"yeah, from upstream.","created_at":"2024-03-11T15:30:19Z","updated_at":"2024-03-11T15:30:19Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919633","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919633"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919633"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":91,"original_start_line":91,"start_side":"RIGHT","line":92,"original_line":92,"side":"RIGHT","in_reply_to_id":1509153181,"original_position":92,"position":92,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:30:19Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:30:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440076050","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919793","pull_request_review_id":1928162369,"id":1519919793,"node_id":"PRRC_kwDOA-eq3c5amCKx","diff_hunk":"@@ -0,0 +1,1054 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdlib.h>\n+#include <string.h>\n+#include <stdint.h>\n+#include <oqs/rand.h>\n+\n+#include \"hash.h\"\n+#include \"hash_address.h\"\n+#include \"params.h\"\n+#include \"wots.h\"\n+#include \"utils.h\"\n+#include \"xmss_commons.h\"\n+#include \"xmss_core.h\"\n+\n+typedef struct{\n+    unsigned char h;\n+    unsigned long long next_idx;\n+    unsigned char stackusage;\n+    unsigned char completed;\n+    unsigned char *node;\n+} treehash_inst;\n+\n+typedef struct {\n+    unsigned char *stack;\n+    unsigned int stackoffset;\n+    unsigned char *stacklevels;\n+    unsigned char *auth;\n+    unsigned char *keep;\n+    treehash_inst *treehash;\n+    unsigned char *retain;\n+    unsigned long long next_leaf;\n+} bds_state;\n+\n+/* These serialization functions provide a transition between the current\n+   way of storing the state in an exposed struct, and storing it as part of the\n+   byte array that is the secret key.\n+   They will probably be refactored in a non-backwards-compatible way, soon. */\n+\n+static void xmssmt_serialize_state(const xmss_params *params,\n+                                   unsigned char *sk, bds_state *states)\n+{\n+    unsigned int i, j;\n+\n+    /* Skip past the 'regular' sk */\n+    sk += params->index_bytes + 4*params->n;\n+\n+    for (i = 0; i < 2*params->d - 1; i++) {\n+        sk += (params->tree_height + 1) * params->n; /* stack */\n+\n+        ull_to_bytes(sk, 4, states[i].stackoffset);\n+        sk += 4;\n+\n+        sk += params->tree_height + 1; /* stacklevels */\n+        sk += params->tree_height * params->n; /* auth */\n+        sk += (params->tree_height >> 1) * params->n; /* keep */\n+\n+        for (j = 0; j < params->tree_height - params->bds_k; j++) {\n+            ull_to_bytes(sk, 1, states[i].treehash[j].h);\n+            sk += 1;\n+\n+            ull_to_bytes(sk, 4, states[i].treehash[j].next_idx);\n+            sk += 4;\n+\n+            ull_to_bytes(sk, 1, states[i].treehash[j].stackusage);\n+            sk += 1;\n+\n+            ull_to_bytes(sk, 1, states[i].treehash[j].completed);\n+            sk += 1;\n+\n+            sk += params->n; /* node */\n+        }\n+\n+        /* retain */\n+        sk += ((1 << params->bds_k) - params->bds_k - 1) * params->n;\n+\n+        ull_to_bytes(sk, 4, states[i].next_leaf);\n+        sk += 4;\n+    }\n+}\n+\n+static void xmssmt_deserialize_state(const xmss_params *params,\n+                                     bds_state *states,\n+                                     unsigned char **wots_sigs,\n+                                     unsigned char *sk)\n+{\n+    unsigned int i, j;\n+\n+    /* Skip past the 'regular' sk */\n+    sk += params->index_bytes + 4*params->n;\n+\n+    // TODO These data sizes follow from the (former) test xmss_core_fast.c\n+    // TODO They should be reconsidered / motivated more explicitly\n+\n+    for (i = 0; i < 2*params->d - 1; i++) {\n+        states[i].stack = sk;\n+        sk += (params->tree_height + 1) * params->n;\n+\n+        states[i].stackoffset = (unsigned int)bytes_to_ull(sk, 4);\n+        sk += 4;\n+\n+        states[i].stacklevels = sk;\n+        sk += params->tree_height + 1;\n+\n+        states[i].auth = sk;\n+        sk += params->tree_height * params->n;\n+\n+        states[i].keep = sk;\n+        sk += (params->tree_height >> 1) * params->n;\n+\n+        for (j = 0; j < params->tree_height - params->bds_k; j++) {\n+            states[i].treehash[j].h = (unsigned char)bytes_to_ull(sk, 1);\n+            sk += 1;\n+\n+            states[i].treehash[j].next_idx = (unsigned long long)bytes_to_ull(sk, 4);\n+            sk += 4;\n+\n+            states[i].treehash[j].stackusage = (unsigned char)bytes_to_ull(sk, 1);\n+            sk += 1;\n+\n+            states[i].treehash[j].completed = (unsigned char)bytes_to_ull(sk, 1);\n+            sk += 1;\n+\n+            states[i].treehash[j].node = sk;\n+            sk += params->n;\n+        }\n+\n+        states[i].retain = sk;\n+        sk += ((1 << params->bds_k) - params->bds_k - 1) * params->n;\n+\n+        states[i].next_leaf = (unsigned long long)bytes_to_ull(sk, 4);\n+        sk += 4;\n+    }\n+\n+    if (params->d > 1) {\n+        *wots_sigs = sk;\n+    }\n+}\n+\n+static void xmss_serialize_state(const xmss_params *params,\n+                                 unsigned char *sk, bds_state *state)\n+{\n+    xmssmt_serialize_state(params, sk, state);\n+}\n+\n+static void xmss_deserialize_state(const xmss_params *params,\n+                                   bds_state *state, unsigned char *sk)\n+{\n+    xmssmt_deserialize_state(params, state, NULL, sk);\n+}\n+\n+static void memswap(void *a, void *b, void *t, unsigned long long len)\n+{\n+    memcpy(t, a, (size_t)len);\n+    memcpy(a, b, (size_t)len);\n+    memcpy(b, t, (size_t)len);\n+}\n+\n+/**\n+ * Swaps the content of two bds_state objects, swapping actual memory rather\n+ * than pointers.\n+ * As we're mapping memory chunks in the secret key to bds state objects,\n+ * it is now necessary to make swaps 'real swaps'. This could be done in the\n+ * serialization function as well, but that causes more overhead\n+ */\n+// TODO this should not be necessary if we keep better track of the states\n+static void deep_state_swap(const xmss_params *params,\n+                            bds_state *a, bds_state *b)\n+{\n+    if (a->stack == NULL || b->stack == NULL) {\n+        return;\n+    }\n+    // TODO this is extremely ugly and should be refactored\n+    // TODO right now, this ensures that both 'stack' and 'retain' fit\n+    unsigned char *t = malloc(\n+        ((params->tree_height + 1) > ((1 << params->bds_k) - params->bds_k - 1)\n+         ? (params->tree_height + 1)\n+         : ((1 << params->bds_k) - params->bds_k - 1))\n+        * params->n);\n+    unsigned int i;\n+\n+    memswap(a->stack, b->stack, t, (params->tree_height + 1) * params->n);\n+    memswap(&a->stackoffset, &b->stackoffset, t, sizeof(a->stackoffset));\n+    memswap(a->stacklevels, b->stacklevels, t, params->tree_height + 1);\n+    memswap(a->auth, b->auth, t, params->tree_height * params->n);\n+    memswap(a->keep, b->keep, t, (params->tree_height >> 1) * params->n);\n+\n+    for (i = 0; i < params->tree_height - params->bds_k; i++) {\n+        memswap(&a->treehash[i].h, &b->treehash[i].h, t, sizeof(a->treehash[i].h));\n+        memswap(&a->treehash[i].next_idx, &b->treehash[i].next_idx, t, sizeof(a->treehash[i].next_idx));\n+        memswap(&a->treehash[i].stackusage, &b->treehash[i].stackusage, t, sizeof(a->treehash[i].stackusage));\n+        memswap(&a->treehash[i].completed, &b->treehash[i].completed, t, sizeof(a->treehash[i].completed));\n+        memswap(a->treehash[i].node, b->treehash[i].node, t, params->n);\n+    }\n+\n+    memswap(a->retain, b->retain, t, ((1 << params->bds_k) - params->bds_k - 1) * params->n);\n+    memswap(&a->next_leaf, &b->next_leaf, t, sizeof(a->next_leaf));\n+\n+    OQS_MEM_insecure_free(t);\n+}\n+\n+static int treehash_minheight_on_stack(const xmss_params *params,\n+                                       bds_state *state,\n+                                       const treehash_inst *treehash)\n+{\n+    unsigned int r = params->tree_height, i;\n+\n+    for (i = 0; i < treehash->stackusage; i++) {\n+        if (state->stacklevels[state->stackoffset - i - 1] < r) {\n+            r = state->stacklevels[state->stackoffset - i - 1];\n+        }\n+    }\n+    return r;\n+}\n+\n+/**\n+ * Merkle's TreeHash algorithm. The address only needs to initialize the first 78 bits of addr. Everything else will be set by treehash.\n+ * Currently only used for key generation.\n+ *\n+ */\n+static void treehash_init(const xmss_params *params,\n+                          unsigned char *node, int height, int index,\n+                          bds_state *state, const unsigned char *sk_seed,\n+                          const unsigned char *pub_seed, const uint32_t addr[8])\n+{\n+    // use three different addresses because at this point we use all three formats in parallel\n+    uint32_t ots_addr[8] = {0};\n+    uint32_t ltree_addr[8] = {0};\n+    uint32_t node_addr[8] = {0};\n+    // only copy layer and tree address parts\n+    copy_subtree_addr(ots_addr, addr);\n+    // type = ots\n+    set_type(ots_addr, 0);\n+    copy_subtree_addr(ltree_addr, addr);\n+    set_type(ltree_addr, 1);\n+    copy_subtree_addr(node_addr, addr);\n+    set_type(node_addr, 2);\n+\n+    /* The subtree has at most 2^20 leafs, so uint32_t suffices. */\n+    uint32_t idx = index;\n+    uint32_t lastnode = index +(1<<height), i;\n+    unsigned char *stack = calloc((height+1)*params->n, sizeof(unsigned char));\n+    unsigned int *stacklevels = malloc((height + 1)*sizeof(unsigned int));\n+    unsigned int stackoffset=0;\n+    unsigned int nodeh;\n+\n+    for (i = 0; i < params->tree_height-params->bds_k; i++) {\n+        state->treehash[i].h = i;\n+        state->treehash[i].completed = 1;\n+        state->treehash[i].stackusage = 0;\n+    }\n+\n+    i = 0;\n+    for (; idx < lastnode; idx++) {\n+        set_ltree_addr(ltree_addr, idx);\n+        set_ots_addr(ots_addr, idx);\n+        gen_leaf_wots(params, stack+stackoffset*params->n, sk_seed, pub_seed, ltree_addr, ots_addr);\n+        stacklevels[stackoffset] = 0;\n+        stackoffset++;\n+        if (params->tree_height - params->bds_k > 0 && i == 3) {\n+            memcpy(state->treehash[0].node, stack+stackoffset*params->n, params->n);\n+        }\n+        while (stackoffset>1 && stacklevels[stackoffset-1] == stacklevels[stackoffset-2]) {\n+            nodeh = stacklevels[stackoffset-1];\n+            if (i >> nodeh == 1) {\n+                memcpy(state->auth + nodeh*params->n, stack+(stackoffset-1)*params->n, params->n);\n+            }\n+            else {\n+                if (nodeh < params->tree_height - params->bds_k && i >> nodeh == 3) {\n+                    memcpy(state->treehash[nodeh].node, stack+(stackoffset-1)*params->n, params->n);\n+                }\n+                else if (nodeh >= params->tree_height - params->bds_k) {\n+                    memcpy(state->retain + ((1 << (params->tree_height - 1 - nodeh)) + nodeh - params->tree_height + (((i >> nodeh) - 3) >> 1)) * params->n, stack+(stackoffset-1)*params->n, params->n);\n+                }\n+            }\n+            set_tree_height(node_addr, stacklevels[stackoffset-1]);\n+            set_tree_index(node_addr, (idx >> (stacklevels[stackoffset-1]+1)));\n+            thash_h(params, stack+(stackoffset-2)*params->n, stack+(stackoffset-2)*params->n, pub_seed, node_addr);\n+            stacklevels[stackoffset-2]++;\n+            stackoffset--;\n+        }\n+        i++;\n+    }\n+\n+    memcpy(node, stack, params->n);\n+\n+    OQS_MEM_insecure_free(stacklevels);\n+    OQS_MEM_insecure_free(stack);\n+}\n+\n+static void treehash_update(const xmss_params *params,\n+                            treehash_inst *treehash, bds_state *state,\n+                            const unsigned char *sk_seed,\n+                            const unsigned char *pub_seed,\n+                            const uint32_t addr[8])\n+{\n+    uint32_t ots_addr[8] = {0};\n+    uint32_t ltree_addr[8] = {0};\n+    uint32_t node_addr[8] = {0};\n+    // only copy layer and tree address parts\n+    copy_subtree_addr(ots_addr, addr);\n+    // type = ots\n+    set_type(ots_addr, 0);\n+    copy_subtree_addr(ltree_addr, addr);\n+    set_type(ltree_addr, 1);\n+    copy_subtree_addr(node_addr, addr);\n+    set_type(node_addr, 2);\n+\n+    set_ltree_addr(ltree_addr, treehash->next_idx);\n+    set_ots_addr(ots_addr, treehash->next_idx);\n+\n+    unsigned char *nodebuffer = malloc(2 * params->n);\n+    unsigned int nodeheight = 0;\n+    gen_leaf_wots(params, nodebuffer, sk_seed, pub_seed, ltree_addr, ots_addr);\n+    while (treehash->stackusage > 0 && state->stacklevels[state->stackoffset-1] == nodeheight) {\n+        memcpy(nodebuffer + params->n, nodebuffer, params->n);\n+        memcpy(nodebuffer, state->stack + (state->stackoffset-1)*params->n, params->n);\n+        set_tree_height(node_addr, nodeheight);\n+        set_tree_index(node_addr, (treehash->next_idx >> (nodeheight+1)));\n+        thash_h(params, nodebuffer, nodebuffer, pub_seed, node_addr);\n+        nodeheight++;\n+        treehash->stackusage--;\n+        state->stackoffset--;\n+    }\n+    if (nodeheight == treehash->h) { // this also implies stackusage == 0\n+        memcpy(treehash->node, nodebuffer, params->n);\n+        treehash->completed = 1;\n+    }\n+    else {\n+        memcpy(state->stack + state->stackoffset*params->n, nodebuffer, params->n);\n+        treehash->stackusage++;\n+        state->stacklevels[state->stackoffset] = nodeheight;\n+        state->stackoffset++;\n+        treehash->next_idx++;\n+    }\n+\n+    OQS_MEM_insecure_free(nodebuffer);\n+}\n+\n+/**\n+ * Performs treehash updates on the instance that needs it the most.\n+ * Returns the updated number of available updates.\n+ **/\n+static char bds_treehash_update(const xmss_params *params,\n+                                bds_state *state, unsigned int updates,\n+                                const unsigned char *sk_seed,\n+                                unsigned char *pub_seed,\n+                                const uint32_t addr[8])\n+{\n+    uint32_t i, j;\n+    unsigned int level, l_min, low;\n+    unsigned int used = 0;\n+\n+    for (j = 0; j < updates; j++) {\n+        l_min = params->tree_height;\n+        level = params->tree_height - params->bds_k;\n+        for (i = 0; i < params->tree_height - params->bds_k; i++) {\n+            if (state->treehash[i].completed) {\n+                low = params->tree_height;\n+            }\n+            else if (state->treehash[i].stackusage == 0) {\n+                low = i;\n+            }\n+            else {\n+                low = treehash_minheight_on_stack(params, state, &(state->treehash[i]));\n+            }\n+            if (low < l_min) {\n+                level = i;\n+                l_min = low;\n+            }\n+        }\n+        if (level == params->tree_height - params->bds_k) {\n+            break;\n+        }\n+        treehash_update(params, &(state->treehash[level]), state, sk_seed, pub_seed, addr);\n+        used++;\n+    }\n+    return updates - used;\n+}\n+\n+/**\n+ * Updates the state (typically NEXT_i) by adding a leaf and updating the stack\n+ * Returns -1 if all leaf nodes have already been processed\n+ **/\n+static char bds_state_update(const xmss_params *params,\n+                             bds_state *state, const unsigned char *sk_seed,\n+                             const unsigned char *pub_seed,\n+                             const uint32_t addr[8])\n+{\n+    if (state == NULL || state->stacklevels == NULL) {\n+        return -1;\n+    }\n+\n+    uint32_t ltree_addr[8] = {0};\n+    uint32_t node_addr[8] = {0};\n+    uint32_t ots_addr[8] = {0};\n+\n+    unsigned int nodeh;\n+    int idx = state->next_leaf;\n+    if (idx == 1 << params->tree_height) {\n+        return -1;\n+    }\n+\n+    // only copy layer and tree address parts\n+    copy_subtree_addr(ots_addr, addr);\n+    // type = ots\n+    set_type(ots_addr, 0);\n+    copy_subtree_addr(ltree_addr, addr);\n+    set_type(ltree_addr, 1);\n+    copy_subtree_addr(node_addr, addr);\n+    set_type(node_addr, 2);\n+\n+    set_ots_addr(ots_addr, idx);\n+    set_ltree_addr(ltree_addr, idx);\n+\n+    gen_leaf_wots(params, state->stack+state->stackoffset*params->n, sk_seed, pub_seed, ltree_addr, ots_addr);\n+\n+    state->stacklevels[state->stackoffset] = 0;\n+    state->stackoffset++;\n+    if (params->tree_height - params->bds_k > 0 && idx == 3) {\n+        memcpy(state->treehash[0].node, state->stack+state->stackoffset*params->n, params->n);\n+    }\n+    while (state->stackoffset>1 && state->stacklevels[state->stackoffset-1] == state->stacklevels[state->stackoffset-2]) {\n+        nodeh = state->stacklevels[state->stackoffset-1];\n+        if (idx >> nodeh == 1) {\n+            memcpy(state->auth + nodeh*params->n, state->stack+(state->stackoffset-1)*params->n, params->n);\n+        }\n+        else {\n+            if (nodeh < params->tree_height - params->bds_k && idx >> nodeh == 3) {\n+                memcpy(state->treehash[nodeh].node, state->stack+(state->stackoffset-1)*params->n, params->n);\n+            }\n+            else if (nodeh >= params->tree_height - params->bds_k) {\n+                memcpy(state->retain + ((1 << (params->tree_height - 1 - nodeh)) + nodeh - params->tree_height + (((idx >> nodeh) - 3) >> 1)) * params->n, state->stack+(state->stackoffset-1)*params->n, params->n);\n+            }\n+        }\n+        set_tree_height(node_addr, state->stacklevels[state->stackoffset-1]);\n+        set_tree_index(node_addr, (idx >> (state->stacklevels[state->stackoffset-1]+1)));\n+        thash_h(params, state->stack+(state->stackoffset-2)*params->n, state->stack+(state->stackoffset-2)*params->n, pub_seed, node_addr);\n+\n+        state->stacklevels[state->stackoffset-2]++;\n+        state->stackoffset--;\n+    }\n+    state->next_leaf++;\n+    return 0;\n+}\n+\n+/**\n+ * Returns the auth path for node leaf_idx and computes the auth path for the\n+ * next leaf node, using the algorithm described by Buchmann, Dahmen and Szydlo\n+ * in \"Post Quantum Cryptography\", Springer 2009.\n+ */\n+static void bds_round(const xmss_params *params,\n+                      bds_state *state, const unsigned long leaf_idx,\n+                      const unsigned char *sk_seed,\n+                      const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned int i;\n+    unsigned int tau = params->tree_height;\n+    unsigned int startidx;\n+    unsigned int offset, rowidx;\n+    unsigned char *buf = malloc(2 * params->n);\n+\n+    uint32_t ots_addr[8] = {0};\n+    uint32_t ltree_addr[8] = {0};\n+    uint32_t node_addr[8] = {0};\n+\n+    // only copy layer and tree address parts\n+    copy_subtree_addr(ots_addr, addr);\n+    // type = ots\n+    set_type(ots_addr, 0);\n+    copy_subtree_addr(ltree_addr, addr);\n+    set_type(ltree_addr, 1);\n+    copy_subtree_addr(node_addr, addr);\n+    set_type(node_addr, 2);\n+\n+    for (i = 0; i < params->tree_height; i++) {\n+        if (! ((leaf_idx >> i) & 1)) {\n+            tau = i;\n+            break;\n+        }\n+    }\n+\n+    if (tau > 0) {\n+        memcpy(buf, state->auth + (tau-1) * params->n, params->n);\n+        // we need to do this before refreshing state->keep to prevent overwriting\n+        memcpy(buf + params->n, state->keep + ((tau-1) >> 1) * params->n, params->n);\n+    }\n+    if (!((leaf_idx >> (tau + 1)) & 1) && (tau < params->tree_height - 1)) {\n+        memcpy(state->keep + (tau >> 1)*params->n, state->auth + tau*params->n, params->n);\n+    }\n+    if (tau == 0) {\n+        set_ltree_addr(ltree_addr, leaf_idx);\n+        set_ots_addr(ots_addr, leaf_idx);\n+        gen_leaf_wots(params, state->auth, sk_seed, pub_seed, ltree_addr, ots_addr);\n+    }\n+    else {\n+        set_tree_height(node_addr, (tau-1));\n+        set_tree_index(node_addr, leaf_idx >> tau);\n+        thash_h(params, state->auth + tau * params->n, buf, pub_seed, node_addr);\n+        for (i = 0; i < tau; i++) {\n+            if (i < params->tree_height - params->bds_k) {\n+                memcpy(state->auth + i * params->n, state->treehash[i].node, params->n);\n+            }\n+            else {\n+                offset = (1 << (params->tree_height - 1 - i)) + i - params->tree_height;\n+                rowidx = ((leaf_idx >> i) - 1) >> 1;\n+                memcpy(state->auth + i * params->n, state->retain + (offset + rowidx) * params->n, params->n);\n+            }\n+        }\n+\n+        for (i = 0; i < ((tau < params->tree_height - params->bds_k) ? tau : (params->tree_height - params->bds_k)); i++) {\n+            startidx = leaf_idx + 1 + 3 * (1 << i);\n+            if (startidx < 1U << params->tree_height) {\n+                state->treehash[i].h = i;\n+                state->treehash[i].next_idx = startidx;\n+                state->treehash[i].completed = 0;\n+                state->treehash[i].stackusage = 0;\n+            }\n+        }\n+    }\n+\n+    OQS_MEM_insecure_free(buf);\n+}\n+\n+/**\n+ * Given a set of parameters, this function returns the size of the secret key.\n+ * This is implementation specific, as varying choices in tree traversal will\n+ * result in varying requirements for state storage.\n+ *\n+ * This function handles both XMSS and XMSSMT parameter sets.\n+ */\n+unsigned long long xmss_xmssmt_core_sk_bytes(const xmss_params *params)\n+{\n+    return params->index_bytes + 4 * params->n\n+        + (2 * params->d - 1) * (\n+            (params->tree_height + 1) * params->n\n+            + 4\n+            + params->tree_height + 1\n+            + params->tree_height * params->n\n+            + (params->tree_height >> 1) * params->n\n+            + (params->tree_height - params->bds_k) * (7 + params->n)\n+            + ((1 << params->bds_k) - params->bds_k - 1) * params->n\n+            + 4\n+         )\n+        + (params->d - 1) * params->wots_sig_bytes;\n+}\n+\n+/*\n+ * Generates a XMSS key pair for a given parameter set.\n+ * Format sk: [(32bit) idx || SK_SEED || SK_PRF || root || PUB_SEED]\n+ * Format pk: [root || PUB_SEED] omitting algo oid.\n+ */\n+int xmss_core_keypair(const xmss_params *params,\n+                      unsigned char *pk, unsigned char *sk)\n+{\n+    uint32_t addr[8] = {0};\n+\n+    // TODO refactor BDS state not to need separate treehash instances\n+    bds_state state;\n+    treehash_inst *treehash = calloc(params->tree_height - params->bds_k, sizeof(treehash_inst));\n+    state.treehash = treehash;\n+\n+    xmss_deserialize_state(params, &state, sk);\n+\n+    state.stackoffset = 0;\n+    state.next_leaf = 0;\n+\n+    // Set idx = 0\n+    sk[0] = 0;\n+    sk[1] = 0;\n+    sk[2] = 0;\n+    sk[3] = 0;\n+    // Init SK_SEED (n byte) and SK_PRF (n byte)\n+    OQS_randombytes(sk + params->index_bytes, 2*params->n);\n+\n+    // Init PUB_SEED (n byte)\n+    OQS_randombytes(sk + params->index_bytes + 3*params->n, params->n);\n+    // Copy PUB_SEED to public key\n+    memcpy(pk + params->n, sk + params->index_bytes + 3*params->n, params->n);\n+\n+    // Compute root\n+    treehash_init(params, pk, params->tree_height, 0, &state, sk + params->index_bytes, sk + params->index_bytes + 3*params->n, addr);\n+    // copy root to sk\n+    memcpy(sk + params->index_bytes + 2*params->n, pk, params->n);\n+\n+    /* Write the BDS state into sk. */\n+    xmss_serialize_state(params, sk, &state);\n+\n+    OQS_MEM_insecure_free(treehash);\n+\n+    return 0;\n+}\n+\n+/**\n+ * Signs a message.\n+ * Returns\n+ * 1. an array containing the signature followed by the message AND\n+ * 2. an updated secret key!\n+ *\n+ */\n+int xmss_core_sign(const xmss_params *params,\n+                   unsigned char *sk,\n+                   unsigned char *sm, unsigned long long *smlen,\n+                   const unsigned char *m, unsigned long long mlen)\n+{\n+    if (params->full_height > 60) {\n+        // Unsupport Tree height\n+        return -2;\n+    }\n+\n+    const unsigned char *pub_root = sk + params->index_bytes + 2*params->n;\n+    int ret;\n+\n+    uint16_t i = 0;\n+\n+    // TODO refactor BDS state not to need separate treehash instances\n+    bds_state state;\n+    treehash_inst *treehash = calloc(params->tree_height - params->bds_k, sizeof(treehash_inst));\n+    state.treehash = treehash;\n+\n+    /* Load the BDS state from sk. */\n+    xmss_deserialize_state(params, &state, sk);\n+\n+    // Extract SK\n+    unsigned long long idx = ((unsigned long long)sk[0] << 24) | ((unsigned long long)sk[1] << 16) | ((unsigned long long)sk[2] << 8) | sk[3];\n+\n+    /* Check if we can still sign with this sk.\n+     * If not, return -2\n+     *\n+     * If this is the last possible signature (because the max index value\n+     * is reached), production implementations should delete the secret key\n+     * to prevent accidental further use.\n+     *\n+     * For the case of total tree height of 64 we do not use the last signature\n+     * to be on the safe side (there is no index value left to indicate that the\n+     * key is finished, hence external handling would be necessary)\n+     */\n+    if (idx >= ((1ULL << params->full_height) - 1)) {\n+        // Delete secret key here. We only do this in memory, production code\n+        // has to make sure that this happens on disk.\n+        memset(sk, 0xFF, params->index_bytes);\n+        memset(sk + params->index_bytes, 0, (size_t)(params->sk_bytes - params->index_bytes));\n+        if (idx > ((1ULL << params->full_height) - 1)) {\n+            ret = -2; // We already used all one-time keys\n+            goto cleanup;\n+        }\n+    }\n+    unsigned char *tmp = malloc(5 * params->n);\n+\n+    unsigned char *sk_seed = tmp;\n+    unsigned char *sk_prf = sk_seed + params->n;\n+    unsigned char *pub_seed = sk_prf + params->n;\n+\n+    memcpy(sk_seed, sk + params->index_bytes, params->n);\n+    memcpy(sk_prf, sk + params->index_bytes + params->n, params->n);\n+    memcpy(pub_seed, sk + params->index_bytes + 3*params->n, params->n);\n+\n+    // index as 32 bytes string\n+    unsigned char idx_bytes_32[32];\n+    ull_to_bytes(idx_bytes_32, 32, idx);\n+\n+    // Update SK\n+    sk[0] = ((idx + 1) >> 24) & 255;\n+    sk[1] = ((idx + 1) >> 16) & 255;\n+    sk[2] = ((idx + 1) >> 8) & 255;\n+    sk[3] = (idx + 1) & 255;\n+    // Secret key for this non-forward-secure version is now updated.\n+    // A production implementation should consider using a file handle instead,\n+    //  and write the updated secret key at this point!\n+\n+    // Init working params\n+    unsigned char *R = pub_seed + params->n;\n+    unsigned char *msg_h = R + params->n;\n+    uint32_t ots_addr[8] = {0};\n+\n+    // ---------------------------------\n+    // Message Hashing\n+    // ---------------------------------\n+\n+    // Message Hash:\n+    // First compute pseudorandom value\n+    prf(params, R, idx_bytes_32, sk_prf);\n+\n+    /* Already put the message in the right place, to make it easier to prepend\n+     * things when computing the hash over the message. */\n+    unsigned long long prefix_length = params->padding_len + 3*params->n;\n+    unsigned char *m_with_prefix = malloc((size_t)(mlen + prefix_length));\n+    memcpy(m_with_prefix, sm + params->sig_bytes - prefix_length, (size_t)prefix_length);\n+    memcpy(m_with_prefix + prefix_length, m, (size_t)mlen);\n+\n+    /* Compute the message hash. */\n+    hash_message(params, msg_h, R, pub_root, idx,\n+                 m_with_prefix,\n+                 mlen);\n+\n+    // Start collecting signature\n+    *smlen = 0;\n+\n+    // Copy index to signature\n+    sm[0] = (idx >> 24) & 255;\n+    sm[1] = (idx >> 16) & 255;\n+    sm[2] = (idx >> 8) & 255;\n+    sm[3] = idx & 255;\n+\n+    sm += 4;\n+    *smlen += 4;\n+\n+    // Copy R to signature\n+    for (i = 0; i < params->n; i++) {\n+        sm[i] = R[i];\n+    }\n+\n+    sm += params->n;\n+    *smlen += params->n;\n+\n+    // ----------------------------------\n+    // Now we start to \"really sign\"\n+    // ----------------------------------\n+\n+    // Prepare Address\n+    set_type(ots_addr, 0);\n+    set_ots_addr(ots_addr, (uint32_t) idx);\n+\n+    // Compute WOTS signature\n+    wots_sign(params, sm, msg_h, sk_seed, pub_seed, ots_addr);\n+\n+    sm += params->wots_sig_bytes;\n+    *smlen += params->wots_sig_bytes;\n+\n+    // the auth path was already computed during the previous round\n+    memcpy(sm, state.auth, params->tree_height*params->n);\n+\n+    if (idx < (1ULL << params->tree_height) - 1) {\n+        bds_round(params, &state, (const unsigned long)idx, sk_seed, pub_seed, ots_addr);\n+        bds_treehash_update(params, &state, (params->tree_height - params->bds_k) >> 1, sk_seed, pub_seed, ots_addr);\n+    }\n+\n+    *smlen += params->tree_height*params->n;\n+\n+    /* Write the updated BDS state back into sk. */\n+    xmss_serialize_state(params, sk, &state);\n+\n+    ret = 0;\n+\n+    OQS_MEM_insecure_free(m_with_prefix);\n+    OQS_MEM_insecure_free(tmp);\n+\n+cleanup:\n+    OQS_MEM_insecure_free(treehash);\n+\n+    return ret;\n+}\n+\n+/*\n+ * Generates a XMSSMT key pair for a given parameter set.\n+ * Format sk: [(ceil(h/8) bit) idx || SK_SEED || SK_PRF || root || PUB_SEED]\n+ * Format pk: [root || PUB_SEED] omitting algo oid.\n+ */\n+int xmssmt_core_keypair(const xmss_params *params,\n+                        unsigned char *pk, unsigned char *sk)\n+{\n+    uint32_t addr[8] = {0};\n+    unsigned int i;\n+    unsigned char *wots_sigs;\n+\n+    // TODO refactor BDS state not to need separate treehash instances\n+    bds_state *states = calloc(2*params->d - 1, sizeof(bds_state));\n+    treehash_inst *treehash = calloc((2*params->d - 1) * (params->tree_height - params->bds_k), sizeof(treehash_inst));\n+    for (i = 0; i < 2*params->d - 1; i++) {\n+        states[i].treehash = treehash + i * (params->tree_height - params->bds_k);\n+    }\n+\n+    xmssmt_deserialize_state(params, states, &wots_sigs, sk);\n+\n+    for (i = 0; i < 2 * params->d - 1; i++) {\n+        states[i].stackoffset = 0;\n+        states[i].next_leaf = 0;\n+    }\n+\n+    // Set idx = 0\n+    for (i = 0; i < params->index_bytes; i++) {\n+        sk[i] = 0;\n+    }\n+    // Init SK_SEED (params->n byte) and SK_PRF (params->n byte)\n+    OQS_randombytes(sk+params->index_bytes, 2*params->n);\n+\n+    // Init PUB_SEED (params->n byte)\n+    OQS_randombytes(sk+params->index_bytes + 3*params->n, params->n);\n+    // Copy PUB_SEED to public key\n+    memcpy(pk+params->n, sk+params->index_bytes+3*params->n, params->n);\n+\n+    // Start with the bottom-most layer\n+    set_layer_addr(addr, 0);\n+    // Set up state and compute wots signatures for all but topmost tree root\n+    for (i = 0; i < params->d - 1; i++) {\n+        // Compute seed for OTS key pair\n+        treehash_init(params, pk, params->tree_height, 0, states + i, sk+params->index_bytes, pk+params->n, addr);\n+        set_layer_addr(addr, (i+1));\n+        wots_sign(params, wots_sigs + i*params->wots_sig_bytes, pk, sk + params->index_bytes, pk+params->n, addr);\n+    }\n+    // Address now points to the single tree on layer d-1\n+    treehash_init(params, pk, params->tree_height, 0, states + i, sk+params->index_bytes, pk+params->n, addr);\n+    memcpy(sk + params->index_bytes + 2*params->n, pk, params->n);\n+\n+    xmssmt_serialize_state(params, sk, states);\n+\n+    OQS_MEM_insecure_free(treehash);\n+    OQS_MEM_insecure_free(states);\n+\n+    return 0;\n+}\n+\n+/**\n+ * Signs a message.\n+ * Returns\n+ * 1. an array containing the signature followed by the message AND\n+ * 2. an updated secret key!\n+ *\n+ */\n+int xmssmt_core_sign(const xmss_params *params,\n+                     unsigned char *sk,\n+                     unsigned char *sm, unsigned long long *smlen,\n+                     const unsigned char *m, unsigned long long mlen)\n+{\n+    if (params == NULL || params->full_height > 60) {\n+        // Unsupport parameter\n+        return -1;\n+    }\n+\n+    const unsigned char *pub_root = sk + params->index_bytes + 2*params->n;\n+\n+    uint64_t idx_tree;\n+    uint32_t idx_leaf;\n+    unsigned int i, j;\n+    int needswap_upto = -1;\n+    unsigned int updates;\n+\n+    unsigned char *tmp = malloc(5 * params->n);","path":"src/sig_stfl/xmss/external/xmss_core_fast.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in https://github.com/open-quantum-safe/liboqs/pull/1724","created_at":"2024-03-11T15:30:23Z","updated_at":"2024-03-11T15:30:23Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919793","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919793"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919793"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":837,"original_line":837,"side":"RIGHT","in_reply_to_id":1509155532,"original_position":837,"position":837,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:30:23Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:30:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440079683","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919916","pull_request_review_id":1928162600,"id":1519919916,"node_id":"PRRC_kwDOA-eq3c5amCMs","diff_hunk":"@@ -0,0 +1,1054 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+#include <stdlib.h>\n+#include <string.h>\n+#include <stdint.h>\n+#include <oqs/rand.h>\n+\n+#include \"hash.h\"\n+#include \"hash_address.h\"\n+#include \"params.h\"\n+#include \"wots.h\"\n+#include \"utils.h\"\n+#include \"xmss_commons.h\"\n+#include \"xmss_core.h\"\n+\n+typedef struct{\n+    unsigned char h;\n+    unsigned long long next_idx;\n+    unsigned char stackusage;\n+    unsigned char completed;\n+    unsigned char *node;\n+} treehash_inst;\n+\n+typedef struct {\n+    unsigned char *stack;\n+    unsigned int stackoffset;\n+    unsigned char *stacklevels;\n+    unsigned char *auth;\n+    unsigned char *keep;\n+    treehash_inst *treehash;\n+    unsigned char *retain;\n+    unsigned long long next_leaf;\n+} bds_state;\n+\n+/* These serialization functions provide a transition between the current\n+   way of storing the state in an exposed struct, and storing it as part of the\n+   byte array that is the secret key.\n+   They will probably be refactored in a non-backwards-compatible way, soon. */\n+\n+static void xmssmt_serialize_state(const xmss_params *params,\n+                                   unsigned char *sk, bds_state *states)\n+{\n+    unsigned int i, j;\n+\n+    /* Skip past the 'regular' sk */\n+    sk += params->index_bytes + 4*params->n;\n+\n+    for (i = 0; i < 2*params->d - 1; i++) {\n+        sk += (params->tree_height + 1) * params->n; /* stack */\n+\n+        ull_to_bytes(sk, 4, states[i].stackoffset);\n+        sk += 4;\n+\n+        sk += params->tree_height + 1; /* stacklevels */\n+        sk += params->tree_height * params->n; /* auth */\n+        sk += (params->tree_height >> 1) * params->n; /* keep */\n+\n+        for (j = 0; j < params->tree_height - params->bds_k; j++) {\n+            ull_to_bytes(sk, 1, states[i].treehash[j].h);\n+            sk += 1;\n+\n+            ull_to_bytes(sk, 4, states[i].treehash[j].next_idx);\n+            sk += 4;\n+\n+            ull_to_bytes(sk, 1, states[i].treehash[j].stackusage);\n+            sk += 1;\n+\n+            ull_to_bytes(sk, 1, states[i].treehash[j].completed);\n+            sk += 1;\n+\n+            sk += params->n; /* node */\n+        }\n+\n+        /* retain */\n+        sk += ((1 << params->bds_k) - params->bds_k - 1) * params->n;\n+\n+        ull_to_bytes(sk, 4, states[i].next_leaf);\n+        sk += 4;\n+    }\n+}\n+\n+static void xmssmt_deserialize_state(const xmss_params *params,\n+                                     bds_state *states,\n+                                     unsigned char **wots_sigs,\n+                                     unsigned char *sk)\n+{\n+    unsigned int i, j;\n+\n+    /* Skip past the 'regular' sk */\n+    sk += params->index_bytes + 4*params->n;\n+\n+    // TODO These data sizes follow from the (former) test xmss_core_fast.c\n+    // TODO They should be reconsidered / motivated more explicitly\n+\n+    for (i = 0; i < 2*params->d - 1; i++) {\n+        states[i].stack = sk;\n+        sk += (params->tree_height + 1) * params->n;\n+\n+        states[i].stackoffset = (unsigned int)bytes_to_ull(sk, 4);\n+        sk += 4;\n+\n+        states[i].stacklevels = sk;\n+        sk += params->tree_height + 1;\n+\n+        states[i].auth = sk;\n+        sk += params->tree_height * params->n;\n+\n+        states[i].keep = sk;\n+        sk += (params->tree_height >> 1) * params->n;\n+\n+        for (j = 0; j < params->tree_height - params->bds_k; j++) {\n+            states[i].treehash[j].h = (unsigned char)bytes_to_ull(sk, 1);\n+            sk += 1;\n+\n+            states[i].treehash[j].next_idx = (unsigned long long)bytes_to_ull(sk, 4);\n+            sk += 4;\n+\n+            states[i].treehash[j].stackusage = (unsigned char)bytes_to_ull(sk, 1);\n+            sk += 1;\n+\n+            states[i].treehash[j].completed = (unsigned char)bytes_to_ull(sk, 1);\n+            sk += 1;\n+\n+            states[i].treehash[j].node = sk;\n+            sk += params->n;\n+        }\n+\n+        states[i].retain = sk;\n+        sk += ((1 << params->bds_k) - params->bds_k - 1) * params->n;\n+\n+        states[i].next_leaf = (unsigned long long)bytes_to_ull(sk, 4);\n+        sk += 4;\n+    }\n+\n+    if (params->d > 1) {\n+        *wots_sigs = sk;\n+    }\n+}\n+\n+static void xmss_serialize_state(const xmss_params *params,\n+                                 unsigned char *sk, bds_state *state)\n+{\n+    xmssmt_serialize_state(params, sk, state);\n+}\n+\n+static void xmss_deserialize_state(const xmss_params *params,\n+                                   bds_state *state, unsigned char *sk)\n+{\n+    xmssmt_deserialize_state(params, state, NULL, sk);\n+}\n+\n+static void memswap(void *a, void *b, void *t, unsigned long long len)\n+{\n+    memcpy(t, a, (size_t)len);\n+    memcpy(a, b, (size_t)len);\n+    memcpy(b, t, (size_t)len);\n+}\n+\n+/**\n+ * Swaps the content of two bds_state objects, swapping actual memory rather\n+ * than pointers.\n+ * As we're mapping memory chunks in the secret key to bds state objects,\n+ * it is now necessary to make swaps 'real swaps'. This could be done in the\n+ * serialization function as well, but that causes more overhead\n+ */\n+// TODO this should not be necessary if we keep better track of the states\n+static void deep_state_swap(const xmss_params *params,\n+                            bds_state *a, bds_state *b)\n+{\n+    if (a->stack == NULL || b->stack == NULL) {\n+        return;\n+    }\n+    // TODO this is extremely ugly and should be refactored\n+    // TODO right now, this ensures that both 'stack' and 'retain' fit\n+    unsigned char *t = malloc(\n+        ((params->tree_height + 1) > ((1 << params->bds_k) - params->bds_k - 1)\n+         ? (params->tree_height + 1)\n+         : ((1 << params->bds_k) - params->bds_k - 1))\n+        * params->n);\n+    unsigned int i;\n+\n+    memswap(a->stack, b->stack, t, (params->tree_height + 1) * params->n);\n+    memswap(&a->stackoffset, &b->stackoffset, t, sizeof(a->stackoffset));\n+    memswap(a->stacklevels, b->stacklevels, t, params->tree_height + 1);\n+    memswap(a->auth, b->auth, t, params->tree_height * params->n);\n+    memswap(a->keep, b->keep, t, (params->tree_height >> 1) * params->n);\n+\n+    for (i = 0; i < params->tree_height - params->bds_k; i++) {\n+        memswap(&a->treehash[i].h, &b->treehash[i].h, t, sizeof(a->treehash[i].h));\n+        memswap(&a->treehash[i].next_idx, &b->treehash[i].next_idx, t, sizeof(a->treehash[i].next_idx));\n+        memswap(&a->treehash[i].stackusage, &b->treehash[i].stackusage, t, sizeof(a->treehash[i].stackusage));\n+        memswap(&a->treehash[i].completed, &b->treehash[i].completed, t, sizeof(a->treehash[i].completed));\n+        memswap(a->treehash[i].node, b->treehash[i].node, t, params->n);\n+    }\n+\n+    memswap(a->retain, b->retain, t, ((1 << params->bds_k) - params->bds_k - 1) * params->n);\n+    memswap(&a->next_leaf, &b->next_leaf, t, sizeof(a->next_leaf));\n+\n+    OQS_MEM_insecure_free(t);\n+}\n+\n+static int treehash_minheight_on_stack(const xmss_params *params,\n+                                       bds_state *state,\n+                                       const treehash_inst *treehash)\n+{\n+    unsigned int r = params->tree_height, i;\n+\n+    for (i = 0; i < treehash->stackusage; i++) {\n+        if (state->stacklevels[state->stackoffset - i - 1] < r) {\n+            r = state->stacklevels[state->stackoffset - i - 1];\n+        }\n+    }\n+    return r;\n+}\n+\n+/**\n+ * Merkle's TreeHash algorithm. The address only needs to initialize the first 78 bits of addr. Everything else will be set by treehash.\n+ * Currently only used for key generation.\n+ *\n+ */\n+static void treehash_init(const xmss_params *params,\n+                          unsigned char *node, int height, int index,\n+                          bds_state *state, const unsigned char *sk_seed,\n+                          const unsigned char *pub_seed, const uint32_t addr[8])\n+{\n+    // use three different addresses because at this point we use all three formats in parallel\n+    uint32_t ots_addr[8] = {0};\n+    uint32_t ltree_addr[8] = {0};\n+    uint32_t node_addr[8] = {0};\n+    // only copy layer and tree address parts\n+    copy_subtree_addr(ots_addr, addr);\n+    // type = ots\n+    set_type(ots_addr, 0);\n+    copy_subtree_addr(ltree_addr, addr);\n+    set_type(ltree_addr, 1);\n+    copy_subtree_addr(node_addr, addr);\n+    set_type(node_addr, 2);\n+\n+    /* The subtree has at most 2^20 leafs, so uint32_t suffices. */\n+    uint32_t idx = index;\n+    uint32_t lastnode = index +(1<<height), i;\n+    unsigned char *stack = calloc((height+1)*params->n, sizeof(unsigned char));\n+    unsigned int *stacklevels = malloc((height + 1)*sizeof(unsigned int));\n+    unsigned int stackoffset=0;\n+    unsigned int nodeh;\n+\n+    for (i = 0; i < params->tree_height-params->bds_k; i++) {\n+        state->treehash[i].h = i;\n+        state->treehash[i].completed = 1;\n+        state->treehash[i].stackusage = 0;\n+    }\n+\n+    i = 0;\n+    for (; idx < lastnode; idx++) {\n+        set_ltree_addr(ltree_addr, idx);\n+        set_ots_addr(ots_addr, idx);\n+        gen_leaf_wots(params, stack+stackoffset*params->n, sk_seed, pub_seed, ltree_addr, ots_addr);\n+        stacklevels[stackoffset] = 0;\n+        stackoffset++;\n+        if (params->tree_height - params->bds_k > 0 && i == 3) {\n+            memcpy(state->treehash[0].node, stack+stackoffset*params->n, params->n);\n+        }\n+        while (stackoffset>1 && stacklevels[stackoffset-1] == stacklevels[stackoffset-2]) {\n+            nodeh = stacklevels[stackoffset-1];\n+            if (i >> nodeh == 1) {\n+                memcpy(state->auth + nodeh*params->n, stack+(stackoffset-1)*params->n, params->n);\n+            }\n+            else {\n+                if (nodeh < params->tree_height - params->bds_k && i >> nodeh == 3) {\n+                    memcpy(state->treehash[nodeh].node, stack+(stackoffset-1)*params->n, params->n);\n+                }\n+                else if (nodeh >= params->tree_height - params->bds_k) {\n+                    memcpy(state->retain + ((1 << (params->tree_height - 1 - nodeh)) + nodeh - params->tree_height + (((i >> nodeh) - 3) >> 1)) * params->n, stack+(stackoffset-1)*params->n, params->n);\n+                }\n+            }\n+            set_tree_height(node_addr, stacklevels[stackoffset-1]);\n+            set_tree_index(node_addr, (idx >> (stacklevels[stackoffset-1]+1)));\n+            thash_h(params, stack+(stackoffset-2)*params->n, stack+(stackoffset-2)*params->n, pub_seed, node_addr);\n+            stacklevels[stackoffset-2]++;\n+            stackoffset--;\n+        }\n+        i++;\n+    }\n+\n+    memcpy(node, stack, params->n);\n+\n+    OQS_MEM_insecure_free(stacklevels);\n+    OQS_MEM_insecure_free(stack);\n+}\n+\n+static void treehash_update(const xmss_params *params,\n+                            treehash_inst *treehash, bds_state *state,\n+                            const unsigned char *sk_seed,\n+                            const unsigned char *pub_seed,\n+                            const uint32_t addr[8])\n+{\n+    uint32_t ots_addr[8] = {0};\n+    uint32_t ltree_addr[8] = {0};\n+    uint32_t node_addr[8] = {0};\n+    // only copy layer and tree address parts\n+    copy_subtree_addr(ots_addr, addr);\n+    // type = ots\n+    set_type(ots_addr, 0);\n+    copy_subtree_addr(ltree_addr, addr);\n+    set_type(ltree_addr, 1);\n+    copy_subtree_addr(node_addr, addr);\n+    set_type(node_addr, 2);\n+\n+    set_ltree_addr(ltree_addr, treehash->next_idx);\n+    set_ots_addr(ots_addr, treehash->next_idx);\n+\n+    unsigned char *nodebuffer = malloc(2 * params->n);\n+    unsigned int nodeheight = 0;\n+    gen_leaf_wots(params, nodebuffer, sk_seed, pub_seed, ltree_addr, ots_addr);\n+    while (treehash->stackusage > 0 && state->stacklevels[state->stackoffset-1] == nodeheight) {\n+        memcpy(nodebuffer + params->n, nodebuffer, params->n);\n+        memcpy(nodebuffer, state->stack + (state->stackoffset-1)*params->n, params->n);\n+        set_tree_height(node_addr, nodeheight);\n+        set_tree_index(node_addr, (treehash->next_idx >> (nodeheight+1)));\n+        thash_h(params, nodebuffer, nodebuffer, pub_seed, node_addr);\n+        nodeheight++;\n+        treehash->stackusage--;\n+        state->stackoffset--;\n+    }\n+    if (nodeheight == treehash->h) { // this also implies stackusage == 0\n+        memcpy(treehash->node, nodebuffer, params->n);\n+        treehash->completed = 1;\n+    }\n+    else {\n+        memcpy(state->stack + state->stackoffset*params->n, nodebuffer, params->n);\n+        treehash->stackusage++;\n+        state->stacklevels[state->stackoffset] = nodeheight;\n+        state->stackoffset++;\n+        treehash->next_idx++;\n+    }\n+\n+    OQS_MEM_insecure_free(nodebuffer);\n+}\n+\n+/**\n+ * Performs treehash updates on the instance that needs it the most.\n+ * Returns the updated number of available updates.\n+ **/\n+static char bds_treehash_update(const xmss_params *params,\n+                                bds_state *state, unsigned int updates,\n+                                const unsigned char *sk_seed,\n+                                unsigned char *pub_seed,\n+                                const uint32_t addr[8])\n+{\n+    uint32_t i, j;\n+    unsigned int level, l_min, low;\n+    unsigned int used = 0;\n+\n+    for (j = 0; j < updates; j++) {\n+        l_min = params->tree_height;\n+        level = params->tree_height - params->bds_k;\n+        for (i = 0; i < params->tree_height - params->bds_k; i++) {\n+            if (state->treehash[i].completed) {\n+                low = params->tree_height;\n+            }\n+            else if (state->treehash[i].stackusage == 0) {\n+                low = i;\n+            }\n+            else {\n+                low = treehash_minheight_on_stack(params, state, &(state->treehash[i]));\n+            }\n+            if (low < l_min) {\n+                level = i;\n+                l_min = low;\n+            }\n+        }\n+        if (level == params->tree_height - params->bds_k) {\n+            break;\n+        }\n+        treehash_update(params, &(state->treehash[level]), state, sk_seed, pub_seed, addr);\n+        used++;\n+    }\n+    return updates - used;\n+}\n+\n+/**\n+ * Updates the state (typically NEXT_i) by adding a leaf and updating the stack\n+ * Returns -1 if all leaf nodes have already been processed\n+ **/\n+static char bds_state_update(const xmss_params *params,\n+                             bds_state *state, const unsigned char *sk_seed,\n+                             const unsigned char *pub_seed,\n+                             const uint32_t addr[8])\n+{\n+    if (state == NULL || state->stacklevels == NULL) {\n+        return -1;\n+    }\n+\n+    uint32_t ltree_addr[8] = {0};\n+    uint32_t node_addr[8] = {0};\n+    uint32_t ots_addr[8] = {0};\n+\n+    unsigned int nodeh;\n+    int idx = state->next_leaf;\n+    if (idx == 1 << params->tree_height) {\n+        return -1;\n+    }\n+\n+    // only copy layer and tree address parts\n+    copy_subtree_addr(ots_addr, addr);\n+    // type = ots\n+    set_type(ots_addr, 0);\n+    copy_subtree_addr(ltree_addr, addr);\n+    set_type(ltree_addr, 1);\n+    copy_subtree_addr(node_addr, addr);\n+    set_type(node_addr, 2);\n+\n+    set_ots_addr(ots_addr, idx);\n+    set_ltree_addr(ltree_addr, idx);\n+\n+    gen_leaf_wots(params, state->stack+state->stackoffset*params->n, sk_seed, pub_seed, ltree_addr, ots_addr);\n+\n+    state->stacklevels[state->stackoffset] = 0;\n+    state->stackoffset++;\n+    if (params->tree_height - params->bds_k > 0 && idx == 3) {\n+        memcpy(state->treehash[0].node, state->stack+state->stackoffset*params->n, params->n);\n+    }\n+    while (state->stackoffset>1 && state->stacklevels[state->stackoffset-1] == state->stacklevels[state->stackoffset-2]) {\n+        nodeh = state->stacklevels[state->stackoffset-1];\n+        if (idx >> nodeh == 1) {\n+            memcpy(state->auth + nodeh*params->n, state->stack+(state->stackoffset-1)*params->n, params->n);\n+        }\n+        else {\n+            if (nodeh < params->tree_height - params->bds_k && idx >> nodeh == 3) {\n+                memcpy(state->treehash[nodeh].node, state->stack+(state->stackoffset-1)*params->n, params->n);\n+            }\n+            else if (nodeh >= params->tree_height - params->bds_k) {\n+                memcpy(state->retain + ((1 << (params->tree_height - 1 - nodeh)) + nodeh - params->tree_height + (((idx >> nodeh) - 3) >> 1)) * params->n, state->stack+(state->stackoffset-1)*params->n, params->n);\n+            }\n+        }\n+        set_tree_height(node_addr, state->stacklevels[state->stackoffset-1]);\n+        set_tree_index(node_addr, (idx >> (state->stacklevels[state->stackoffset-1]+1)));\n+        thash_h(params, state->stack+(state->stackoffset-2)*params->n, state->stack+(state->stackoffset-2)*params->n, pub_seed, node_addr);\n+\n+        state->stacklevels[state->stackoffset-2]++;\n+        state->stackoffset--;\n+    }\n+    state->next_leaf++;\n+    return 0;\n+}\n+\n+/**\n+ * Returns the auth path for node leaf_idx and computes the auth path for the\n+ * next leaf node, using the algorithm described by Buchmann, Dahmen and Szydlo\n+ * in \"Post Quantum Cryptography\", Springer 2009.\n+ */\n+static void bds_round(const xmss_params *params,\n+                      bds_state *state, const unsigned long leaf_idx,\n+                      const unsigned char *sk_seed,\n+                      const unsigned char *pub_seed, uint32_t addr[8])\n+{\n+    unsigned int i;\n+    unsigned int tau = params->tree_height;\n+    unsigned int startidx;\n+    unsigned int offset, rowidx;\n+    unsigned char *buf = malloc(2 * params->n);\n+\n+    uint32_t ots_addr[8] = {0};\n+    uint32_t ltree_addr[8] = {0};\n+    uint32_t node_addr[8] = {0};\n+\n+    // only copy layer and tree address parts\n+    copy_subtree_addr(ots_addr, addr);\n+    // type = ots\n+    set_type(ots_addr, 0);\n+    copy_subtree_addr(ltree_addr, addr);\n+    set_type(ltree_addr, 1);\n+    copy_subtree_addr(node_addr, addr);\n+    set_type(node_addr, 2);\n+\n+    for (i = 0; i < params->tree_height; i++) {\n+        if (! ((leaf_idx >> i) & 1)) {\n+            tau = i;\n+            break;\n+        }\n+    }\n+\n+    if (tau > 0) {\n+        memcpy(buf, state->auth + (tau-1) * params->n, params->n);\n+        // we need to do this before refreshing state->keep to prevent overwriting\n+        memcpy(buf + params->n, state->keep + ((tau-1) >> 1) * params->n, params->n);\n+    }\n+    if (!((leaf_idx >> (tau + 1)) & 1) && (tau < params->tree_height - 1)) {\n+        memcpy(state->keep + (tau >> 1)*params->n, state->auth + tau*params->n, params->n);\n+    }\n+    if (tau == 0) {\n+        set_ltree_addr(ltree_addr, leaf_idx);\n+        set_ots_addr(ots_addr, leaf_idx);\n+        gen_leaf_wots(params, state->auth, sk_seed, pub_seed, ltree_addr, ots_addr);\n+    }\n+    else {\n+        set_tree_height(node_addr, (tau-1));\n+        set_tree_index(node_addr, leaf_idx >> tau);\n+        thash_h(params, state->auth + tau * params->n, buf, pub_seed, node_addr);\n+        for (i = 0; i < tau; i++) {\n+            if (i < params->tree_height - params->bds_k) {\n+                memcpy(state->auth + i * params->n, state->treehash[i].node, params->n);\n+            }\n+            else {\n+                offset = (1 << (params->tree_height - 1 - i)) + i - params->tree_height;\n+                rowidx = ((leaf_idx >> i) - 1) >> 1;\n+                memcpy(state->auth + i * params->n, state->retain + (offset + rowidx) * params->n, params->n);\n+            }\n+        }\n+\n+        for (i = 0; i < ((tau < params->tree_height - params->bds_k) ? tau : (params->tree_height - params->bds_k)); i++) {\n+            startidx = leaf_idx + 1 + 3 * (1 << i);\n+            if (startidx < 1U << params->tree_height) {\n+                state->treehash[i].h = i;\n+                state->treehash[i].next_idx = startidx;\n+                state->treehash[i].completed = 0;\n+                state->treehash[i].stackusage = 0;\n+            }\n+        }\n+    }\n+\n+    OQS_MEM_insecure_free(buf);\n+}\n+\n+/**\n+ * Given a set of parameters, this function returns the size of the secret key.\n+ * This is implementation specific, as varying choices in tree traversal will\n+ * result in varying requirements for state storage.\n+ *\n+ * This function handles both XMSS and XMSSMT parameter sets.\n+ */\n+unsigned long long xmss_xmssmt_core_sk_bytes(const xmss_params *params)\n+{\n+    return params->index_bytes + 4 * params->n\n+        + (2 * params->d - 1) * (\n+            (params->tree_height + 1) * params->n\n+            + 4\n+            + params->tree_height + 1\n+            + params->tree_height * params->n\n+            + (params->tree_height >> 1) * params->n\n+            + (params->tree_height - params->bds_k) * (7 + params->n)\n+            + ((1 << params->bds_k) - params->bds_k - 1) * params->n\n+            + 4\n+         )\n+        + (params->d - 1) * params->wots_sig_bytes;\n+}\n+\n+/*\n+ * Generates a XMSS key pair for a given parameter set.\n+ * Format sk: [(32bit) idx || SK_SEED || SK_PRF || root || PUB_SEED]\n+ * Format pk: [root || PUB_SEED] omitting algo oid.\n+ */\n+int xmss_core_keypair(const xmss_params *params,\n+                      unsigned char *pk, unsigned char *sk)\n+{\n+    uint32_t addr[8] = {0};\n+\n+    // TODO refactor BDS state not to need separate treehash instances\n+    bds_state state;\n+    treehash_inst *treehash = calloc(params->tree_height - params->bds_k, sizeof(treehash_inst));\n+    state.treehash = treehash;\n+\n+    xmss_deserialize_state(params, &state, sk);\n+\n+    state.stackoffset = 0;\n+    state.next_leaf = 0;\n+\n+    // Set idx = 0\n+    sk[0] = 0;\n+    sk[1] = 0;\n+    sk[2] = 0;\n+    sk[3] = 0;\n+    // Init SK_SEED (n byte) and SK_PRF (n byte)\n+    OQS_randombytes(sk + params->index_bytes, 2*params->n);\n+\n+    // Init PUB_SEED (n byte)\n+    OQS_randombytes(sk + params->index_bytes + 3*params->n, params->n);\n+    // Copy PUB_SEED to public key\n+    memcpy(pk + params->n, sk + params->index_bytes + 3*params->n, params->n);\n+\n+    // Compute root\n+    treehash_init(params, pk, params->tree_height, 0, &state, sk + params->index_bytes, sk + params->index_bytes + 3*params->n, addr);\n+    // copy root to sk\n+    memcpy(sk + params->index_bytes + 2*params->n, pk, params->n);\n+\n+    /* Write the BDS state into sk. */\n+    xmss_serialize_state(params, sk, &state);\n+\n+    OQS_MEM_insecure_free(treehash);\n+\n+    return 0;\n+}\n+\n+/**\n+ * Signs a message.\n+ * Returns\n+ * 1. an array containing the signature followed by the message AND\n+ * 2. an updated secret key!\n+ *\n+ */\n+int xmss_core_sign(const xmss_params *params,\n+                   unsigned char *sk,\n+                   unsigned char *sm, unsigned long long *smlen,\n+                   const unsigned char *m, unsigned long long mlen)\n+{\n+    if (params->full_height > 60) {\n+        // Unsupport Tree height\n+        return -2;\n+    }\n+\n+    const unsigned char *pub_root = sk + params->index_bytes + 2*params->n;\n+    int ret;\n+\n+    uint16_t i = 0;\n+\n+    // TODO refactor BDS state not to need separate treehash instances\n+    bds_state state;\n+    treehash_inst *treehash = calloc(params->tree_height - params->bds_k, sizeof(treehash_inst));\n+    state.treehash = treehash;\n+\n+    /* Load the BDS state from sk. */\n+    xmss_deserialize_state(params, &state, sk);\n+\n+    // Extract SK\n+    unsigned long long idx = ((unsigned long long)sk[0] << 24) | ((unsigned long long)sk[1] << 16) | ((unsigned long long)sk[2] << 8) | sk[3];\n+\n+    /* Check if we can still sign with this sk.\n+     * If not, return -2\n+     *\n+     * If this is the last possible signature (because the max index value\n+     * is reached), production implementations should delete the secret key\n+     * to prevent accidental further use.\n+     *\n+     * For the case of total tree height of 64 we do not use the last signature\n+     * to be on the safe side (there is no index value left to indicate that the\n+     * key is finished, hence external handling would be necessary)\n+     */\n+    if (idx >= ((1ULL << params->full_height) - 1)) {\n+        // Delete secret key here. We only do this in memory, production code\n+        // has to make sure that this happens on disk.\n+        memset(sk, 0xFF, params->index_bytes);\n+        memset(sk + params->index_bytes, 0, (size_t)(params->sk_bytes - params->index_bytes));\n+        if (idx > ((1ULL << params->full_height) - 1)) {\n+            ret = -2; // We already used all one-time keys\n+            goto cleanup;\n+        }\n+    }\n+    unsigned char *tmp = malloc(5 * params->n);\n+\n+    unsigned char *sk_seed = tmp;\n+    unsigned char *sk_prf = sk_seed + params->n;\n+    unsigned char *pub_seed = sk_prf + params->n;\n+\n+    memcpy(sk_seed, sk + params->index_bytes, params->n);\n+    memcpy(sk_prf, sk + params->index_bytes + params->n, params->n);\n+    memcpy(pub_seed, sk + params->index_bytes + 3*params->n, params->n);\n+\n+    // index as 32 bytes string\n+    unsigned char idx_bytes_32[32];\n+    ull_to_bytes(idx_bytes_32, 32, idx);\n+\n+    // Update SK\n+    sk[0] = ((idx + 1) >> 24) & 255;\n+    sk[1] = ((idx + 1) >> 16) & 255;\n+    sk[2] = ((idx + 1) >> 8) & 255;\n+    sk[3] = (idx + 1) & 255;\n+    // Secret key for this non-forward-secure version is now updated.\n+    // A production implementation should consider using a file handle instead,\n+    //  and write the updated secret key at this point!\n+\n+    // Init working params\n+    unsigned char *R = pub_seed + params->n;\n+    unsigned char *msg_h = R + params->n;\n+    uint32_t ots_addr[8] = {0};\n+\n+    // ---------------------------------\n+    // Message Hashing\n+    // ---------------------------------\n+\n+    // Message Hash:\n+    // First compute pseudorandom value\n+    prf(params, R, idx_bytes_32, sk_prf);\n+\n+    /* Already put the message in the right place, to make it easier to prepend\n+     * things when computing the hash over the message. */\n+    unsigned long long prefix_length = params->padding_len + 3*params->n;\n+    unsigned char *m_with_prefix = malloc((size_t)(mlen + prefix_length));\n+    memcpy(m_with_prefix, sm + params->sig_bytes - prefix_length, (size_t)prefix_length);\n+    memcpy(m_with_prefix + prefix_length, m, (size_t)mlen);\n+\n+    /* Compute the message hash. */\n+    hash_message(params, msg_h, R, pub_root, idx,\n+                 m_with_prefix,\n+                 mlen);\n+\n+    // Start collecting signature\n+    *smlen = 0;\n+\n+    // Copy index to signature\n+    sm[0] = (idx >> 24) & 255;\n+    sm[1] = (idx >> 16) & 255;\n+    sm[2] = (idx >> 8) & 255;\n+    sm[3] = idx & 255;\n+\n+    sm += 4;\n+    *smlen += 4;\n+\n+    // Copy R to signature\n+    for (i = 0; i < params->n; i++) {\n+        sm[i] = R[i];\n+    }\n+\n+    sm += params->n;\n+    *smlen += params->n;\n+\n+    // ----------------------------------\n+    // Now we start to \"really sign\"\n+    // ----------------------------------\n+\n+    // Prepare Address\n+    set_type(ots_addr, 0);\n+    set_ots_addr(ots_addr, (uint32_t) idx);\n+\n+    // Compute WOTS signature\n+    wots_sign(params, sm, msg_h, sk_seed, pub_seed, ots_addr);\n+\n+    sm += params->wots_sig_bytes;\n+    *smlen += params->wots_sig_bytes;\n+\n+    // the auth path was already computed during the previous round\n+    memcpy(sm, state.auth, params->tree_height*params->n);\n+\n+    if (idx < (1ULL << params->tree_height) - 1) {\n+        bds_round(params, &state, (const unsigned long)idx, sk_seed, pub_seed, ots_addr);\n+        bds_treehash_update(params, &state, (params->tree_height - params->bds_k) >> 1, sk_seed, pub_seed, ots_addr);\n+    }\n+\n+    *smlen += params->tree_height*params->n;\n+\n+    /* Write the updated BDS state back into sk. */\n+    xmss_serialize_state(params, sk, &state);\n+\n+    ret = 0;\n+\n+    OQS_MEM_insecure_free(m_with_prefix);\n+    OQS_MEM_insecure_free(tmp);\n+\n+cleanup:\n+    OQS_MEM_insecure_free(treehash);\n+\n+    return ret;\n+}\n+\n+/*\n+ * Generates a XMSSMT key pair for a given parameter set.\n+ * Format sk: [(ceil(h/8) bit) idx || SK_SEED || SK_PRF || root || PUB_SEED]\n+ * Format pk: [root || PUB_SEED] omitting algo oid.\n+ */\n+int xmssmt_core_keypair(const xmss_params *params,\n+                        unsigned char *pk, unsigned char *sk)\n+{\n+    uint32_t addr[8] = {0};\n+    unsigned int i;\n+    unsigned char *wots_sigs;\n+\n+    // TODO refactor BDS state not to need separate treehash instances\n+    bds_state *states = calloc(2*params->d - 1, sizeof(bds_state));\n+    treehash_inst *treehash = calloc((2*params->d - 1) * (params->tree_height - params->bds_k), sizeof(treehash_inst));\n+    for (i = 0; i < 2*params->d - 1; i++) {\n+        states[i].treehash = treehash + i * (params->tree_height - params->bds_k);\n+    }\n+\n+    xmssmt_deserialize_state(params, states, &wots_sigs, sk);\n+\n+    for (i = 0; i < 2 * params->d - 1; i++) {\n+        states[i].stackoffset = 0;\n+        states[i].next_leaf = 0;\n+    }\n+\n+    // Set idx = 0\n+    for (i = 0; i < params->index_bytes; i++) {\n+        sk[i] = 0;\n+    }\n+    // Init SK_SEED (params->n byte) and SK_PRF (params->n byte)\n+    OQS_randombytes(sk+params->index_bytes, 2*params->n);\n+\n+    // Init PUB_SEED (params->n byte)\n+    OQS_randombytes(sk+params->index_bytes + 3*params->n, params->n);\n+    // Copy PUB_SEED to public key\n+    memcpy(pk+params->n, sk+params->index_bytes+3*params->n, params->n);\n+\n+    // Start with the bottom-most layer\n+    set_layer_addr(addr, 0);\n+    // Set up state and compute wots signatures for all but topmost tree root\n+    for (i = 0; i < params->d - 1; i++) {\n+        // Compute seed for OTS key pair\n+        treehash_init(params, pk, params->tree_height, 0, states + i, sk+params->index_bytes, pk+params->n, addr);\n+        set_layer_addr(addr, (i+1));\n+        wots_sign(params, wots_sigs + i*params->wots_sig_bytes, pk, sk + params->index_bytes, pk+params->n, addr);\n+    }\n+    // Address now points to the single tree on layer d-1\n+    treehash_init(params, pk, params->tree_height, 0, states + i, sk+params->index_bytes, pk+params->n, addr);\n+    memcpy(sk + params->index_bytes + 2*params->n, pk, params->n);\n+\n+    xmssmt_serialize_state(params, sk, states);\n+\n+    OQS_MEM_insecure_free(treehash);\n+    OQS_MEM_insecure_free(states);\n+\n+    return 0;\n+}\n+\n+/**\n+ * Signs a message.\n+ * Returns\n+ * 1. an array containing the signature followed by the message AND\n+ * 2. an updated secret key!\n+ *\n+ */\n+int xmssmt_core_sign(const xmss_params *params,\n+                     unsigned char *sk,\n+                     unsigned char *sm, unsigned long long *smlen,\n+                     const unsigned char *m, unsigned long long mlen)\n+{\n+    if (params == NULL || params->full_height > 60) {\n+        // Unsupport parameter\n+        return -1;\n+    }\n+\n+    const unsigned char *pub_root = sk + params->index_bytes + 2*params->n;\n+\n+    uint64_t idx_tree;\n+    uint32_t idx_leaf;\n+    unsigned int i, j;\n+    int needswap_upto = -1;\n+    unsigned int updates;\n+\n+    unsigned char *tmp = malloc(5 * params->n);\n+\n+    unsigned char *sk_seed = tmp;\n+    unsigned char *sk_prf = sk_seed + params->n;\n+    unsigned char *pub_seed = sk_prf + params->n;\n+    // Init working params\n+    unsigned char *R = pub_seed + params->n;\n+    unsigned char *msg_h = R + params->n;\n+    uint32_t addr[8] = {0};\n+    uint32_t ots_addr[8] = {0};\n+    unsigned char idx_bytes_32[32];\n+\n+    unsigned char *wots_sigs = NULL;\n+    unsigned long long prefix_length = params->padding_len + 3*params->n;\n+    unsigned long long m_with_prefix_len = mlen + prefix_length;\n+    unsigned char *m_with_prefix = NULL;\n+    int ret = 0;\n+\n+    // TODO refactor BDS state not to need separate treehash instances\n+    bds_state *states = calloc(2*params->d - 1, sizeof(bds_state));\n+    treehash_inst *treehash = calloc((2*params->d - 1) * (params->tree_height - params->bds_k), sizeof(treehash_inst));","path":"src/sig_stfl/xmss/external/xmss_core_fast.c","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"added in https://github.com/open-quantum-safe/liboqs/pull/1724","created_at":"2024-03-11T15:30:28Z","updated_at":"2024-03-11T15:30:28Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919916","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919916"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519919916"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519919916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":856,"original_start_line":856,"start_side":"RIGHT","line":857,"original_line":857,"side":"RIGHT","in_reply_to_id":1509155790,"original_position":857,"position":857,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:30:28Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:30:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440255865","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519928070","pull_request_review_id":1928176036,"id":1519928070,"node_id":"PRRC_kwDOA-eq3c5amEMG","diff_hunk":"@@ -0,0 +1,8 @@\n+# LMS_SHA256_H10_W1","path":"tests/KATs/sig_stfl/lms/LMS_SHA256_H10_W1.rsp","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"Hmm, I think it should be there, we can just modify the hash. And we also have different test file, `test_stfl_sig.c`, unlike `test_sig_*.c`. \r\nOther KATs, we only store the hash of output in `kats.json`. For this, we actually have KATs file to read from when key generation is slow. \r\nIf we remove the file name, when it comes to the part figure out which KAT is which then it costs some body time and effort. \r\n","created_at":"2024-03-11T15:34:54Z","updated_at":"2024-03-11T15:34:54Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519928070","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519928070"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519928070"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519928070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":1,"original_line":1,"side":"RIGHT","in_reply_to_id":1514799272,"original_position":1,"position":1,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:34:54Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:34:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36440265515","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519928701","pull_request_review_id":1928176934,"id":1519928701,"node_id":"PRRC_kwDOA-eq3c5amEV9","diff_hunk":"@@ -0,0 +1,14 @@\n+# XMSS-SHA2_10_256\n+\n+pk = 00000001B901B8D9332FE458EB6DE87AF74655D0B5AD936A66FDB6AC9D1B8CF25BB6DB8404562AD35E8ECAFAAFDA16981CDAA147606BEEA62801342AF13C8B5535F72F94\n+skn+\n+\n+count = 0\n+seed = 1840C60AD9F35C900372EF38D08671A74353C965C3C5DE0668C9C3E5CF3926304322530FD9681CF3A9C71FD633D60C66\n+mlen = 33\n+msg = B338DD755D5618C464AB331F14DE3DD4A358BBA00D28FB35236741E902F7B248CE\n+smlen = 2500\n+sm = 00000000404DFF9B9F3931FE6158FFF355A8EE715C9BC6A87FE6627928F3CA1055FA7010C534B0D4C6FFDF4DBFE00E72405EFE83BBCF19AA2030A8CB163808482B6376FF8CE01FB8090F4842896A1EA5E9282F35CACD245A4B9DE9FE84E9315851D68A72B3ECB9F440937C8BA4AC3F0429246CBC2777E8B92D84F4BA49FAB89465FCB0FC8017E582746F531B4697925154A22E2D6A0F1B81913438000C295153D7ADCA8F852C50D360F65F887479E9631A2CA30FE3AD92E7BF648643835F4F8CC081A6C951B83B77608A08C021821DA61962CFCC8E97D75441921D39C5AD537543EFBAF0345DC70826E6E950929570C72E51619600C58D932A72657B19AF163E0B8F7AAF2949A5EB26C517909E0E663E36753491182975206009107509DFFC898D308B903E84A8B29718BF7125397AFF5467D53CF8F36EB945B6B98D48E81C0174A0E03541D24369CF8EDDA4288FFA615D16FBC7355CFC0966BA9256E5B8A44DA95760DFB61301B10FD3E82436E267DB089773E43B984297D1E0D395DCC77FCFECCEFEBD4B80B3F241872EA251DA466CA6C5324346F4B5E6886654A86592641A8C32AC554261B2D9130462C976B039E593F873AD1712820FF3E723FE57F137751AB3CA8B5B20D28D1B9384DF1D710AC39FAF699989418B7856C2034C695A693ECC336EB472DE5049C743089529695B028F2F72BE0893E59169E9A2376C64BC5CCAC5482E5A6E9C88D710A3FF8F23C206B09D314BF50568228B1BACF1CE330D529BD3793D7C7CD9EC770C111D9681D6F1B97D908CBBD436444853FEB47F234D31F5E92B9E0465D67AC0FE48859126BEFA7F7D121A67C2C2970B37B8081B4E73C5A21A41F60160A61FAFBD48649A3D2032C1679A67F348E3E25275FCD9AF650937FEB0A30F25878CEED7D6CA693518B5A2F5418135EA9316EFFDECDB1DFFC9EE3A62EFF0E66F3D05BD9D5F8679B536BB6D39792B28DF2481A6EECB9BEE40B11A10D39A90EA1AAC47BF956FBFE9B0427B599B9BC024F326515E71615419423FEC3F19F621D49B6EED59F129A6B1411B7B1AFCF073095D57B03F25A16F946ED716BF705F567A151BE85B8E8195CC2F070BFD482702182B8A4A43ED942F6BD3CBF9DE7E8AEB17C41E1C009C94FF4A2050E3731088B75474B38DC52BADF53C7DCD3FB98D023649FC4799CE060ADDACEC7CD4E656074E631C1CB8AEF88EFEE0817C2E3D79E287F4510E48DFB7E23CB49D6FCA39A1E0F471F16A8BB65AF02150D059036D00386DD287BEA4D52FB263B57AE5ADD901CADE838B1D7347D9E47EAF6456148C6C4E44B0FA3DFCF5C9CEC2D80AD509A65AEF0E3E663B7F31BCA437311BA799D4C2ACC138F85D73CB40792FF03F8F20427D951444990CA3976A71368A7DC1455E880722F06F02163BC712E852A914F22E5675EB9B1C6C8B7FD20A8880AD2EEF97982C065C937BD3639357E4C7450CBDA0B51CCA8E3E078DC760FD99EBF646B82369576539B2BD5B2C866ED5AE94423A5CE18C685352398D01C983F080D7BEB8A9243AAA9AC1DDCC1B058B92BEAD301E8F3B8F5EF71EEE7966302B44D2E26D2A02393713E5D4D3FEF42196FAA368274C78C2932D22840ECA6018CE7D16B19A0727CB1966EB28B57D137C5264CC2E627F24A3BAD50EA4F75C7BD8998709C01ED5ACFFF0891934E94DA2CACCA212FB48BE3F9EAA310547E73C388D881F36AE21EFEDD23744F6B07C5D6D2776C191ED41E607316F61BBEF7A20E1A03150AE833D18952AE35188FBFDFA55C12A388836717BB2BDD97E89121C56C3B53E8198242315C9E438512E0C8354A3E599CB7217AE688647A72985606BBD0720F6FA5C5B6F70E88234EE54C6DB0A41106C866564650829FE4B232635B06B18240C9F86369C75B2F7D237211A380C43F95D362E0680D9EA2CA47E1DC8C49703E22650B765F847AD86BE25A3B7630D640A0097632DF13F600E8A025DD9A1FC67B0EB09C1CA9FA3923896927DEE1E3CC0C81F4B82E43B89CACC69C9B8ADCA1670F7D4E50DB7BCD94C2115E75F2BFD2336DA5A304D0F3455927360BF5040E95D1454106F2A8A7CD27D5510E7B5BE7B5B9EDEFDC3D4249D655C51F4C1DBA0F359BE4769AB66EDBC802824E9AB866E8EEAA2FEB1CC855F0A745AAC84A610DF0238112C6519F8E7346C45331A6036F84D5B6250F4B5BC0A2A6A31DAF9C60EB13C20CC649A18E27A6C98B82F08E21706A8BDF338CC69C1679D25ECFF733A721211C1F6DD28091AAA9C93B047EFCD2C8A55F2DA65E616F07DCC0F44081D4E359C1688A00F062EC925D24432862B547BB70F2AF126A3DABA5C918B224DE444B8733E6FA601B3D349307E94583D0EC976AEDA2B90972324B3ACE8C7B79A67723AEA037E12DA9EFA9CA9668A4F5FDADFB9EEE13398921F5023E354A6894825431DBA7317E6A6F69F0E77294BCD02D7616E75AC31EC528FC070B8C34027C4E9CD0672903412FCA6B723650D56AF562069312FC7EF1891A77E1A3F29D810C205EE212E75863F3B8B1ED216DF888ADD07AFF45F1B5C01196329311414797CD5F67FFC54AAD04C803FF7E83C2E8BA224CE83695BB7916AC42B1861F5CB527FDBCD82DBFA31C5ACF981D8414203837504263C96A0015841FBCC721F96D50A86D6E096AB54AF9980F06CEE6341C78D6583F6BAE8081B3C44B0F10FB7300874B5011FF0F97C52F975A31355884C2F12B6FFEE20E8371D38183C9D04977BFA037C9BD4DD7F7CE203FD7FAD3852B3C2AE9D078ADEC70DB1A7140EF1114EBB03E8DE03237E0A27FF510015AC76FCEFE4EBD4C3A1B6C67DB2A82FE2B1BF18723DB0F29FE4AD47B2EEF22AC3C6661CFA7DA7476D23B470FA2E0441B6473EBD291791F09B4ADA70A5286EB05167BD59BFD8C46427413D60692382EFB7882F60DC53AAAFDF2014CA7D27F8FA93C187A8371B41796557AE739912E5991C713532E81FA57F9BA562E1D3026D2D2D7373D99871BC62768AD70D3DB184EABED83E30C11C9BC62F3340923A0082B987EC45CC7BD1DB4B2B15E8AD3EAD74E96D8C20D85617BBEDC0BDAF8ED48B7EE8D7C42990028EC0669AFC0861C22F2E9109F9BB35426BDDB4A69EB8F45CD5B226F92E8026F1E62DE1DE435A4FC0CAEDA91C38A88F0037BDB296CD7B07FF040B1E08F02711E946B307A5A38487F53070985B8E28BE6CCE809F34100F0CA780996CD38E91BA7773BB632D0BE7978F3AF3A92B961BD3A8759590726D6C1811F9E0BCA87377334E7C1F12FE37401CA0200823938C816ED98981521470F7F2CCDD69D85E7530EBF39E3A592B1C09BC6C352C3FDB108FB26E7ACD3D5A4FC0442962E2C09651AC0D026E370F1EE1A8219C4833D70793D6E581FD25B0E95FAB1EDA67232C2FA12C4E379A6627E75AD408C1D2526005F2567CED8608E88CF53064FCDC58007198ADFA860F9FED1DF80EFACC768A0A063E1AFEE6DF1BE3483105B1C45EB50BF7863B4278422CEBA9001EA00299AC0415BF28A9C49CC2E92FC15565B547538A027886C6EB0D83B71138CE1A\n+remain = 1022\n+max = 1023","path":"tests/KATs/sig_stfl/xmss/XMSS-SHA2_10_256.rsp","commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","original_commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"agree","created_at":"2024-03-11T15:35:09Z","updated_at":"2024-03-11T15:35:10Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519928701","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519928701"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1519928701"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1519928701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":14,"original_line":14,"side":"RIGHT","in_reply_to_id":1514811804,"original_position":14,"position":14,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T15:35:09Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T15:24:13Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143241,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/fdefc2770f8b04aded37445da0405654d43fb2b4"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T15:35:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36447157614","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520267717","pull_request_review_id":1928811311,"id":1520267717,"node_id":"PRRC_kwDOA-eq3c5anXHF","diff_hunk":"@@ -0,0 +1,105 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+\n+#include <string.h>\n+#include <stdlib.h>\n+\n+#include <oqs/oqs.h>\n+#include \"sig_stfl_xmss.h\"\n+\n+#include \"external/xmss.h\"\n+\n+#if defined(__GNUC__) || defined(__clang__)\n+#define XMSS_UNUSED_ATT __attribute__((unused))\n+#else\n+#define XMSS_UNUSED_ATT\n+#endif\n+\n+/* -------------- XMSSMT -------------- */\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+OQS_API OQS_STATUS OQS_SIG_STFL_alg_xmssmt_sign(XMSS_UNUSED_ATT uint8_t *signature, XMSS_UNUSED_ATT size_t *signature_len, XMSS_UNUSED_ATT const uint8_t *message, XMSS_UNUSED_ATT size_t message_len,\n+        XMSS_UNUSED_ATT OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+\treturn OQS_ERROR;\n+}\n+#else\n+OQS_API OQS_STATUS OQS_SIG_STFL_alg_xmssmt_sign(uint8_t *signature, size_t *signature_len, XMSS_UNUSED_ATT const uint8_t *message, XMSS_UNUSED_ATT size_t message_len, XMSS_UNUSED_ATT OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+\n+\tOQS_STATUS status = OQS_SUCCESS;\n+\tuint8_t *sk_key_buf_ptr = NULL;\n+\tunsigned long long sig_length = 0;\n+\tsize_t sk_key_buf_len = 0;\n+\n+\tif (signature == NULL || signature_len == NULL || message == NULL || secret_key == NULL || secret_key->secret_key_data == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\n+\t/* Don't even attempt signing without a way to safe the updated private key */\n+\tif (secret_key->secure_store_scrt_key == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\n+\t/* Lock secret to ensure OTS use */\n+\tOQS_SECRET_KEY_XMSS_acquire_lock(secret_key);","path":"src/sig_stfl/xmss/sig_stfl_xmssmt_functions.c","commit_id":"baf54a2e6b2f0a8d974baebee12ca54cd8813740","original_commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"Oh, my bad, the check should be added. Added in #1727 ","created_at":"2024-03-11T18:45:54Z","updated_at":"2024-03-11T18:45:54Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1520267717","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520267717"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1520267717"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520267717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":41,"original_line":41,"side":"RIGHT","in_reply_to_id":1518310017,"original_position":41,"position":41,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T18:45:54Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/baf54a2e6b2f0a8d974baebee12ca54cd8813740","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"baf54a2e6b2f0a8d974baebee12ca54cd8813740","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T18:44:37Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143244,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T18:44:37Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143244,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/baf54a2e6b2f0a8d974baebee12ca54cd8813740"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T18:45:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36447179073","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520268743","pull_request_review_id":1928814134,"id":1520268743,"node_id":"PRRC_kwDOA-eq3c5anXXH","diff_hunk":"@@ -0,0 +1,105 @@\n+// SPDX-License-Identifier: (Apache-2.0 OR MIT) AND CC0-1.0\n+\n+#include <string.h>\n+#include <stdlib.h>\n+\n+#include <oqs/oqs.h>\n+#include \"sig_stfl_xmss.h\"\n+\n+#include \"external/xmss.h\"\n+\n+#if defined(__GNUC__) || defined(__clang__)\n+#define XMSS_UNUSED_ATT __attribute__((unused))\n+#else\n+#define XMSS_UNUSED_ATT\n+#endif\n+\n+/* -------------- XMSSMT -------------- */\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+OQS_API OQS_STATUS OQS_SIG_STFL_alg_xmssmt_sign(XMSS_UNUSED_ATT uint8_t *signature, XMSS_UNUSED_ATT size_t *signature_len, XMSS_UNUSED_ATT const uint8_t *message, XMSS_UNUSED_ATT size_t message_len,\n+        XMSS_UNUSED_ATT OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+\treturn OQS_ERROR;\n+}\n+#else\n+OQS_API OQS_STATUS OQS_SIG_STFL_alg_xmssmt_sign(uint8_t *signature, size_t *signature_len, XMSS_UNUSED_ATT const uint8_t *message, XMSS_UNUSED_ATT size_t message_len, XMSS_UNUSED_ATT OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+\n+\tOQS_STATUS status = OQS_SUCCESS;\n+\tuint8_t *sk_key_buf_ptr = NULL;\n+\tunsigned long long sig_length = 0;\n+\tsize_t sk_key_buf_len = 0;\n+\n+\tif (signature == NULL || signature_len == NULL || message == NULL || secret_key == NULL || secret_key->secret_key_data == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\n+\t/* Don't even attempt signing without a way to safe the updated private key */\n+\tif (secret_key->secure_store_scrt_key == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\n+\t/* Lock secret to ensure OTS use */\n+\tOQS_SECRET_KEY_XMSS_acquire_lock(secret_key);\n+\n+\tif (xmssmt_sign(secret_key->secret_key_data, signature, &sig_length, message, message_len)) {\n+\t\tstatus = OQS_ERROR;\n+\t\tgoto err;\n+\t}\n+\t*signature_len = (size_t)sig_length;\n+\t/*\n+\t * serialize and securely store the updated private key\n+\t * regardless, delete signature and the serialized key other wise\n+\t */\n+\n+\tstatus = OQS_SECRET_KEY_XMSS_inner_serialize_key(&sk_key_buf_ptr, &sk_key_buf_len, secret_key);\n+\tif (status != OQS_SUCCESS) {\n+\t\tgoto err;\n+\t}\n+\n+\t// Store updated private key securely\n+\tstatus = secret_key->secure_store_scrt_key(sk_key_buf_ptr, sk_key_buf_len, secret_key->context);\n+\tOQS_MEM_secure_free(sk_key_buf_ptr, sk_key_buf_len);\n+\n+err:\n+\t/* Unlock secret to ensure OTS use */\n+\tOQS_SECRET_KEY_XMSS_release_lock(secret_key);","path":"src/sig_stfl/xmss/sig_stfl_xmssmt_functions.c","commit_id":"baf54a2e6b2f0a8d974baebee12ca54cd8813740","original_commit_id":"fdefc2770f8b04aded37445da0405654d43fb2b4","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"Oh, my bad, the check should be added. Added in #1727 ","created_at":"2024-03-11T18:46:45Z","updated_at":"2024-03-11T18:46:45Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1520268743","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520268743"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1520268743"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520268743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":64,"original_line":64,"side":"RIGHT","in_reply_to_id":1518310382,"original_position":64,"position":64,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T18:46:45Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/baf54a2e6b2f0a8d974baebee12ca54cd8813740","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"baf54a2e6b2f0a8d974baebee12ca54cd8813740","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T18:44:37Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143244,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T18:44:37Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143244,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/baf54a2e6b2f0a8d974baebee12ca54cd8813740"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T18:46:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36447248534","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520271640","pull_request_review_id":1928822793,"id":1520271640,"node_id":"PRRC_kwDOA-eq3c5anYEY","diff_hunk":"@@ -0,0 +1,1438 @@\n+// SPDX-License-Identifier: MIT\n+\n+#include <assert.h>\n+#include <stdlib.h>\n+#if defined(_WIN32)\n+#include <string.h>\n+#define strcasecmp _stricmp\n+#else\n+#include <strings.h>\n+#endif\n+\n+#include <oqs/oqs.h>\n+\n+#ifdef OQS_ENABLE_SIG_STFL_XMSS\n+#include <oqs/sig_stfl_xmss.h>\n+#endif // OQS_ENABLE_SIG_STFL_XMSS\n+\n+#ifdef OQS_ENABLE_SIG_STFL_LMS\n+#include <oqs/sig_stfl_lms.h>\n+#endif // OQS_ENABLE_SIG_STFL_LMS\n+\n+OQS_API const char *OQS_SIG_STFL_alg_identifier(size_t i) {\n+\n+\tconst char *a[OQS_SIG_STFL_algs_length] = {\n+\t\t// XMSS\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h20,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_12,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_12,\n+\t\t// LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w8,\n+\n+\t\t//2-Level LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8,\n+\t};\n+\n+\tif (i >= OQS_SIG_STFL_algs_length) {\n+\t\treturn NULL;\n+\t} else {\n+\t\treturn a[i];\n+\t}\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_count(void) {\n+\treturn OQS_SIG_STFL_algs_length;\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_is_enabled(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\t//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn 0;\n+\t}\n+}\n+\n+OQS_API OQS_SIG_STFL *OQS_SIG_STFL_new(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h28_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h28_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h20_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn NULL;\n+\t}\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_keypair(const OQS_SIG_STFL *sig, uint8_t *public_key, OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)public_key;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->keypair == NULL || sig->keypair(public_key, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+\treturn OQS_ERROR;\n+#endif\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sign(const OQS_SIG_STFL *sig, uint8_t *signature, size_t *signature_len, const uint8_t *message,\n+                                     size_t message_len, OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)signature;\n+\t(void)signature_len;\n+\t(void)message;\n+\t(void)message_len;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sign == NULL || sig->sign(signature, signature_len, message, message_len, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif\n+}\n+\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_verify(const OQS_SIG_STFL *sig, const uint8_t *message, size_t message_len, const uint8_t *signature, size_t signature_len, const uint8_t *public_key) {\n+\tif (sig == NULL || sig->verify == NULL || sig->verify(message, message_len, signature, signature_len, public_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+}\n+\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sigs_remaining(const OQS_SIG_STFL *sig, unsigned long long *remain, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)remain;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sigs_remaining == NULL || sig->sigs_remaining(remain, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif //OQS_ALLOW_SFTL_KEY_AND_SIG_GEN \n+}\n+\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sigs_total(const OQS_SIG_STFL *sig, unsigned long long *max, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)max;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sigs_total == NULL || sig->sigs_total(max, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif //OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+}\n+\n+OQS_API void OQS_SIG_STFL_free(OQS_SIG_STFL *sig) {\n+\tOQS_MEM_insecure_free(sig);\n+}\n+\n+// ================================= OQS_SIG_STFL_SECRET_KEY FUNCTION ===============================================\n+\n+OQS_API OQS_SIG_STFL_SECRET_KEY *OQS_SIG_STFL_SECRET_KEY_new(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W2_H10_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_H10_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h20_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H20_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn NULL;\n+\t}\n+}\n+\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_free(OQS_SIG_STFL_SECRET_KEY *sk) {\n+\tif (sk == NULL || sk->free_key == NULL) {\n+\t\treturn;\n+\t}\n+\n+\t/* Call object specific free */\n+\tsk->free_key(sk);\n+\n+\t/* Free sk object */\n+\tOQS_MEM_secure_free(sk, sizeof(sk));\n+\tsk = NULL;\n+}\n+\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_SET_store_cb(OQS_SIG_STFL_SECRET_KEY *sk, secure_store_sk store_cb, void *context) {\n+\tif (sk == NULL || sk->set_scrt_key_store_cb == NULL) {\n+\t\treturn;\n+\t}\n+\tsk->set_scrt_key_store_cb(sk, store_cb, context);\n+}\n+\n+/* Convert secret key object to byte string */\n+OQS_API OQS_STATUS OQS_SECRET_KEY_STFL_serialize_key(uint8_t **sk_buf_ptr, size_t *sk_len, const OQS_SIG_STFL_SECRET_KEY *sk) {\n+\tif (sk == NULL || sk_len == NULL || sk_buf_ptr == NULL || sk->serialize_key == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\n+\treturn sk->serialize_key(sk_buf_ptr, sk_len, sk);\n+}\n+\n+/* Insert secret key byte string in an Stateful secret key object */\n+OQS_API OQS_STATUS OQS_SECRET_KEY_STFL_deserialize_key(OQS_SIG_STFL_SECRET_KEY *sk, const size_t key_len, const uint8_t *sk_buf, void *context) {\n+\tif (sk == NULL || sk_buf == NULL || sk->deserialize_key == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\n+\treturn sk->deserialize_key(sk, key_len, sk_buf, context);\n+}\n+\n+/*  OQS_SIG_STFL_SECRET_KEY_SET_lock callback function*/\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_SET_lock(OQS_SIG_STFL_SECRET_KEY *sk, lock_key lock) {\n+\tif (sk == NULL) {\n+\t\treturn;\n+\t}\n+\tsk->lock_key = lock;\n+}\n+\n+/*  OQS_SIG_STFL_SECRET_KEY_SET_unlock callback function */\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_SET_unlock(OQS_SIG_STFL_SECRET_KEY *sk, unlock_key unlock) {\n+\tif (sk == NULL) {\n+\t\treturn;\n+\t}\n+\tsk->unlock_key = unlock;\n+}\n+\n+/*  OQS_SIG_STFL_SECRET_KEY_SET_mutex */\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_SET_mutex(OQS_SIG_STFL_SECRET_KEY *sk, void *mutex) {\n+\tif (sk == NULL) {\n+\t\treturn;\n+\t}\n+\tsk->mutex = mutex;\n+}\n+\n+/* OQS_SIG_STFL_SECRET_KEY_lock  */\n+OQS_STATUS OQS_SIG_STFL_SECRET_KEY_lock(OQS_SIG_STFL_SECRET_KEY *sk) {\n+\tif (sk == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\tif (sk->lock_key == NULL) {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+\n+\t// Try to lock the private key but the mutex is unset.\n+\tif (sk->mutex == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\n+\treturn (sk->lock_key(sk->mutex));\n+}\n+\n+/* OQS_SIG_STFL_SECRET_KEY_unlock */\n+OQS_STATUS OQS_SIG_STFL_SECRET_KEY_unlock(OQS_SIG_STFL_SECRET_KEY *sk) {","path":"src/sig_stfl/sig_stfl.c","commit_id":"baf54a2e6b2f0a8d974baebee12ca54cd8813740","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"This is intended. Letting users lock and unlock by themselves in unsafe. \r\nWe need user to specify lock/unlock and mutex function, we do the locking for them. \r\n\r\nThe API here is for our internal testing. ","created_at":"2024-03-11T18:49:27Z","updated_at":"2024-03-11T18:49:27Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1520271640","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520271640"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1520271640"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520271640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":null,"original_start_line":null,"start_side":null,"line":1424,"original_line":1424,"side":"RIGHT","in_reply_to_id":1504284716,"original_position":1424,"position":1424,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T18:49:27Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/baf54a2e6b2f0a8d974baebee12ca54cd8813740","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"baf54a2e6b2f0a8d974baebee12ca54cd8813740","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T18:44:37Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143244,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T18:44:37Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143244,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/baf54a2e6b2f0a8d974baebee12ca54cd8813740"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T18:49:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"36447278671","type":"PullRequestReviewCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520272768","pull_request_review_id":1928826191,"id":1520272768,"node_id":"PRRC_kwDOA-eq3c5anYWA","diff_hunk":"@@ -0,0 +1,1438 @@\n+// SPDX-License-Identifier: MIT\n+\n+#include <assert.h>\n+#include <stdlib.h>\n+#if defined(_WIN32)\n+#include <string.h>\n+#define strcasecmp _stricmp\n+#else\n+#include <strings.h>\n+#endif\n+\n+#include <oqs/oqs.h>\n+\n+#ifdef OQS_ENABLE_SIG_STFL_XMSS\n+#include <oqs/sig_stfl_xmss.h>\n+#endif // OQS_ENABLE_SIG_STFL_XMSS\n+\n+#ifdef OQS_ENABLE_SIG_STFL_LMS\n+#include <oqs/sig_stfl_lms.h>\n+#endif // OQS_ENABLE_SIG_STFL_LMS\n+\n+OQS_API const char *OQS_SIG_STFL_alg_identifier(size_t i) {\n+\n+\tconst char *a[OQS_SIG_STFL_algs_length] = {\n+\t\t// XMSS\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha256_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake128_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_sha512_h20,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h10,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h16,\n+\t\tOQS_SIG_STFL_alg_xmss_shake256_h20,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_sha256_h60_12,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h20_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_2,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_4,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h40_8,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_3,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_6,\n+\t\tOQS_SIG_STFL_alg_xmssmt_shake128_h60_12,\n+\t\t// LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w1,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h25_w8,\n+\n+\t\t//2-Level LMS\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8,\n+\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8,\n+\t\tOQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8,\n+\t};\n+\n+\tif (i >= OQS_SIG_STFL_algs_length) {\n+\t\treturn NULL;\n+\t} else {\n+\t\treturn a[i];\n+\t}\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_count(void) {\n+\treturn OQS_SIG_STFL_algs_length;\n+}\n+\n+OQS_API int OQS_SIG_STFL_alg_is_enabled(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+\t//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h10_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn 1;\n+#else\n+\t\treturn 0;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn 0;\n+\t}\n+}\n+\n+OQS_API OQS_SIG_STFL *OQS_SIG_STFL_new(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha256_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake128_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_sha512_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn OQS_SIG_STFL_alg_xmss_shake256_h20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_sha256_h60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn OQS_SIG_STFL_alg_xmssmt_shake128_h60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h28_w1\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h28_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h25_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h10_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h15_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h20_w8\n+\t\treturn OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn NULL;\n+\t}\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_keypair(const OQS_SIG_STFL *sig, uint8_t *public_key, OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)public_key;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->keypair == NULL || sig->keypair(public_key, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+\treturn OQS_ERROR;\n+#endif\n+}\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sign(const OQS_SIG_STFL *sig, uint8_t *signature, size_t *signature_len, const uint8_t *message,\n+                                     size_t message_len, OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)signature;\n+\t(void)signature_len;\n+\t(void)message;\n+\t(void)message_len;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sign == NULL || sig->sign(signature, signature_len, message, message_len, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif\n+}\n+\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_verify(const OQS_SIG_STFL *sig, const uint8_t *message, size_t message_len, const uint8_t *signature, size_t signature_len, const uint8_t *public_key) {\n+\tif (sig == NULL || sig->verify == NULL || sig->verify(message, message_len, signature, signature_len, public_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+}\n+\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sigs_remaining(const OQS_SIG_STFL *sig, unsigned long long *remain, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)remain;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sigs_remaining == NULL || sig->sigs_remaining(remain, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif //OQS_ALLOW_SFTL_KEY_AND_SIG_GEN \n+}\n+\n+\n+OQS_API OQS_STATUS OQS_SIG_STFL_sigs_total(const OQS_SIG_STFL *sig, unsigned long long *max, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\n+#ifndef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+\t(void)sig;\n+\t(void)max;\n+\t(void)secret_key;\n+\treturn OQS_ERROR;\n+#else\n+\tif (sig == NULL || sig->sigs_total == NULL || sig->sigs_total(max, secret_key) != 0) {\n+\t\treturn OQS_ERROR;\n+\t} else {\n+\t\treturn OQS_SUCCESS;\n+\t}\n+#endif //OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\n+}\n+\n+OQS_API void OQS_SIG_STFL_free(OQS_SIG_STFL *sig) {\n+\tOQS_MEM_insecure_free(sig);\n+}\n+\n+// ================================= OQS_SIG_STFL_SECRET_KEY FUNCTION ===============================================\n+\n+OQS_API OQS_SIG_STFL_SECRET_KEY *OQS_SIG_STFL_SECRET_KEY_new(const char *method_name) {\n+\tassert(method_name != NULL);\n+\n+\tif (0) {\n+\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha256_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA256_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake128_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake128_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE128_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_sha512_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_sha512_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHA512_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h10)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h10\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H10_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h16)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h16\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H16_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmss_shake256_h20)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmss_shake256_h20\n+\t\treturn OQS_SECRET_KEY_XMSS_SHAKE256_H20_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h20_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h40_8\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_3\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_6\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_sha256_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_sha256_h60_12\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHA256_H60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H20_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h20_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h20_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H20_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_2\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_4\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h40_8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h40_8\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H40_8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_3)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_3\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_3_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_6)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_6\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_6_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_xmssmt_shake128_h60_12)) {\n+#ifdef OQS_ENABLE_SIG_STFL_xmssmt_shake128_h60_12\n+\t\treturn OQS_SECRET_KEY_XMSSMT_SHAKE128_H60_12_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#ifdef OQS_ENABLE_SIG_STFL_LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w1)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w1\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W1_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h25_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h25_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H25_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//2-Level LMS\n+\telse if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h5_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h5_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H5_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w2_h10_w2)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w2_h10_w2\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W2_H10_W2_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h10_w4)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h10_w4\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_H10_W4_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w4_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w4_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W4_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h10_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H10_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h10_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h15_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h15_w8_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H15_W8_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h5_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h5_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H5_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h10_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h10_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H10_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h15_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h15_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H15_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t} else if (0 == strcasecmp(method_name, OQS_SIG_STFL_alg_lms_sha256_h20_w8_h20_w8)) {\n+#ifdef OQS_ENABLE_SIG_STFL_lms_sha256_h20_w8_h20_w8\n+\t\treturn OQS_SECRET_KEY_LMS_SHA256_H20_W8_H20_W8_new();\n+#else\n+\t\treturn NULL;\n+#endif\n+\t}\n+//#endif //OQS_ENABLE_SIG_STFL_LMS\n+\telse {\n+\t\treturn NULL;\n+\t}\n+}\n+\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_free(OQS_SIG_STFL_SECRET_KEY *sk) {\n+\tif (sk == NULL || sk->free_key == NULL) {\n+\t\treturn;\n+\t}\n+\n+\t/* Call object specific free */\n+\tsk->free_key(sk);\n+\n+\t/* Free sk object */\n+\tOQS_MEM_secure_free(sk, sizeof(sk));\n+\tsk = NULL;\n+}\n+\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_SET_store_cb(OQS_SIG_STFL_SECRET_KEY *sk, secure_store_sk store_cb, void *context) {\n+\tif (sk == NULL || sk->set_scrt_key_store_cb == NULL) {\n+\t\treturn;\n+\t}\n+\tsk->set_scrt_key_store_cb(sk, store_cb, context);\n+}\n+\n+/* Convert secret key object to byte string */\n+OQS_API OQS_STATUS OQS_SECRET_KEY_STFL_serialize_key(uint8_t **sk_buf_ptr, size_t *sk_len, const OQS_SIG_STFL_SECRET_KEY *sk) {\n+\tif (sk == NULL || sk_len == NULL || sk_buf_ptr == NULL || sk->serialize_key == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\n+\treturn sk->serialize_key(sk_buf_ptr, sk_len, sk);\n+}\n+\n+/* Insert secret key byte string in an Stateful secret key object */\n+OQS_API OQS_STATUS OQS_SECRET_KEY_STFL_deserialize_key(OQS_SIG_STFL_SECRET_KEY *sk, const size_t key_len, const uint8_t *sk_buf, void *context) {\n+\tif (sk == NULL || sk_buf == NULL || sk->deserialize_key == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\n+\treturn sk->deserialize_key(sk, key_len, sk_buf, context);\n+}\n+\n+/*  OQS_SIG_STFL_SECRET_KEY_SET_lock callback function*/\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_SET_lock(OQS_SIG_STFL_SECRET_KEY *sk, lock_key lock) {\n+\tif (sk == NULL) {\n+\t\treturn;\n+\t}\n+\tsk->lock_key = lock;\n+}\n+\n+/*  OQS_SIG_STFL_SECRET_KEY_SET_unlock callback function */\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_SET_unlock(OQS_SIG_STFL_SECRET_KEY *sk, unlock_key unlock) {\n+\tif (sk == NULL) {\n+\t\treturn;\n+\t}\n+\tsk->unlock_key = unlock;\n+}\n+\n+/*  OQS_SIG_STFL_SECRET_KEY_SET_mutex */\n+OQS_API void OQS_SIG_STFL_SECRET_KEY_SET_mutex(OQS_SIG_STFL_SECRET_KEY *sk, void *mutex) {\n+\tif (sk == NULL) {\n+\t\treturn;\n+\t}\n+\tsk->mutex = mutex;\n+}\n+\n+/* OQS_SIG_STFL_SECRET_KEY_lock  */\n+OQS_STATUS OQS_SIG_STFL_SECRET_KEY_lock(OQS_SIG_STFL_SECRET_KEY *sk) {\n+\tif (sk == NULL) {\n+\t\treturn OQS_ERROR;\n+\t}\n+\tif (sk->lock_key == NULL) {\n+\t\treturn OQS_SUCCESS;\n+\t}","path":"src/sig_stfl/sig_stfl.c","commit_id":"baf54a2e6b2f0a8d974baebee12ca54cd8813740","original_commit_id":"3f6aeac235672add0edc9ab406f38429702fa307","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"body":"It has 2 use cases:\r\n\r\n1. Single thread: no need to set lock. This function will return OQS_SUCCESS. \r\n2. Mulithread: Must set lock. \r\n\r\nSo if we return error if the lock is unset in single thread environment is a bit overkill. \r\n\r\n","created_at":"2024-03-11T18:50:34Z","updated_at":"2024-03-11T18:50:35Z","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1520272768","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","author_association":"COLLABORATOR","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520272768"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650#discussion_r1520272768"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"}},"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments/1520272768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"start_line":1411,"original_start_line":1411,"start_side":"RIGHT","line":1413,"original_line":1413,"side":"RIGHT","in_reply_to_id":1504289444,"original_position":1413,"position":1413,"subject_type":"line"},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650","id":1663975754,"node_id":"PR_kwDOA-eq3c5jLkFK","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1650","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1650.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650","number":1650,"state":"open","locked":false,"title":"Add Stateful Signature (XMSS and LMS)","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds implementations of stateful signatures to liboqs for XMSS and LMS. The feature include new OQS APIs to generate key-pairs, signature generation, verification, and secret key state-management. Actual secret key storage is left up to the application.\r\n\r\nThis PR also includes an enhancement to OQS SHA2 API to allow handling updates with arbitrary length buffers.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ No ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ Yes ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\nOQS provider support is a separate and forthcoming feature. This is separated because of the need to manage the stateful of secret keys.\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","created_at":"2024-01-04T00:49:00Z","updated_at":"2024-03-11T18:50:35Z","closed_at":null,"merged_at":null,"merge_commit_sha":"e3da0ac47b90dd3bcd3c05c3fc723864949b3677","assignee":null,"assignees":[],"requested_reviewers":[{"login":"tomato42","id":618246,"node_id":"MDQ6VXNlcjYxODI0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/618246?v=4","gravatar_id":"","url":"https://api.github.com/users/tomato42","html_url":"https://github.com/tomato42","followers_url":"https://api.github.com/users/tomato42/followers","following_url":"https://api.github.com/users/tomato42/following{/other_user}","gists_url":"https://api.github.com/users/tomato42/gists{/gist_id}","starred_url":"https://api.github.com/users/tomato42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomato42/subscriptions","organizations_url":"https://api.github.com/users/tomato42/orgs","repos_url":"https://api.github.com/users/tomato42/repos","events_url":"https://api.github.com/users/tomato42/events{/privacy}","received_events_url":"https://api.github.com/users/tomato42/received_events","type":"User","site_admin":false},{"login":"simo5","id":8332609,"node_id":"MDQ6VXNlcjgzMzI2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/8332609?v=4","gravatar_id":"","url":"https://api.github.com/users/simo5","html_url":"https://github.com/simo5","followers_url":"https://api.github.com/users/simo5/followers","following_url":"https://api.github.com/users/simo5/following{/other_user}","gists_url":"https://api.github.com/users/simo5/gists{/gist_id}","starred_url":"https://api.github.com/users/simo5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simo5/subscriptions","organizations_url":"https://api.github.com/users/simo5/orgs","repos_url":"https://api.github.com/users/simo5/repos","events_url":"https://api.github.com/users/simo5/events{/privacy}","received_events_url":"https://api.github.com/users/simo5/received_events","type":"User","site_admin":false},{"login":"hartm","id":16846129,"node_id":"MDQ6VXNlcjE2ODQ2MTI5","avatar_url":"https://avatars.githubusercontent.com/u/16846129?v=4","gravatar_id":"","url":"https://api.github.com/users/hartm","html_url":"https://github.com/hartm","followers_url":"https://api.github.com/users/hartm/followers","following_url":"https://api.github.com/users/hartm/following{/other_user}","gists_url":"https://api.github.com/users/hartm/gists{/gist_id}","starred_url":"https://api.github.com/users/hartm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hartm/subscriptions","organizations_url":"https://api.github.com/users/hartm/orgs","repos_url":"https://api.github.com/users/hartm/repos","events_url":"https://api.github.com/users/hartm/events{/privacy}","received_events_url":"https://api.github.com/users/hartm/received_events","type":"User","site_admin":false},{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"draft":false,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/baf54a2e6b2f0a8d974baebee12ca54cd8813740","head":{"label":"open-quantum-safe:stateful-sigs","ref":"stateful-sigs","sha":"baf54a2e6b2f0a8d974baebee12ca54cd8813740","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T18:44:37Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143244,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"base":{"label":"open-quantum-safe:main","ref":"main","sha":"ac164b4084ca9dbf696b93047edcb616530a039c","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":65514205,"node_id":"MDEwOlJlcG9zaXRvcnk2NTUxNDIwNQ==","name":"liboqs","full_name":"open-quantum-safe/liboqs","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs","description":"C library for prototyping and experimenting with quantum-resistant cryptography","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/deployments","created_at":"2016-08-12T01:46:12Z","updated_at":"2024-03-10T20:54:05Z","pushed_at":"2024-03-11T18:44:37Z","git_url":"git://github.com/open-quantum-safe/liboqs.git","ssh_url":"git@github.com:open-quantum-safe/liboqs.git","clone_url":"https://github.com/open-quantum-safe/liboqs.git","svn_url":"https://github.com/open-quantum-safe/liboqs","homepage":"https://openquantumsafe.org/","size":143244,"stargazers_count":1553,"watchers_count":1553,"language":"C","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":true,"forks_count":388,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":45,"license":{"key":"other","name":"Other","spdx_id":"NOASSERTION","url":null,"node_id":"MDc6TGljZW5zZTA="},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":["cryptography","key-exchange-algorithms","lattice-based-crypto","post-quantum-cryptography"],"visibility":"public","forks":388,"open_issues":45,"watchers":1553,"default_branch":"main"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650"},"html":{"href":"https://github.com/open-quantum-safe/liboqs/pull/1650"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1650/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1650/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs/statuses/baf54a2e6b2f0a8d974baebee12ca54cd8813740"}},"author_association":"COLLABORATOR","auto_merge":null,"active_lock_reason":null}},"public":true,"created_at":"2024-03-11T18:50:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
