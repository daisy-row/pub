{"id":"39551413161","type":"IssueCommentEvent","actor":{"id":49699333,"login":"dependabot[bot]","display_login":"dependabot","gravatar_id":"","url":"https://api.github.com/users/dependabot[bot]","avatar_url":"https://avatars.githubusercontent.com/u/49699333?"},"repo":{"id":282304934,"name":"open-quantum-safe/www","url":"https://api.github.com/repos/open-quantum-safe/www"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/www/issues/202","repository_url":"https://api.github.com/repos/open-quantum-safe/www","labels_url":"https://api.github.com/repos/open-quantum-safe/www/issues/202/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/www/issues/202/comments","events_url":"https://api.github.com/repos/open-quantum-safe/www/issues/202/events","html_url":"https://github.com/open-quantum-safe/www/pull/202","id":2356651588,"node_id":"PR_kwDOENOhps5yqBpT","number":202,"title":"Bump _includes/liboqs from `a5ec23c` to `6ee5de2`","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2734248192,"node_id":"MDU6TGFiZWwyNzM0MjQ4MTky","url":"https://api.github.com/repos/open-quantum-safe/www/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"},{"id":2742558684,"node_id":"MDU6TGFiZWwyNzQyNTU4Njg0","url":"https://api.github.com/repos/open-quantum-safe/www/labels/submodules","name":"submodules","color":"000000","default":false,"description":"Pull requests that update Submodules code"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-06-17T07:52:26Z","updated_at":"2024-06-24T07:27:01Z","closed_at":"2024-06-24T07:27:00Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/www/pulls/202","html_url":"https://github.com/open-quantum-safe/www/pull/202","diff_url":"https://github.com/open-quantum-safe/www/pull/202.diff","patch_url":"https://github.com/open-quantum-safe/www/pull/202.patch","merged_at":null},"body":"Bumps [_includes/liboqs](https://github.com/open-quantum-safe/liboqs) from `a5ec23c` to `6ee5de2`.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/6ee5de25220e490cf7c895939c0fa001e5f8e2ce\"><code>6ee5de2</code></a> Move Linux ARM64 &quot;build&quot; test from CircleCI to GitHub Actions (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1814\">#1814</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/39688e908b239b77b9775c5469df244021953d5d\"><code>39688e9</code></a> Forward-declare OQS_SIG type in sig_stfl.h (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1820\">#1820</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/971173ad82327ede5027b6d48e81bcaff92f417c\"><code>971173a</code></a> Add Stateful Signature (XMSS and LMS) (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1650\">#1650</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/0a89cf6fd4b8937c4d458ca333bfac00f70bbf52\"><code>0a89cf6</code></a> ensure no autoupdate</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/8066012110726b20960d58781b991ae70a6f4480\"><code>8066012</code></a> add back gcc override</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/41699656cd22e842d69f00478ed27b936612ec7d\"><code>4169965</code></a> remove gcc override to validate gcc change resulted in build success (and thi...</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/9ae06c545fb37a1b8d3eb6ef9a61bc07f786edd1\"><code>9ae06c5</code></a> Force gcc 13.2.0 over 13.3.0</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/982c762c242ef549c914891b47bf6e0ed6321f91\"><code>982c762</code></a> Pull Kyber/ML-KEM CT-Fix from upstream</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/755c02310277212c764ab94b6eb9348d500ba07d\"><code>755c023</code></a> Fix for incorrect macros in signatures. (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1799\">#1799</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/7eecda6095c003ddded7175a1ffdf35a2ce63ed5\"><code>7eecda6</code></a> Errors not printed when OPENSSL_NO_STDIO is set (<a href=\"https://redirect.github.com/open-quantum-safe/liboqs/issues/1774\">#1774</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/open-quantum-safe/liboqs/compare/a5ec23cf19763d36a558b8358345823ae45d57e5...6ee5de25220e490cf7c895939c0fa001e5f8e2ce\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/www/issues/202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/www/issues/202/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/www/issues/comments/2185798962","html_url":"https://github.com/open-quantum-safe/www/pull/202#issuecomment-2185798962","issue_url":"https://api.github.com/repos/open-quantum-safe/www/issues/202","id":2185798962,"node_id":"IC_kwDOENOhps6CSKUy","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"created_at":"2024-06-24T07:26:59Z","updated_at":"2024-06-24T07:26:59Z","author_association":"CONTRIBUTOR","body":"Superseded by #203.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/www/issues/comments/2185798962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":{"id":29110,"slug":"dependabot","node_id":"MDM6QXBwMjkxMTA=","owner":{"login":"github","id":9919,"node_id":"MDEyOk9yZ2FuaXphdGlvbjk5MTk=","avatar_url":"https://avatars.githubusercontent.com/u/9919?v=4","gravatar_id":"","url":"https://api.github.com/users/github","html_url":"https://github.com/github","followers_url":"https://api.github.com/users/github/followers","following_url":"https://api.github.com/users/github/following{/other_user}","gists_url":"https://api.github.com/users/github/gists{/gist_id}","starred_url":"https://api.github.com/users/github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github/subscriptions","organizations_url":"https://api.github.com/users/github/orgs","repos_url":"https://api.github.com/users/github/repos","events_url":"https://api.github.com/users/github/events{/privacy}","received_events_url":"https://api.github.com/users/github/received_events","type":"Organization","site_admin":false},"name":"Dependabot","description":"","external_url":"https://dependabot-api.githubapp.com","html_url":"https://github.com/apps/dependabot","created_at":"2019-04-16T22:34:25Z","updated_at":"2024-03-20T21:06:35Z","permissions":{"actions":"read","checks":"write","contents":"write","issues":"write","members":"read","metadata":"read","pull_requests":"write","statuses":"read","vulnerability_alerts":"read","workflows":"write"},"events":["check_suite","issues","issue_comment","label","pull_request","pull_request_review","pull_request_review_comment","repository"]}}},"public":true,"created_at":"2024-06-24T07:27:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39554081981","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1761","id":2257602107,"node_id":"I_kwDOA-eq3c6GkEY7","number":1761,"title":"Valgrind Massif Tool Breaks During Verify Operation of Falcon Algorithms on Raspberry Pi","user":{"login":"crt26","id":63823484,"node_id":"MDQ6VXNlcjYzODIzNDg0","avatar_url":"https://avatars.githubusercontent.com/u/63823484?v=4","gravatar_id":"","url":"https://api.github.com/users/crt26","html_url":"https://github.com/crt26","followers_url":"https://api.github.com/users/crt26/followers","following_url":"https://api.github.com/users/crt26/following{/other_user}","gists_url":"https://api.github.com/users/crt26/gists{/gist_id}","starred_url":"https://api.github.com/users/crt26/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crt26/subscriptions","organizations_url":"https://api.github.com/users/crt26/orgs","repos_url":"https://api.github.com/users/crt26/repos","events_url":"https://api.github.com/users/crt26/events{/privacy}","received_events_url":"https://api.github.com/users/crt26/received_events","type":"User","site_admin":false},"labels":[{"id":423520884,"node_id":"MDU6TGFiZWw0MjM1MjA4ODQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"open","locked":false,"assignee":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"assignees":[{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2024-04-22T23:01:53Z","updated_at":"2024-06-24T08:51:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Issue Description\r\n\r\nWhen using the Valgrind memory profiler (**version - 3.19.0**) with the Massif tool to gain information on the maxHeap and maxStack for an algorithm/operation combination, any Falcon algorithm variation with the verify operation will cause a break in Valgrind and ***produces the error below***. \r\n\r\n**Main Error:**\r\n```\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n```\r\n\r\nThe functions related to the issues according to the [Valgrind Outputs](#valgrind-with-massif-tool-error-full) are:\r\n\r\n- PQCLEAN_FALCON512_AARCH64_is_short*\r\n- do_verify \r\n- OQS_SIG_verify\r\n\r\n*This comes from the [example output given](#valgrind-with-massif-tool-error-full), in the [verbose output files](#verbose-outputs) the functions with issues for the other Falcon variations are detailed.\r\n\r\nThis issue is persistent across Raspberry Pi 4 and 5 models and various build configurations. When using the test_sig_mem script by itself, the verification completes without issue. This is also the case when using the Valgrind profiler by itself without Massif. Furthermore, the issue is the same regardless if the ARM PMU is enabled or disabled.\r\n\r\n### Standard test_sig_mem Verify Output\r\n\r\n**Command:**\r\n```\r\n./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output**\r\n```\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n```\r\n\r\n### Valgrind Output without Massif\r\n**Command:**\r\n```\r\nvalgrind ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352773== Memcheck, a memory error detector\r\n==352773== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.\r\n==352773== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352773== Command: ./test_sig_mem Falcon-512 2\r\n==352773==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n==352773==\r\n==352773== HEAP SUMMARY:\r\n==352773==     in use at exit: 0 bytes in 0 blocks\r\n==352773==   total heap usage: 15 allocs, 15 frees, 22,622 bytes allocated\r\n==352773==\r\n==352773== All heap blocks were freed -- no leaks are possible\r\n==352773==\r\n==352773== For lists of detected and suppressed errors, rerun with: -s\r\n==352773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\n```\r\n\r\n### Valgrind with Massif Tool Error Full\r\n**Command:**\r\n```\r\nvalgrind --tool=massif --stacks=yes ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352334== Massif, a heap profiler\r\n==352334== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==352334== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352334== Command: ./test_sig_mem Falcon-512 2\r\n==352334==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n\r\nhost stacktrace:\r\n==352334==    at 0x58009114: show_sched_status_wrk (m_libcassert.c:406)\r\n==352334==    by 0x58009263: report_and_quit (m_libcassert.c:477)\r\n==352334==    by 0x5800949B: panic (m_libcassert.c:553)\r\n==352334==    by 0x5800949B: vgPlain_core_panic_at (m_libcassert.c:558)\r\n==352334==    by 0x580094BF: vgPlain_core_panic (m_libcassert.c:563)\r\n==352334==    by 0x5808277B: failure_exit (m_translate.c:761)\r\n==352334==    by 0x580EDD27: vex_assert_fail (main_util.c:245)\r\n==352334==    by 0x5814C973: genSpill_ARM64 (host_arm64_defs.c:2829)\r\n==352334==    by 0x581435DB: spill_vreg (host_generic_reg_alloc3.c:338)\r\n==352334==    by 0x58144B3F: doRegisterAllocation_v3 (host_generic_reg_alloc3.c:1280)\r\n==352334==    by 0x580EC843: libvex_BackEnd (main_main.c:1133)\r\n==352334==    by 0x580EC843: LibVEX_Translate (main_main.c:1236)\r\n==352334==    by 0x58084F6F: vgPlain_translate (m_translate.c:1831)\r\n==352334==    by 0x5805664B: handle_chain_me (scheduler.c:1169)\r\n==352334==    by 0x58059227: vgPlain_scheduler (scheduler.c:1514)\r\n==352334==    by 0x580A861F: thread_wrapper (syswrap-linux.c:101)\r\n==352334==    by 0x580A861F: run_a_thread_NORETURN (syswrap-linux.c:154)\r\n==352334==    by 0xFFFFFFFFFFFFFFFF: ???\r\n\r\nsched status:\r\n  running_tid=1\r\n\r\nThread 1: status = VgTs_Runnable (lwpid 352334)\r\n==352334==    at 0x18ADC8: PQCLEAN_FALCON512_AARCH64_is_short (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x131F1F: do_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x124217: OQS_SIG_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x1231AB: main (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\nclient stack range: [0x1FFF000000 0x1FFF003FFF] client SP: 0x1FFF002040\r\nvalgrind stack range: [0x1002C18000 0x1002D17FFF] top usage: 19776 of 1048576\r\n```\r\n\r\n### Verbose Outputs\r\nAn output of the issue with the verbose flag alongside outputs for each affected Falcon variation can be found in the following text files:\r\n- [valgrind-massif-verbose.txt](https://github.com/open-quantum-safe/liboqs/files/15069215/valgrind-massif-verbose.txt)\r\n- [valgrind-falcon-outputs.txt](https://github.com/open-quantum-safe/liboqs/files/15069217/valgrind-falcon-outputs.txt)\r\n\r\n## Build Configurations\r\nThe error is persistent across various setups using differing build flags:\r\n\r\n### Default Setup\r\n**Build Commands:**\r\n```\r\n cmake -GNinja ..\r\n ninja && sudo ninja install\r\n ```\r\n\r\n **Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       7b6d9f3326295fc80ea0c9026f3dd9d57f8436de\r\nOpenSSL enabled:  Yes (OpenSSL 3.0.11 19 Sep 2023)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n### Custom Setup\r\n**Build Commands (Contained within the script, but all paths variables have been verified):**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_SPEED_USE_ARM_PMU=ON \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n\r\nninja && sudo ninja install\r\n```\r\n\r\n**Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n## Expected behaviour\r\nThe setup and configurations detailed in this bug report were also tested on a **Debian 12 x86 machine**, and the issue was not present. The environment that this setup, when executed on a Debian 12 x86 system, gives the following outputs:\r\n\r\n**Valgrind with Massif Output**\r\n```\r\n==55823== Massif, a heap profiler\r\n==55823== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==55823== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==55823== Command: ./test_sig_mem Falcon-512 2\r\n==55823==\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Linux-6.1.0-20-amd64\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              NI\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES AVX AVX2 BMI1 BMI2 PCLMULQDQ POPCNT SSE SSE2 SSE3\r\nverification\r\n```\r\n\r\n**Massif File after Passing to ms_print:**\r\n[x86-ms_print.txt](https://github.com/open-quantum-safe/liboqs/files/15069226/x86-ms_print.txt)\r\n\r\n\r\n*Build details for the x86 machine are detailed below*\r\n\r\n## Environment Details\r\nThe issue was tested on both Raspberry Pi 4 and 5 models with the following details:\r\n\r\n### Pi-4:\r\n- OS - Raspbian OS Lite 64bit (Debian 11 Bullseye)\r\n- Kernel Version - 6.1.21-v8+\r\n- Architecture - aarch64 \r\n- OpenSSL Version - OpenSSL 1.1.1w (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (10.2.1)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Pi-5:\r\n- OS - Raspbian OS Lite 64bit (Debian 12 Bookworm)\r\n- Kernel Version - 6.6.20+rpt-rpi-2712\r\n- Architecture - aarch64\r\n- OpenSSL Version - OpenSSL 3.0.11 (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Debian x86 Machine used to Verify Issue:\r\n- OS - Debian GNU/Linux 12 (bookworm)\r\n- Kernel Version - 6.1.0-20-amd64\r\n- Architecture - x86_64\r\n- OpenSSL Version - OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Liboqs Version - 0.10.0\r\n\r\n\r\n**Debian x86 Build Commands**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n```\r\n\r\n\r\n## Additional context\r\nI would be happy to provide any additional information or outputs for this issue and, if necessary, the current developing branch for the repository where this environment is set up and run. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2185957592","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1761#issuecomment-2185957592","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761","id":2185957592,"node_id":"IC_kwDOA-eq3c6CSxDY","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-24T08:51:19Z","updated_at":"2024-06-24T08:51:19Z","author_association":"MEMBER","body":"Well, I consider `massif` to be an integral part of `valgrind`, hence my comment. Sorry for the ambiguity.\r\n\r\n> The bug is not in ARM-optimized code.\r\n\r\nHow did you deduce this? The line `valgrind` died in seems to be https://github.com/open-quantum-safe/liboqs/blob/e3f05cbfba4552067e2c0de524c1049a864c5f2d/src/sig/falcon/pqclean_falcon-1024_aarch64/vrfy.c#L54\r\n\r\nAt first blush, this looks like a massive piece of ARM specific code (depending on where within this return function the error occurred), no? Thus, it could be a `valgrind` issue but also one of the code, no? Why for example does the report list an allocation of nearly 140MB on an embedded platform? Or an apparent offset overflow (>4096)? Why not ask the valgrind folks for their opinion?\r\n\r\nYou're the expert on this code of course and Raspberry Pi is not a platform supported by `liboqs`, so this is my last comment on the issue.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2185957592/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-24T08:51:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39556164119","type":"IssueCommentEvent","actor":{"id":7292002,"login":"planetf1","display_login":"planetf1","gravatar_id":"","url":"https://api.github.com/users/planetf1","avatar_url":"https://avatars.githubusercontent.com/u/7292002?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1708","id":2156247623,"node_id":"PR_kwDOA-eq3c5oBs3w","number":1708,"title":"Create scorecard.yml (OpenSSF)","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":31,"created_at":"2024-02-27T10:36:49Z","updated_at":"2024-06-24T09:53:17Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1708","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1708","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1708.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1708.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAdds a github action to run the OpenSSF scorecard tool, and posts results to security->code scanning\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1706\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\nThis is a new CI action. It's only effect is\r\n - small amount of resource to run the workflow\r\n - creates items under Security->code scanning, visible to those with 'write' access in the repo\r\n\r\nNo branch protection rules are being changed to require successful completion of this action\r\n \r\n No additional testing is required\r\n \r\n Example output is shown in the referenced issue\r\n \r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [NO] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [NO] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nAs per https://github.com/ossf/scorecard it's possible some additional permissions may be needed (depending on branch rotection setup).  These can be dealt with as a second iteration\r\n\r\nThis PR also does not attempt to address any findings from the scorecard scan. It's purely activating the tool so that we can review and act on those findings subsequently.\r\n\r\nDraft for\r\n - testing\r\n - minor changes/comments cleanup","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2186090725","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1708#issuecomment-2186090725","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708","id":2186090725,"node_id":"IC_kwDOA-eq3c6CTRjl","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"created_at":"2024-06-24T09:53:16Z","updated_at":"2024-06-24T09:53:16Z","author_association":"CONTRIBUTOR","body":"> Thanks for the documentation regarding version pinning.\r\n> \r\n> Good to know there's different tools that update these hashes. That in my mind begs the question what manual step is required (by committers as well as reviewers) to ascertain that the tool did the right thing/obtained a \"proper\" hash? Without this manual step, one could obviously simply run the tool \"blindly\" on the (original) \"requirements.in\" or (version comments in the) CI job .yml files, much like an automated preprocessing step that could be integrated to CI... Or is the recommendation to just check _whether_ the hashes change in a PR?\r\n\r\nThe reason for suggesting it's manual is that the author is then likely to be closely checking the action logs and output, plus be aware if any failures occur.\r\n\r\nThe exact hash could be searched for in github to match the version used.\r\n\r\nI've added a note about this in PROCEDURES.md\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2186090725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-24T09:53:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39570707500","type":"IssueCommentEvent","actor":{"id":7552310,"login":"geedo0","display_login":"geedo0","gravatar_id":"","url":"https://api.github.com/users/geedo0","avatar_url":"https://avatars.githubusercontent.com/u/7552310?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/135","id":1570324001,"node_id":"I_kwDOBsoLV85dmT4h","number":135,"title":"Migrate to OpenSSH 9.2","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-02-03T19:17:26Z","updated_at":"2024-06-24T17:14:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Migrate to the 9.x branch. Interestingly, hybrid PQC is now the *default* since 9.0.\r\n\r\nFrom the 9.0 [release notes](https://www.openssh.com/releasenotes.html):\r\n```\r\n* [ssh(1)](https://man.openbsd.org/ssh.1), [sshd(8)](https://man.openbsd.org/sshd.8): use the hybrid Streamlined NTRU Prime + x25519 key\r\n   exchange method by default (\"sntrup761x25519-sha512@openssh.com\").\r\n   The NTRU algorithm is believed to resist attacks enabled by future\r\n   quantum computers and is paired with the X25519 ECDH key exchange\r\n   (the previous default) as a backstop against any weaknesses in\r\n   NTRU Prime that may be discovered in the future. The combination\r\n   ensures that the hybrid exchange offers at least as good security\r\n   as the status quo.\r\n\r\n   We are making this change now (i.e. ahead of cryptographically-\r\n   relevant quantum computers) to prevent \"capture now, decrypt\r\n   later\" attacks where an adversary who can record and store SSH\r\n   session ciphertext would be able to decrypt it once a sufficiently\r\n   advanced quantum computer is available.\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2187042442","html_url":"https://github.com/open-quantum-safe/openssh/issues/135#issuecomment-2187042442","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","id":2187042442,"node_id":"IC_kwDOBsoLV86CW56K","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"created_at":"2024-06-24T17:14:16Z","updated_at":"2024-06-24T17:14:16Z","author_association":"NONE","body":"Can a maintainer create an `OQS-v9` branch based at the current tip so that I can cut a PR to merge into it? I think it makes sense to maintain the status quo for now since I expect the v9 branch to be broken until I fix all the merge issues. Longer term, I think it makes sense to move to maintaining a single `master` branch but let's allow the dust to settle first.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2187042442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-24T17:14:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39571063400","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/135","id":1570324001,"node_id":"I_kwDOBsoLV85dmT4h","number":135,"title":"Migrate to OpenSSH 9.2","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-02-03T19:17:26Z","updated_at":"2024-06-24T17:26:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Migrate to the 9.x branch. Interestingly, hybrid PQC is now the *default* since 9.0.\r\n\r\nFrom the 9.0 [release notes](https://www.openssh.com/releasenotes.html):\r\n```\r\n* [ssh(1)](https://man.openbsd.org/ssh.1), [sshd(8)](https://man.openbsd.org/sshd.8): use the hybrid Streamlined NTRU Prime + x25519 key\r\n   exchange method by default (\"sntrup761x25519-sha512@openssh.com\").\r\n   The NTRU algorithm is believed to resist attacks enabled by future\r\n   quantum computers and is paired with the X25519 ECDH key exchange\r\n   (the previous default) as a backstop against any weaknesses in\r\n   NTRU Prime that may be discovered in the future. The combination\r\n   ensures that the hybrid exchange offers at least as good security\r\n   as the status quo.\r\n\r\n   We are making this change now (i.e. ahead of cryptographically-\r\n   relevant quantum computers) to prevent \"capture now, decrypt\r\n   later\" attacks where an adversary who can record and store SSH\r\n   session ciphertext would be able to decrypt it once a sufficiently\r\n   advanced quantum computer is available.\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2187062891","html_url":"https://github.com/open-quantum-safe/openssh/issues/135#issuecomment-2187062891","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","id":2187062891,"node_id":"IC_kwDOBsoLV86CW-5r","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2024-06-24T17:26:41Z","updated_at":"2024-06-24T17:26:41Z","author_association":"NONE","body":"> Can a maintainer create an `OQS-v9` branch based at the current tip so that I can cut a PR to merge into it? \r\n\r\nhttps://github.com/open-quantum-safe/openssh/tree/OQS-v9","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2187062891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-24T17:26:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
