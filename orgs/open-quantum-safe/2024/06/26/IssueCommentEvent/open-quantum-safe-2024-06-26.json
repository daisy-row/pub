{"id":"39623382789","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272","id":2235695257,"node_id":"PR_kwDODP--n85sQGGk","number":272,"title":"Update test server build script: liboqs-0.10.1 & oqs-provider-0.6.1-rc1","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-04-10T14:07:12Z","updated_at":"2024-06-26T05:33:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/pulls/272","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272","diff_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272.diff","patch_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272.patch","merged_at":null},"body":"Update test server build script to use liboqs 0.10.0 & oqs-provider-0.6.0-rc1.\r\n\r\nResulting build is deployed at test.openquantumsafe.org and all tests with `testrun.sh` pass.\r\n\r\nCloses #271 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2190746544","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272#issuecomment-2190746544","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272","id":2190746544,"node_id":"IC_kwDODP--n86ClCOw","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-26T05:33:43Z","updated_at":"2024-06-26T05:33:43Z","author_association":"MEMBER","body":"Re-based in the absence of @bhess to get clean CI.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2190746544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-26T05:33:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39623517501","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272","id":2235695257,"node_id":"PR_kwDODP--n85sQGGk","number":272,"title":"Update test server build script: liboqs-0.10.1 & oqs-provider-0.6.1-rc1","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2024-04-10T14:07:12Z","updated_at":"2024-06-26T05:41:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/pulls/272","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272","diff_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272.diff","patch_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272.patch","merged_at":null},"body":"Update test server build script to use liboqs 0.10.0 & oqs-provider-0.6.0-rc1.\r\n\r\nResulting build is deployed at test.openquantumsafe.org and all tests with `testrun.sh` pass.\r\n\r\nCloses #271 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2190753593","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/272#issuecomment-2190753593","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/272","id":2190753593,"node_id":"IC_kwDODP--n86ClD85","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-26T05:41:01Z","updated_at":"2024-06-26T05:41:01Z","author_association":"MEMBER","body":"@bhess -- reminder regarding our merge convention: The author merges after enough approvals are available. I'm doing the merge now as I learned you're absent such as to get to a clean (CI) state before the project revamp your colleagues want to lead.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/2190753593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-26T05:41:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39623854635","type":"IssueCommentEvent","actor":{"id":108470890,"login":"thb-sb","display_login":"thb-sb","gravatar_id":"","url":"https://api.github.com/users/thb-sb","avatar_url":"https://avatars.githubusercontent.com/u/108470890?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/442","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/442/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/442/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/442/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/442","id":2373032691,"node_id":"PR_kwDOE_A9l85zhGLL","number":442,"title":"Fix #440: disable tests and examples using `BUILD_TESTING`.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"assignees":[{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2024-06-25T15:48:00Z","updated_at":"2024-06-26T05:58:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/442","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/442","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/442.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/442.patch","merged_at":null},"body":"Fix #440: disable tests and examples using `BUILD_TESTING`.\n\nBy providing cmake with `BUILD_TESTING=OFF`, no test or example will be built.\n\n`BUILD_TESTING` is `ON` by default, since we are using [`enable_testing`] along with `CTest`.\n\n\n[`enable_testing`]: https://cmake.org/cmake/help/latest/command/enable_testing.html\n\n\nSigned-off-by: thb-sb <thomas.bailleux@sandboxquantum.com>\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/442/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2190771259","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/442#issuecomment-2190771259","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/442","id":2190771259,"node_id":"IC_kwDOE_A9l86ClIQ7","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"created_at":"2024-06-26T05:58:06Z","updated_at":"2024-06-26T05:58:06Z","author_association":"MEMBER","body":"> Makes sense as-is, Thanks! Just wondering whether it may be even better to document explicitly that all `ctest` config vars (as all other `cmake` config options) drive the oqsprovider build (in [CONFIGURE.md](https://github.com/open-quantum-safe/oqs-provider/blob/main/CONFIGURE.md))? Please amend/merge at your discretion, @thb-sb\r\n\r\nMakes total sense!\r\n\r\nI've added an entry for `BUILD_TESTING` in  `CONFIGURE.md` in https://github.com/open-quantum-safe/oqs-provider/commit/ba13edc67354f2ccdbf5698dda4d39a215f25ec4 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2190771259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-26T05:58:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39631819574","type":"IssueCommentEvent","actor":{"id":64798108,"login":"bencemali","display_login":"bencemali","gravatar_id":"","url":"https://api.github.com/users/bencemali","avatar_url":"https://avatars.githubusercontent.com/u/64798108?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1802","id":2325884166,"node_id":"I_kwDOA-eq3c6Koi0G","number":1802,"title":"Recreate public key from private","user":{"login":"bencemali","id":64798108,"node_id":"MDQ6VXNlcjY0Nzk4MTA4","avatar_url":"https://avatars.githubusercontent.com/u/64798108?v=4","gravatar_id":"","url":"https://api.github.com/users/bencemali","html_url":"https://github.com/bencemali","followers_url":"https://api.github.com/users/bencemali/followers","following_url":"https://api.github.com/users/bencemali/following{/other_user}","gists_url":"https://api.github.com/users/bencemali/gists{/gist_id}","starred_url":"https://api.github.com/users/bencemali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bencemali/subscriptions","organizations_url":"https://api.github.com/users/bencemali/orgs","repos_url":"https://api.github.com/users/bencemali/repos","events_url":"https://api.github.com/users/bencemali/events{/privacy}","received_events_url":"https://api.github.com/users/bencemali/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2024-05-30T14:57:23Z","updated_at":"2024-06-26T10:14:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"For some PQ algorithms one can recreate the public key from only the private key, but oqs-provider still by default attaches the public key to the serialization of the private key, which can be turned off with the `NOPUBKEY_IN_PRIVKEY` macro. For example in case of Kyber/ML-KEM one can do a workaround roughly like this in oqs-provider's oqsx_key_op function:\r\n\r\n```\r\n            if (strcmp(key->tls_name, \"mlkem1024\") == 0) {\r\n                memcpy(key->pubkey, (char *)key->privkey + 1536,\r\n                       key->pubkeylen);\r\n            }\r\n```\r\n\r\nThe idea for this issue is that liboqs could provide a unified interface for recreating the public key from the private key, when it is possible. For example, a function like this could be added to kem.h in liboqs:\r\n\r\n`OQS_API OQS_STATUS OQS_KEM_recreate_pub_from_priv(const OQS_KEM *kem, uint8_t *secret_key, uint8_t *public_key);`\r\n\r\nAnd in the OQS_KEM structure, for each algorithm a new function could be registered:\r\n\r\n`OQS_STATUS (*recreate)(const uint8_t *secret_key, const uint8_t *public_key);`\r\n\r\nAdding this functionality could reduce serialized key sizes for some algorithms. This is a rough idea and I just want to ask for the opinions of the folks involved in oqs.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2191327428","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1802#issuecomment-2191327428","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802","id":2191327428,"node_id":"IC_kwDOA-eq3c6CnQDE","user":{"login":"bencemali","id":64798108,"node_id":"MDQ6VXNlcjY0Nzk4MTA4","avatar_url":"https://avatars.githubusercontent.com/u/64798108?v=4","gravatar_id":"","url":"https://api.github.com/users/bencemali","html_url":"https://github.com/bencemali","followers_url":"https://api.github.com/users/bencemali/followers","following_url":"https://api.github.com/users/bencemali/following{/other_user}","gists_url":"https://api.github.com/users/bencemali/gists{/gist_id}","starred_url":"https://api.github.com/users/bencemali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bencemali/subscriptions","organizations_url":"https://api.github.com/users/bencemali/orgs","repos_url":"https://api.github.com/users/bencemali/repos","events_url":"https://api.github.com/users/bencemali/events{/privacy}","received_events_url":"https://api.github.com/users/bencemali/received_events","type":"User","site_admin":false},"created_at":"2024-06-26T10:14:19Z","updated_at":"2024-06-26T10:14:19Z","author_association":"CONTRIBUTOR","body":"Hi! @baentsch maybe I'm missing something, but from our testing when NOPUBKEY_IN_PRIVKEY is set the ability to call encapsulate on a deserialized private MLKEM (also Kyber, maybe others too) key is lost and it's not just backwards compatibility that is violated. Somehow oqsprovider's encoding tests don't catch this, maybe it is known and intended. I think the average liboqs/oqsprovider user would expect that they can call encapsulate on a deserialized private key and thus I don't think NOPUBKEY_IN_PRIVKEY could be turned on by default at this stage. If public key recreation was added to oqsprovider's deserialization this problem would go away where it is possible, that is why I started this discussion.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2191327428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-26T10:14:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39639300148","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1802","id":2325884166,"node_id":"I_kwDOA-eq3c6Koi0G","number":1802,"title":"Recreate public key from private","user":{"login":"bencemali","id":64798108,"node_id":"MDQ6VXNlcjY0Nzk4MTA4","avatar_url":"https://avatars.githubusercontent.com/u/64798108?v=4","gravatar_id":"","url":"https://api.github.com/users/bencemali","html_url":"https://github.com/bencemali","followers_url":"https://api.github.com/users/bencemali/followers","following_url":"https://api.github.com/users/bencemali/following{/other_user}","gists_url":"https://api.github.com/users/bencemali/gists{/gist_id}","starred_url":"https://api.github.com/users/bencemali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bencemali/subscriptions","organizations_url":"https://api.github.com/users/bencemali/orgs","repos_url":"https://api.github.com/users/bencemali/repos","events_url":"https://api.github.com/users/bencemali/events{/privacy}","received_events_url":"https://api.github.com/users/bencemali/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2024-05-30T14:57:23Z","updated_at":"2024-06-26T13:54:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"For some PQ algorithms one can recreate the public key from only the private key, but oqs-provider still by default attaches the public key to the serialization of the private key, which can be turned off with the `NOPUBKEY_IN_PRIVKEY` macro. For example in case of Kyber/ML-KEM one can do a workaround roughly like this in oqs-provider's oqsx_key_op function:\r\n\r\n```\r\n            if (strcmp(key->tls_name, \"mlkem1024\") == 0) {\r\n                memcpy(key->pubkey, (char *)key->privkey + 1536,\r\n                       key->pubkeylen);\r\n            }\r\n```\r\n\r\nThe idea for this issue is that liboqs could provide a unified interface for recreating the public key from the private key, when it is possible. For example, a function like this could be added to kem.h in liboqs:\r\n\r\n`OQS_API OQS_STATUS OQS_KEM_recreate_pub_from_priv(const OQS_KEM *kem, uint8_t *secret_key, uint8_t *public_key);`\r\n\r\nAnd in the OQS_KEM structure, for each algorithm a new function could be registered:\r\n\r\n`OQS_STATUS (*recreate)(const uint8_t *secret_key, const uint8_t *public_key);`\r\n\r\nAdding this functionality could reduce serialized key sizes for some algorithms. This is a rough idea and I just want to ask for the opinions of the folks involved in oqs.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2191771406","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1802#issuecomment-2191771406","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802","id":2191771406,"node_id":"IC_kwDOA-eq3c6Co8cO","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-26T13:54:13Z","updated_at":"2024-06-26T13:54:13Z","author_association":"MEMBER","body":"> when NOPUBKEY_IN_PRIVKEY is set the ability to call encapsulate on a deserialized private MLKEM (also Kyber, maybe others too) key is lost \r\n> Somehow oqsprovider's encoding tests don't catch this, maybe it is known and intended.\r\n\r\nWell, I wouldn't call it necessarily \"intended\" but rather \"logical\" or \"consequential\" and surely known (if one cannot \"get\" a public key from a suitably extended private key representation). So, you're right stating that enabling this by default will cause problems: Recalling the thinking of the time when adding the \"NOPUBKEY_IN_PRIVKEY\" build option, it was that any entity activating this has another/separate way of maintaining (and getting access to if in need of) the public key. At no moment this flag was intended to enable (dynamic) public key re-creation (from private key material only), but just to reduce private key size: From the flag's documentation:\r\n\r\n> to omit explicitly serializing the public key in a privateKey structure\r\n\r\nHence no tests for this.\r\n\r\n> If public key recreation was added to oqsprovider's deserialization this problem would go away where it is possible, that is why I started this discussion.\r\n\r\nI agree: Public key material recreation from truly/purely private key material would be needed to enable this feature by default. I further think this should be a feature that `liboqs` would have to make available as `oqsprovider` strives to stay clear of any cryptographic operations: Such things should happen/be made available exclusively within (the OQS equivalent of `libcrypto`, namely) `liboqs` such as to keep \"sensitive crypto operations\" in one place -- and dynamic public key re-creation to me seems to qualify as such sensitive operation.\r\n\r\nAnd to answer @dstebila 's question\r\n\r\n> For that matter, does the provider interface allow for different serialization formats for the same keying material? \r\n\r\nNo. It assumes there is a (one!) key serialization standard that a crypto provider needs to implement. And AFAIK there is no such standard yet. Please correct me if I'm wrong, @bencemali .\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2191771406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-26T13:54:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39647079930","type":"IssueCommentEvent","actor":{"id":65964493,"login":"aniket-rulez","display_login":"aniket-rulez","gravatar_id":"","url":"https://api.github.com/users/aniket-rulez","avatar_url":"https://avatars.githubusercontent.com/u/65964493?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/438","id":2361983376,"node_id":"I_kwDOE_A9l86MyQGQ","number":438,"title":"Not able to decrypt certificate private key (generated using PQC algorithm)  ","user":{"login":"aniket-rulez","id":65964493,"node_id":"MDQ6VXNlcjY1OTY0NDkz","avatar_url":"https://avatars.githubusercontent.com/u/65964493?v=4","gravatar_id":"","url":"https://api.github.com/users/aniket-rulez","html_url":"https://github.com/aniket-rulez","followers_url":"https://api.github.com/users/aniket-rulez/followers","following_url":"https://api.github.com/users/aniket-rulez/following{/other_user}","gists_url":"https://api.github.com/users/aniket-rulez/gists{/gist_id}","starred_url":"https://api.github.com/users/aniket-rulez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aniket-rulez/subscriptions","organizations_url":"https://api.github.com/users/aniket-rulez/orgs","repos_url":"https://api.github.com/users/aniket-rulez/repos","events_url":"https://api.github.com/users/aniket-rulez/events{/privacy}","received_events_url":"https://api.github.com/users/aniket-rulez/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-06-19T10:27:45Z","updated_at":"2024-06-26T17:47:17Z","closed_at":"2024-06-26T17:47:17Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, we have a requirement to support PQC algorithms for certificate generation and the current code is executing the following commands to decrypt the private key:\r\n\r\n`openssl rsa -in <encfile> -out <plainfile>`\r\n`openssl ec -in <encfile> -out <plainfile>`\r\n\r\nAlso, later, for pkcs12 format, the keys are being sanitised using the below commands:\r\n\r\n`openssl rsa -in <plainfile> -out <encfile> -aes256`\r\n`openssl ec -in <plainfile> -out <encfile> -aes256`\r\n\r\nI tried to do something similar for PQC algorithms but options only supported rsa and ec, so I wanted to check if there is something similar available for PQC algorithms also to perform the above operations. \r\n\r\nThanks in advance!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2192293877","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/438#issuecomment-2192293877","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438","id":2192293877,"node_id":"IC_kwDOE_A9l86Cq7_1","user":{"login":"aniket-rulez","id":65964493,"node_id":"MDQ6VXNlcjY1OTY0NDkz","avatar_url":"https://avatars.githubusercontent.com/u/65964493?v=4","gravatar_id":"","url":"https://api.github.com/users/aniket-rulez","html_url":"https://github.com/aniket-rulez","followers_url":"https://api.github.com/users/aniket-rulez/followers","following_url":"https://api.github.com/users/aniket-rulez/following{/other_user}","gists_url":"https://api.github.com/users/aniket-rulez/gists{/gist_id}","starred_url":"https://api.github.com/users/aniket-rulez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aniket-rulez/subscriptions","organizations_url":"https://api.github.com/users/aniket-rulez/orgs","repos_url":"https://api.github.com/users/aniket-rulez/repos","events_url":"https://api.github.com/users/aniket-rulez/events{/privacy}","received_events_url":"https://api.github.com/users/aniket-rulez/received_events","type":"User","site_admin":false},"created_at":"2024-06-26T17:47:17Z","updated_at":"2024-06-26T17:47:17Z","author_association":"NONE","body":"This works, thanks for the help!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2192293877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-26T17:47:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
