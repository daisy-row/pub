{"id":"39587433364","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/events","html_url":"https://github.com/open-quantum-safe/openssh/pull/159","id":2370847093,"node_id":"PR_kwDOBsoLV85zZmoH","number":159,"title":" Upgrade to OpenSSH v9.7 ","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-06-24T18:26:53Z","updated_at":"2024-06-25T07:00:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/pulls/159","html_url":"https://github.com/open-quantum-safe/openssh/pull/159","diff_url":"https://github.com/open-quantum-safe/openssh/pull/159.diff","patch_url":"https://github.com/open-quantum-safe/openssh/pull/159.patch","merged_at":null},"body":"This is a first pass at resolving all of the merge conflicts between the current tip of `OQS-v8` and the `V_9_7_P1` tag in upstream OpenSSH.\r\n\r\nThe merge strategy here differs a bit from previous upstream merges (e.g. PR https://github.com/open-quantum-safe/openssh/pull/106 and PR https://github.com/open-quantum-safe/openssh/pull/121) where all of the changes were squashed and incorporated into a single commit and applied to the trunk. This is a more typical `git merge` in that we retain both parents and their commit histories. This will make future merges more straightforward by allowing git to notice the shared history and avoid marking these merged commits as conflicting changes. For the maintainers, make sure to merge using the default \"Merge Pull Request\" button. I tested this on my own fork and seems to be the only one of Github's options that preserves the history.\r\n\r\nHere's the git-foo used to script the merge and handle the false positives from the \"squash merges\".\r\n\r\n```\r\noqs_tip=OQS-v8\r\nopenssh_release=V_9_7_P1\r\ngit merge ${openssh_release}\r\nbase=`git merge-base ${oqs_tip} ${openssh_release}`\r\nfor f in `git diff --name-only --diff-filter=U`; do\r\n  # This fetches all of the commits which touched the file since the merge base\r\n  # Filter out the two commits for the 8.6 and 8.9 merges since they are technically already incorporated\r\n  conflicts=$(git log --oneline ${base}..${oqs_tip} -- $f | ggrep -v -P '(1f58edd59|f058d3168)')\r\n  # Check if we have no OQS-OpenSSH conflicts specific\r\n  if [[ -z ${conflicts} ]]; then\r\n    echo \"$f has no conflicts\"\r\n    # Resolve the conflict by taking the upstream version of the file\r\n    git checkout --theirs -- $f\r\n    git add $f\r\n  else\r\n    echo \"$f has conflicts\"\r\n    echo ${conflicts}\r\n    # Send all of the OQS diffs to a file to help resolve the merge conflicts\r\n    for c in `echo ${conflicts} | cut -d ' ' -f1`; do\r\n      git show $c -- $f >> ~/conflicting_diffs.t\r\n    done\r\n  fi\r\ndone\r\n```\r\n\r\nFor the remaining conflicts, I went through each file one-by-one with this pseudo-algorithm:\r\n1. Incorporate all changes from both sides that have no direct conflicts.\r\n2. Look for OQS specific changes with conflicts and apply them as-appropriate.\r\n3. Take the upstream version for any remaining conflicts.\r\n\r\nCallouts from this process:\r\n- `sshkey.c` and `sshkey.h` experienced a major refactor upstream that impacted how OQS modified these files. I simply took the upstream versions for now and plan to address the conflict properly in a separate PR.\r\n- Kept `README.md` as-is from OQS and applied changes to `README.original.md`.\r\n- Took `.depend` from upstream, will update in a subsequent commit.\r\n- `version.h` retained the 2022-01 datestamp from OQS, will update this when we're ready to stage a release.\r\n- In `ssh-keygen.c` the `OQS_TEMPLATE_FRAGMENT_PRINT_RESOURCE_RECORDS_START` template changed to accept two additional arguments `opts` and `nopts`. I added these in manually for now.\r\n\r\nTo self-check I did the following:\r\n- Test build by running `build_openssh.sh` and finding compiler errors.\r\n- Run `git diff HEAD V_9_7_P1` to highlight all the changes and assert that all changes were introduced by OQS alone.\r\n\r\nThis last process flagged a handful of issues. Mostly around duplicated code blocks from taking them from previous upstream merges and this current merge and git not noticing it. With that out of the way, I'm reasonably confident that this PR is pretty close to upstream v9.7 with only the changes from OQS applied to it.\r\n\r\nSo after all that, what's working so far? `build_openssh.sh` will build the project but fail to install with some error about unknown key types. The failure I had locally is the same one reported by the CI job.\r\n\r\nWhat's next?\r\n- Properly handle the merge conflicts in `sshkey.(c|h)`.\r\n- Regenerate `.depend`.\r\n- Fix the impacted OQS templates and regenerate the source.\r\n- Cut a new `OQS-v9` branch and update `version.h`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2188132425","html_url":"https://github.com/open-quantum-safe/openssh/pull/159#issuecomment-2188132425","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159","id":2188132425,"node_id":"IC_kwDOBsoLV86CbEBJ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-25T07:00:48Z","updated_at":"2024-06-25T07:00:48Z","author_association":"MEMBER","body":"Thanks very much for your work and particularly the explanations, @geedo0 ! So do you indeed prefer to merge this first to the new branch before all CI checks turn green? That feels not quite right, but would surely create a clean git log (upstream merge in this PR, getting OQS integration to work again in the next one), so fine with me unless someone objects.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2188132425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-25T07:00:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39600331795","type":"IssueCommentEvent","actor":{"id":7552310,"login":"geedo0","display_login":"geedo0","gravatar_id":"","url":"https://api.github.com/users/geedo0","avatar_url":"https://avatars.githubusercontent.com/u/7552310?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/events","html_url":"https://github.com/open-quantum-safe/openssh/pull/159","id":2370847093,"node_id":"PR_kwDOBsoLV85zZmoH","number":159,"title":" Upgrade to OpenSSH v9.7 ","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-06-24T18:26:53Z","updated_at":"2024-06-25T13:22:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/pulls/159","html_url":"https://github.com/open-quantum-safe/openssh/pull/159","diff_url":"https://github.com/open-quantum-safe/openssh/pull/159.diff","patch_url":"https://github.com/open-quantum-safe/openssh/pull/159.patch","merged_at":null},"body":"This is a first pass at resolving all of the merge conflicts between the current tip of `OQS-v8` and the `V_9_7_P1` tag in upstream OpenSSH.\r\n\r\nThe merge strategy here differs a bit from previous upstream merges (e.g. PR https://github.com/open-quantum-safe/openssh/pull/106 and PR https://github.com/open-quantum-safe/openssh/pull/121) where all of the changes were squashed and incorporated into a single commit and applied to the trunk. This is a more typical `git merge` in that we retain both parents and their commit histories. This will make future merges more straightforward by allowing git to notice the shared history and avoid marking these merged commits as conflicting changes. For the maintainers, make sure to merge using the default \"Merge Pull Request\" button. I tested this on my own fork and seems to be the only one of Github's options that preserves the history.\r\n\r\nHere's the git-foo used to script the merge and handle the false positives from the \"squash merges\".\r\n\r\n```\r\noqs_tip=OQS-v8\r\nopenssh_release=V_9_7_P1\r\ngit merge ${openssh_release}\r\nbase=`git merge-base ${oqs_tip} ${openssh_release}`\r\nfor f in `git diff --name-only --diff-filter=U`; do\r\n  # This fetches all of the commits which touched the file since the merge base\r\n  # Filter out the two commits for the 8.6 and 8.9 merges since they are technically already incorporated\r\n  conflicts=$(git log --oneline ${base}..${oqs_tip} -- $f | ggrep -v -P '(1f58edd59|f058d3168)')\r\n  # Check if we have no OQS-OpenSSH conflicts specific\r\n  if [[ -z ${conflicts} ]]; then\r\n    echo \"$f has no conflicts\"\r\n    # Resolve the conflict by taking the upstream version of the file\r\n    git checkout --theirs -- $f\r\n    git add $f\r\n  else\r\n    echo \"$f has conflicts\"\r\n    echo ${conflicts}\r\n    # Send all of the OQS diffs to a file to help resolve the merge conflicts\r\n    for c in `echo ${conflicts} | cut -d ' ' -f1`; do\r\n      git show $c -- $f >> ~/conflicting_diffs.t\r\n    done\r\n  fi\r\ndone\r\n```\r\n\r\nFor the remaining conflicts, I went through each file one-by-one with this pseudo-algorithm:\r\n1. Incorporate all changes from both sides that have no direct conflicts.\r\n2. Look for OQS specific changes with conflicts and apply them as-appropriate.\r\n3. Take the upstream version for any remaining conflicts.\r\n\r\nCallouts from this process:\r\n- `sshkey.c` and `sshkey.h` experienced a major refactor upstream that impacted how OQS modified these files. I simply took the upstream versions for now and plan to address the conflict properly in a separate PR.\r\n- Kept `README.md` as-is from OQS and applied changes to `README.original.md`.\r\n- Took `.depend` from upstream, will update in a subsequent commit.\r\n- `version.h` retained the 2022-01 datestamp from OQS, will update this when we're ready to stage a release.\r\n- In `ssh-keygen.c` the `OQS_TEMPLATE_FRAGMENT_PRINT_RESOURCE_RECORDS_START` template changed to accept two additional arguments `opts` and `nopts`. I added these in manually for now.\r\n\r\nTo self-check I did the following:\r\n- Test build by running `build_openssh.sh` and finding compiler errors.\r\n- Run `git diff HEAD V_9_7_P1` to highlight all the changes and assert that all changes were introduced by OQS alone.\r\n\r\nThis last process flagged a handful of issues. Mostly around duplicated code blocks from taking them from previous upstream merges and this current merge and git not noticing it. With that out of the way, I'm reasonably confident that this PR is pretty close to upstream v9.7 with only the changes from OQS applied to it.\r\n\r\nSo after all that, what's working so far? `build_openssh.sh` will build the project but fail to install with some error about unknown key types. The failure I had locally is the same one reported by the CI job.\r\n\r\nWhat's next?\r\n- Properly handle the merge conflicts in `sshkey.(c|h)`.\r\n- Regenerate `.depend`.\r\n- Fix the impacted OQS templates and regenerate the source.\r\n- Cut a new `OQS-v9` branch and update `version.h`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2188957569","html_url":"https://github.com/open-quantum-safe/openssh/pull/159#issuecomment-2188957569","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/159","id":2188957569,"node_id":"IC_kwDOBsoLV86CeNeB","user":{"login":"geedo0","id":7552310,"node_id":"MDQ6VXNlcjc1NTIzMTA=","avatar_url":"https://avatars.githubusercontent.com/u/7552310?v=4","gravatar_id":"","url":"https://api.github.com/users/geedo0","html_url":"https://github.com/geedo0","followers_url":"https://api.github.com/users/geedo0/followers","following_url":"https://api.github.com/users/geedo0/following{/other_user}","gists_url":"https://api.github.com/users/geedo0/gists{/gist_id}","starred_url":"https://api.github.com/users/geedo0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geedo0/subscriptions","organizations_url":"https://api.github.com/users/geedo0/orgs","repos_url":"https://api.github.com/users/geedo0/repos","events_url":"https://api.github.com/users/geedo0/events{/privacy}","received_events_url":"https://api.github.com/users/geedo0/received_events","type":"User","site_admin":false},"created_at":"2024-06-25T13:22:50Z","updated_at":"2024-06-25T13:22:50Z","author_association":"NONE","body":"> So do you indeed prefer to merge this first to the new branch before all CI checks turn green?\r\n\r\nYes, I think it's okay since it's going into the new `OQS-v9` branch instead of the stable/working `OQS-v8` branch. This way, we can have more targeted PRs that folks can actually scrutinize instead of this 30k LOC behemoth of a PR.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/2188957569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-25T13:22:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39604707800","type":"IssueCommentEvent","actor":{"id":1358071,"login":"maroueneboubakri","display_login":"maroueneboubakri","gravatar_id":"","url":"https://api.github.com/users/maroueneboubakri","avatar_url":"https://avatars.githubusercontent.com/u/1358071?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/439","id":2372906372,"node_id":"I_kwDOE_A9l86Nb62E","number":439,"title":"Target install does nothing with static oqsprovider.a library ","user":{"login":"maroueneboubakri","id":1358071,"node_id":"MDQ6VXNlcjEzNTgwNzE=","avatar_url":"https://avatars.githubusercontent.com/u/1358071?v=4","gravatar_id":"","url":"https://api.github.com/users/maroueneboubakri","html_url":"https://github.com/maroueneboubakri","followers_url":"https://api.github.com/users/maroueneboubakri/followers","following_url":"https://api.github.com/users/maroueneboubakri/following{/other_user}","gists_url":"https://api.github.com/users/maroueneboubakri/gists{/gist_id}","starred_url":"https://api.github.com/users/maroueneboubakri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maroueneboubakri/subscriptions","organizations_url":"https://api.github.com/users/maroueneboubakri/orgs","repos_url":"https://api.github.com/users/maroueneboubakri/repos","events_url":"https://api.github.com/users/maroueneboubakri/events{/privacy}","received_events_url":"https://api.github.com/users/maroueneboubakri/received_events","type":"User","site_admin":false},"labels":[{"id":2701983051,"node_id":"MDU6TGFiZWwyNzAxOTgzMDUx","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"assignees":[{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2024-06-25T14:51:47Z","updated_at":"2024-06-25T15:14:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nThe provider could be used as standalone library to be statically linked with a binary. Therefore, it makes sense that `cmake --install` or `cmake --build . --target install` installs the static library into `lib` folder. While  nothing happens when those are invoked.\r\n\r\n```\r\n-- Install configuration: \"\"\r\n```\r\n\r\nKindly consider this use case.\r\n\r\nBr\r\nMaro","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2189230067","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/439#issuecomment-2189230067","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439","id":2189230067,"node_id":"IC_kwDOE_A9l86CfP_z","user":{"login":"maroueneboubakri","id":1358071,"node_id":"MDQ6VXNlcjEzNTgwNzE=","avatar_url":"https://avatars.githubusercontent.com/u/1358071?v=4","gravatar_id":"","url":"https://api.github.com/users/maroueneboubakri","html_url":"https://github.com/maroueneboubakri","followers_url":"https://api.github.com/users/maroueneboubakri/followers","following_url":"https://api.github.com/users/maroueneboubakri/following{/other_user}","gists_url":"https://api.github.com/users/maroueneboubakri/gists{/gist_id}","starred_url":"https://api.github.com/users/maroueneboubakri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maroueneboubakri/subscriptions","organizations_url":"https://api.github.com/users/maroueneboubakri/orgs","repos_url":"https://api.github.com/users/maroueneboubakri/repos","events_url":"https://api.github.com/users/maroueneboubakri/events{/privacy}","received_events_url":"https://api.github.com/users/maroueneboubakri/received_events","type":"User","site_admin":false},"created_at":"2024-06-25T15:14:18Z","updated_at":"2024-06-25T15:14:18Z","author_association":"NONE","body":"Also kindly keep consider naming `liboqsprovider.a` for static library to ease linking against it with gcc ` -loqsprovider` instead of providing path to to `oqsprovider.a`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2189230067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-25T15:14:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39605632604","type":"IssueCommentEvent","actor":{"id":108470890,"login":"thb-sb","display_login":"thb-sb","gravatar_id":"","url":"https://api.github.com/users/thb-sb","avatar_url":"https://avatars.githubusercontent.com/u/108470890?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/439","id":2372906372,"node_id":"I_kwDOE_A9l86Nb62E","number":439,"title":"Target install does nothing with static oqsprovider.a library ","user":{"login":"maroueneboubakri","id":1358071,"node_id":"MDQ6VXNlcjEzNTgwNzE=","avatar_url":"https://avatars.githubusercontent.com/u/1358071?v=4","gravatar_id":"","url":"https://api.github.com/users/maroueneboubakri","html_url":"https://github.com/maroueneboubakri","followers_url":"https://api.github.com/users/maroueneboubakri/followers","following_url":"https://api.github.com/users/maroueneboubakri/following{/other_user}","gists_url":"https://api.github.com/users/maroueneboubakri/gists{/gist_id}","starred_url":"https://api.github.com/users/maroueneboubakri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maroueneboubakri/subscriptions","organizations_url":"https://api.github.com/users/maroueneboubakri/orgs","repos_url":"https://api.github.com/users/maroueneboubakri/repos","events_url":"https://api.github.com/users/maroueneboubakri/events{/privacy}","received_events_url":"https://api.github.com/users/maroueneboubakri/received_events","type":"User","site_admin":false},"labels":[{"id":2701983051,"node_id":"MDU6TGFiZWwyNzAxOTgzMDUx","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"assignees":[{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2024-06-25T14:51:47Z","updated_at":"2024-06-25T15:40:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nThe provider could be used as standalone library to be statically linked with a binary. Therefore, it makes sense that `cmake --install` or `cmake --build . --target install` installs the static library into `lib` folder. While  nothing happens when those are invoked.\r\n\r\n```\r\n-- Install configuration: \"\"\r\n```\r\n\r\nKindly consider this use case.\r\n\r\nBr\r\nMaro","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2189294684","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/439#issuecomment-2189294684","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/439","id":2189294684,"node_id":"IC_kwDOE_A9l86Cffxc","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"created_at":"2024-06-25T15:40:06Z","updated_at":"2024-06-25T15:40:06Z","author_association":"MEMBER","body":"Hi @maroueneboubakri, thank you for raising that issue.\r\n\r\nActually, you should be able to get your `oqsprovider.a` installed under your `${CMAKE_INSTALL_PREFIX}` by using `Debug` or `Release` build type:\r\n\r\nhttps://github.com/open-quantum-safe/oqs-provider/blob/bfaf29819e8e7679eb7b440c20312449d311e86a/oqsprov/CMakeLists.txt#L89-L92\r\n\r\nWith an empty `${CMAKE_BUILD_TYPE}` it installs nothing though.\r\n\r\nI fixed this odd behavior, and I renamed `oqsprovider.a` to `liboqsprovider.a` (only if you build it statically) in https://github.com/open-quantum-safe/oqs-provider/pull/441.\r\n\r\nI also added a CI test for it.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2189294684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-25T15:40:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39607990107","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/438","id":2361983376,"node_id":"I_kwDOE_A9l86MyQGQ","number":438,"title":"Not able to decrypt certificate private key (generated using PQC algorithm)  ","user":{"login":"aniket-rulez","id":65964493,"node_id":"MDQ6VXNlcjY1OTY0NDkz","avatar_url":"https://avatars.githubusercontent.com/u/65964493?v=4","gravatar_id":"","url":"https://api.github.com/users/aniket-rulez","html_url":"https://github.com/aniket-rulez","followers_url":"https://api.github.com/users/aniket-rulez/followers","following_url":"https://api.github.com/users/aniket-rulez/following{/other_user}","gists_url":"https://api.github.com/users/aniket-rulez/gists{/gist_id}","starred_url":"https://api.github.com/users/aniket-rulez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aniket-rulez/subscriptions","organizations_url":"https://api.github.com/users/aniket-rulez/orgs","repos_url":"https://api.github.com/users/aniket-rulez/repos","events_url":"https://api.github.com/users/aniket-rulez/events{/privacy}","received_events_url":"https://api.github.com/users/aniket-rulez/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-06-19T10:27:45Z","updated_at":"2024-06-25T16:54:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, we have a requirement to support PQC algorithms for certificate generation and the current code is executing the following commands to decrypt the private key:\r\n\r\n`openssl rsa -in <encfile> -out <plainfile>`\r\n`openssl ec -in <encfile> -out <plainfile>`\r\n\r\nAlso, later, for pkcs12 format, the keys are being sanitised using the below commands:\r\n\r\n`openssl rsa -in <plainfile> -out <encfile> -aes256`\r\n`openssl ec -in <plainfile> -out <encfile> -aes256`\r\n\r\nI tried to do something similar for PQC algorithms but options only supported rsa and ec, so I wanted to check if there is something similar available for PQC algorithms also to perform the above operations. \r\n\r\nThanks in advance!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2189462484","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/438#issuecomment-2189462484","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/438","id":2189462484,"node_id":"IC_kwDOE_A9l86CgIvU","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-25T16:54:52Z","updated_at":"2024-06-25T16:54:52Z","author_association":"MEMBER","body":"Did you already try out the [openssl pkey command](https://www.openssl.org/docs/manmaster/man1/openssl-pkey.html) as per the `openssl rsa` command documentation\r\n\r\n> The [openssl-pkey(1)](https://www.openssl.org/docs/manmaster/man1/openssl-pkey.html) command is capable of performing all the operations this command can, as well as supporting other public key types.\r\n\r\n?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2189462484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-25T16:54:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39615351043","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1761","id":2257602107,"node_id":"I_kwDOA-eq3c6GkEY7","number":1761,"title":"Valgrind Massif Tool Breaks During Verify Operation of Falcon Algorithms on Raspberry Pi","user":{"login":"crt26","id":63823484,"node_id":"MDQ6VXNlcjYzODIzNDg0","avatar_url":"https://avatars.githubusercontent.com/u/63823484?v=4","gravatar_id":"","url":"https://api.github.com/users/crt26","html_url":"https://github.com/crt26","followers_url":"https://api.github.com/users/crt26/followers","following_url":"https://api.github.com/users/crt26/following{/other_user}","gists_url":"https://api.github.com/users/crt26/gists{/gist_id}","starred_url":"https://api.github.com/users/crt26/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crt26/subscriptions","organizations_url":"https://api.github.com/users/crt26/orgs","repos_url":"https://api.github.com/users/crt26/repos","events_url":"https://api.github.com/users/crt26/events{/privacy}","received_events_url":"https://api.github.com/users/crt26/received_events","type":"User","site_admin":false},"labels":[{"id":423520884,"node_id":"MDU6TGFiZWw0MjM1MjA4ODQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"open","locked":false,"assignee":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"assignees":[{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2024-04-22T23:01:53Z","updated_at":"2024-06-25T21:31:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Issue Description\r\n\r\nWhen using the Valgrind memory profiler (**version - 3.19.0**) with the Massif tool to gain information on the maxHeap and maxStack for an algorithm/operation combination, any Falcon algorithm variation with the verify operation will cause a break in Valgrind and ***produces the error below***. \r\n\r\n**Main Error:**\r\n```\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n```\r\n\r\nThe functions related to the issues according to the [Valgrind Outputs](#valgrind-with-massif-tool-error-full) are:\r\n\r\n- PQCLEAN_FALCON512_AARCH64_is_short*\r\n- do_verify \r\n- OQS_SIG_verify\r\n\r\n*This comes from the [example output given](#valgrind-with-massif-tool-error-full), in the [verbose output files](#verbose-outputs) the functions with issues for the other Falcon variations are detailed.\r\n\r\nThis issue is persistent across Raspberry Pi 4 and 5 models and various build configurations. When using the test_sig_mem script by itself, the verification completes without issue. This is also the case when using the Valgrind profiler by itself without Massif. Furthermore, the issue is the same regardless if the ARM PMU is enabled or disabled.\r\n\r\n### Standard test_sig_mem Verify Output\r\n\r\n**Command:**\r\n```\r\n./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output**\r\n```\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n```\r\n\r\n### Valgrind Output without Massif\r\n**Command:**\r\n```\r\nvalgrind ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352773== Memcheck, a memory error detector\r\n==352773== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.\r\n==352773== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352773== Command: ./test_sig_mem Falcon-512 2\r\n==352773==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n==352773==\r\n==352773== HEAP SUMMARY:\r\n==352773==     in use at exit: 0 bytes in 0 blocks\r\n==352773==   total heap usage: 15 allocs, 15 frees, 22,622 bytes allocated\r\n==352773==\r\n==352773== All heap blocks were freed -- no leaks are possible\r\n==352773==\r\n==352773== For lists of detected and suppressed errors, rerun with: -s\r\n==352773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\n```\r\n\r\n### Valgrind with Massif Tool Error Full\r\n**Command:**\r\n```\r\nvalgrind --tool=massif --stacks=yes ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352334== Massif, a heap profiler\r\n==352334== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==352334== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352334== Command: ./test_sig_mem Falcon-512 2\r\n==352334==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n\r\nhost stacktrace:\r\n==352334==    at 0x58009114: show_sched_status_wrk (m_libcassert.c:406)\r\n==352334==    by 0x58009263: report_and_quit (m_libcassert.c:477)\r\n==352334==    by 0x5800949B: panic (m_libcassert.c:553)\r\n==352334==    by 0x5800949B: vgPlain_core_panic_at (m_libcassert.c:558)\r\n==352334==    by 0x580094BF: vgPlain_core_panic (m_libcassert.c:563)\r\n==352334==    by 0x5808277B: failure_exit (m_translate.c:761)\r\n==352334==    by 0x580EDD27: vex_assert_fail (main_util.c:245)\r\n==352334==    by 0x5814C973: genSpill_ARM64 (host_arm64_defs.c:2829)\r\n==352334==    by 0x581435DB: spill_vreg (host_generic_reg_alloc3.c:338)\r\n==352334==    by 0x58144B3F: doRegisterAllocation_v3 (host_generic_reg_alloc3.c:1280)\r\n==352334==    by 0x580EC843: libvex_BackEnd (main_main.c:1133)\r\n==352334==    by 0x580EC843: LibVEX_Translate (main_main.c:1236)\r\n==352334==    by 0x58084F6F: vgPlain_translate (m_translate.c:1831)\r\n==352334==    by 0x5805664B: handle_chain_me (scheduler.c:1169)\r\n==352334==    by 0x58059227: vgPlain_scheduler (scheduler.c:1514)\r\n==352334==    by 0x580A861F: thread_wrapper (syswrap-linux.c:101)\r\n==352334==    by 0x580A861F: run_a_thread_NORETURN (syswrap-linux.c:154)\r\n==352334==    by 0xFFFFFFFFFFFFFFFF: ???\r\n\r\nsched status:\r\n  running_tid=1\r\n\r\nThread 1: status = VgTs_Runnable (lwpid 352334)\r\n==352334==    at 0x18ADC8: PQCLEAN_FALCON512_AARCH64_is_short (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x131F1F: do_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x124217: OQS_SIG_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x1231AB: main (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\nclient stack range: [0x1FFF000000 0x1FFF003FFF] client SP: 0x1FFF002040\r\nvalgrind stack range: [0x1002C18000 0x1002D17FFF] top usage: 19776 of 1048576\r\n```\r\n\r\n### Verbose Outputs\r\nAn output of the issue with the verbose flag alongside outputs for each affected Falcon variation can be found in the following text files:\r\n- [valgrind-massif-verbose.txt](https://github.com/open-quantum-safe/liboqs/files/15069215/valgrind-massif-verbose.txt)\r\n- [valgrind-falcon-outputs.txt](https://github.com/open-quantum-safe/liboqs/files/15069217/valgrind-falcon-outputs.txt)\r\n\r\n## Build Configurations\r\nThe error is persistent across various setups using differing build flags:\r\n\r\n### Default Setup\r\n**Build Commands:**\r\n```\r\n cmake -GNinja ..\r\n ninja && sudo ninja install\r\n ```\r\n\r\n **Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       7b6d9f3326295fc80ea0c9026f3dd9d57f8436de\r\nOpenSSL enabled:  Yes (OpenSSL 3.0.11 19 Sep 2023)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n### Custom Setup\r\n**Build Commands (Contained within the script, but all paths variables have been verified):**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_SPEED_USE_ARM_PMU=ON \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n\r\nninja && sudo ninja install\r\n```\r\n\r\n**Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n## Expected behaviour\r\nThe setup and configurations detailed in this bug report were also tested on a **Debian 12 x86 machine**, and the issue was not present. The environment that this setup, when executed on a Debian 12 x86 system, gives the following outputs:\r\n\r\n**Valgrind with Massif Output**\r\n```\r\n==55823== Massif, a heap profiler\r\n==55823== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==55823== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==55823== Command: ./test_sig_mem Falcon-512 2\r\n==55823==\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Linux-6.1.0-20-amd64\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              NI\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES AVX AVX2 BMI1 BMI2 PCLMULQDQ POPCNT SSE SSE2 SSE3\r\nverification\r\n```\r\n\r\n**Massif File after Passing to ms_print:**\r\n[x86-ms_print.txt](https://github.com/open-quantum-safe/liboqs/files/15069226/x86-ms_print.txt)\r\n\r\n\r\n*Build details for the x86 machine are detailed below*\r\n\r\n## Environment Details\r\nThe issue was tested on both Raspberry Pi 4 and 5 models with the following details:\r\n\r\n### Pi-4:\r\n- OS - Raspbian OS Lite 64bit (Debian 11 Bullseye)\r\n- Kernel Version - 6.1.21-v8+\r\n- Architecture - aarch64 \r\n- OpenSSL Version - OpenSSL 1.1.1w (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (10.2.1)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Pi-5:\r\n- OS - Raspbian OS Lite 64bit (Debian 12 Bookworm)\r\n- Kernel Version - 6.6.20+rpt-rpi-2712\r\n- Architecture - aarch64\r\n- OpenSSL Version - OpenSSL 3.0.11 (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Debian x86 Machine used to Verify Issue:\r\n- OS - Debian GNU/Linux 12 (bookworm)\r\n- Kernel Version - 6.1.0-20-amd64\r\n- Architecture - x86_64\r\n- OpenSSL Version - OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Liboqs Version - 0.10.0\r\n\r\n\r\n**Debian x86 Build Commands**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n```\r\n\r\n\r\n## Additional context\r\nI would be happy to provide any additional information or outputs for this issue and, if necessary, the current developing branch for the repository where this environment is set up and run. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2190004631","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1761#issuecomment-2190004631","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761","id":2190004631,"node_id":"IC_kwDOA-eq3c6CiNGX","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-06-25T21:31:39Z","updated_at":"2024-06-25T21:31:39Z","author_association":"COLLABORATOR","body":"Oh yeah, I didn't notice \"139,470,880\" bytes numbers (~140 Mb).  My Falcon ARM never uses such large memory. \r\nI have no idea where does the number come from. My guess is that `massif` emulates NEON instructions and at some point its buffer exploded. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2190004631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-25T21:31:40Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
