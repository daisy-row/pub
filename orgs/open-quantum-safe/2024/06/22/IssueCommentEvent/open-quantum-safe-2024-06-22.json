{"id":"39525963485","type":"IssueCommentEvent","actor":{"id":466142,"login":"ryjones","display_login":"ryjones","gravatar_id":"","url":"https://api.github.com/users/ryjones","avatar_url":"https://avatars.githubusercontent.com/u/466142?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1708","id":2156247623,"node_id":"PR_kwDOA-eq3c5oBs3w","number":1708,"title":"Create scorecard.yml (OpenSSF)","user":{"login":"planetf1","id":7292002,"node_id":"MDQ6VXNlcjcyOTIwMDI=","avatar_url":"https://avatars.githubusercontent.com/u/7292002?v=4","gravatar_id":"","url":"https://api.github.com/users/planetf1","html_url":"https://github.com/planetf1","followers_url":"https://api.github.com/users/planetf1/followers","following_url":"https://api.github.com/users/planetf1/following{/other_user}","gists_url":"https://api.github.com/users/planetf1/gists{/gist_id}","starred_url":"https://api.github.com/users/planetf1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/planetf1/subscriptions","organizations_url":"https://api.github.com/users/planetf1/orgs","repos_url":"https://api.github.com/users/planetf1/repos","events_url":"https://api.github.com/users/planetf1/events{/privacy}","received_events_url":"https://api.github.com/users/planetf1/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":30,"created_at":"2024-02-27T10:36:49Z","updated_at":"2024-06-22T13:38:55Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1708","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1708","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1708.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1708.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAdds a github action to run the OpenSSF scorecard tool, and posts results to security->code scanning\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1706\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\nThis is a new CI action. It's only effect is\r\n - small amount of resource to run the workflow\r\n - creates items under Security->code scanning, visible to those with 'write' access in the repo\r\n\r\nNo branch protection rules are being changed to require successful completion of this action\r\n \r\n No additional testing is required\r\n \r\n Example output is shown in the referenced issue\r\n \r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [NO] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [NO] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nAs per https://github.com/ossf/scorecard it's possible some additional permissions may be needed (depending on branch rotection setup).  These can be dealt with as a second iteration\r\n\r\nThis PR also does not attempt to address any findings from the scorecard scan. It's purely activating the tool so that we can review and act on those findings subsequently.\r\n\r\nDraft for\r\n - testing\r\n - minor changes/comments cleanup","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2184039522","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1708#issuecomment-2184039522","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1708","id":2184039522,"node_id":"IC_kwDOA-eq3c6CLcxi","user":{"login":"ryjones","id":466142,"node_id":"MDQ6VXNlcjQ2NjE0Mg==","avatar_url":"https://avatars.githubusercontent.com/u/466142?v=4","gravatar_id":"","url":"https://api.github.com/users/ryjones","html_url":"https://github.com/ryjones","followers_url":"https://api.github.com/users/ryjones/followers","following_url":"https://api.github.com/users/ryjones/following{/other_user}","gists_url":"https://api.github.com/users/ryjones/gists{/gist_id}","starred_url":"https://api.github.com/users/ryjones/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ryjones/subscriptions","organizations_url":"https://api.github.com/users/ryjones/orgs","repos_url":"https://api.github.com/users/ryjones/repos","events_url":"https://api.github.com/users/ryjones/events{/privacy}","received_events_url":"https://api.github.com/users/ryjones/received_events","type":"User","site_admin":false},"created_at":"2024-06-22T13:38:55Z","updated_at":"2024-06-22T13:38:55Z","author_association":"CONTRIBUTOR","body":"@planetf1 could you do a squash commit or similar?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2184039522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-22T13:38:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39528204961","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1761","id":2257602107,"node_id":"I_kwDOA-eq3c6GkEY7","number":1761,"title":"Valgrind Massif Tool Breaks During Verify Operation of Falcon Algorithms on Raspberry Pi","user":{"login":"crt26","id":63823484,"node_id":"MDQ6VXNlcjYzODIzNDg0","avatar_url":"https://avatars.githubusercontent.com/u/63823484?v=4","gravatar_id":"","url":"https://api.github.com/users/crt26","html_url":"https://github.com/crt26","followers_url":"https://api.github.com/users/crt26/followers","following_url":"https://api.github.com/users/crt26/following{/other_user}","gists_url":"https://api.github.com/users/crt26/gists{/gist_id}","starred_url":"https://api.github.com/users/crt26/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crt26/subscriptions","organizations_url":"https://api.github.com/users/crt26/orgs","repos_url":"https://api.github.com/users/crt26/repos","events_url":"https://api.github.com/users/crt26/events{/privacy}","received_events_url":"https://api.github.com/users/crt26/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"assignees":[{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2024-04-22T23:01:53Z","updated_at":"2024-06-22T17:57:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Issue Description\r\n\r\nWhen using the Valgrind memory profiler (**version - 3.19.0**) with the Massif tool to gain information on the maxHeap and maxStack for an algorithm/operation combination, any Falcon algorithm variation with the verify operation will cause a break in Valgrind and ***produces the error below***. \r\n\r\n**Main Error:**\r\n```\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n```\r\n\r\nThe functions related to the issues according to the [Valgrind Outputs](#valgrind-with-massif-tool-error-full) are:\r\n\r\n- PQCLEAN_FALCON512_AARCH64_is_short*\r\n- do_verify \r\n- OQS_SIG_verify\r\n\r\n*This comes from the [example output given](#valgrind-with-massif-tool-error-full), in the [verbose output files](#verbose-outputs) the functions with issues for the other Falcon variations are detailed.\r\n\r\nThis issue is persistent across Raspberry Pi 4 and 5 models and various build configurations. When using the test_sig_mem script by itself, the verification completes without issue. This is also the case when using the Valgrind profiler by itself without Massif. Furthermore, the issue is the same regardless if the ARM PMU is enabled or disabled.\r\n\r\n### Standard test_sig_mem Verify Output\r\n\r\n**Command:**\r\n```\r\n./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output**\r\n```\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n```\r\n\r\n### Valgrind Output without Massif\r\n**Command:**\r\n```\r\nvalgrind ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352773== Memcheck, a memory error detector\r\n==352773== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.\r\n==352773== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352773== Command: ./test_sig_mem Falcon-512 2\r\n==352773==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n==352773==\r\n==352773== HEAP SUMMARY:\r\n==352773==     in use at exit: 0 bytes in 0 blocks\r\n==352773==   total heap usage: 15 allocs, 15 frees, 22,622 bytes allocated\r\n==352773==\r\n==352773== All heap blocks were freed -- no leaks are possible\r\n==352773==\r\n==352773== For lists of detected and suppressed errors, rerun with: -s\r\n==352773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\n```\r\n\r\n### Valgrind with Massif Tool Error Full\r\n**Command:**\r\n```\r\nvalgrind --tool=massif --stacks=yes ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352334== Massif, a heap profiler\r\n==352334== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==352334== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352334== Command: ./test_sig_mem Falcon-512 2\r\n==352334==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n\r\nhost stacktrace:\r\n==352334==    at 0x58009114: show_sched_status_wrk (m_libcassert.c:406)\r\n==352334==    by 0x58009263: report_and_quit (m_libcassert.c:477)\r\n==352334==    by 0x5800949B: panic (m_libcassert.c:553)\r\n==352334==    by 0x5800949B: vgPlain_core_panic_at (m_libcassert.c:558)\r\n==352334==    by 0x580094BF: vgPlain_core_panic (m_libcassert.c:563)\r\n==352334==    by 0x5808277B: failure_exit (m_translate.c:761)\r\n==352334==    by 0x580EDD27: vex_assert_fail (main_util.c:245)\r\n==352334==    by 0x5814C973: genSpill_ARM64 (host_arm64_defs.c:2829)\r\n==352334==    by 0x581435DB: spill_vreg (host_generic_reg_alloc3.c:338)\r\n==352334==    by 0x58144B3F: doRegisterAllocation_v3 (host_generic_reg_alloc3.c:1280)\r\n==352334==    by 0x580EC843: libvex_BackEnd (main_main.c:1133)\r\n==352334==    by 0x580EC843: LibVEX_Translate (main_main.c:1236)\r\n==352334==    by 0x58084F6F: vgPlain_translate (m_translate.c:1831)\r\n==352334==    by 0x5805664B: handle_chain_me (scheduler.c:1169)\r\n==352334==    by 0x58059227: vgPlain_scheduler (scheduler.c:1514)\r\n==352334==    by 0x580A861F: thread_wrapper (syswrap-linux.c:101)\r\n==352334==    by 0x580A861F: run_a_thread_NORETURN (syswrap-linux.c:154)\r\n==352334==    by 0xFFFFFFFFFFFFFFFF: ???\r\n\r\nsched status:\r\n  running_tid=1\r\n\r\nThread 1: status = VgTs_Runnable (lwpid 352334)\r\n==352334==    at 0x18ADC8: PQCLEAN_FALCON512_AARCH64_is_short (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x131F1F: do_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x124217: OQS_SIG_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x1231AB: main (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\nclient stack range: [0x1FFF000000 0x1FFF003FFF] client SP: 0x1FFF002040\r\nvalgrind stack range: [0x1002C18000 0x1002D17FFF] top usage: 19776 of 1048576\r\n```\r\n\r\n### Verbose Outputs\r\nAn output of the issue with the verbose flag alongside outputs for each affected Falcon variation can be found in the following text files:\r\n- [valgrind-massif-verbose.txt](https://github.com/open-quantum-safe/liboqs/files/15069215/valgrind-massif-verbose.txt)\r\n- [valgrind-falcon-outputs.txt](https://github.com/open-quantum-safe/liboqs/files/15069217/valgrind-falcon-outputs.txt)\r\n\r\n## Build Configurations\r\nThe error is persistent across various setups using differing build flags:\r\n\r\n### Default Setup\r\n**Build Commands:**\r\n```\r\n cmake -GNinja ..\r\n ninja && sudo ninja install\r\n ```\r\n\r\n **Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       7b6d9f3326295fc80ea0c9026f3dd9d57f8436de\r\nOpenSSL enabled:  Yes (OpenSSL 3.0.11 19 Sep 2023)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n### Custom Setup\r\n**Build Commands (Contained within the script, but all paths variables have been verified):**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_SPEED_USE_ARM_PMU=ON \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n\r\nninja && sudo ninja install\r\n```\r\n\r\n**Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n## Expected behaviour\r\nThe setup and configurations detailed in this bug report were also tested on a **Debian 12 x86 machine**, and the issue was not present. The environment that this setup, when executed on a Debian 12 x86 system, gives the following outputs:\r\n\r\n**Valgrind with Massif Output**\r\n```\r\n==55823== Massif, a heap profiler\r\n==55823== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==55823== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==55823== Command: ./test_sig_mem Falcon-512 2\r\n==55823==\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Linux-6.1.0-20-amd64\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              NI\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES AVX AVX2 BMI1 BMI2 PCLMULQDQ POPCNT SSE SSE2 SSE3\r\nverification\r\n```\r\n\r\n**Massif File after Passing to ms_print:**\r\n[x86-ms_print.txt](https://github.com/open-quantum-safe/liboqs/files/15069226/x86-ms_print.txt)\r\n\r\n\r\n*Build details for the x86 machine are detailed below*\r\n\r\n## Environment Details\r\nThe issue was tested on both Raspberry Pi 4 and 5 models with the following details:\r\n\r\n### Pi-4:\r\n- OS - Raspbian OS Lite 64bit (Debian 11 Bullseye)\r\n- Kernel Version - 6.1.21-v8+\r\n- Architecture - aarch64 \r\n- OpenSSL Version - OpenSSL 1.1.1w (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (10.2.1)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Pi-5:\r\n- OS - Raspbian OS Lite 64bit (Debian 12 Bookworm)\r\n- Kernel Version - 6.6.20+rpt-rpi-2712\r\n- Architecture - aarch64\r\n- OpenSSL Version - OpenSSL 3.0.11 (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Debian x86 Machine used to Verify Issue:\r\n- OS - Debian GNU/Linux 12 (bookworm)\r\n- Kernel Version - 6.1.0-20-amd64\r\n- Architecture - x86_64\r\n- OpenSSL Version - OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Liboqs Version - 0.10.0\r\n\r\n\r\n**Debian x86 Build Commands**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n```\r\n\r\n\r\n## Additional context\r\nI would be happy to provide any additional information or outputs for this issue and, if necessary, the current developing branch for the repository where this environment is set up and run. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2184131427","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1761#issuecomment-2184131427","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761","id":2184131427,"node_id":"IC_kwDOA-eq3c6CLzNj","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-06-22T17:57:40Z","updated_at":"2024-06-22T17:57:40Z","author_association":"COLLABORATOR","body":"Hi @crt26 , \r\n\r\nThanks for the detail information. \r\nI can reproduce the bug in my Rpi 5.\r\n\r\nThe Falcon ARM code was developed by me, I review my code and I don't know why it causes bugs with `tool=massif`.\r\nErrors exist in both Verify Operation when `FALCON_N = 512, 1024`. \r\n\r\n\r\nCommand with default build instruction in README.md: \r\n\r\n```\r\n$ valgrind --tool=massif --stacks=yes ./test_sig_mem Falcon-512 2\r\n$ valgrind --tool=massif --stacks=yes ./test_sig_mem Falcon-1024 2\r\n```\r\n\r\nOutput: \r\n\r\n```\r\n================================================================================\r\nExecuting verify for SIGALG Falcon-512\r\n================================================================================\r\n\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140602256 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n\r\nhost stacktrace:\r\n==57126==    at 0x58009114: show_sched_status_wrk (m_libcassert.c:406)\r\n==57126==    by 0x58009263: report_and_quit (m_libcassert.c:477)\r\n==57126==    by 0x5800949B: panic (m_libcassert.c:553)\r\n==57126==    by 0x5800949B: vgPlain_core_panic_at (m_libcassert.c:558)\r\n==57126==    by 0x580094BF: vgPlain_core_panic (m_libcassert.c:563)\r\n==57126==    by 0x5808277B: failure_exit (m_translate.c:761)\r\n==57126==    by 0x580EDD27: vex_assert_fail (main_util.c:245)\r\n==57126==    by 0x5814C973: genSpill_ARM64 (host_arm64_defs.c:2829)\r\n==57126==    by 0x581435DB: spill_vreg (host_generic_reg_alloc3.c:338)\r\n==57126==    by 0x58144B3F: doRegisterAllocation_v3 (host_generic_reg_alloc3.c:1280)\r\n==57126==    by 0x580EC843: libvex_BackEnd (main_main.c:1133)\r\n==57126==    by 0x580EC843: LibVEX_Translate (main_main.c:1236)\r\n==57126==    by 0x58084F6F: vgPlain_translate (m_translate.c:1831)\r\n==57126==    by 0x5805664B: handle_chain_me (scheduler.c:1169)\r\n==57126==    by 0x58059227: vgPlain_scheduler (scheduler.c:1514)\r\n==57126==    by 0x580A861F: thread_wrapper (syswrap-linux.c:101)\r\n==57126==    by 0x580A861F: run_a_thread_NORETURN (syswrap-linux.c:154)\r\n==57126==    by 0xFFFFFFFFFFFFFFFF: ???\r\n\r\nsched status:\r\n  running_tid=1\r\n\r\nThread 1: status = VgTs_Runnable (lwpid 57126)\r\n==57126==    at 0x18AE78: PQCLEAN_FALCON512_AARCH64_is_short (in /home/cothan/Work/liboqs/build/tests/test_sig_mem)\r\n==57126==    by 0x131F9F: do_verify (in /home/cothan/Work/liboqs/build/tests/test_sig_mem)\r\n==57126==    by 0x124297: OQS_SIG_verify (in /home/cothan/Work/liboqs/build/tests/test_sig_mem)\r\n==57126==    by 0x1231A3: main (in /home/cothan/Work/liboqs/build/tests/test_sig_mem)\r\nclient stack range: [0x1FFF000000 0x1FFF003FFF] client SP: 0x1FFF001F40\r\nvalgrind stack range: [0x1002C18000 0x1002D17FFF] top usage: 19776 of 1048576\r\n```\r\n\r\n```\r\n================================================================================\r\nExecuting verify for SIGALG Falcon-1024\r\n================================================================================\r\n\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 139649944 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n\r\nhost stacktrace:\r\n==57362==    at 0x58009114: show_sched_status_wrk (m_libcassert.c:406)\r\n==57362==    by 0x58009263: report_and_quit (m_libcassert.c:477)\r\n==57362==    by 0x5800949B: panic (m_libcassert.c:553)\r\n==57362==    by 0x5800949B: vgPlain_core_panic_at (m_libcassert.c:558)\r\n==57362==    by 0x580094BF: vgPlain_core_panic (m_libcassert.c:563)\r\n==57362==    by 0x5808277B: failure_exit (m_translate.c:761)\r\n==57362==    by 0x580EDD27: vex_assert_fail (main_util.c:245)\r\n==57362==    by 0x5814C973: genSpill_ARM64 (host_arm64_defs.c:2829)\r\n==57362==    by 0x581435DB: spill_vreg (host_generic_reg_alloc3.c:338)\r\n==57362==    by 0x58144B3F: doRegisterAllocation_v3 (host_generic_reg_alloc3.c:1280)\r\n==57362==    by 0x580EC843: libvex_BackEnd (main_main.c:1133)\r\n==57362==    by 0x580EC843: LibVEX_Translate (main_main.c:1236)\r\n==57362==    by 0x58084F6F: vgPlain_translate (m_translate.c:1831)\r\n==57362==    by 0x5805928F: handle_tt_miss (scheduler.c:1141)\r\n==57362==    by 0x5805928F: vgPlain_scheduler (scheduler.c:1503)\r\n==57362==    by 0x580A861F: thread_wrapper (syswrap-linux.c:101)\r\n==57362==    by 0x580A861F: run_a_thread_NORETURN (syswrap-linux.c:154)\r\n==57362==    by 0xFFFFFFFFFFFFFFFF: ???\r\n\r\nsched status:\r\n  running_tid=1\r\n\r\nThread 1: status = VgTs_Runnable (lwpid 57362)\r\n==57362==    at 0x13F808: PQCLEAN_FALCON1024_AARCH64_verify_raw (in /home/cothan/Work/liboqs/build/tests/test_sig_mem)\r\n==57362==    by 0x13CA07: do_verify (in /home/cothan/Work/liboqs/build/tests/test_sig_mem)\r\n==57362==    by 0x124297: OQS_SIG_verify (in /home/cothan/Work/liboqs/build/tests/test_sig_mem)\r\n==57362==    by 0x1231A3: main (in /home/cothan/Work/liboqs/build/tests/test_sig_mem)\r\nclient stack range: [0x1FFF000000 0x1FFF003FFF] client SP: 0x1FFF000F60\r\nvalgrind stack range: [0x1002C18000 0x1002D17FFF] top usage: 19776 of 1048576\r\n\r\n```\r\n\r\nWhen I build with `cmake -DCMAKE_BUILD_TYPE=Debug -GNinja ..`, no problem shows. Obviously, this is not optimized code. \r\n\r\n```\r\ncothan@pi5:~/Work/liboqs/build/tests $ valgrind --tool=massif --stacks=yes ./test_sig_mem Falcon-512 2\r\n==61948== Massif, a heap profiler\r\n==61948== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==61948== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==61948== Command: ./test_sig_mem Falcon-512 2\r\n==61948==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.31+rpt-rpi-2712\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-Wstrict-overflow;-ggdb3;-Wbad-function-cast]\r\nOQS version:      0.10.2-dev\r\nGit commit:       e3f05cbfba4552067e2c0de524c1049a864c5f2d\r\nOpenSSL enabled:  Yes (OpenSSL 3.0.11 19 Sep 2023)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Debug\r\nCPU exts active:  AES SHA2 NEON\r\n================================================================================\r\nExecuting verify for SIGALG Falcon-512\r\n================================================================================\r\nverification passes as expected\r\n```\r\n\r\nI tried another build option, to show exact location where it's crash: \r\n`cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja ..` \r\n\r\n```\r\ncothan@pi5:~/Work/liboqs/build/tests $ valgrind --tool=massif --stacks=yes ./test_sig_mem Falcon-512 2\r\n==76067== Massif, a heap profiler\r\n==76067== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==76067== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==76067== Command: ./test_sig_mem Falcon-512 2\r\n==76067==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.31+rpt-rpi-2712\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-Wstrict-overflow;-ggdb3;-Wbad-function-cast]\r\nOQS version:      0.10.2-dev\r\nGit commit:       e3f05cbfba4552067e2c0de524c1049a864c5f2d\r\nOpenSSL enabled:  Yes (OpenSSL 3.0.11 19 Sep 2023)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=RelWithDebInfo\r\nCPU exts active:  AES SHA2 NEON\r\n================================================================================\r\nExecuting verify for SIGALG Falcon-512\r\n================================================================================\r\n\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 139932256 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n\r\nhost stacktrace:\r\n==76067==    at 0x58009114: show_sched_status_wrk (m_libcassert.c:406)\r\n==76067==    by 0x58009263: report_and_quit (m_libcassert.c:477)\r\n==76067==    by 0x5800949B: panic (m_libcassert.c:553)\r\n==76067==    by 0x5800949B: vgPlain_core_panic_at (m_libcassert.c:558)\r\n==76067==    by 0x580094BF: vgPlain_core_panic (m_libcassert.c:563)\r\n==76067==    by 0x5808277B: failure_exit (m_translate.c:761)\r\n==76067==    by 0x580EDD27: vex_assert_fail (main_util.c:245)\r\n==76067==    by 0x5814C973: genSpill_ARM64 (host_arm64_defs.c:2829)\r\n==76067==    by 0x581435DB: spill_vreg (host_generic_reg_alloc3.c:338)\r\n==76067==    by 0x58144B3F: doRegisterAllocation_v3 (host_generic_reg_alloc3.c:1280)\r\n==76067==    by 0x580EC843: libvex_BackEnd (main_main.c:1133)\r\n==76067==    by 0x580EC843: LibVEX_Translate (main_main.c:1236)\r\n==76067==    by 0x58084F6F: vgPlain_translate (m_translate.c:1831)\r\n==76067==    by 0x5805928F: handle_tt_miss (scheduler.c:1141)\r\n==76067==    by 0x5805928F: vgPlain_scheduler (scheduler.c:1503)\r\n==76067==    by 0x580A861F: thread_wrapper (syswrap-linux.c:101)\r\n==76067==    by 0x580A861F: run_a_thread_NORETURN (syswrap-linux.c:154)\r\n==76067==    by 0xFFFFFFFFFFFFFFFF: ???\r\n\r\nsched status:\r\n  running_tid=1\r\n\r\nThread 1: status = VgTs_Runnable (lwpid 76067)\r\n==76067==    at 0x12E9CC: PQCLEAN_FALCON512_AARCH64_verify_raw (vrfy.c:54)\r\n==76067==    by 0x12CD83: do_verify (pqclean.c:279)\r\n==76067==    by 0x12419F: OQS_SIG_verify (sig.c:445)\r\n==76067==    by 0x12319F: sig_test_correctness (test_sig_mem.c:129)\r\n==76067==    by 0x12319F: main (test_sig_mem.c:196)\r\nclient stack range: [0x1FFF000000 0x1FFF003FFF] client SP: 0x1FFF001F50\r\nvalgrind stack range: [0x1002F88000 0x1003087FFF] top usage: 19776 of 1048576\r\n```\r\n\r\n\r\nThe output assembly from Rizin, where it's crashed: \r\n\r\n```\r\n[0x08000740]> pdf\r\n┌ int sym.PQCLEAN_FALCON512_AARCH64_is_short(int16_t *s1, int16_t *s2);\r\n│           ; arg int16_t *s1 @ x0\r\n│           ; arg int16_t *s2 @ x1\r\n│           0x08000740      movi  v1.4, 0\r\n│           0x08000744      add   x5, x0, 0x400                        ; s1\r\n│           0x08000748      mov   v0.16b, v1.16b\r\n│       ┌─> 0x0800074c      mov   x2, x0                               ; s1\r\n│       ╎   0x08000750      add   x4, x0, 0x80                         ; s1\r\n│       ╎   0x08000754      add   x3, x0, 0xc0                         ; s1\r\n│       ╎   0x08000758      add   x0, x0, 0x100                        ; s1\r\n│       ╎   0x0800075c      ld1   { v16.8h, v17.8h, v18.8h, v19.8h }, [x2], 64\r\n│       ╎   0x08000760      ld1   { v4.8h, v5.8h, v6.8h, v7.8h }, [x4]\r\n│       ╎   0x08000764      sqdmlal v0.4, v16.4h, v16.4h\r\n│       ╎   0x08000768      sqdmlal2 v1.4, v16.8h, v16.8h\r\n│       ╎   0x0800076c      ld1   { v20.8h, v21.8h, v22.8h, v23.8h }, [x2]\r\n│       ╎   0x08000770      sqdmlal v0.4, v17.4h, v17.4h\r\n│       ╎   0x08000774      sqdmlal2 v1.4, v17.8h, v17.8h\r\n│       ╎   0x08000778      sqdmlal v0.4, v18.4h, v18.4h\r\n│       ╎   0x0800077c      sqdmlal2 v1.4, v18.8h, v18.8h\r\n│       ╎   0x08000780      sqdmlal v0.4, v19.4h, v19.4h\r\n│       ╎   0x08000784      sqdmlal2 v1.4, v19.8h, v19.8h\r\n│       ╎   0x08000788      ld1   { v16.8h, v17.8h, v18.8h, v19.8h }, [x3]\r\n│       ╎   0x0800078c      sqdmlal v0.4, v20.4h, v20.4h\r\n│       ╎   0x08000790      sqdmlal2 v1.4, v20.8h, v20.8h\r\n│       ╎   0x08000794      sqdmlal v0.4, v21.4h, v21.4h\r\n│       ╎   0x08000798      sqdmlal2 v1.4, v21.8h, v21.8h\r\n│       ╎   0x0800079c      sqdmlal v0.4, v22.4h, v22.4h\r\n│       ╎   0x080007a0      sqdmlal2 v1.4, v22.8h, v22.8h\r\n│       ╎   0x080007a4      sqdmlal v0.4, v23.4h, v23.4h\r\n│       ╎   0x080007a8      sqdmlal2 v1.4, v23.8h, v23.8h\r\n│       ╎   0x080007ac      sqdmlal v0.4, v4.4h, v4.4h\r\n│       ╎   0x080007b0      sqdmlal2 v1.4, v4.8h, v4.8h\r\n│       ╎   0x080007b4      sqdmlal v0.4, v5.4h, v5.4h\r\n│       ╎   0x080007b8      sqdmlal2 v1.4, v5.8h, v5.8h\r\n│       ╎   0x080007bc      sqdmlal v0.4, v6.4h, v6.4h\r\n│       ╎   0x080007c0      sqdmlal2 v1.4, v6.8h, v6.8h\r\n│       ╎   0x080007c4      sqdmlal v0.4, v7.4h, v7.4h\r\n│       ╎   0x080007c8      sqdmlal2 v1.4, v7.8h, v7.8h\r\n│       ╎   0x080007cc      sqdmlal v0.4, v16.4h, v16.4h\r\n│       ╎   0x080007d0      sqdmlal2 v1.4, v16.8h, v16.8h\r\n│       ╎   0x080007d4      sqdmlal v0.4, v17.4h, v17.4h\r\n│       ╎   0x080007d8      sqdmlal2 v1.4, v17.8h, v17.8h\r\n│       ╎   0x080007dc      sqdmlal v0.4, v18.4h, v18.4h\r\n│       ╎   0x080007e0      sqdmlal2 v1.4, v18.8h, v18.8h\r\n│       ╎   0x080007e4      sqdmlal v0.4, v19.4h, v19.4h\r\n│       ╎   0x080007e8      sqdmlal2 v1.4, v19.8h, v19.8h\r\n│       ╎   0x080007ec      cmp   x0, x5                               ; s1\r\n│       └─< 0x080007f0      b.ne  0x800074c\r\n│           0x080007f4      add   x4, x1, 0x400                        ; s2\r\n│       ┌─> 0x080007f8      mov   x0, x1                               ; s2\r\n│       ╎   0x080007fc      add   x3, x1, 0x80                         ; s2\r\n│       ╎   0x08000800      add   x2, x1, 0xc0                         ; s2\r\n│       ╎   0x08000804      add   x1, x1, 0x100                        ; s2\r\n│       ╎   0x08000808      ld1   { v16.8h, v17.8h, v18.8h, v19.8h }, [x0], 64\r\n│       ╎   0x0800080c      ld1   { v4.8h, v5.8h, v6.8h, v7.8h }, [x3]\r\n│       ╎   0x08000810      sqdmlal v0.4, v16.4h, v16.4h\r\n│       ╎   0x08000814      sqdmlal2 v1.4, v16.8h, v16.8h\r\n│       ╎   0x08000818      ld1   { v20.8h, v21.8h, v22.8h, v23.8h }, [x0]\r\n│       ╎   0x0800081c      sqdmlal v0.4, v17.4h, v17.4h\r\n│       ╎   0x08000820      sqdmlal2 v1.4, v17.8h, v17.8h\r\n│       ╎   0x08000824      sqdmlal v0.4, v18.4h, v18.4h\r\n│       ╎   0x08000828      sqdmlal2 v1.4, v18.8h, v18.8h\r\n│       ╎   0x0800082c      sqdmlal v0.4, v19.4h, v19.4h\r\n│       ╎   0x08000830      sqdmlal2 v1.4, v19.8h, v19.8h\r\n│       ╎   0x08000834      ld1   { v16.8h, v17.8h, v18.8h, v19.8h }, [x2]\r\n│       ╎   0x08000838      sqdmlal v0.4, v20.4h, v20.4h\r\n│       ╎   0x0800083c      sqdmlal2 v1.4, v20.8h, v20.8h\r\n│       ╎   0x08000840      sqdmlal v0.4, v21.4h, v21.4h\r\n│       ╎   0x08000844      sqdmlal2 v1.4, v21.8h, v21.8h\r\n│       ╎   0x08000848      sqdmlal v0.4, v22.4h, v22.4h\r\n│       ╎   0x0800084c      sqdmlal2 v1.4, v22.8h, v22.8h\r\n│       ╎   0x08000850      sqdmlal v0.4, v23.4h, v23.4h\r\n│       ╎   0x08000854      sqdmlal2 v1.4, v23.8h, v23.8h\r\n│       ╎   0x08000858      sqdmlal v0.4, v4.4h, v4.4h\r\n│       ╎   0x0800085c      sqdmlal2 v1.4, v4.8h, v4.8h\r\n│       ╎   0x08000860      sqdmlal v0.4, v5.4h, v5.4h\r\n│       ╎   0x08000864      sqdmlal2 v1.4, v5.8h, v5.8h\r\n│       ╎   0x08000868      sqdmlal v0.4, v6.4h, v6.4h\r\n│       ╎   0x0800086c      sqdmlal2 v1.4, v6.8h, v6.8h\r\n│       ╎   0x08000870      sqdmlal v0.4, v7.4h, v7.4h\r\n│       ╎   0x08000874      sqdmlal2 v1.4, v7.8h, v7.8h\r\n│       ╎   0x08000878      sqdmlal v0.4, v16.4h, v16.4h\r\n│       ╎   0x0800087c      sqdmlal2 v1.4, v16.8h, v16.8h\r\n│       ╎   0x08000880      sqdmlal v0.4, v17.4h, v17.4h\r\n│       ╎   0x08000884      sqdmlal2 v1.4, v17.8h, v17.8h\r\n│       ╎   0x08000888      sqdmlal v0.4, v18.4h, v18.4h\r\n│       ╎   0x0800088c      sqdmlal2 v1.4, v18.8h, v18.8h\r\n│       ╎   0x08000890      sqdmlal v0.4, v19.4h, v19.4h\r\n│       ╎   0x08000894      sqdmlal2 v1.4, v19.8h, v19.8h\r\n│       ╎   0x08000898      cmp   x4, x1                               ; s2\r\n│       └─< 0x0800089c      b.ne  0x80007f8\r\n│           0x080008a0      shadd v0.4, v0.4s, v1.4s\r\n│           0x080008a4      mov   w1, 0x5426                           ; '&T'\r\n│           0x080008a8      movk  w1, 0x207, lsl 16\r\n│           0x080008ac      mov   d1, v0.d[1]\r\n│           0x080008b0      sqadd v0.2, v1.2s, v0.2s\r\n│           0x080008b4      mov   s1, v0.s[1]\r\n│           0x080008b8      sqadd s0, s1, s0\r\n│           0x080008bc      fmov  w0, s0\r\n│           0x080008c0      cmp   w0, w1\r\n│           0x080008c4      cset  w0, ls\r\n└           0x080008c8      ret\r\n```\r\n\r\nAs shown in the ASM output, I confirm it does not use additional memory. \r\n\r\nI honestly don't know why and don't know enough about Valgrind and Massif to make the current code works with Massif.\r\n\r\nSince Valgrind and `massif` to get the stack/heap usage, I suggest you replace these function with non optimized C function. I hope it helps. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2184131427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-22T17:57:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39528227127","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1761","id":2257602107,"node_id":"I_kwDOA-eq3c6GkEY7","number":1761,"title":"Valgrind Massif Tool Breaks During Verify Operation of Falcon Algorithms on Raspberry Pi","user":{"login":"crt26","id":63823484,"node_id":"MDQ6VXNlcjYzODIzNDg0","avatar_url":"https://avatars.githubusercontent.com/u/63823484?v=4","gravatar_id":"","url":"https://api.github.com/users/crt26","html_url":"https://github.com/crt26","followers_url":"https://api.github.com/users/crt26/followers","following_url":"https://api.github.com/users/crt26/following{/other_user}","gists_url":"https://api.github.com/users/crt26/gists{/gist_id}","starred_url":"https://api.github.com/users/crt26/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crt26/subscriptions","organizations_url":"https://api.github.com/users/crt26/orgs","repos_url":"https://api.github.com/users/crt26/repos","events_url":"https://api.github.com/users/crt26/events{/privacy}","received_events_url":"https://api.github.com/users/crt26/received_events","type":"User","site_admin":false},"labels":[{"id":423520884,"node_id":"MDU6TGFiZWw0MjM1MjA4ODQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"open","locked":false,"assignee":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"assignees":[{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2024-04-22T23:01:53Z","updated_at":"2024-06-22T18:00:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Issue Description\r\n\r\nWhen using the Valgrind memory profiler (**version - 3.19.0**) with the Massif tool to gain information on the maxHeap and maxStack for an algorithm/operation combination, any Falcon algorithm variation with the verify operation will cause a break in Valgrind and ***produces the error below***. \r\n\r\n**Main Error:**\r\n```\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n```\r\n\r\nThe functions related to the issues according to the [Valgrind Outputs](#valgrind-with-massif-tool-error-full) are:\r\n\r\n- PQCLEAN_FALCON512_AARCH64_is_short*\r\n- do_verify \r\n- OQS_SIG_verify\r\n\r\n*This comes from the [example output given](#valgrind-with-massif-tool-error-full), in the [verbose output files](#verbose-outputs) the functions with issues for the other Falcon variations are detailed.\r\n\r\nThis issue is persistent across Raspberry Pi 4 and 5 models and various build configurations. When using the test_sig_mem script by itself, the verification completes without issue. This is also the case when using the Valgrind profiler by itself without Massif. Furthermore, the issue is the same regardless if the ARM PMU is enabled or disabled.\r\n\r\n### Standard test_sig_mem Verify Output\r\n\r\n**Command:**\r\n```\r\n./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output**\r\n```\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n```\r\n\r\n### Valgrind Output without Massif\r\n**Command:**\r\n```\r\nvalgrind ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352773== Memcheck, a memory error detector\r\n==352773== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.\r\n==352773== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352773== Command: ./test_sig_mem Falcon-512 2\r\n==352773==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\nverification passes as expected\r\n==352773==\r\n==352773== HEAP SUMMARY:\r\n==352773==     in use at exit: 0 bytes in 0 blocks\r\n==352773==   total heap usage: 15 allocs, 15 frees, 22,622 bytes allocated\r\n==352773==\r\n==352773== All heap blocks were freed -- no leaks are possible\r\n==352773==\r\n==352773== For lists of detected and suppressed errors, rerun with: -s\r\n==352773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\n```\r\n\r\n### Valgrind with Massif Tool Error Full\r\n**Command:**\r\n```\r\nvalgrind --tool=massif --stacks=yes ./test_sig_mem Falcon-512 2\r\n```\r\n\r\n**Output:**\r\n```\r\n==352334== Massif, a heap profiler\r\n==352334== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==352334== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==352334== Command: ./test_sig_mem Falcon-512 2\r\n==352334==\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n\r\nvex: priv/host_arm64_defs.c:2829 (genSpill_ARM64): Assertion `offsetB < 4096' failed.\r\nvex storage: T total 140151576 bytes allocated\r\nvex storage: P total 0 bytes allocated\r\n\r\nvalgrind: the 'impossible' happened:\r\n   LibVEX called failure_exit().\r\n\r\nhost stacktrace:\r\n==352334==    at 0x58009114: show_sched_status_wrk (m_libcassert.c:406)\r\n==352334==    by 0x58009263: report_and_quit (m_libcassert.c:477)\r\n==352334==    by 0x5800949B: panic (m_libcassert.c:553)\r\n==352334==    by 0x5800949B: vgPlain_core_panic_at (m_libcassert.c:558)\r\n==352334==    by 0x580094BF: vgPlain_core_panic (m_libcassert.c:563)\r\n==352334==    by 0x5808277B: failure_exit (m_translate.c:761)\r\n==352334==    by 0x580EDD27: vex_assert_fail (main_util.c:245)\r\n==352334==    by 0x5814C973: genSpill_ARM64 (host_arm64_defs.c:2829)\r\n==352334==    by 0x581435DB: spill_vreg (host_generic_reg_alloc3.c:338)\r\n==352334==    by 0x58144B3F: doRegisterAllocation_v3 (host_generic_reg_alloc3.c:1280)\r\n==352334==    by 0x580EC843: libvex_BackEnd (main_main.c:1133)\r\n==352334==    by 0x580EC843: LibVEX_Translate (main_main.c:1236)\r\n==352334==    by 0x58084F6F: vgPlain_translate (m_translate.c:1831)\r\n==352334==    by 0x5805664B: handle_chain_me (scheduler.c:1169)\r\n==352334==    by 0x58059227: vgPlain_scheduler (scheduler.c:1514)\r\n==352334==    by 0x580A861F: thread_wrapper (syswrap-linux.c:101)\r\n==352334==    by 0x580A861F: run_a_thread_NORETURN (syswrap-linux.c:154)\r\n==352334==    by 0xFFFFFFFFFFFFFFFF: ???\r\n\r\nsched status:\r\n  running_tid=1\r\n\r\nThread 1: status = VgTs_Runnable (lwpid 352334)\r\n==352334==    at 0x18ADC8: PQCLEAN_FALCON512_AARCH64_is_short (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x131F1F: do_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x124217: OQS_SIG_verify (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\n==352334==    by 0x1231AB: main (in /home/cuserp3/work/pqc-evaluation-tools/lib/liboqs/build/tests/test_sig_mem)\r\nclient stack range: [0x1FFF000000 0x1FFF003FFF] client SP: 0x1FFF002040\r\nvalgrind stack range: [0x1002C18000 0x1002D17FFF] top usage: 19776 of 1048576\r\n```\r\n\r\n### Verbose Outputs\r\nAn output of the issue with the verbose flag alongside outputs for each affected Falcon variation can be found in the following text files:\r\n- [valgrind-massif-verbose.txt](https://github.com/open-quantum-safe/liboqs/files/15069215/valgrind-massif-verbose.txt)\r\n- [valgrind-falcon-outputs.txt](https://github.com/open-quantum-safe/liboqs/files/15069217/valgrind-falcon-outputs.txt)\r\n\r\n## Build Configurations\r\nThe error is persistent across various setups using differing build flags:\r\n\r\n### Default Setup\r\n**Build Commands:**\r\n```\r\n cmake -GNinja ..\r\n ninja && sudo ninja install\r\n ```\r\n\r\n **Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       7b6d9f3326295fc80ea0c9026f3dd9d57f8436de\r\nOpenSSL enabled:  Yes (OpenSSL 3.0.11 19 Sep 2023)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n### Custom Setup\r\n**Build Commands (Contained within the script, but all paths variables have been verified):**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_SPEED_USE_ARM_PMU=ON \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n\r\nninja && sudo ninja install\r\n```\r\n\r\n**Configuration Details:**\r\n```\r\nTarget platform:  aarch64-Linux-6.6.20+rpt-rpi-2712 - ARM PMU options enabled\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-march=armv8-a+crypto;-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_SPEED_USE_ARM_PMU OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES SHA2 NEON\r\n```\r\n\r\n## Expected behaviour\r\nThe setup and configurations detailed in this bug report were also tested on a **Debian 12 x86 machine**, and the issue was not present. The environment that this setup, when executed on a Debian 12 x86 system, gives the following outputs:\r\n\r\n**Valgrind with Massif Output**\r\n```\r\n==55823== Massif, a heap profiler\r\n==55823== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote\r\n==55823== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\r\n==55823== Command: ./test_sig_mem Falcon-512 2\r\n==55823==\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Linux-6.1.0-20-amd64\r\nCompiler:         gcc (12.2.0)\r\nCompile options:  [-Wa,--noexecstack;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.10.1-dev\r\nGit commit:       6b4e692b8083f391d181087f500b3389ffb007d8\r\nOpenSSL enabled:  Yes (OpenSSL 3.2.1 30 Jan 2024)\r\nAES:              NI\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nOQS build flags:  OQS_DIST_BUILD OQS_OPT_TARGET=generic CMAKE_BUILD_TYPE=Release\r\nCPU exts active:  AES AVX AVX2 BMI1 BMI2 PCLMULQDQ POPCNT SSE SSE2 SSE3\r\nverification\r\n```\r\n\r\n**Massif File after Passing to ms_print:**\r\n[x86-ms_print.txt](https://github.com/open-quantum-safe/liboqs/files/15069226/x86-ms_print.txt)\r\n\r\n\r\n*Build details for the x86 machine are detailed below*\r\n\r\n## Environment Details\r\nThe issue was tested on both Raspberry Pi 4 and 5 models with the following details:\r\n\r\n### Pi-4:\r\n- OS - Raspbian OS Lite 64bit (Debian 11 Bullseye)\r\n- Kernel Version - 6.1.21-v8+\r\n- Architecture - aarch64 \r\n- OpenSSL Version - OpenSSL 1.1.1w (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (10.2.1)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Pi-5:\r\n- OS - Raspbian OS Lite 64bit (Debian 12 Bookworm)\r\n- Kernel Version - 6.6.20+rpt-rpi-2712\r\n- Architecture - aarch64\r\n- OpenSSL Version - OpenSSL 3.0.11 (Default Configuration) and OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Build Variables - [See Above](#build-configurations)\r\n- Liboqs Version - 0.10.0\r\n\r\n### Debian x86 Machine used to Verify Issue:\r\n- OS - Debian GNU/Linux 12 (bookworm)\r\n- Kernel Version - 6.1.0-20-amd64\r\n- Architecture - x86_64\r\n- OpenSSL Version - OpenSSL 3.2.1 (Custom Configuration)\r\n- Compiler - gcc (12.2.0)\r\n- Liboqs Version - 0.10.0\r\n\r\n\r\n**Debian x86 Build Commands**\r\n```\r\ncmake -GNinja  -S \"$liboqs_source/\" -B \"$liboqs_path/build\" \\\r\n-DCMAKE_INSTALL_PREFIX=\"$liboqs_path\" \\\r\n-DOQS_USE_OPENSSL=ON \\\r\n-DOPENSSL_ROOT_DIR=\"$open_ssl_path\"\r\n```\r\n\r\n\r\n## Additional context\r\nI would be happy to provide any additional information or outputs for this issue and, if necessary, the current developing branch for the repository where this environment is set up and run. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2184132276","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1761#issuecomment-2184132276","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1761","id":2184132276,"node_id":"IC_kwDOA-eq3c6CLza0","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2024-06-22T18:00:20Z","updated_at":"2024-06-22T18:00:20Z","author_association":"COLLABORATOR","body":"I mark this issue as `won't fix` due to the bug is from external tool.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2184132276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-22T18:00:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
