{"id":"39291001763","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431","id":2347141449,"node_id":"PR_kwDOE_A9l85yJooJ","number":431,"title":"Point CI back to liboqs main","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-06-11T19:32:28Z","updated_at":"2024-06-14T05:30:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/431","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nTo hopefully save @baentsch some time making the `oqs-provider` release tomorrow :grin: \r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2167240095","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431#issuecomment-2167240095","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431","id":2167240095,"node_id":"IC_kwDOE_A9l86BLXWf","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-14T05:30:14Z","updated_at":"2024-06-14T05:30:14Z","author_association":"MEMBER","body":"> concrete acceptance criteria\r\n\r\nYours Truly considers a working `nginx` integration test as the (currently absolutely acceptable) minimum for this. Kindly done by @bhess in https://github.com/open-quantum-safe/oqs-demos/pull/272\r\n\r\n> a \"benevolent dictator.\"\r\n\r\nWould be more welcome than a malevolent, non-contributing dictator just making life miserable.\r\n\r\n> That seemed to me be the quickest and easiest way to get the \"-rc\" suffixes out of the necessary files without pushing directly to main\r\n\r\nNow done in #434. I'll merge when approved, do final release afterwards and then merge this PR to get back to dev mode (see separate Approval comment).\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2167240095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-14T05:30:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39294066095","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1802","id":2325884166,"node_id":"I_kwDOA-eq3c6Koi0G","number":1802,"title":"Recreate public key from private","user":{"login":"bencemali","id":64798108,"node_id":"MDQ6VXNlcjY0Nzk4MTA4","avatar_url":"https://avatars.githubusercontent.com/u/64798108?v=4","gravatar_id":"","url":"https://api.github.com/users/bencemali","html_url":"https://github.com/bencemali","followers_url":"https://api.github.com/users/bencemali/followers","following_url":"https://api.github.com/users/bencemali/following{/other_user}","gists_url":"https://api.github.com/users/bencemali/gists{/gist_id}","starred_url":"https://api.github.com/users/bencemali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bencemali/subscriptions","organizations_url":"https://api.github.com/users/bencemali/orgs","repos_url":"https://api.github.com/users/bencemali/repos","events_url":"https://api.github.com/users/bencemali/events{/privacy}","received_events_url":"https://api.github.com/users/bencemali/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-05-30T14:57:23Z","updated_at":"2024-06-14T07:40:51Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"For some PQ algorithms one can recreate the public key from only the private key, but oqs-provider still by default attaches the public key to the serialization of the private key, which can be turned off with the `NOPUBKEY_IN_PRIVKEY` macro. For example in case of Kyber/ML-KEM one can do a workaround roughly like this in oqs-provider's oqsx_key_op function:\r\n\r\n```\r\n            if (strcmp(key->tls_name, \"mlkem1024\") == 0) {\r\n                memcpy(key->pubkey, (char *)key->privkey + 1536,\r\n                       key->pubkeylen);\r\n            }\r\n```\r\n\r\nThe idea for this issue is that liboqs could provide a unified interface for recreating the public key from the private key, when it is possible. For example, a function like this could be added to kem.h in liboqs:\r\n\r\n`OQS_API OQS_STATUS OQS_KEM_recreate_pub_from_priv(const OQS_KEM *kem, uint8_t *secret_key, uint8_t *public_key);`\r\n\r\nAnd in the OQS_KEM structure, for each algorithm a new function could be registered:\r\n\r\n`OQS_STATUS (*recreate)(const uint8_t *secret_key, const uint8_t *public_key);`\r\n\r\nAdding this functionality could reduce serialized key sizes for some algorithms. This is a rough idea and I just want to ask for the opinions of the folks involved in oqs.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2167430196","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1802#issuecomment-2167430196","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802","id":2167430196,"node_id":"IC_kwDOA-eq3c6BMFw0","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-14T07:40:51Z","updated_at":"2024-06-14T07:40:51Z","author_association":"MEMBER","body":"OK, I've not been asked but I have an opinion regardless: YOLOing taking the risk my comment gets deleted :-) here we go:\r\n\r\n> oqs-provider still by default attaches the public key to the serialization of the private key, which can be turned off with the NOPUBKEY_IN_PRIVKEY macro [...]\r\n> reduce serialized key sizes for some algorithms. \r\n\r\nThis at its core seems to be a question regarding (external) key representation which is not an issue `liboqs` wants to deal with if I'm not mistaken, @dstebila ? I also agree with @SWilson4 that such a \"key recovery\" API not working for all algs adds support hassles. Also it may have some security implications we may want to think through first...\r\n\r\nI'd be all for switching the default in `oqsprovider` for NOPUBKEY_IN_PRIVKEY, given this reduces key storage, though: The only reason I'm still aware of that this hasn't been done is \"backwards compatibility\" thinking (e.g., with the by now deprecated `oqs-openssl111` fork). At some point in time, `openssl` also couldn't cope with (private) key representations that don't permit providing/re-creating a public key -- but AFAIK this is gone: What about you simply give this a try, @bencemali : Set NOPUBKEY_IN_PRIVKEY and run a such configured `oqsprovider` testing against all supported `openssl` versions to see what happens? Or does your application rely on the ability of retrieving a public key from a private one? If not/the test being OK, feel free to provide a PR to `oqsprovider` toggling the default for NOPUBKEY_IN_PRIVKEY. If someone does interop testing they should give this a go before merging the PR, though: @praveksharma : Any info on the IETF hackathon guys still using OQS(provider) for that purpose?\r\n\r\n> I also don't know what the implications for the provider would be. \r\n\r\nNot too many at first blush: Some code changes where there's the current \"NOPUBKEY_IN_PRIVKEY\" guards (if there's a need to retain the pubkey-regen-from-privkey feature at user level; otherwise, none at all).\r\n\r\n> That said, if enough people express interest (and/or are committed to help maintain the code), then I could see the support effort being worthwhile.\r\n\r\nThat I absolutely concur with: Support and maintenance of OQS depends on way too few people and IMO is utterly out of whack with public impressions created.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2167430196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-14T07:40:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39294267684","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/331","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/331/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/331/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/331/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/331","id":2073392768,"node_id":"I_kwDOE_A9l857lXaA","number":331,"title":"Supporting Stateful Signatures","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"labels":[{"id":2701983058,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU4","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/question","name":"question","color":"d876e3","default":true,"description":"No code change required"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-01-10T00:43:02Z","updated_at":"2024-06-14T07:48:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Thank you for taking the time to share your thoughts with us.\r\n\r\nThere is ongoing work to integrate Stateful Hash-based Signatures in liboqs.\r\nThis note is to propose adding support for the same in oqsprovider.\r\n\r\nFunctionality:\r\n      Key generation\r\n      Signature generation\r\n      Signature verification\r\nVarious schemes for XMSS and LMS.\r\n \r\nA summary of the proposed work includes expanding the union OQSX_QS_CTX to include OQS_SIG_STFL struct\r\n\r\n typedef union {\r\n     OQS_SIG *sig;\r\n     OQS_KEM *kem;\r\n     OQS_SIG_STFL *stfl_sig;\r\n } OQSX_QS_CTX;\r\n\r\n\r\nAnd the enum oqsx_key_type_en.\r\n\r\n   struct oqsx_provider_ctx_st {\r\n enum oqsx_key_type_en {\r\n     KEY_TYPE_KEM,\r\n     KEY_TYPE_ECP_HYB_KEM,\r\n     KEY_TYPE_ECX_HYB_KEM,\r\n    KEY_TYPE_HYB_SIG,\r\n    KEY_TYPE_STFL_SIG\r\n };\r\n\r\nNew functions will be added to specifically manage the state of keys generated as well as when they are used to create signatures.\r\nPlease let me know your thoughts on the approach.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/331/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2167442183","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/331#issuecomment-2167442183","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/331","id":2167442183,"node_id":"IC_kwDOE_A9l86BMIsH","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-14T07:48:06Z","updated_at":"2024-06-14T07:48:06Z","author_association":"MEMBER","body":"After https://github.com/open-quantum-safe/liboqs/pull/1650 landed, the time seems to have come to give this integration a try - given https://github.com/open-quantum-safe/liboqs/pull/1650#issuecomment-1893957110 of course only without keygen and sign. Anyone interested? ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2167442183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-14T07:48:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39296372405","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1802","id":2325884166,"node_id":"I_kwDOA-eq3c6Koi0G","number":1802,"title":"Recreate public key from private","user":{"login":"bencemali","id":64798108,"node_id":"MDQ6VXNlcjY0Nzk4MTA4","avatar_url":"https://avatars.githubusercontent.com/u/64798108?v=4","gravatar_id":"","url":"https://api.github.com/users/bencemali","html_url":"https://github.com/bencemali","followers_url":"https://api.github.com/users/bencemali/followers","following_url":"https://api.github.com/users/bencemali/following{/other_user}","gists_url":"https://api.github.com/users/bencemali/gists{/gist_id}","starred_url":"https://api.github.com/users/bencemali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bencemali/subscriptions","organizations_url":"https://api.github.com/users/bencemali/orgs","repos_url":"https://api.github.com/users/bencemali/repos","events_url":"https://api.github.com/users/bencemali/events{/privacy}","received_events_url":"https://api.github.com/users/bencemali/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2024-05-30T14:57:23Z","updated_at":"2024-06-14T08:58:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"For some PQ algorithms one can recreate the public key from only the private key, but oqs-provider still by default attaches the public key to the serialization of the private key, which can be turned off with the `NOPUBKEY_IN_PRIVKEY` macro. For example in case of Kyber/ML-KEM one can do a workaround roughly like this in oqs-provider's oqsx_key_op function:\r\n\r\n```\r\n            if (strcmp(key->tls_name, \"mlkem1024\") == 0) {\r\n                memcpy(key->pubkey, (char *)key->privkey + 1536,\r\n                       key->pubkeylen);\r\n            }\r\n```\r\n\r\nThe idea for this issue is that liboqs could provide a unified interface for recreating the public key from the private key, when it is possible. For example, a function like this could be added to kem.h in liboqs:\r\n\r\n`OQS_API OQS_STATUS OQS_KEM_recreate_pub_from_priv(const OQS_KEM *kem, uint8_t *secret_key, uint8_t *public_key);`\r\n\r\nAnd in the OQS_KEM structure, for each algorithm a new function could be registered:\r\n\r\n`OQS_STATUS (*recreate)(const uint8_t *secret_key, const uint8_t *public_key);`\r\n\r\nAdding this functionality could reduce serialized key sizes for some algorithms. This is a rough idea and I just want to ask for the opinions of the folks involved in oqs.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2167575623","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1802#issuecomment-2167575623","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1802","id":2167575623,"node_id":"IC_kwDOA-eq3c6BMpRH","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2024-06-14T08:58:14Z","updated_at":"2024-06-14T08:58:14Z","author_association":"MEMBER","body":"NIST announced to specify a derandomized API for keygen (and other randomized functions) for the final standards. See https://groups.google.com/a/list.nist.gov/g/pqc-forum/c/Mf2kemwwreY/m/KArjoIhxAQAJ?utm_medium=email&utm_source=footer\r\nThe main purpose seems to be testing and the API should be internal. However, a derandomized keygen function would be a generic way to recreate a keypair from just a seed. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/2167575623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-14T08:58:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39298120796","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431","id":2347141449,"node_id":"PR_kwDOE_A9l85yJooJ","number":431,"title":"Point CI back to liboqs main","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-06-11T19:32:28Z","updated_at":"2024-06-14T09:54:19Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/431","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nTo hopefully save @baentsch some time making the `oqs-provider` release tomorrow :grin: \r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2167675518","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/431#issuecomment-2167675518","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/431","id":2167675518,"node_id":"IC_kwDOE_A9l86BNBp-","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-06-14T09:54:18Z","updated_at":"2024-06-14T09:54:18Z","author_association":"MEMBER","body":"> LGTM. Even better would be an update to the version info (to 0.6.2-dev) in CMakeLists.txt.\r\n\r\nTagging @SWilson4 : Please change the version ID and merge as you find time to close out this release cycle. Thanks in advance.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2167675518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-14T09:54:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"39304596801","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/434","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/434/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/434/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/434/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/434","id":2352495924,"node_id":"PR_kwDOE_A9l85yb5VS","number":434,"title":"0.6.1","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-06-14T04:49:25Z","updated_at":"2024-06-14T13:34:18Z","closed_at":"2024-06-14T09:48:31Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/434","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/434","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/434.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/434.patch","merged_at":"2024-06-14T09:48:31Z"},"body":"Final release PR as no negative feedback on 0.6.1-rc1 was received.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/434/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2168068665","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/434#issuecomment-2168068665","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/434","id":2168068665,"node_id":"IC_kwDOE_A9l86BOho5","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2024-06-14T13:34:17Z","updated_at":"2024-06-14T13:34:17Z","author_association":"MEMBER","body":"Thanks for getting this through, Michael!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/2168068665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-06-14T13:34:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
