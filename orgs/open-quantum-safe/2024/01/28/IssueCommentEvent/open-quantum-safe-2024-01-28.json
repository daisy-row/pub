{"id":"35183136904","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1676","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1676/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1676/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1676/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1676","id":2095404797,"node_id":"PR_kwDOA-eq3c5kzQLj","number":1676,"title":"Disable Stateful Signatures in the build by default","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"assignees":[{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2024-01-23T07:14:17Z","updated_at":"2024-01-28T16:31:30Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1676","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1676","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1676.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1676.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis commit will disable XMSS and LMS from the build by default. When enabled key and signature generation is also disabled by default. They can be enabled by defining the following variables on the config command.\r\n\r\n-DOQS_ENABLE_SIG_STFL_KEY_SIG_GEN=ON\r\n-DOQS_ENABLE_SIG_STFL_XMSS = ON\r\n-DOQS_ENABLE_SIG_STFL_LMS = ON\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1676/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1913652952","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1676#issuecomment-1913652952","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1676","id":1913652952,"node_id":"IC_kwDOA-eq3c5yEAbY","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2024-01-28T16:31:30Z","updated_at":"2024-01-28T16:31:30Z","author_association":"MEMBER","body":"I hate commenting my own comment but I have to:\r\n\r\n> So now I wonder whether there's a master template that can be adapted and used to generate the many xmss.c files\r\n\r\nAfter understanding the code a bit better I'd now see a much simpler solution, doing away with a possible generator and dozens of files and compile jobs, namely #defines for the `...new` etc functions. What is the reason this has not been done, @ashman-p ? This would make the code much easier to maintain, adapt and faster to build, no? Example:\r\n\r\n```\r\n// macro to en/disable OQS_SIG_STFL-only structs used only in sig&gen case:\r\n#ifdef OQS_ALLOW_SFTL_KEY_AND_SIG_GEN\r\n#define XMSS_SIGGEN(designator) \\\r\n        sig->oid = OQS_SIG_STFL_alg_xmss##designator##_oid; \\\r\n        sig->sigs_remaining = OQS_SIG_STFL_alg_xmss##designator##_sigs_remaining;\\\r\n        sig->sigs_total = OQS_SIG_STFL_alg_xmss##designator##_sigs_total;\r\n#else\r\n#define XMSS_SIGGEN(designator)\r\n#endif\r\n\r\n// generator for all alg-specific functions:\r\n#define XMSS_ALG(mt, designator) \\\r\nOQS_SIG_STFL *OQS_SIG_STFL_alg_xmss##designator##_new(void) { \\\r\n\\\r\n        OQS_SIG_STFL *sig = (OQS_SIG_STFL *)malloc(sizeof(OQS_SIG_STFL)); \\\r\n        if (sig == NULL) { \\\r\n                return NULL; \\\r\n        } \\\r\n        memset(sig, 0, sizeof(OQS_SIG_STFL)); \\\r\n\\\r\n        XMSS_SIGGEN(designator) \\\r\n        sig->method_name = OQS_SIG_STFL_alg_xmss##designator; \\\r\n        sig->alg_version = \"https://datatracker.ietf.org/doc/html/rfc8391\"; \\\r\n        sig->euf_cma = true; \\\r\n\\\r\n        sig->length_public_key = OQS_SIG_STFL_alg_xmss##designator##_length_pk; \\\r\n        sig->length_secret_key = OQS_SIG_STFL_alg_xmss##designator##_length_sk; \\\r\n        sig->length_signature = OQS_SIG_STFL_alg_xmss##designator##_length_signature; \\\r\n\\\r\n        sig->keypair = OQS_SIG_STFL_alg_xmss##designator##_keypair;\\\r\n        sig->sign = OQS_SIG_STFL_alg_xmss##designator##_sign;\\\r\n        sig->verify = OQS_SIG_STFL_alg_xmss##designator##_verify;\\\r\n\\\r\n        return sig;\\\r\n} \\\r\n\\\r\nOQS_SIG_STFL_SECRET_KEY *OQS_SECRET_KEY_XMSS##designator##_new(void) {\\\r\n        return OQS_SECRET_KEY_XMSS_new(OQS_SIG_STFL_alg_xmss##designator##_length_sk);\\\r\n}\\\r\n\\\r\nOQS_API OQS_STATUS OQS_SIG_STFL_alg_xmss##designator##_keypair(XMSS_UNUSED_ATT uint8_t *public_key, XMSS_UNUSED_ATT OQS_SIG_STFL_SECRET_KEY *secret_key) {\\\r\n\\\r\n        if (public_key == NULL || secret_key == NULL || secret_key->secret_key_data == NULL) {\\\r\n                return OQS_ERROR;\\\r\n        }\\\r\n\\\r\n        if (xmss##mt##_keypair(public_key, secret_key->secret_key_data, OQS_SIG_STFL_alg_xmss##designator##_oid)) {\\\r\n                return OQS_ERROR;\\\r\n        }\\\r\n\\\r\n        return OQS_SUCCESS;\\\r\n}\\\r\n\\\r\nOQS_API OQS_STATUS OQS_SIG_STFL_alg_xmss##designator##_sign(uint8_t *signature, size_t *signature_len, const uint8_t *message, size_t message_len, OQS_SIG_STFL_SECRET_KEY *secret_key) {\\\r\n        return OQS_SIG_STFL_alg_xmss##mt##_sign(signature, signature_len, message, message_len, secret_key);\\\r\n}\\\r\n\\\r\nOQS_API OQS_STATUS OQS_SIG_STFL_alg_xmss##designator##_verify(const uint8_t *message, size_t message_len, const uint8_t *signature, size_t signature_len, const uint8_t *public_key) {\\\r\n        return OQS_SIG_STFL_alg_xmss##mt##_verify(message, message_len, signature, signature_len, public_key);\\\r\n}\\\r\n\\\r\nOQS_API OQS_STATUS OQS_SIG_STFL_alg_xmss##designator##_sigs_remaining(unsigned long long *remain, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\\\r\n        return OQS_SIG_STFL_alg_xmss##mt##_sigs_remaining(remain, secret_key);\\\r\n}\\\r\n\\\r\nOQS_API OQS_STATUS OQS_SIG_STFL_alg_xmss##designator##_sigs_total(unsigned long long *total, const OQS_SIG_STFL_SECRET_KEY *secret_key) {\\\r\n        return OQS_SIG_STFL_alg_xmss##mt##_sigs_total(total, secret_key);\\\r\n}\r\n\r\n// each of these lines replaces a complete file/compile target\r\n// possibly wrapped with #ifdef OQS_ENABLE_SIG_STFL_xmss_....\r\nXMSS_ALG(, _sha256_h16)\r\nXMSS_ALG(mt, mt_sha256_h60_12)\r\n....\r\n```\r\n\r\nPlease let me know whether you'd want to adopt this -- or whether I'm overlooking a problem with this. If the former, let me know whether I should prepare a complete PR or you'd rather do it yourself.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1913652952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2024-01-28T16:31:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
