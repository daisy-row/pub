{"id":"10844677442","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/558","id":509196721,"node_id":"MDExOlB1bGxSZXF1ZXN0MzI5ODM0MTUz","number":558,"title":"Added assembly optimization for sike","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-10-18T16:49:42Z","updated_at":"2019-11-12T16:45:30Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/558","html_url":"https://github.com/open-quantum-safe/liboqs/pull/558","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/558.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/558.patch"},"body":"Added assembly optimization for sike. Added detection of the bmi2 instruction set to enable MULX. The adx set however cannot be detected using the same mechanism; not sure why (perhaps I need to switch to [this script](https://github.com/autoconf-archive/autoconf-archive/blob/master/m4/ax_ext.m4) instead.)"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/552979139","html_url":"https://github.com/open-quantum-safe/liboqs/pull/558#issuecomment-552979139","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558","id":552979139,"node_id":"MDEyOklzc3VlQ29tbWVudDU1Mjk3OTEzOQ==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2019-11-12T16:45:30Z","updated_at":"2019-11-12T16:45:30Z","author_association":"CONTRIBUTOR","body":"@dstebila (and @xvzcfj, if you know), I'm testing on a mac mini, and I'm getting a different error. Do you know how to check the supported computer flags on a mac, the equivalent to the linux `cat /proc/cpuinfo | grep flags` ?"}},"public":true,"created_at":"2019-11-12T16:45:30Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"10847245105","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/558","id":509196721,"node_id":"MDExOlB1bGxSZXF1ZXN0MzI5ODM0MTUz","number":558,"title":"Added assembly optimization for sike","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-10-18T16:49:42Z","updated_at":"2019-11-12T22:15:06Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/558","html_url":"https://github.com/open-quantum-safe/liboqs/pull/558","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/558.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/558.patch"},"body":"Added assembly optimization for sike. Added detection of the bmi2 instruction set to enable MULX. The adx set however cannot be detected using the same mechanism; not sure why (perhaps I need to switch to [this script](https://github.com/autoconf-archive/autoconf-archive/blob/master/m4/ax_ext.m4) instead.)"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/553141703","html_url":"https://github.com/open-quantum-safe/liboqs/pull/558#issuecomment-553141703","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/558","id":553141703,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzE0MTcwMw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2019-11-12T22:15:06Z","updated_at":"2019-11-12T22:15:06Z","author_association":"MEMBER","body":"> @dstebila (and @xvzcfj, if you know), I'm testing on a mac mini, and I'm getting a different error. Do you know how to check the supported computer flags on a mac, the equivalent to the linux `cat /proc/cpuinfo | grep flags` ?\r\n\r\nNo, I don't know, other than using the C function `__builtin_cpu_supports` as used in https://github.com/open-quantum-safe/liboqs/blob/master/config/ax_x86_cpu_supports.m4"}},"public":true,"created_at":"2019-11-12T22:15:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
