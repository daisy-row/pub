{"id":"9897466168","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/500","id":460501729,"node_id":"MDExOlB1bGxSZXF1ZXN0MjkxNjIwMDgy","number":500,"title":"Switch Frodo to use MSR codebase directly","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":486323384,"node_id":"MDU6TGFiZWw0ODYzMjMzODQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/refactor","name":"refactor","color":"d4c5f9","default":false}],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2019-06-25T15:43:35Z","updated_at":"2019-06-26T12:40:44Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/500","html_url":"https://github.com/open-quantum-safe/liboqs/pull/500","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/500.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/500.patch"},"body":"@christianpaquin As discussed here is a start at switching liboqs to use the Frodo code more directly from MSR rather than via PQClean.  \r\n\r\nIn the MSR codebase, there are multiple places where the various configuration macros get set -- including config.h, frodoxxx.c, and the Makefile.  I've consolidated all of that into one configuration file for each parameter set -- frodo640aes.h, etc. -- and then use gcc's `-include` option to force that configuration file to get loaded before compiling that group of files.  I'm not sure if there's a way to do the analogous thing in VisualStudio.  Do you know?  If not, then I can change it so that there's a frodo640aes.c file which includes the kem.c, noise.c, util.c files just like in Patrick's code base."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/505857454","html_url":"https://github.com/open-quantum-safe/liboqs/pull/500#issuecomment-505857454","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500","id":505857454,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNTg1NzQ1NA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2019-06-26T12:40:44Z","updated_at":"2019-06-26T12:40:44Z","author_association":"MEMBER","body":"Thanks Christian, although now I realize that this may not quite work.  What should happen is that, for example, the file src/kem/frodokem/external/util.c should be compiled 6 times, each time with a different force-include header.  Do you think there's anyway to do that?  If not I know how I can rearchitect the code."}},"public":true,"created_at":"2019-06-26T12:40:44Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"9898085258","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/500","id":460501729,"node_id":"MDExOlB1bGxSZXF1ZXN0MjkxNjIwMDgy","number":500,"title":"Switch Frodo to use MSR codebase directly","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":486323384,"node_id":"MDU6TGFiZWw0ODYzMjMzODQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/refactor","name":"refactor","color":"d4c5f9","default":false}],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2019-06-25T15:43:35Z","updated_at":"2019-06-26T13:57:09Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/500","html_url":"https://github.com/open-quantum-safe/liboqs/pull/500","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/500.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/500.patch"},"body":"@christianpaquin As discussed here is a start at switching liboqs to use the Frodo code more directly from MSR rather than via PQClean.  \r\n\r\nIn the MSR codebase, there are multiple places where the various configuration macros get set -- including config.h, frodoxxx.c, and the Makefile.  I've consolidated all of that into one configuration file for each parameter set -- frodo640aes.h, etc. -- and then use gcc's `-include` option to force that configuration file to get loaded before compiling that group of files.  I'm not sure if there's a way to do the analogous thing in VisualStudio.  Do you know?  If not, then I can change it so that there's a frodo640aes.c file which includes the kem.c, noise.c, util.c files just like in Patrick's code base."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/505886798","html_url":"https://github.com/open-quantum-safe/liboqs/pull/500#issuecomment-505886798","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/500","id":505886798,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNTg4Njc5OA==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2019-06-26T13:57:09Z","updated_at":"2019-06-26T13:57:09Z","author_association":"CONTRIBUTOR","body":"Ah, I see. No, I don't know how to do this in one VS project. In the SIKE codebase I do use the original include strategy, so perhaps that's the way to go here as well."}},"public":true,"created_at":"2019-06-26T13:57:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"9898799477","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/501","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/501/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/501/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/501/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/501","id":461032236,"node_id":"MDU6SXNzdWU0NjEwMzIyMzY=","number":501,"title":"Dilithium files not filtered in Visual Studio","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-06-26T15:14:52Z","updated_at":"2019-06-26T15:15:39Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"The dilithium files are not filtered properly in the Visual Studio project. The `oqs.vcxproj.filters` file needs to be updated."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/505920568","html_url":"https://github.com/open-quantum-safe/liboqs/issues/501#issuecomment-505920568","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/501","id":505920568,"node_id":"MDEyOklzc3VlQ29tbWVudDUwNTkyMDU2OA==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2019-06-26T15:15:39Z","updated_at":"2019-06-26T15:15:39Z","author_association":"CONTRIBUTOR","body":"@dstebila, has the filter-updating script been updated for signatures as well?"}},"public":true,"created_at":"2019-06-26T15:15:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
