{"id":"11147776035","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/134","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/134/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/134/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/134/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/134","id":541185090,"node_id":"MDExOlB1bGxSZXF1ZXN0MzU1ODkwMTcy","number":134,"title":"Added skeleton docker image for user convenience.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-12-20T20:28:36Z","updated_at":"2019-12-23T13:40:14Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/134","html_url":"https://github.com/open-quantum-safe/openssl/pull/134","diff_url":"https://github.com/open-quantum-safe/openssl/pull/134.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/134.patch"},"body":"As discussed with @baentsch, this should allow for the command `docker build` in the root directory to build OpenSSL inside a docker container that the user can then enter and interact with.\r\n\r\nI've currently marked this as a draft since I'm still thinking about how best to add some of the `oqs-*` convenience scripts [here](https://github.com/baentsch/testing/tree/master/integration/oqs_openssl/scripts/dockerizer)."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/568478460","html_url":"https://github.com/open-quantum-safe/openssl/pull/134#issuecomment-568478460","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/134","id":568478460,"node_id":"MDEyOklzc3VlQ29tbWVudDU2ODQ3ODQ2MA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2019-12-23T13:40:14Z","updated_at":"2019-12-23T13:40:14Z","author_association":"NONE","body":"Some feedback as you asked for it plus some observations/suggestions: \r\n- This seems to take a pretty long time to build (the main directory is the docker context, incl. all .git files, so probably no wonder): While this location (top-level) is most convenient for anyone not reading documentation (most people, arguably :) for performance reasons I'd suggest another location for this. Also FYI, the resultant docker image came in at 2.7GB. This is quite a lot, I’d think. The reason behind the goal to have small images (beyond reducing this project’s CO2 footprint :-) is the goal to do images one can more easily deploy in Kubernetes. Another performance concern: When doing `docker build .` on a virtualised, low-power environment, the CPU load (measured by `top`) maxed out at 223 (!) and then the build bombed with memory exhaustion 34 minutes into the run…. Side comment: The dev images in my original PR came in only at ~500M. \r\n- Comment 2: (When building on a more powerful environment) This creates only a static version of all libs: I'd suggest changing either the invocations of the `build_oqs|openssl` scripts to include `LIBTYPE=shared` or to change those to build shared by default (which also does static libs). \r\n- Comment 3: When bash-ing into the resultant image and doing a git status, the file `include/openssl/asn1_mac.h` is reported missing (?) But then again, does it make sense to have the full git history in this image to start with? \r\n- Comment 4: When trying to build this on my Mac locally (vs. in an Ubuntu VM where it worked) the docker build completely failed: \r\n```\r\nMakefile:9133: recipe for target 'test/sslapitest.o' failed\r\nESC[91mmake[1]: *** [test/sslapitest.o] Error 4\r\nESC[0mMakefile:6670: recipe for target 'apps/s_server.o' failed\r\nESC[91mgcc: internal compiler error: Killed (program cc1)\r\nPlease submit a full bug report,\r\n```\r\nIn this case, it cannot be resource problems (it’s a 64G RAM, 6-core i7 whopper).\r\n\r\n\r\n—> Long story short, I’d vote for \r\n- first cleaning up the `build` scripts (dynamic by default, possibly restricting `make -j` utilising something like `grep -c ^processor /proc/cpuinfo`), \r\n- then upgrading the CI Dockerfiles (current OS versions with OpenSSL1.1.1 included, e.g., as [here](https://github.com/baentsch/testing/tree/master/ci-containers) \r\n- then adding (maybe in the same location (`oqs_test/scripts`) such a ‘main platform’ Dockerfile (building on the master image also used for CI — saving a few Docker layers). \r\n\r\nIf better, let’s talk (I’m online again on Dec 30 and then again Jan 3)."}},"public":true,"created_at":"2019-12-23T13:40:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11148630239","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-software","url":"https://api.github.com/repos/open-quantum-safe/oqs-software"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-software/issues/6","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-software","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-software/issues/6/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-software/issues/6/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-software/issues/6/events","html_url":"https://github.com/open-quantum-safe/oqs-software/pull/6","id":538725815,"node_id":"MDExOlB1bGxSZXF1ZXN0MzUzODI2NjM2","number":6,"title":"Added OQS centos development image.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-12-16T22:57:27Z","updated_at":"2019-12-23T16:04:20Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-software/pulls/6","html_url":"https://github.com/open-quantum-safe/oqs-software/pull/6","diff_url":"https://github.com/open-quantum-safe/oqs-software/pull/6.diff","patch_url":"https://github.com/open-quantum-safe/oqs-software/pull/6.patch"},"body":"As per discussion with @baentsch, this is a draft PR adding a docker image which provides a development environment with liboqs and OQS-OpenSSL installed in system locations. Compilation of headers and dynamic loading can be done out of the box, and dynamic linking requires only the `-lssl -lcrypto -loqs` flags.\r\n\r\nI'll add a README and refactor next.\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-software/issues/comments/568512986","html_url":"https://github.com/open-quantum-safe/oqs-software/pull/6#issuecomment-568512986","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-software/issues/6","id":568512986,"node_id":"MDEyOklzc3VlQ29tbWVudDU2ODUxMjk4Ng==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2019-12-23T16:04:20Z","updated_at":"2019-12-23T16:04:20Z","author_association":"NONE","body":"I have not been asked for review, but I had time anyway :-)\r\n\r\n- I like this image much better than the openssl draft one I just commented on: git is in sync when logging in, the image is still a bit large but much smaller than the Ubuntu one (which is weird, but good, given how large Centos normally is).\r\n- I ran into the same performance limitations on a single-core CPU. For a possible solution, please take a look at [this branch example](https://github.com/baentsch/testing/blob/limit-makej/integration/oqs_openssl/scripts/build_openssl.sh) : I introduced an environment variable, which, when **not** set throttles building to `make -j2`. For people that *read* the documentation (and that know what they do) this limit can simply be removed by setting the variable. I'd think this approach is safer than what the build{liboqs|openssl} scripts currently do (aggressive/unlimited `make -j` -- which apparently also is/was a problem for CI)\r\n- When using your image to build curl, it worked like a charm without any need to set CPP- or LDFLAGS: Nice (&better than my proposal -- although that one is still several hundred MB smaller :-) Maybe worthwhile having a chat as to what matters more (?). \r\n\r\n--> What about agreeing on the goals for the Docker images first? I took a shot at this with [this Wiki](https://github.com/baentsch/testing/wiki/Docker-image-goals) as I couldn't create a page in OQS/testing: Please place it somewhere where you deem it helpful and everyone can chime in and we come to agreement before continuing our work.\r\n"}},"public":true,"created_at":"2019-12-23T16:04:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
