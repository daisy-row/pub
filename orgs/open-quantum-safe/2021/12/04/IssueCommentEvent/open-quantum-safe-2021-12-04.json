{"id":"19183675091","type":"IssueCommentEvent","actor":{"id":7863838,"login":"tedeaton","display_login":"tedeaton","gravatar_id":"","url":"https://api.github.com/users/tedeaton","avatar_url":"https://avatars.githubusercontent.com/u/7863838?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1144","id":1070974596,"node_id":"PR_kwDOA-eq3c4vYYNo","number":1144,"title":"Adding a speed_common script to benchmark OQS AES and hash algorithms","user":{"login":"tedeaton","id":7863838,"node_id":"MDQ6VXNlcjc4NjM4Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/7863838?v=4","gravatar_id":"","url":"https://api.github.com/users/tedeaton","html_url":"https://github.com/tedeaton","followers_url":"https://api.github.com/users/tedeaton/followers","following_url":"https://api.github.com/users/tedeaton/following{/other_user}","gists_url":"https://api.github.com/users/tedeaton/gists{/gist_id}","starred_url":"https://api.github.com/users/tedeaton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tedeaton/subscriptions","organizations_url":"https://api.github.com/users/tedeaton/orgs","repos_url":"https://api.github.com/users/tedeaton/repos","events_url":"https://api.github.com/users/tedeaton/events{/privacy}","received_events_url":"https://api.github.com/users/tedeaton/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-12-03T21:16:31Z","updated_at":"2021-12-04T21:02:47Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1144","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1144","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1144.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1144.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nThis adds a speed_common script, similar to speed_kem and speed_sig, but for benchmarking the encryption and hashing algorithms that `liboqs` uses. Specifically, it benchmarks AES128, AES256, SHA256, SHA384, SHA512, SHA3-256, SHA3-384, SHA3-512, SHA3-shake128, and SHA3-shake256. Currently it only benchmarks the main API of each of the hash algorithms, not the incremental version (that is something that could be added later if it's needed).\r\n\r\nThe script has a few options to change how it is run:\r\n`--msglen n` : Each algorithm is benchmarked with a message length of `n` bytes (must be a multiple of 16 to benchmark AES)\r\n`--outlen n` : For algorithms with variable-length output (e.g., shake128), specifies the output length.\r\n`<alg>` : Only benchmark a specific algorithm.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFulfills request in #1143 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/986092291","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1144#issuecomment-986092291","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144","id":986092291,"node_id":"IC_kwDOA-eq3c46xpMD","user":{"login":"tedeaton","id":7863838,"node_id":"MDQ6VXNlcjc4NjM4Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/7863838?v=4","gravatar_id":"","url":"https://api.github.com/users/tedeaton","html_url":"https://github.com/tedeaton","followers_url":"https://api.github.com/users/tedeaton/followers","following_url":"https://api.github.com/users/tedeaton/following{/other_user}","gists_url":"https://api.github.com/users/tedeaton/gists{/gist_id}","starred_url":"https://api.github.com/users/tedeaton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tedeaton/subscriptions","organizations_url":"https://api.github.com/users/tedeaton/orgs","repos_url":"https://api.github.com/users/tedeaton/repos","events_url":"https://api.github.com/users/tedeaton/events{/privacy}","received_events_url":"https://api.github.com/users/tedeaton/received_events","type":"User","site_admin":false},"created_at":"2021-12-04T21:02:47Z","updated_at":"2021-12-04T21:02:47Z","author_association":"COLLABORATOR","body":"That should be how the script works already, unless I messed up the input parsing. If no algorithm is specified, then `single_alg` never gets set, and each algorithm should be run. Similarly, `message_len` is set to 64 bytes by default.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/986092291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-12-04T21:02:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
