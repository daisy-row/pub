{"id":"19341712265","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"push_id":8623838991,"size":1,"distinct_size":1,"ref":"refs/heads/OQS-OpenSSL_1_1_1-stable","head":"963214935610384bfc3fe38c51d6ca8e63eeba40","before":"5004eb3544482aa0e162b6d420383e87f8651bf9","commits":[{"sha":"963214935610384bfc3fe38c51d6ca8e63eeba40","author":{"email":"info@baentsch.ch","name":"Michael Baentsch"},"message":"Merging OpenSSL 1.1.1m (#346)\n\n* Skip BOM when reading the config file\r\n\r\nFixes #13840\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13857)\r\n\r\n(cherry picked from commit 4369a882a565c42673b28c586a5c46a8bca98d17)\r\n\r\n* X509_cmp(): Fix comparison in case x509v3_cache_extensions() failed to due to invalid cert\r\n\r\nThis is the backport of #13755 to v1.1.1.\r\nFixes #13698\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13756)\r\n\r\n* x509_vfy.c: Fix a regression in find_isser()\r\n\r\n...in case the candidate issuer cert is identical to the target cert.\r\n\r\nFixes #13739\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13749)\r\n\r\n* DOCS: Fix incorrect pass phrase options references\r\n\r\nThere were a number of older style references to the pass phrase\r\noptions section, now streamlined with the current openssl(1).\r\n\r\nFixes #13883\r\n\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\n(Merged from https://github.com/openssl/openssl/pull/13886)\r\n\r\n* Fix regression in no-deprecated build\r\n\r\nAlso add a new no-deprecated CI build to test it.\r\n\r\nFixes #13896\r\n\r\nReviewed-by: David von Oheimb <david.von.oheimb@siemens.com>\r\n(Merged from https://github.com/openssl/openssl/pull/13902)\r\n\r\n* Ensure SRP BN_mod_exp follows the constant time path\r\n\r\nSRP_Calc_client_key calls BN_mod_exp with private data. However it was\r\nnot setting BN_FLG_CONSTTIME and therefore not using the constant time\r\nimplementation. This could be exploited in a side channel attack to\r\nrecover the password.\r\n\r\nSince the attack is local host only this is outside of the current OpenSSL\r\nthreat model and therefore no CVE is assigned.\r\n\r\nThanks to Mohammed Sabt and Daniel De Almeida Braga for reporting this\r\nissue.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13889)\r\n\r\n* Fix typo in crl2pkcs documentation\r\n\r\nFixes #13910\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13911)\r\n\r\n(cherry picked from commit 6857058016e91d3182c2117922dd8001b27f5639)\r\n\r\n* CI: Add some legacy stuff that we do not test in GitHub CI yet\r\n\r\nThere are some options that seem to belong to the legacy build.\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/13903)\r\n\r\n(cherry picked from commit adcaebc3148fe0fde3f7641c4b607f30e1479986)\r\n\r\n* Drop Travis\r\n\r\nAt this point, we have transitioned completely from Travis to GitHub Actions\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13941)\r\n\r\n* check_sig_alg_match(): weaken sig nid comparison to base alg\r\n\r\nThis (re-)allows RSA-PSS signers\r\n\r\nFixes #13931\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13982)\r\n\r\n* Add some missing committers to the AUTHORS list\r\n\r\nFixes #13815\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14029)\r\n\r\n(cherry picked from commit af403db090ee66715e81f0062d1ef614e8d921b5)\r\n\r\n* apps/ca: Properly handle certificate expiration times in do_updatedb\r\n\r\nFixes #13944\r\n\r\n   + changed ASN1_UTCTIME to ASN1_TIME\r\n   + removed all Y2K code from do_updatedb\r\n   + changed compare to ASN1_TIME_compare\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14026)\r\n\r\n* Prevent creating empty folder \"../apps/include\"\r\n\r\nThis folder \"../apps/include\" is accidentally created.\r\nThis prevents this glitch.\r\n\r\nFixes 19b4fe5844b (\"Add a CMAC test\")\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14051)\r\n\r\n* NOTES.WIN: fix typo\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/14078)\r\n\r\n* configdata.pm: Better display of enabled/disabled options\r\n\r\nThe options listed in the array @disablables are regular expressions.\r\nFor most of them, it's not visible, but there are a few.\r\n\r\nHowever, configdata.pm didn't quite treat them that way, which meant\r\nthat the few that are visibly regular expressions, there's a\r\ndifference between that and the corresponding the key in %disabled,\r\nwhich is never a regular expression.\r\n\r\nTo correctly display the enabled and disabled options with --dump,\r\nwe must therefore go through a bit of Perl gymnastics to get the\r\noutput correct enough, primarly so that disabled features don't look\r\nenabled.\r\n\r\nFixes #13790\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14081)\r\n\r\n* Configuration: ensure that 'no-tests' works correctly\r\n\r\n'no-tests' wasn't entirely respected by test/build.info.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14081)\r\n\r\n* Remove unused 'peer_type' from SSL_SESSION\r\n\r\nThis field has not been used since #3858 was merged in 2017 when we\r\nmoved to a table-based lookup for certificate type properties instead of\r\nan index-based one.\r\n\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\n(Merged from https://github.com/openssl/openssl/pull/13991)\r\n\r\n(cherry picked from commit 3bc0b621a7baf1a11bc5cad69a287ad093674d68)\r\n\r\n* Configurations/descrip.mms.tmpl: avoid enormous PIPE commands\r\n\r\nDCL has a total command line limitation that's too easily broken by\r\nthem.\r\n\r\nWe solve them by creating separate message scripts and using them.\r\n\r\nFixes #13789\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13834)\r\n\r\n* VMS documentation fixes\r\n\r\nThis mostly clarifies details.\r\n\r\nFixes #13789\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13834)\r\n\r\n* Fix Null pointer deref in X509_issuer_and_serial_hash()\r\n\r\nThe OpenSSL public API function X509_issuer_and_serial_hash() attempts\r\nto create a unique hash value based on the issuer and serial number data\r\ncontained within an X509 certificate. However it fails to correctly\r\nhandle any errors that may occur while parsing the issuer field (which\r\nmight occur if the issuer field is maliciously constructed). This may\r\nsubsequently result in a NULL pointer deref and a crash leading to a\r\npotential denial of service attack.\r\n\r\nThe function X509_issuer_and_serial_hash() is never directly called by\r\nOpenSSL itself so applications are only vulnerable if they use this\r\nfunction directly and they use it on certificates that may have been\r\nobtained from untrusted sources.\r\n\r\nCVE-2021-23841\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(cherry picked from commit 8130d654d1de922ea224fa18ee3bc7262edc39c0)\r\n\r\n* Test that X509_issuer_and_serial_hash doesn't crash\r\n\r\nProvide a certificate with a bad issuer and check that\r\nX509_issuer_and_serial_hash doesn't crash.\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(cherry picked from commit 55869f594f052561b11a2db6a7c42690051868de)\r\n\r\n* Refactor rsa_test\r\n\r\nReduce code copying by factoring out common code into a separate function.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix the RSA_SSLV23_PADDING padding type\r\n\r\nThis also fixes the public function RSA_padding_check_SSLv23.\r\n\r\nCommit 6555a89 changed the padding check logic in RSA_padding_check_SSLv23\r\nso that padding is rejected if the nul delimiter byte is not immediately\r\npreceded by at least 8 bytes containing 0x03. Prior to that commit the\r\npadding is rejected if it *is* preceded by at least 8 bytes containing 0x03.\r\n\r\nPresumably this change was made to be consistent with what it says in\r\nappendix E.3 of RFC 5246. Unfortunately that RFC is in error, and the\r\noriginal behaviour was correct. This is fixed in later errata issued for\r\nthat RFC.\r\n\r\nThis has no impact on libssl for modern versions of OpenSSL because\r\nthere is no protocol support for SSLv2 in these versions. However\r\napplications that call RSA_paddin_check_SSLv23 directly, or use the\r\nRSA_SSLV23_PADDING mode may still be impacted. The effect of the original\r\nerror is that an RSA message encrypted by an SSLv2 only client will fail to\r\nbe decrypted properly by a TLS capable server, or a message encrypted by a\r\nTLS capable client will fail to decrypt on an SSLv2 only server. Most\r\nsignificantly an RSA message encrypted by a TLS capable client will be\r\nsuccessfully decrypted by a TLS capable server. This last case should fail\r\ndue to a rollback being detected.\r\n\r\nThanks to D. Katz and Joel Luellwitz (both from Trustwave) for reporting\r\nthis issue.\r\n\r\nCVE-2021-23839\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix rsa_test to properly test RSA_SSLV23_PADDING\r\n\r\nWe test all three cases:\r\n- An SSLv2 only client talking to a TLS capable server\r\n- A TLS capable client talking to an SSLv2 only server\r\n- A TLS capable client talking to a TLS capable server (should fail due\r\nto detecting a rollback attack)\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Don't overflow the output length in EVP_CipherUpdate calls\r\n\r\nCVE-2021-23840\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Update CHANGES and NEWS for new release\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Update copyright year\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Prepare for 1.1.1j release\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Prepare for 1.1.1k-dev\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* TEST: Add missing initialization\r\n\r\nCompiler complained.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14204)\r\n\r\n(cherry picked from commit 55e9d8cfffc1a40b0ab72e014ff62d5ef2a0ed63)\r\n\r\n* Use CRIOGET to fetch a crypto descriptor when present.\r\n\r\nFreeBSD's current /dev/crypto implementation requires that consumers\r\nclone a separate file descriptor via the CRIOGET ioctl that can then\r\nbe used with other ioctls such as CIOCGSESSION.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n\r\n(cherry picked from commit b39c215decf6e68c28cb64dcfaf5ae5a7e8d35b4)\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13853)\r\n\r\n* Close /dev/crypto file descriptor after CRIOGET ioctl().\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n\r\n(cherry picked from commit 3ddf44ea5a2c1c8c55f4f4072a611791c79d4e7c)\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13853)\r\n\r\n* CRYPTO_gcm128_decrypt: fix mac or tag calculation\r\n\r\nThe incorrect code is in #ifdef branch that is normally\r\nnot compiled in.\r\n\r\nSigned-off-by: Zhang Jinde <zjd5536@163.com>\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/12968)\r\n\r\n(cherry picked from commit 1d724b5e82ba36fb50fd24db3cd664da570daf84)\r\n\r\n* Fix an integer overflow in o_time.c\r\n\r\nIf input offset_sec is sufficiently large (> INT32_MAX * SECS_PER_DAY, which is possible for a long on 64-bit platforms), then the first assignment contains an overflow.\r\n\r\nI think leaving offset_hms as an int is still safe.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14252)\r\n\r\n(cherry picked from commit 75de54363506e2b2480fc6baf0cd45b1f7fc8816)\r\n\r\n* Fix filename escaping in c_rehash\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14301)\r\n\r\n(cherry picked from commit 2d968951227acd422f0e712035de3216d47fc980)\r\n\r\n* Check ASN1_item_ndef_i2d() return value.\r\n\r\nReturn an error instead of trying to malloc a negative number.\r\nThe other usage in this file already had a similar check, and the caller\r\nshould have put an entry on the error stack already.\r\n\r\nNote that we only check the initial calls to obtain the encoded length,\r\nand assume that the follow-up call to actually encode to the allocated\r\nstorage will succeed if the first one did.\r\n\r\nFixes: #14177\r\n\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/14308)\r\n\r\n(cherry picked from commit 90b4247cc5dca58cee9da5f6975bb38fd200100a)\r\n\r\n* [github-ci] Add a out-of-tree_build job\r\n\r\nThis adds a new job to trigger the bug reported in\r\n<https://github.com/openssl/openssl/issues/11940>\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14388)\r\n\r\n* [1.1.1] Fix `make update` for out-of-tree builds\r\n\r\nFixes #11940\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/14388)\r\n\r\n* Check SSL_set1_chain error in set_cert_cb\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14469)\r\n\r\n(cherry picked from commit 1aa7ecd0d3f6d9c3739cf2e2d87673a3be03b352)\r\n\r\n* modes: fix coverity 1449860: overlapping memory copy\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14584)\r\n\r\n(cherry picked from commit 145f12d12dc83c737676883c625c2a95d34251ed)\r\n\r\n* modes: fix coverity 1449851: overlapping memory copy\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14584)\r\n\r\n(cherry picked from commit b875e0e820b07420429ebb90724ed28686a98853)\r\n\r\n* ssl: fix coverity 1451515: out of bounds memory access\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14585)\r\n\r\n(cherry picked from commit 3de7f014a985637361bdee775f78209300c88aae)\r\n\r\n* apps: fix coverity 966560: division by zero\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14586)\r\n\r\n(cherry picked from commit 7e7e034a10842dad3866c9447481b8527024bf44)\r\n\r\n* Add a missing RUN_ONCE in rand_lib.c\r\n\r\nSome of the callbacks in rand_lib.c were being invoked without the\r\nRUN_ONCE for that file being called. We add it during rand_pool_new\r\nwhich should cover all cases.\r\n\r\nFixes #7870\r\nFixes #11144\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14603)\r\n\r\n* ASN1: Reset the content dump flag after dumping\r\n\r\nWhen encountering a badly coded item, the DER printer (ASN1_print_dump())\r\nsets a flag to ensure that an additional hex dump of the offending content\r\nis printed as part of the output.  Unfortunately, this flag is never reset,\r\nwhich means that all following items are printed with the extra hex dump,\r\nwhether they are faulty or not.\r\n\r\nResetting the flag after hex dumping ensures that only the faulty contents\r\nare printed with the additional hex dump.\r\n\r\nFixes #14626\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14627)\r\n\r\n(cherry picked from commit 6e34a1048ce4871371eac224b995c3b4338f6166)\r\n\r\n* Fix missing INVALID_EXTENSION\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14639)\r\n\r\n* check_chain_extensions: Do not override error return value by check_curve\r\n\r\nThe X509_V_FLAG_X509_STRICT flag enables additional security checks of the\r\ncertificates present in a certificate chain. It is not set by default.\r\n\r\nStarting from OpenSSL version 1.1.1h a check to disallow certificates with\r\nexplicitly encoded elliptic curve parameters in the chain was added to the\r\nstrict checks.\r\n\r\nAn error in the implementation of this check meant that the result of a\r\nprevious check to confirm that certificates in the chain are valid CA\r\ncertificates was overwritten. This effectively bypasses the check\r\nthat non-CA certificates must not be able to issue other certificates.\r\n\r\nIf a \"purpose\" has been configured then a subsequent check that the\r\ncertificate is consistent with that purpose also checks that it is a\r\nvalid CA. Therefore where a purpose is set the certificate chain will\r\nstill be rejected even when the strict flag has been used. A purpose is\r\nset by default in libssl client and server certificate verification\r\nroutines, but it can be overriden by an application.\r\n\r\nAffected applications explicitly set the X509_V_FLAG_X509_STRICT\r\nverification flag and either do not set a purpose for the certificate\r\nverification or, in the case of TLS client or server applications,\r\noverride the default purpose to make it not set.\r\n\r\nCVE-2021-3450\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Teach TLSProxy how to encrypt <= TLSv1.2 ETM records\r\n\r\nPreviously TLSProxy only knew how to \"repack\" messages for TLSv1.3.\r\nMost of the handshake in <= TLSv1.2 is unencrypted so this hasn't been\r\ntoo much of restriction. However we now want to modify reneg handshakes\r\nwhich are encrypted so we need to add that capability.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Add a test for CVE-2021-3449\r\n\r\nWe perform a reneg handshake, where the second ClientHello drops the\r\nsig_algs extension. It must also contain cert_sig_algs for the test to\r\nwork.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* ssl sigalg extension: fix NULL pointer dereference\r\n\r\nAs the variable peer_sigalgslen is not cleared on ssl rehandshake, it's\r\npossible to crash an openssl tls secured server remotely by sending a\r\nmanipulated hello message in a rehandshake.\r\n\r\nOn such a manipulated rehandshake, tls1_set_shared_sigalgs() calls\r\ntls12_shared_sigalgs() with the peer_sigalgslen of the previous\r\nhandshake, while the peer_sigalgs has been freed.\r\nAs a result tls12_shared_sigalgs() walks over the available\r\npeer_sigalgs and tries to access data of a NULL pointer.\r\n\r\nThis issue was introduced by c589c34e61 (Add support for the TLS 1.3\r\nsignature_algorithms_cert extension, 2018-01-11).\r\n\r\nSigned-off-by: Peter Kästle <peter.kaestle@nokia.com>\r\nSigned-off-by: Samuel Sapalski <samuel.sapalski@nokia.com>\r\n\r\nCVE-2021-3449\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n\r\n* Ensure buffer/length pairs are always in sync\r\n\r\nFollowing on from CVE-2021-3449 which was caused by a non-zero length\r\nassociated with a NULL buffer, other buffer/length pairs are updated to\r\nensure that they too are always in sync.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Update CHANGES and NEWS for new release\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n\r\n* Update copyright year\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n\r\n* Prepare for 1.1.1k release\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n\r\n* Prepare for 1.1.1l-dev\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n\r\n* Fix BIO_new_ssl_connect() to not leak memory\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14719)\r\n\r\n(cherry picked from commit 7947a1eb13c221bbc034796bd394ba00b0e2387d)\r\n\r\n* Fix typo in BIO_push.pod\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14718)\r\n\r\n(cherry picked from commit 2db9bef264ba39e173d6b6a3a800595e15eef31b)\r\n\r\n* Print correct error message in utils/mkdir-p.pl\r\n\r\nCommit 70a56b914772e6b21cda2a5742817ae4bb7290f1 introduced a regression.\r\n\r\nIf utils/mkdir-p.pl fails to create a target dir because of insufficient file system\r\npermissions, the subsequent test for dir existence always fails and overwrites\r\nthe system error. As a result, a user is presented with a misleading error message.\r\n\r\nE.g. if a user tries to create a dir under /usr/local and does not have permissions\r\nfor it, the reported error message is \"Cannot create directory /usr/local/lib: No such file or directory\",\r\nwhereas the expected error message is \"Cannot create directory /usr/local/lib: Permission denied\".\r\n\r\nThis commit introduces a fix by declaring an additional local variable to cache\r\nthe original error message from mkdir. If -d check fails and overwrites the system\r\nerror, the user is still presented with the original error from mkdir.\r\n\r\nCLA: Trivial\r\n\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14487)\r\n\r\n(cherry picked from commit af2e1e9c81110ca1a156430686e2f171e80ebfa0)\r\n\r\n* doc: fix enc -z option documentation\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14499)\r\n\r\n(cherry picked from commit 6635ea531e9f7709e5880dd77fd4c3403a5c3db7)\r\n\r\n* Remove unnecessary BIO_do_handshake()s\r\n\r\nSince BIO_do_connect() and BIO_do_handshake() are same, no\r\nneed to invoke BIO_do_handshake() once more after BIO_do_connect().\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14725)\r\n\r\n(cherry picked from commit 975e37cd016f86985d16f1ee646e88213494854a)\r\n\r\n* Fix potential double free in sslapitest.c\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14758)\r\n\r\n(cherry picked from commit 493e78986f9677c2b321273da51c276b9a8182d8)\r\n\r\n* Fix typos in x509.pod\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14783)\r\n\r\n(cherry picked from commit 4c979cbeeb9792b170670fa15e29d077597e7ee0)\r\n\r\n* crl2pkcs7 shouldn't include empty optional sets\r\n\r\nIf using crl2pkcs7 -nocrl and with no -certfiles, we shouldn't include\r\nthe implicitly tagged [0] certs and [1] crls sets as they are marked\r\noptional and would be empty.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14781)\r\n\r\n(cherry picked from commit d3a5898a7f4980bc0fa6345c408f88007573c405)\r\n\r\n* Handle set_alpn_protos inputs better.\r\n\r\nIt's possible to set an invalid protocol list that will be sent in a\r\nClientHello. This validates the inputs to make sure this does not\r\nhappen.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14679)\r\n\r\n* srp: fix double free,\r\n\r\nIn function SRP_create_verifier_ex, it calls SRP_create_verifier_BN_ex(..., &v, ..) at line 653.\r\nIn the implementation of SRP_create_verifier_BN_ex(), *verify (which is the paremeter of v) is allocated a pointer via BN_new() at line 738.\r\nAnd *verify is freed via BN_clear_free() at line 743, and return 0.\r\nThen the execution continues up to goto err at line 655, and the freed v is freed again at line 687.\r\n\r\nBug reported by @Yunlongs\r\n\r\nFixes #14913\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14921)\r\n\r\n(cherry picked from commit b06450bcf763735a89b65ca3ec176600fe7fceed)\r\n\r\n* ts: fix double free on error path.\r\n\r\nIn function int_ts_RESP_verify_token, if (flags & TS_VFY_DATA) is true, function ts_compute_imprint() will be called at line 299.\r\nIn the implementation of ts_compute_imprint, it allocates md_alg at line 406.\r\nBut after the allocation, if the execution goto err, then md_alg will be freed in the first time by X509_ALGOR_free at line 439.\r\n\r\nAfter that, ts_compute_imprint returns 0 and the execution goto err branch of int_ts_RESP_verify_token.\r\nIn the err branch, md_alg will be freed in the second time at line 320.\r\n\r\nBug reported by @Yunlongs\r\n\r\nFixes #14914\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14921)\r\n\r\n(cherry picked from commit db78c84eb2fa9c41124690bcc2ea50e05f5fc7b7)\r\n\r\n* engine: fix double free on error path.\r\n\r\nIn function try_decode_PKCS8Encrypted, p8 is freed via X509_SIG_free() at line 481.\r\nIf function new_EMBEDDED() returns a null pointer at line 483, the execution will goto nop8.\r\nIn the nop8 branch, p8 is freed again at line 491.\r\n\r\nBug reported by @Yunlongs\r\n\r\nFixes #14915\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14921)\r\n\r\n(cherry picked from commit efe8d69daa1a68be0a7f0f73220947c848e7ed1d)\r\n\r\n* Some compilers define __STDC_VERSION__ in c++\r\n\r\nSome compilers(g++ on Solaris/Illumos) define __STDC__VERSION__ in c++ .\r\nThis causes c++ code that uses openssl to break on these compilers since\r\n_Noreturn is not a keyword in c++ .\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14944)\r\n\r\n(cherry picked from commit 1f3b58d8413cfa3824e9c0a146dee6ceedbc367e)\r\n\r\n* Test that EVP_PKEY_cmp() returns 1 when comparing a key to itself\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14982)\r\n\r\n* Correct the return value on match and mismatch for MAC pkeys\r\n\r\nFixes #14147\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14982)\r\n\r\n* Don't remove $(TARFILE) when cleaning\r\n\r\nThis file is outside the source tree, so we have no business removing\r\nit.  This is especially concerning if that was the tarball the user\r\nhad to create the source tree.\r\n\r\nFixes #14981\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14985)\r\n\r\n(cherry picked from commit f58f7ec9397de7b752aa547e2677933559a657db)\r\n\r\n* ASN1: Ensure that d2i_ASN1_OBJECT() frees the strings on ASN1_OBJECT reuse\r\n\r\nThe 'sn' and 'ln' strings may be dynamically allocated, and the\r\nASN1_OBJECT flags have a bit set to say this.  If an ASN1_OBJECT with\r\nsuch strings is passed to d2i_ASN1_OBJECT() for reuse, the strings\r\nmust be freed, or there is a memory leak.\r\n\r\nFixes #14667\r\n\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/14938)\r\n\r\n* Test that we don't have a memory leak in d2i_ASN1_OBJECT.\r\n\r\nFixes #14667\r\n\r\nReworked test supplied by @smcpeak into a unit test.\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14938)\r\n\r\n* man: s_server: fix typo in -alpn option description\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/15098)\r\n\r\n* Use OCSP-specific error code for clarity\r\n\r\nFixes #12735 for 1.1.1\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15109)\r\n\r\n* Support for Android NDK r22\r\n\r\nThis is a backport of #13434, Fixes #13685.\r\n\r\nI think builds using standalone toolchain are fine so I left them alone,\r\nbut `Configure` will fail if using the NDK directly because the\r\n`platforms` and `sysroot` directories were removed.\r\n\r\nIf `sysroot` is missing, omit the `--sysroot` and `-gcc-toolchain`\r\narguments and use the triplet form clang command.\r\n\r\nAlso since `platforms` was being used for the default API level, use\r\n`meta/platforms.json` instead if needed.\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/13694)\r\n\r\n* Avoid sending alerts after shutdown\r\n\r\nFixes #11388\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15159)\r\n\r\n(cherry picked from commit 22d1138fe2fde9a16e80b81de1d848ae6fa879ef)\r\n\r\n* BIO_listen: disable setting ipv6_v6only on OpenBSD as it is a read only data and true\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/15015)\r\n\r\n(cherry picked from commit f7f0632b01cf16efccb133e395cf115c194bd003)\r\n\r\n* Try to parse private key as PKCS#8 first, fallback afterwards\r\n\r\nFixes #15022\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15075)\r\n\r\n* Testing private keys with extra attributes\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15075)\r\n\r\n* check i2d_ASN1_TYPE return value\r\n\r\nadd a length check to the return value of function i2d_ASN1_TYPE. Return an error instead of trying to malloc a negative number.\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14828)\r\n\r\n(cherry picked from commit c65abf2213117eb5348a46fbc18f706aca052e85)\r\n\r\n* Improve RFC 8446 PSK key exchange mode compliance\r\n\r\nIt's a MUST-level requirement that if the client sends a pre_shared_key\r\nextension not accompanied by a psk_key_exchange_modes extension, the\r\nserver must abort the handshake.  Prior to this commit the server\r\nwould continue on.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n\r\n(cherry picked from commit efe0f315354b020213097885c79ce856a2f5ac68)\r\n\r\n(Merged from https://github.com/openssl/openssl/pull/15255)\r\n\r\n* make update\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15255)\r\n\r\n* Don't send key_share for PSK-only key exchange\r\n\r\nTLS 1.3 allows for the \"psk_ke\" and \"psk_dhe_ke\" key-exchange modes.\r\nOnly the latter mode introduces a new ephemeral (Diffie-Hellman)\r\nkey exchange, with the PSK being the only key material used in the\r\nformer case.\r\n\r\nIt's a compliance requirement of RFC 8446 that the server MUST NOT\r\nsend a KeyShareEntry when using the \"psk_ke\" mode, but prior to\r\nthis commit we would send a key-share based solely on whether the\r\nclient sent one.  This bug goes unnoticed in our internal test suite\r\nsince openssl communicating with openssl can never negotiate the\r\nPSK-only key-exchange mode.  However, we should still be compliant\r\nwith the spec, so check whether the DHE mode was offered and don't\r\nsend a key-share if it wasn't.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n\r\n(cherry picked from commit e776858bce32d473bd7a69c616ad7f6c2f979dfc)\r\n\r\n(Merged from https://github.com/openssl/openssl/pull/15255)\r\n\r\n* Update expected results for tls13kexmodes tests\r\n\r\nOne of the scenarios constructed in these tests was erroneously\r\nproducing successful handshakes until the previous commits, but should\r\nhave been failing.  Update our expected behavior to match the\r\nspecification requirements, and adjust the commentary slightly for\r\na test case relevant for the other preceding commit.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n\r\n(cherry picked from commit 80c25611abd7067815943187f36f5e1879201678)\r\n\r\n(Merged from https://github.com/openssl/openssl/pull/15255)\r\n\r\n* Avoid division by zero in hybrid point encoding\r\n\r\nIn hybrid and compressed point encodings, the form octet contains a bit\r\nof information allowing to calculate y from x.  For a point on a binary\r\ncurve, this bit is zero if x is zero, otherwise it must match the\r\nrightmost bit of of the field element y / x.  The existing code only\r\nconsiders the second possibility. It could thus incorrecly fail with a\r\ndivision by zero error as found by Guido Vranken's cryptofuzz.\r\n\r\nThis commit adds a few explanatory comments to oct2point. The only\r\nactual code change is in the last hunk which adds a BN_is_zero(x)\r\ncheck to avoid the division by zero.\r\n\r\nFixes #15021\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15112)\r\n\r\n* Test oct2point for hybrid point encoding of (0, y)\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15112)\r\n\r\n* Inherit hostflags verify params even without hosts\r\n\r\nX509_VERIFY_PARAM_inherit() now copies hostflags independently of hosts.\r\n\r\nPreviously hostflags were only copied when at least one host was set.\r\nTypically applications don't configure hosts on SSL_CTX. The change\r\nenables applications to configure hostflags on SSL_CTX and have OpenSSL\r\ncopy the flags from SSL_CTX to SSL.\r\n\r\nFixes: https://github.com/openssl/openssl/issues/14579\r\nSigned-off-by: Christian Heimes <christian@python.org>\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14856)\r\n\r\n* Properly restore XMM registers in ChaCha20's AVX-512(VL) assembly\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15315)\r\n\r\n(cherry picked from commit 6d3f798cba8075e700003aaf34f1e72bb930086c)\r\n\r\n* Cleanup the peer point formats on regotiation\r\n\r\nFixes #14875\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15383)\r\n\r\n(cherry picked from commit 3f987381929ee725daf4746591144dde18f313e1)\r\n\r\n* s_client.pod: Fix grammar in NOTES section.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/12907)\r\n\r\n* Call SSLfatal when the generate_ticket_cb returns 0\r\n\r\nOtherwise, the state machine ends up being in a bad state:\r\n```\r\nSSL routines:write_state_machine:missing fatal:ssl/statem/statem.c:850:\r\n```\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/15485)\r\n\r\n* Put init_ec_point_formats() inside #ifndef OPENSSL_NO_EC\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/15518)\r\n\r\n* Modify ssl_handshake_hash to call SSLfatal\r\n\r\nWhen EVP_MD_CTX_new fails call SSLfatal before the goto err.\r\nThis resolves a state machine issue on the out of memory condition:\r\nssl/statem/statem.c:643: OpenSSL internal error: Assertion failed:\r\n(s)->statem.in_init && (s)->statem.state == MSG_FLOW_ERROR\r\n\r\nFixes #15491.\r\nCLA: trivial\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15511)\r\n\r\n* ee-self-signed.pem: Restore original version, adding -attime to 25-test_verify.t\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15505)\r\n\r\n* Check the return value of ASN1_STRING_length\r\n\r\nASN1_STRING_length gets the field 'length' of msg, which\r\ncan be manipulated through a crafted input.\r\nAdd a check to avoid error execution of OPENSSL_malloc().\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15583)\r\n\r\n(cherry picked from commit effb0dcf864110a4595f1a243adb9c1dd09eb516)\r\n\r\n* Only call dtls1_start_timer() once\r\n\r\nThe function dtls1_handle_timeout() calls dtls1_double_timeout() which\r\nwas calling dtls1_start_timer(). However dtls1_start_timer() is also\r\ncalled directly by dtls1_handle_timeout(). We only need to start the timer\r\nonce.\r\n\r\nFixes #15561\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15595)\r\n\r\n(cherry picked from commit f570d33b02d824e2a3f676f718c4692572f45333)\r\n\r\n* s390x: cipher must set EVP_CIPH_ALWAYS_CALL_INIT flag\r\n\r\nThe s390x cipher implementations must call their init function\r\neven if the key argument is NULL to allow initializing the\r\ncipher operation's context in any order.\r\n\r\nSigned-off-by: Patrick Steuer <patrick.steuer@de.ibm.com>\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14900)\r\n\r\n* Test EVP_CipherInit sequences and resets\r\n\r\nVarious EVP_CipherInit sequences including partial inits and initializations\r\nwith different \"enc\" flags caused problems on s390x. Similarly, cipher\r\nreinitialization and especially GCM reinitialization with different tag length\r\nled to wrong results. Add some unit tests to cover these rather exotic use\r\ncases.\r\n\r\nSigned-off-by: Patrick Steuer <patrick.steuer@de.ibm.com>\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14900)\r\n\r\n* Clean away remaining Travis related files\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15693)\r\n\r\n* enable getauxval on android 10\r\n\r\nFixes #9498\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15870)\r\n\r\n* Use getauxval on Android with API level > 18\r\n\r\nWe received analytics that devices of the device family Oppo A37x\r\nare crashing with SIGILL when trying to load libcrypto.so.\r\nThese crashes were fixed by using the system-supplied getauxval function.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15763)\r\n\r\n* Add riscv64 target\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/14724)\r\n\r\n* apple getentropy removal\r\n\r\nbackport of #15924\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15935)\r\n\r\n* Fix use of uninitialized memory in test_rsa_oaep\r\n\r\n48f1739600f33c92387debce2002acec6e365f1d did not convert the RSA OAEP\r\ntests correctly. The corrupted ciphertext and truncation tests were\r\nreally decrypting uninitialized memory, rather than the sample\r\nciphertext. This results in an error in tools like MSan.\r\n\r\nThe test is somewhat roundabout. In the original version, before the\r\nconversion, ctext_ex was an OAEP test vector from key1(), etc.,\r\nfunctions. The test would:\r\n\r\n1. Encrypt ptext_ex as ctext.\r\n2. Decrypt ctext and check it gives ptext_ex.\r\n3. Decrypt ctext_ex and check it gives ptext_ex.\r\n4. Try corrupted and truncated versions of ctext.\r\n\r\n48f1739600f33c92387debce2002acec6e365f1d then moved steps 1 and 2 into\r\ntest_rsa_simple, which meant ctext is no longer available for step 4. It\r\nthen mistakenly left the variable around, but uninitialized, so the test\r\nwasn't testing anything. (Confusingly, test_rsa_simple outputs ctext_ex\r\nto the caller, but doesn't do anything with it. The ctext_ex output is\r\nalso only usable for OAEP, not PKCS#1 v1.5.)\r\n\r\nIt doesn't really matter whether we use ctext or ctext_ex for step 4, so\r\nthis PR fixes it by using ctext_ex instead.\r\n\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15950)\r\n\r\n(cherry picked from commit 36a4637e158508f5d2fb7750e4870888072a56f9)\r\n\r\n* doc: Mention the update of der data pointers in d2i/i2d\r\n\r\nFixes #15958\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15973)\r\n\r\n* bn: procduce correct sign for result of BN_mod()\r\n\r\nThere is a problem that appears when calling BN_div(a, c, a, b) with negative b.\r\nIn this case, the sign of the remainder c is incorrect.  The problem only\r\noccurs if the dividend and the quotient are the same BIGNUM.\r\n\r\nFixes #15982\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/15991)\r\n\r\n(cherry picked from commit 105c83150f15af3f78ea0758859062842bdbe30e)\r\n\r\n* Fix memory leak in i2d_ASN1_bio_stream\r\n\r\nWhen creating a signed S/MIME message using SMIME_write_CMS()\r\nif the reading from the bio fails, the state is therefore\r\nstill ASN1_STATE_START when BIO_flush() is called by i2d_ASN1_bio_stream().\r\nThis results in calling asn1_bio_flush_ex cleanup but will only\r\nreset retry flags as the state is not ASN1_STATE_POST_COPY.\r\nTherefore 48 bytes (Linux x86_64) leaked since the\r\nndef_prefix_free / ndef_suffix_free callbacks are not executed\r\nand the ndef_aux structure is not freed.\r\n\r\nBy always calling free function callback in asn1_bio_free() the\r\nmemory leak is fixed.\r\n\r\n(cherry picked from commit 3a1d2b59522163ebb83bb68e13c896188dc222c6)\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15999)\r\n\r\n* ssl: do not choose auto DH groups that are weaker than the security level\r\n\r\nmanual merge from https://github.com/openssl/openssl/pull/15818\r\nid d7b5c648d682b499b71320a03747602a6ba4dec3\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15832)\r\n\r\n* test: add test for auto DH security level meets the minimum\r\n\r\nManual merge from https://github.com/openssl/openssl/pull/15818\r\nCommit id d0e5230dcecc6013d351545ceb275aa2ba5baa80\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15832)\r\n\r\n* Fix s_server PSK handling\r\n\r\nIssue #15951 describes a scenario which causes s_server to fail when using\r\na PSK. In the originally described issue this only impacted master and not\r\n1.1.1. However, in fact this issue does also impact 1.1.1 - but only if you\r\nadditionally supply the option \"-no_ticket\" to the s_server command line.\r\n\r\nThe difference between the behaviour in master and 1.1.1 is due to 9c13b49,\r\nwhich changed PSK_MAX_IDENTITY_LEN from 128 to 256. It just so happens that\r\na default OpenSSL TLSv1.3 ticket length happens to fall between those 2\r\nvalues. Tickets are presented in TLSv1.3 as a PSK \"identity\". Passing\r\n\"no_ticket\" doesn't actually stop TLSv1.3 tickets completely, it just\r\nforces the use of \"session ids as a ticket\" instead. This significantly\r\nreduces the ticket size to below 128 in 1.1.1.\r\n\r\nThe problem was due to s_server setting a TLSv1.2 PSK callback and a\r\nTLSv1.3 PSK callback. For backwards compat reasons the TLSv1.2 PSK\r\ncallbacks also work in TLSv1.3 but are not preferred. In the described\r\nscenario we use a PSK to create the initial connection. Subsequent to that\r\nwe attempt a resumption using a TLSv1.3 ticket (psk). If the psk length is\r\nbelow PSK_MAX_IDENTITY_LEN then we first call the TLSv1.2 PSK callback.\r\nSubsequently we call the TLSv1.3 PSK callback. Unfortunately s_server's\r\nTLSv1.2 PSK callback accepts the identity regardless, even though it is an\r\nunexpected value, and hence the binder subsequently fails to verify.\r\n\r\nThe fix is to bail early in the TLSv1.2 callback if we detect we are being\r\ncalled from a TLSv1.3 connection.\r\n\r\nFixes #15951\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16008)\r\n\r\n(cherry picked from commit 0007ff257c95f5cd046799e492436f41caf4ecb2)\r\n\r\n* TEST: Check that i2d refuses to encode non-optional items with no content\r\n\r\nThe test case creates an RSA public key and tries to pass it through\r\ni2d_PrivateKey().  This SHOULD fail, since the private bits are missing.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16027)\r\n\r\n* ASN.1: Refuse to encode to DER if non-optional items are missing\r\n\r\nFixes #16026\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16027)\r\n\r\n* Fix test/asn1_encode_test.c to not use ASN1_FBOOLEAN\r\n\r\nASN1_FBOOLEAN is designed to use as a default for optional ASN1 items.\r\nThis test program used it for non-optional items, which doesn't encode\r\nwell.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16027)\r\n\r\n* Fix test/asn1_encode_test.c to handle encoding/decoding failure\r\n\r\nMake it only report (and fail on) encoding/decoding failures when success\r\nis expected.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16027)\r\n\r\n* make update (adds a new function code)\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16027)\r\n\r\n* Avoid \"excessive message size\" for session tickets\r\n\r\nWe received a report of an \"excessive message size\" for a received\r\nsession ticket. Our maximum size was significantly less than the theoretical\r\nmaximum. The server may put any data it likes in the session ticket\r\nincluding (for example) the full certificate chain so we should be able to\r\nhandle longer tickets. Update the value to the maximum allowed by the spec.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/15877)\r\n\r\n(cherry picked from commit e54f0c9b2fe3dd2dcb5e8100e2c69e5b2f6eb681)\r\n\r\n* BIO_lookup_ex: use AI_ADDRCONFIG only if explicit host name is given\r\n\r\nThe flag only affects which record types are queried via DNS (A or\r\nAAAA, or both).  When node is NULL and AF_UNSPEC is used, it prevents\r\ngetaddrinfo returning the right address associated with the loopback\r\ninterface.\r\n\r\nSigned-off-by: Daiki Ueno <dueno@redhat.com>\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16039)\r\n\r\n* Avoid empty lines in nmake rule bodies\r\n\r\nnmake is tolerant of those empty lines, but jom isn't.  That tolerance\r\nisn't standard make behaviour, so we lean towards avoiding them.\r\n\r\nWe simply use '@rem' instead.\r\n\r\nFixes #16014\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16047)\r\n\r\n* apps: Use the first detected address family if IPv6 is not available\r\n\r\nThis is a follow up of 15729bef385211bc2a0497e2d53a45c45d677d2c.  Even\r\nwhen the host does not support IPv6 at all, BIO_lookup_ex may now\r\nreturn IN6ADDR_ANY in addition to INADDR_ANY, as the second element of\r\nthe ai_next field.\r\n\r\nAfter eee8a40aa5e06841eed6fa8eb4f6109238d59aea, the do_server function\r\nprefers the IPv6 address and fails on the BIO_socket call.  This adds\r\na fallback code to retry with the IPv4 address returned as the first\r\nelement to avoid the error.\r\n\r\nThe failure had been partially avoided in the previous code with\r\nAI_ADDRCONFIG, because getaddrinfo returns only IPv4 address if no\r\nIPv6 address is associated with external interface.  However, it would\r\nbe still a problem if the external interface has an IPv6 address\r\nassigned, while the loopback interface doesn't.\r\n\r\nSigned-off-by: Daiki Ueno <dueno@redhat.com>\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16078)\r\n\r\n* Don't reset the packet pointer in ssl3_setup_read_buffer\r\n\r\nSometimes this function gets called when the buffers have already been\r\nset up. If there is already a partial packet in the read buffer then the\r\npacket pointer will be set to an incorrect value. The packet pointer already\r\ngets reset to the correct value when we first read a packet anyway, so we\r\ndon't also need to do it in ssl3_setup_read_buffer.\r\n\r\nFixes #13729\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16098)\r\n\r\n* Disallow SSL_key_update() if there are writes pending\r\n\r\nIf an application is halfway through writing application data it should\r\nnot be allowed to attempt an SSL_key_update() operation. Instead the\r\nSSL_write() operation should be completed.\r\n\r\nFixes #12485\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16098)\r\n\r\n* Fix some minor record layer issues\r\n\r\nVarious comments referred to s->packet and s->packet_length instead of\r\ns->rlayer.packet and s->rlayer.packet_length. Also fixed is a spot where\r\nRECORD_LAYER_write_pending() should have been used. Based on the review\r\ncomments in #16077.\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n\r\n(cherry picked from commit ca001524971ccd595bc0e9843611e6784adfc981)\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16105)\r\n\r\n* Fix a read buffer overrun in X509_aux_print().\r\n\r\nThe ASN1_STRING_get0_data(3) manual explitely cautions the reader\r\nthat the data is not necessarily NUL-terminated, and the function\r\nX509_alias_set1(3) does not sanitize the data passed into it in any\r\nway either, so we must assume the return value from X509_alias_get0(3)\r\nis merely a byte array and not necessarily a string in the sense\r\nof the C language.\r\n\r\nI found this bug while writing manual pages for X509_print_ex(3)\r\nand related functions.  Theo Buehler <tb@openbsd.org> checked my\r\npatch to fix the same bug in LibreSSL, see\r\n\r\nhttp://cvsweb.openbsd.org/src/lib/libcrypto/asn1/t_x509a.c#rev1.9\r\n\r\nAs an aside, note that the function still produces incomplete and\r\nmisleading results when the data contains a NUL byte in the middle\r\nand that error handling is consistently absent throughout, even\r\nthough the function provides an \"int\" return value obviously intended\r\nto be 1 for success and 0 for failure, and even though this function\r\nis called by another function that also wants to return 1 for success\r\nand 0 for failure and even does so in many of its code paths, though\r\nnot in others.  But let's stay focussed.  Many things would be nice\r\nto have in the wide wild world, but a buffer overflow must not be\r\nallowed to remain in our backyard.\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16108)\r\n\r\n(cherry picked from commit c5dc9ab965f2a69bca964c709e648158f3e4cd67)\r\n\r\n* DSA/RSA_print(): Fix potential memory leak\r\n\r\nFixes #10777\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16130)\r\n\r\n(cherry picked from commit 40184c96103a388209939c1c19920971c05bb78c)\r\n\r\n* [doc/man3] documentation: BN_cmp manpage updates\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/16214)\r\n\r\n(cherry picked from commit 3d4ca443b4778e3230ff23f17625f58f815a9142)\r\n\r\n* Revert \"make update (adds a new function code)\"\r\n\r\nThis reverts commit ea26844c4f624ef515d9228d3b623761a369b049.\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/16308)\r\n\r\n* Revert \"Fix test/asn1_encode_test.c to handle encoding/decoding failure\"\r\n\r\nThis reverts commit f1d97905bbd8679b7647c992b97f526791069040.\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/16308)\r\n\r\n* Revert \"Fix test/asn1_encode_test.c to not use ASN1_FBOOLEAN\"\r\n\r\nThis reverts commit 5434acb6c4d56507d761b28f7e142ccab808a8fa.\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/16308)\r\n\r\n* Revert \"ASN.1: Refuse to encode to DER if non-optional items are missing\"\r\n\r\nThis reverts commit 006906cddda37e24a66443199444ef4476697477.\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/16308)\r\n\r\n* Revert \"TEST: Check that i2d refuses to encode non-optional items with no content\"\r\n\r\nThis reverts commit 12e9b74c513a8ed3c1c260cf25221a465ae14b84.\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/16308)\r\n\r\n* Fix potential double-free\r\n\r\nThe `sk` variable is assigned to `s->session->peer_chain`.\r\nIf `ssl3_digest_cached_records()` were to fail, then `sk` would still be\r\nnon-NULL, and subsequently freed on the error return. When the session\r\nis freed, it will then attempt to free `s->session->peer_chain`,\r\nresulting in a double-free (of `sk`).\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16309)\r\n\r\n(cherry picked from commit 0449702abc95a3af24c049cb02c01ca6a8015cef)\r\n\r\n* s390x: AES OFB/CFB: Maintain running IV from cipher context\r\n\r\nCopy the current IV from the cipher context into the kmo/kmf param before\r\nthe operation, and copy the modified IV back to the context afterwards.\r\nWithout this, an application that obtains the running IV from the context\r\nwould still get the original IV, but not the updated one.\r\n\r\nSigned-off-by: Ingo Franzki <ifranzki@linux.ibm.com>\r\n\r\nReviewed-by: Patrick Steuer <patrick.steuer@de.ibm.com>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16292)\r\n\r\n* Test EVP Cipher updating the context's IV\r\n\r\nEnsure that an EVP_CipherUpdate operation updates the context's\r\nIV for AES CBC, CFB, OFB, and CTR. An application can get the\r\nupdated IV via EVP_CIPHER_CTX_iv().\r\n\r\nThe s390x implementation of the CFB and OFB ciphers did not\r\nupdate the IV in the context, but only within its s390x specific\r\ncontext data.\r\n\r\nSigned-off-by: Ingo Franzki <ifranzki@linux.ibm.com>\r\n\r\nReviewed-by: Patrick Steuer <patrick.steuer@de.ibm.com>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16292)\r\n\r\n* pkcs12: check for zero length digest to avoid division by zero\r\n\r\nFixes #16331\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\n(Merged from https://github.com/openssl/openssl/pull/16333)\r\n\r\n* [github-ci] Sync ci.yml workflow with master\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci] Import windows.yml workflow from master\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci] Import cross-compiles.yml workflow from master\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci] Import run-checker workflows from master\r\n\r\nThis commit does not include the daily run-checker workflow.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci] Import run-checker daily workflow from master\r\n\r\nThe daily run-checker is scheduled to start at 6:42, instead of the\r\nstart of the hour.\r\n\r\nThe official GitHub documentation remarks the following regarding\r\nscheduled workflows:\r\n\r\n> Note: The schedule event can be delayed during periods of high loads\r\n> of GitHub Actions workflow runs. High load times include the start of\r\n> every hour. To decrease the chance of delay, schedule your workflow to\r\n> run at a different time of the hour.\r\n\r\n42, obviously, has been picked because it is the answer to the ultimate\r\nquestion of life, the universe, and everything.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci][cross-compiles.yml] Disable sparcv9\r\n\r\nThis commit temporarily disables cross-compiling tests for sparcv9, due\r\nto failures to be investigated in a dedicated PR.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci][ci.yml] Disable krb5 external tests\r\n\r\nThis commit temporarily disables krb5 external tests,\r\ndue to failures to be investigated in a dedicated PR.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci][ci.yml] Disable pyca external tests\r\n\r\nThis commit temporarily disables pyca external tests,\r\ndue to failures to be investigated in a dedicated PR.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci][run-checker-ci.yml] Disable no-tls1_3 tests\r\n\r\nThis commit temporarily disables tests for no-tls1_3,\r\ndue to failures to be investigated in a dedicated PR.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci][ci.yml] Disable memory sanitizer build\r\n\r\nIn 1.1.1 currently we do not support running multiple tests in parallel,\r\nand the `--debug -O1` msan build required more than 3h to run the tests.\r\n\r\nThis commit temporarily disables this build configuration.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci][run-checker-merge.yml] Disable ubsan build\r\n\r\nThis commit temporarily disables the ubsan build,\r\ndue to failures to be investigated in a dedicated PR.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* [github-ci] Add comment about our approach to GitHub Actions CI\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/16252)\r\n\r\n* Revert \"[github-ci][cross-compiles.yml] Disable sparcv9\"\r\n\r\nThis reverts commit aa23aa759cf33b4f481fc719d42cb7bae8b2eaf0.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16336)\r\n\r\n* sparc: fix cross compile build\r\n\r\n(cherry picked from commit 64fac96de81d3dc19cc0c9045c341f0dec818075)\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/16336)\r\n\r\n* Fix i2v_GENERAL_NAME to not assume NUL terminated strings\r\n\r\nASN.1 strings may not be NUL terminated. Don't assume they are.\r\n\r\nCVE-2021-3712\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix POLICYINFO printing to not assume NUL terminated strings\r\n\r\nASN.1 strings may not be NUL terminated. Don't assume they are.\r\n\r\nCVE-2021-3712\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix printing of PROXY_CERT_INFO_EXTENSION to not assume NUL terminated strings\r\n\r\nASN.1 strings may not be NUL terminated. Don't assume they are.\r\n\r\nCVE-2021-3712\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix the name constraints code to not assume NUL terminated strings\r\n\r\nASN.1 strings may not be NUL terminated. Don't assume they are.\r\n\r\nCVE-2021-3712\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix test code to not assume NUL terminated strings\r\n\r\nASN.1 strings may not be NUL terminated. Don't assume they are.\r\n\r\nCVE-2021-3712\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix append_ia5 function to not assume NUL terminated strings\r\n\r\nASN.1 strings may not be NUL terminated. Don't assume they are.\r\n\r\nCVE-2021-3712\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix NETSCAPE_SPKI_print function to not assume NUL terminated strings\r\n\r\nASN.1 strings may not be NUL terminated. Don't assume they are.\r\n\r\nCVE-2021-3712\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix EC_GROUP_new_from_ecparameters to check the base length\r\n\r\nCheck that there's at least one byte in params->base before trying to\r\nread it.\r\n\r\nCVE-2021-3712\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Allow fuzz builds to detect string overruns\r\n\r\nIf FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION is defined then we don't NUL\r\nterminate ASN1_STRING datatypes. This shouldn't be necessary but we add it\r\nany for safety in normal builds.\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Fix the error handling in i2v_AUTHORITY_KEYID\r\n\r\nPreviously if an error path is entered a leak could result.\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\n\r\n* Correctly calculate the length of SM2 plaintext given the ciphertext\r\n\r\nPreviously the length of the SM2 plaintext could be incorrectly calculated.\r\nThe plaintext length was calculated by taking the ciphertext length and\r\ntaking off an \"overhead\" value.\r\n\r\nThe overhead value was assumed to have a \"fixed\" element of 10 bytes.\r\nThis is incorrect since in some circumstances it can be more than 10 bytes.\r\nAdditionally the overhead included the length of two integers C1x and C1y,\r\nwhich were assumed to be the same length as the field size (32 bytes for\r\nthe SM2 curve). However in some cases these integers can have an additional\r\npadding byte when the msb is set, to disambiguate them from negative\r\nintegers. Additionally the integers can also be less than 32 bytes in\r\nlength in some cases.\r\n\r\nIf the calculated overhead is incorrect and larger than the actual value\r\nthis can result in the calculated plaintext length being too small.\r\nApplications are likely to allocate buffer sizes based on this and therefore\r\na buffer overrun can occur.\r\n\r\nCVE-2021-3711\r\n\r\nIssue reported by John Ouyang.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n\r\n* Extend tests for SM2 decryption\r\n\r\nCheck the case where C1y < 32 bytes in length (i.e. short overhead), and\r\nalso the case with longer plaintext and C1x and C1y > 32 bytes in length\r\n(i.e. long overhead)\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n\r\n* Check the plaintext buffer is large enough when decrypting SM2\r\n\r\nPreviously there was no check that the supplied buffer was large enough.\r\nIt was just assumed to be sufficient. Instead we should check and fail if\r\nnot.\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n\r\n* Updates to CHANGES and NEWS for the new release\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Update copyright year\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Run make update\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Prepare for 1.1.1l release\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Prepare for 1.1.1m-dev\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Fix the array size of dtlsseq in tls1_enc\r\n\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16385)\r\n\r\n(cherry picked from commit 562d4cd3c35b32f2bc6ac0770b80ce394f8d76a4)\r\n\r\n* Avoid using undefined value in generate_stateless_cookie_callback\r\n\r\nReviewed-by: Paul Yang <kaishen.yy@antfin.com>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16381)\r\n\r\n* Fix some strict gcc-12 warnings\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16375)\r\n\r\n* apps/ciphers: Fix wrong return value when using -convert parameter\r\n\r\nCommand 'openssl ciphers -convert <name>' always returns failure,\r\nthis patch set the correct return value.\r\n\r\nSigned-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>\r\n\r\nReviewed-by: Paul Yang <kaishen.yy@antfin.com>\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16383)\r\n\r\n(cherry picked from commit 8b4e9c5265ffd3457ad37133502a9d8a4e8daccd)\r\n\r\n* Check for null-pointer dereference in dh_cms_set_peerkey\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16382)\r\n\r\n* ts: fix memleaks caused by TS_VERIFY_CTX_set_imprint\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Paul Dale <pauli@openssl.org>\r\nReviewed-by: Tomas Mraz <tomas@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/16347)\r\n\r\n(cherry picked from commit 62bae84d4587ec9a56d0ce830e36e4a5b2fa8a33)\r\n\r\n* Darwin platform allows to build on releases before Yosemite/ios 8.\r…","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssl/commits/963214935610384bfc3fe38c51d6ca8e63eeba40"}]},"public":true,"created_at":"2021-12-15T05:53:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"19343649953","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":162497596,"name":"open-quantum-safe/liboqs-dotnet","url":"https://api.github.com/repos/open-quantum-safe/liboqs-dotnet"},"payload":{"push_id":8624821280,"size":1,"distinct_size":1,"ref":"refs/heads/mb-ccistatus","head":"e98c444bfd7859eff51d5c2b876eb574a4d402cc","before":"1fa68ca51b3d3bd4cd6627b5dd7ddb7accb2141b","commits":[{"sha":"e98c444bfd7859eff51d5c2b876eb574a4d402cc","author":{"email":"57787676+baentsch@users.noreply.github.com","name":"Michael"},"message":"adapting badge look","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-dotnet/commits/e98c444bfd7859eff51d5c2b876eb574a4d402cc"}]},"public":true,"created_at":"2021-12-15T08:32:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"19350169410","type":"PushEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":162497596,"name":"open-quantum-safe/liboqs-dotnet","url":"https://api.github.com/repos/open-quantum-safe/liboqs-dotnet"},"payload":{"push_id":8628015037,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"14bbb8dd9dbe3736ff078bac14049a9821fe0feb","before":"1e555cd1a5e4f96cbc15fd92827746a64154a5e3","commits":[{"sha":"14bbb8dd9dbe3736ff078bac14049a9821fe0feb","author":{"email":"info@baentsch.ch","name":"Michael Baentsch"},"message":"Adding CCI badge (#21)\n\n* adding CCI status\r\n\r\n* adapting badge look","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-dotnet/commits/14bbb8dd9dbe3736ff078bac14049a9821fe0feb"}]},"public":true,"created_at":"2021-12-15T14:55:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"19356116622","type":"PushEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"push_id":8630816661,"size":1,"distinct_size":1,"ref":"refs/heads/main","head":"ed19084847877592ccab1e7277f605aaa84fdccf","before":"7b5499718150ba9f2ea14bb6b56dcc9376da3cb2","commits":[{"sha":"ed19084847877592ccab1e7277f605aaa84fdccf","author":{"email":"info@baentsch.ch","name":"Michael Baentsch"},"message":"add trigger for oqs-provider CI (#1157)","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/ed19084847877592ccab1e7277f605aaa84fdccf"}]},"public":true,"created_at":"2021-12-15T20:54:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
