{"id":"19185848892","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1144","id":1070974596,"node_id":"PR_kwDOA-eq3c4vYYNo","number":1144,"title":"Adding a speed_common script to benchmark OQS AES and hash algorithms","user":{"login":"tedeaton","id":7863838,"node_id":"MDQ6VXNlcjc4NjM4Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/7863838?v=4","gravatar_id":"","url":"https://api.github.com/users/tedeaton","html_url":"https://github.com/tedeaton","followers_url":"https://api.github.com/users/tedeaton/followers","following_url":"https://api.github.com/users/tedeaton/following{/other_user}","gists_url":"https://api.github.com/users/tedeaton/gists{/gist_id}","starred_url":"https://api.github.com/users/tedeaton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tedeaton/subscriptions","organizations_url":"https://api.github.com/users/tedeaton/orgs","repos_url":"https://api.github.com/users/tedeaton/repos","events_url":"https://api.github.com/users/tedeaton/events{/privacy}","received_events_url":"https://api.github.com/users/tedeaton/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-03T21:16:31Z","updated_at":"2021-12-05T07:00:48Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1144","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1144","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1144.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1144.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nThis adds a speed_common script, similar to speed_kem and speed_sig, but for benchmarking the encryption and hashing algorithms that `liboqs` uses. Specifically, it benchmarks AES128, AES256, SHA256, SHA384, SHA512, SHA3-256, SHA3-384, SHA3-512, SHA3-shake128, and SHA3-shake256. Currently it only benchmarks the main API of each of the hash algorithms, not the incremental version (that is something that could be added later if it's needed).\r\n\r\nThe script has a few options to change how it is run:\r\n`--msglen n` : Each algorithm is benchmarked with a message length of `n` bytes (must be a multiple of 16 to benchmark AES)\r\n`--outlen n` : For algorithms with variable-length output (e.g., shake128), specifies the output length.\r\n`<alg>` : Only benchmark a specific algorithm.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFulfills request in #1143 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/986177920","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1144#issuecomment-986177920","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1144","id":986177920,"node_id":"IC_kwDOA-eq3c46x-GA","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-12-05T07:00:48Z","updated_at":"2021-12-05T07:00:48Z","author_association":"MEMBER","body":"> That should be how the script works already\r\n\r\nSincere apologies: Indeed I overlooked that in the code and didn't actually run the code before. After doing this now, this is to confirm this PR indeed completely implements #1143. Thanks!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/986177920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-12-05T07:00:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"19185861207","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1143","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1143/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1143/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1143/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1143","id":1070317629,"node_id":"I_kwDOA-eq3c4_y8A9","number":1143,"title":"Add common crypto performance tests","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-12-03T07:58:41Z","updated_at":"2021-12-05T07:04:01Z","closed_at":"2021-12-05T07:04:01Z","author_association":"MEMBER","active_lock_reason":null,"body":"As suggested by @bhess (https://github.com/open-quantum-safe/profiling/issues/68#issuecomment-984507492) this issue is to track adding performance tests for \"common code\" similar to `speed_kem` and `speed_sig` to better understand the performance impact of \"core crypto\" operations -- either provided by `liboqs` common code or by third-party routines (like OpenSSL):\r\n- [ ] AES (anything needed beyond [this](https://github.com/open-quantum-safe/liboqs/blob/188e6a38b2bbc1795a105e21bc6925ac266df90b/tests/test_aes.c#L152-L158) ?)\r\n- [ ] SHA2\r\n- [ ] SHA3\r\n\r\n (others?)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1143/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/986178273","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1143#issuecomment-986178273","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1143","id":986178273,"node_id":"IC_kwDOA-eq3c46x-Lh","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-12-05T07:04:01Z","updated_at":"2021-12-05T07:04:01Z","author_association":"MEMBER","body":"Fixed by #1144 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/986178273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-12-05T07:04:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"19188496183","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1141","id":1069021651,"node_id":"PR_kwDOA-eq3c4vR-4L","number":1141,"title":"Enabling use of ARM PMU for benchmarking when compiler flag is enabled","user":{"login":"tedeaton","id":7863838,"node_id":"MDQ6VXNlcjc4NjM4Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/7863838?v=4","gravatar_id":"","url":"https://api.github.com/users/tedeaton","html_url":"https://github.com/tedeaton","followers_url":"https://api.github.com/users/tedeaton/followers","following_url":"https://api.github.com/users/tedeaton/following{/other_user}","gists_url":"https://api.github.com/users/tedeaton/gists{/gist_id}","starred_url":"https://api.github.com/users/tedeaton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tedeaton/subscriptions","organizations_url":"https://api.github.com/users/tedeaton/orgs","repos_url":"https://api.github.com/users/tedeaton/repos","events_url":"https://api.github.com/users/tedeaton/events{/privacy}","received_events_url":"https://api.github.com/users/tedeaton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-12-02T01:07:57Z","updated_at":"2021-12-05T16:02:43Z","closed_at":"2021-12-02T18:28:29Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1141","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1141","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1141.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1141.patch","merged_at":"2021-12-02T18:28:29Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nThis pull request enables the use of ARMv8's performance monitoring unit (PMU) in the benchmarking script to allow for a more precise cycle count on that architecture when possible. It is enabled by the OQS_SPEED_USE_ARM_PMU compiler flag. Note that loading a kernel module (such as https://github.com/mupq/pqax#enable-access-to-performance-counters ) is required to access the PMU from user mode.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/986256302","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1141#issuecomment-986256302","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141","id":986256302,"node_id":"IC_kwDOA-eq3c46yROu","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-12-05T16:02:43Z","updated_at":"2021-12-05T16:02:43Z","author_association":"MEMBER","body":"> Tested and ran successfully on:\r\n>\r\n> AWS ARM\r\n\r\n@tedeaton Can I ask in which OS environment you did this? When I tried activating this for a standard AWS Linux ARM VM, all kinds of problems occurred (from having to find kernel headers for RHEL then to missing KConfig kernel file documentation...). Will try Ubuntu20 on t4.micro tomorrow for a change....","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/986256302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-12-05T16:02:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
