{"id":"19254900215","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1141","id":1069021651,"node_id":"PR_kwDOA-eq3c4vR-4L","number":1141,"title":"Enabling use of ARM PMU for benchmarking when compiler flag is enabled","user":{"login":"tedeaton","id":7863838,"node_id":"MDQ6VXNlcjc4NjM4Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/7863838?v=4","gravatar_id":"","url":"https://api.github.com/users/tedeaton","html_url":"https://github.com/tedeaton","followers_url":"https://api.github.com/users/tedeaton/followers","following_url":"https://api.github.com/users/tedeaton/following{/other_user}","gists_url":"https://api.github.com/users/tedeaton/gists{/gist_id}","starred_url":"https://api.github.com/users/tedeaton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tedeaton/subscriptions","organizations_url":"https://api.github.com/users/tedeaton/orgs","repos_url":"https://api.github.com/users/tedeaton/repos","events_url":"https://api.github.com/users/tedeaton/events{/privacy}","received_events_url":"https://api.github.com/users/tedeaton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2021-12-02T01:07:57Z","updated_at":"2021-12-09T10:13:32Z","closed_at":"2021-12-02T18:28:29Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1141","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1141","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1141.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1141.patch","merged_at":"2021-12-02T18:28:29Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nThis pull request enables the use of ARMv8's performance monitoring unit (PMU) in the benchmarking script to allow for a more precise cycle count on that architecture when possible. It is enabled by the OQS_SPEED_USE_ARM_PMU compiler flag. Note that loading a kernel module (such as https://github.com/mupq/pqax#enable-access-to-performance-counters ) is required to access the PMU from user mode.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/989708501","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1141#issuecomment-989708501","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1141","id":989708501,"node_id":"IC_kwDOA-eq3c46_cDV","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2021-12-09T10:13:32Z","updated_at":"2021-12-09T10:13:32Z","author_association":"CONTRIBUTOR","body":"> Ah, interesting. So should we cast tv_sec to a uint64_t before multiplying?\r\n\r\nYes I think this would be safer.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/989708501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-12-09T10:13:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"19256903134","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1146","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1146/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1146/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1146/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1146","id":1072986142,"node_id":"I_kwDOA-eq3c4_9Hge","number":1146,"title":"OQS_DIST_BUILD not working for aarch64","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/17","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/17","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/17/labels","id":7069954,"node_id":"MI_kwDOA-eq3c4Aa-EC","number":17,"title":"0.7.1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":1,"closed_issues":11,"state":"open","created_at":"2021-08-18T14:40:12Z","updated_at":"2021-12-08T17:28:15Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2021-12-07T06:58:31Z","updated_at":"2021-12-09T12:19:08Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When working through https://github.com/open-quantum-safe/liboqs/issues/1145 it became apparent that [OQS_DIST_BUILD](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs#oqs_dist_build) is not implemented for `aarch64`: This also explains initially surprisingly good performance results for \"distributable\" (presumed 'reference') ARM64 code (https://github.com/open-quantum-safe/profiling/issues/68). See for example https://github.com/open-quantum-safe/liboqs/blob/8e22871ff6cfdc69dba6748bbd902ed0fb316fc3/src/kem/kyber/kem_kyber_512.c#L67-L83 for missing `OQS_DIST_BUILD` guards in the case of `aarch64` code. Instead of changing the implementation we could of course also document `OQS_DIST_BUILD` as not applicable for ARM64.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1146/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/989800882","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1146#issuecomment-989800882","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1146","id":989800882,"node_id":"IC_kwDOA-eq3c46_ymy","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-12-09T12:19:08Z","updated_at":"2021-12-09T12:19:08Z","author_association":"MEMBER","body":"> I think it is the case that aarch64 always has NEON instructions available, so there's no need for an extra required flag. \r\n\r\nThis page concurs with this thinking: https://en.wikipedia.org/wiki/AArch64\r\n\r\nIn that case, #1148 arguably is pointless -- at best it might set the stage for a time when there is code introduced that relies on truly _optional_ ARM64 instructions. In this light I'm fine with closing #1146 either way (not doing anything or adding #1148).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/989800882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-12-09T12:19:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"19259187588","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1145","id":1072180507,"node_id":"I_kwDOA-eq3c4_6C0b","number":1145,"title":"Documenting build flags in test/speed config output","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"assignees":[{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2021-12-06T13:55:40Z","updated_at":"2021-12-09T14:30:57Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When looking at a test config output, not all [build options](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs) can be seen and some have to be (but can be) inferred. This issue to ask whether all OQS_ build options should be explicitly output by https://github.com/open-quantum-safe/liboqs/blob/main/tests/system_info.c:\r\n\r\n```\r\n./tests/speed_kem Kyber512\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-5.11.0-1022-aws\r\nCompiler:         gcc (10.3.0)\r\nCompile options:  [-mcpu=native;-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prototypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.7.0\r\nGit commit:       b5cbb0d71a6f87f70198c986d85114beec1cb5ab\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1f  31 Mar 2020)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nCPU exts compile-time:  AES SHA2 NEON\r\n```\r\n\r\ndoesn't show whether OQS_SPEED_USE_ARM_PMU had been set. \r\n\r\nAs a practical riddle along these lines: Who can explain/tell the performance difference in (terms of) configs between these two runs of `speed_kem`?\r\n```\r\n$ \r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-5.11.0-1022-aws\r\nCompiler:         gcc (10.2.1)\r\nCompile options:  [-mcpu=cortex-a72;-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prototypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.7.0\r\nGit commit:       b5cbb0d71a6f87f70198c986d85114beec1cb5ab\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1k  25 Mar 2021)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nCPU exts compile-time:  NEON\r\n\r\nSpeed test\r\n==========\r\nStarted at 2021-12-06 13:47:34\r\nOperation                      | Iterations | Total time (s) | Time (us): mean | pop. stdev | CPU cycles: mean          | pop. stdev\r\n------------------------------ | ----------:| --------------:| ---------------:| ----------:| -------------------------:| ----------:\r\nKyber512                       |            |                |                 |            |                           |           \r\nkeygen                         |     131591 |          3.000 |          22.798 |     22.217 |                     13164 |      21927\r\nencaps                         |     113083 |          3.000 |          26.529 |      1.250 |                     37924 |      29535\r\ndecaps                         |     129931 |          3.000 |          23.089 |      0.815 |                     31669 |      26208\r\nEnded at 2021-12-06 13:47:43\r\n\r\n\r\n$ \r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-5.11.0-1022-aws\r\nCompiler:         gcc (10.2.1)\r\nCompile options:  [-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prototypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.7.0\r\nGit commit:       b5cbb0d71a6f87f70198c986d85114beec1cb5ab\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1k  25 Mar 2021)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nCPU exts active:  AES SHA2 NEON\r\nSpeed test\r\n==========\r\nStarted at 2021-12-06 13:48:19\r\nOperation                      | Iterations | Total time (s) | Time (us): mean | pop. stdev | CPU cycles: mean          | pop. stdev\r\n------------------------------ | ----------:| --------------:| ---------------:| ----------:| -------------------------:| ----------:\r\nKyber512                       |            |                |                 |            |                           |           \r\nkeygen                         |      63667 |          3.000 |          47.121 |     18.503 |                     63673 |      52375\r\nencaps                         |      51177 |          3.000 |          58.621 |      3.699 |                     83904 |      65434\r\ndecaps                         |      43890 |          3.000 |          68.353 |      3.427 |                     97736 |      78182\r\nEnded at 2021-12-06 13:48:28\r\n```\r\n\r\n??? ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/989904940","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1145#issuecomment-989904940","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145","id":989904940,"node_id":"IC_kwDOA-eq3c47AMAs","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-12-09T14:30:57Z","updated_at":"2021-12-09T14:30:57Z","author_association":"MEMBER","body":"> so it might be helpful for debugging purposes to directly output which of those is set. Same for OQS_DEBUG_BUILD. Looking through oqsconfig.h, there's also OQS_ENABLE_TEST_CONSTANT_TIME.\r\n\r\nWell, `oqsconfig.h` is an awfully long list (258 entries if `grep` didn't lie :), so outputting everything wouldn't be sensible. My proposal was to ensure all options documented [in the wiki](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs) shall be made visible (by direct or indirect outputs). I agree, it may be reasonable to also document `OQS_ENABLE_TEST_CONSTANT_TIME` there. If you'd want to take a pass at completing the Wiki, I'll follow up amending this branch and do a PR.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/989904940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-12-09T14:30:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"19261635690","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1145","id":1072180507,"node_id":"I_kwDOA-eq3c4_6C0b","number":1145,"title":"Documenting build flags in test/speed config output","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"assignees":[{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2021-12-06T13:55:40Z","updated_at":"2021-12-09T16:40:32Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When looking at a test config output, not all [build options](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs) can be seen and some have to be (but can be) inferred. This issue to ask whether all OQS_ build options should be explicitly output by https://github.com/open-quantum-safe/liboqs/blob/main/tests/system_info.c:\r\n\r\n```\r\n./tests/speed_kem Kyber512\r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-5.11.0-1022-aws\r\nCompiler:         gcc (10.3.0)\r\nCompile options:  [-mcpu=native;-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prototypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.7.0\r\nGit commit:       b5cbb0d71a6f87f70198c986d85114beec1cb5ab\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1f  31 Mar 2020)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nCPU exts compile-time:  AES SHA2 NEON\r\n```\r\n\r\ndoesn't show whether OQS_SPEED_USE_ARM_PMU had been set. \r\n\r\nAs a practical riddle along these lines: Who can explain/tell the performance difference in (terms of) configs between these two runs of `speed_kem`?\r\n```\r\n$ \r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-5.11.0-1022-aws\r\nCompiler:         gcc (10.2.1)\r\nCompile options:  [-mcpu=cortex-a72;-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prototypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.7.0\r\nGit commit:       b5cbb0d71a6f87f70198c986d85114beec1cb5ab\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1k  25 Mar 2021)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nCPU exts compile-time:  NEON\r\n\r\nSpeed test\r\n==========\r\nStarted at 2021-12-06 13:47:34\r\nOperation                      | Iterations | Total time (s) | Time (us): mean | pop. stdev | CPU cycles: mean          | pop. stdev\r\n------------------------------ | ----------:| --------------:| ---------------:| ----------:| -------------------------:| ----------:\r\nKyber512                       |            |                |                 |            |                           |           \r\nkeygen                         |     131591 |          3.000 |          22.798 |     22.217 |                     13164 |      21927\r\nencaps                         |     113083 |          3.000 |          26.529 |      1.250 |                     37924 |      29535\r\ndecaps                         |     129931 |          3.000 |          23.089 |      0.815 |                     31669 |      26208\r\nEnded at 2021-12-06 13:47:43\r\n\r\n\r\n$ \r\nConfiguration info\r\n==================\r\nTarget platform:  aarch64-Linux-5.11.0-1022-aws\r\nCompiler:         gcc (10.2.1)\r\nCompile options:  [-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prototypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.7.0\r\nGit commit:       b5cbb0d71a6f87f70198c986d85114beec1cb5ab\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1k  25 Mar 2021)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nCPU exts active:  AES SHA2 NEON\r\nSpeed test\r\n==========\r\nStarted at 2021-12-06 13:48:19\r\nOperation                      | Iterations | Total time (s) | Time (us): mean | pop. stdev | CPU cycles: mean          | pop. stdev\r\n------------------------------ | ----------:| --------------:| ---------------:| ----------:| -------------------------:| ----------:\r\nKyber512                       |            |                |                 |            |                           |           \r\nkeygen                         |      63667 |          3.000 |          47.121 |     18.503 |                     63673 |      52375\r\nencaps                         |      51177 |          3.000 |          58.621 |      3.699 |                     83904 |      65434\r\ndecaps                         |      43890 |          3.000 |          68.353 |      3.427 |                     97736 |      78182\r\nEnded at 2021-12-06 13:48:28\r\n```\r\n\r\n??? ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/990022750","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1145#issuecomment-990022750","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1145","id":990022750,"node_id":"IC_kwDOA-eq3c47Aoxe","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-12-09T16:40:32Z","updated_at":"2021-12-09T16:40:32Z","author_association":"MEMBER","body":"oqsconfig.h is long, but most of that is algorithm enable lines, which aren't relevant to this discussion.  The only other one that seemed relevant was OQS_ENABLE_TEST_CONSTANT_TIME. I've now added that to the Wiki.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/990022750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-12-09T16:40:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
