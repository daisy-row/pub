{"id":"17645375914","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"push_id":7762489491,"size":563,"distinct_size":563,"ref":"refs/heads/master","head":"4fa3598ccb894d674fefa9ae817c954216d847d2","before":"4bddde99e55490a13bcae877f624ac19dc4d948f","commits":[{"sha":"8f12996be3a7a8a53c1b674c0cef103628a7b779","author":{"name":"Anna Sarai Rosenberg","email":"a941e35b38c2d9e722498de1a04c47e2a47495ad@gmail.com"},"message":"Fix docs link for SSL_CTX_load_verify_locations\n\nLink is outdated; results in 404. Update link to match docs version in other links with redirected path to current link for that version.\n\nChange-Id: I4c9bb2fe48d1b2bbf699773259d5eebad9461ddd\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41385\nReviewed-by: David Benjamin <davidben@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/8f12996be3a7a8a53c1b674c0cef103628a7b779"},{"sha":"7b31d69f19e85dafa97854bfe35adbfd0fb6d280","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Document that getrandom support must be consistent.\n\nSyscall-filtering sandboxes may make getrandom fail without crashing.\nThis will sometimes trigger the /dev/urandom fallback and sometimes not.\n\nChange-Id: Ic824e5bfe6fcb99105fd285184243c4620447327\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41404\nReviewed-by: Adam Langley <agl@google.com>\nCommit-Queue: Adam Langley <agl@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/7b31d69f19e85dafa97854bfe35adbfd0fb6d280"},{"sha":"9701e84eff26d0110d21f024debbab88d97e9c81","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Remove RAND_set_urandom_fd.\n\nAlso update the documentation for RAND_enable_fork_unsafe_buffering. The\nfd parameter is no longer used.\n\nUpdate-Note: RAND_set_urandom_fd no longer exists. This was only called\nby Chromium, which now uses CRYPTO_pre_sandbox_init.\n\nChange-Id: I1659c1cc84a6f1edc01f6105fc07e80856e457fc\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41424\nReviewed-by: Adam Langley <agl@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/9701e84eff26d0110d21f024debbab88d97e9c81"},{"sha":"851943277fcbc6597d0d9d06f897e20b88afc32b","author":{"name":"Nick Harper","email":"ce2bd6186a921731eb46a4e4b33e5431c9f3947a@chromium.org"},"message":"Modify how QUIC 0-RTT go/no-go decision is made.\n\nThe previous implementation was too strict in its byte-for-byte equality\ncheck including Transport Parameters, because the Transport Parameters\ncontain a field that QUIC requires be different on each connection. This\nchange still has BoringSSL do a byte-for-byte check, but now it is only\ndone over the quic_early_data_context. An additional requirement is\nimposed that the quic_early_data_context must be set for early data\ncapable tickets to be issued.\n\nBug: 295\nChange-Id: I5145c10752b41908b6807c3a3c967653b0c13f37\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41427\nReviewed-by: David Benjamin <davidben@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/851943277fcbc6597d0d9d06f897e20b88afc32b"},{"sha":"81a998a637cc05d17f2173112fadf4c7943a50e2","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Bump minimum CMake version.\n\nCMake 3.2.1 was released in March 2015, which was over five years ago.\n\nChange-Id: I8b76e1de3dba8732a143f86a3956c83fbb4306a7\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41444\nReviewed-by: Adam Langley <agl@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/81a998a637cc05d17f2173112fadf4c7943a50e2"},{"sha":"8819e0be623f3555d34ce69fee938c34f237fab4","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Test AES mode wrappers.\n\nAES_ctr128_encrypt, in particular, has a decent number of external\ncallers but is completely untested. I haven't included\nAES_cfb128_encrypt because its EVP_CIPHER counterpart is tested in\ndecrept_test. But the EVP_CIPHER counterpart simply calls\nAES_cfb128_encrypt, so it's tested transitively.\n\nChange-Id: I0133dbd5b13c2b4045a89a04f29240008a279186\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41425\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Adam Langley <agl@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/8819e0be623f3555d34ce69fee938c34f237fab4"},{"sha":"2309f645e509507a1cc8f9845771110fcf986fd9","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Use ctr32 optimizations for AES_ctr128_encrypt.\n\nThere are a decent number of uses of this function directly. I've\nattached this to bug 338. Arguably it makes it worse, though it does\nhelp with aligning on ctr32, if that works out.\n\nBug: 338\nChange-Id: I3dfc1305d359ec0c88d4f298fe1928bef7ec9877\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41426\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Adam Langley <agl@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/2309f645e509507a1cc8f9845771110fcf986fd9"},{"sha":"53a17f55247101105ae35767d5c5a6c311843a8e","author":{"name":"Adam Langley","email":"53ba49dd799bae637928e6d7322eab709f50b69d@gmail.com"},"message":"Add a |SSL_process_tls13_new_session_ticket|.\n\nThis API processes a given NewSessionTicket message and returns a resumable\n|SSL_SESSION| object that contains the ticket.\n\n(Change by Cesar Ghali.)\n\nChange-Id: I7426933b043865ca54d3cf597f7ecd54d493bf35\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41464\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/53a17f55247101105ae35767d5c5a6c311843a8e"},{"sha":"88024df12147e56b6abd66b743ff441a0aaa09a8","author":{"name":"Adam Langley","email":"53ba49dd799bae637928e6d7322eab709f50b69d@gmail.com"},"message":"Remove -enable-ed25519 compat hack.\n\nChange-Id: I2d5843b2dc957f8ae8e4d9a41cecd3268220cc1d\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41504\nCommit-Queue: Adam Langley <agl@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/88024df12147e56b6abd66b743ff441a0aaa09a8"},{"sha":"251b5169fd44345f455438312ec4e18ae07fd58c","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Assert md_size > 0.\n\nmd_size is the size of a hash, so it cannot be zero. Add an assert since\nit appears to have caused some confusion. The j >= md_size and\nj -= md_size logic implicitly assumes md_size > 0. (It's another way to\nstick a % md_size elsewhere which, likewise, assumes md_size > 0.)\n\nThe bug report itself is a false positive, but locally documenting\nassumptions is good.\n\nBug: chromium:1092697\nChange-Id: I3be0992552a300c6786cf1dc5ecfa881173a42e6\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41544\nReviewed-by: Steven Valdez <svaldez@google.com>\nReviewed-by: Adam Langley <agl@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/251b5169fd44345f455438312ec4e18ae07fd58c"},{"sha":"fbaf1c0546987fea3e07778f7eaf384726057bfb","author":{"name":"Adam Langley","email":"53ba49dd799bae637928e6d7322eab709f50b69d@gmail.com"},"message":"acvptool: go fmt\n\nChange-Id: If90e35bf4ef75d12cdbddc118611127b74bbafe6\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41604\nReviewed-by: Adam Langley <agl@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/fbaf1c0546987fea3e07778f7eaf384726057bfb"},{"sha":"0313b59d5f950a05f2269811732bbbf204059da5","author":{"name":"Adam Langley","email":"53ba49dd799bae637928e6d7322eab709f50b69d@gmail.com"},"message":"Let memory hooks override the size prefix.\n\nIn order to efficiently track heap operations, the memory hooks may need\nto store other information in the prefix area than the size that\nBoringSSL uses by default. This change lets them manage the prefix how\nthey wish.\n\nChange-Id: I5a4d98bed100aff2deaaabb3d23fab02f0be82aa\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41584\nReviewed-by: Adam Langley <alangley@gmail.com>\nReviewed-by: David Benjamin <davidben@google.com>\nCommit-Queue: Adam Langley <alangley@gmail.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/0313b59d5f950a05f2269811732bbbf204059da5"},{"sha":"9c256d1d7f2730d260c84eea2d9e97becd6dcc96","author":{"name":"Adam Langley","email":"53ba49dd799bae637928e6d7322eab709f50b69d@gmail.com"},"message":"acvptool: handle negative sizeConstraint.\n\nThe NIST server has been updated and is now sending a sizeConstraint of\n-1 to indicate that the large-upload process isn't needed. However, the\ncode was trying to put that in a uint64, which caused a parse error.\n\nChange-Id: I9ee16918df13c229b0e889fa1248eb2e0a6a5fb2\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41605\nReviewed-by: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/9c256d1d7f2730d260c84eea2d9e97becd6dcc96"},{"sha":"7f90eda55ee39c6b8c0c84ea2923dd5dd826a778","author":{"name":"Adam Langley","email":"53ba49dd799bae637928e6d7322eab709f50b69d@gmail.com"},"message":"Add “Z Computation” KAT.\n\nFIPS updates will make this useful / mandatory in the future.\n\nChange-Id: I9921e4f3fc8a8315dc85dc366f331b456572d49e\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41644\nCommit-Queue: Adam Langley <agl@google.com>\nReviewed-by: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/7f90eda55ee39c6b8c0c84ea2923dd5dd826a778"},{"sha":"72b095d0d483e6b9df002427054a0b150ee76f49","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Reword some comments.\n\nThere were a handful of comments that use \"blacklist\" and \"whitelist\".\nThey are easy to fix.\n\nChange-Id: I49a9592393b43fc85e92b4a00a585b504dede75a\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41645\nReviewed-by: Adam Langley <agl@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/72b095d0d483e6b9df002427054a0b150ee76f49"},{"sha":"cd8f3d36fe294b4896f26bf3add6a6a954218bfd","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Enforce the keyUsage extension in TLS 1.2 client certs.\n\nI've left this independent of SSL_set_enforce_rsa_key_usage because\nclient certificates in TLS always use the digitalSignature bit, RSA or\notherwise, so it's less likely that someone has messed it up, unlike\nTLS 1.2 RSA server certificates.\n\nUpdate-Note: Client certificates which do not support the\ndigitalSignature key usage will be rejected. They should either include\nthat bit or omit the keyUsage extension.\n\nBug: 349\nChange-Id: I97bbf0c8e394f219ff75b686e0c14019f6d8c9a8\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41664\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Adam Langley <agl@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/cd8f3d36fe294b4896f26bf3add6a6a954218bfd"},{"sha":"884614c24f8c04ebde9c72ec7ce8f50498e3cdae","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Use CMAKE_SIZEOF_VOID_P instead of CMAKE_CL_64\n\nCMake's documentation says this is preferred.\nhttps://cmake.org/cmake/help/latest/variable/CMAKE_CL_64.html\n\nReportedly, it also works better with MINGW, though we do not currently\nsupport MINGW with the CMake build. See\nhttps://boringssl-review.googlesource.com/c/boringssl/+/41704/\n\nChange-Id: Ie5794306beeeff816b34ee98c7a0f8e0d4f99ec8\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41724\nReviewed-by: Adam Langley <agl@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/884614c24f8c04ebde9c72ec7ce8f50498e3cdae"},{"sha":"8afdbf04bd665a76c81319bc9715a77d9bc32722","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Abstract fd operations better in tool.\n\nWindows and POSIX implement very similar fd operations, but differ\nslightly:\n\n- ssize_t in POSIX is usually int on Windows.\n- POSIX needs EINTR retry loops.\n- Windows wants _open rather than open, etc.\n- POSIX fds and sockets are the same thing, while Windows sockets are\n  HANDLEs and leaves fd as a C runtime construct.\n\nRather than ad-hoc macros and redefinitions of ssize_t (which reportedly\nupset MINGW), add some actual abstractions. While I'm here, add a scoped\nfile descriptor type.\n\nThat still leaves recv/send which are only used in one file, so defined\na socket_result_t for them.\n\nChange-Id: I17fca2a50c77191f573852bfd27553996e3e9c3f\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41725\nCommit-Queue: David Benjamin <davidben@google.com>\nReviewed-by: Adam Langley <agl@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/8afdbf04bd665a76c81319bc9715a77d9bc32722"},{"sha":"c17985424391fcbaaa57f733b7197c5dd3e510aa","author":{"name":"Jesko Jochum","email":"8a1c0518e81d24e8b4e7305d3257b93f9d102227@elettronica.de"},"message":"Fixes warning when redefining PATH_MAX when building with MINGW.\n\nFixes warning thrown when compiling digest.cc with MinGW64, by only defining PATH_MAX, if it has not yet been defined.\nElse building with MinGW64, throws the following warning:\n\n<PATH_TO_SOURCE_FOLDER>\\boringssl\\src\\tool\\digest.cc:39: warning: \"PATH_MAX\" redefined\n   39 | #define PATH_MAX MAX_PATH\n      |\nIn file included from C:/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/limits.h:194,\n                 from C:/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/syslimits.h:7,\n                 from C:/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/limits.h:34,\n                 from C:/msys64/mingw64/x86_64-w64-mingw32/include/pthread.h:67,\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/gthr-default.h:35,\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/gthr.h:148,\n                 from C:/msys64/mingw64/include/c++/9.3.0/ext/atomicity.h:35,\n                 from C:/msys64/mingw64/include/c++/9.3.0/memory:73,\n                 from <PATH_TO_SOURCE_FOLDER>/boringssl/src/include/openssl/base.h:473,\n                 from <PATH_TO_SOURCE_FOLDER>\\boringssl\\src\\tool\\digest.cc:15:\nC:/msys64/mingw64/x86_64-w64-mingw32/include/limits.h:20: note: this is the location of the previous definition\n   20 | #define PATH_MAX 260\n      |\n\nChange-Id: I29eb33ee8fad9e4e80d9348a0d5e4057dfac620c\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41705\nReviewed-by: David Benjamin <davidben@google.com>\nCommit-Queue: David Benjamin <davidben@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/c17985424391fcbaaa57f733b7197c5dd3e510aa"},{"sha":"1b8194715eeb6b43f9534a310cedd3d44d62911c","author":{"name":"David Benjamin","email":"348b1b6801801c3d890b2e1589a8e36441d09fdc@google.com"},"message":"Test resumability of same, different, and default ticket keys.\n\nIf we were to accidentally leave the ticket keys zero-initialized, the\nonly tests that notice are DefaultTicketKeyInitialization (initial key\nis not all zeros) and DefaultTicketKeyRotation (old key is not new key),\nby way of querying the keys themselves.\n\nAdd some tests which additionally test the effects on resumption itself.\n\nChange-Id: I3bfd3f1e082e3a466105dbdffa18621b81c53d17\nReviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/41564\nCommit-Queue: Adam Langley <agl@google.com>\nReviewed-by: Adam Langley <agl@google.com>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/1b8194715eeb6b43f9534a310cedd3d44d62911c"}]},"public":true,"created_at":"2021-08-20T04:45:26Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17645386672","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"push_id":7762495286,"size":1,"distinct_size":1,"ref":"refs/heads/main","head":"bae0e34eb1f3596134d25489122e64aebb38e53f","before":"0ed357ffbf58a79dc40d2b9dbd462b718fc3e12f","commits":[{"sha":"bae0e34eb1f3596134d25489122e64aebb38e53f","author":{"name":"Michael Baentsch","email":"59bd0a3ff43b32849b319e645d4798d8a5d1e889@baentsch.ch"},"message":"update to Chromium 94 [skip ci] (#98)\n\n* update to Chromium 94 [skip ci]\r\n\r\n* add multi-version chromium build note [skip ci]","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/commits/bae0e34eb1f3596134d25489122e64aebb38e53f"}]},"public":true,"created_at":"2021-08-20T04:47:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
