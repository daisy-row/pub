{"id":"17612602757","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1066","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1066/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1066/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1066/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1066","id":960214465,"node_id":"MDExOlB1bGxSZXF1ZXN0NzAzMjU2ODM5","number":1066,"title":"do full upstream doc generation [skip ci]","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2021-08-04T10:26:13Z","updated_at":"2021-08-18T04:55:55Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1066","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1066","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1066.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1066.patch"},"body":"Fixes #1064.\r\n\r\nWill not switch to Ready for Review before @xvzcf looked at the logic changes and @bhess confirmed the contents changes (dropping an author and build opts in Dilithium doesn't seem OK to just leave it to a script to decide). If the changes as per this PR are legit, we may need to re-release 0.7.0.\r\n\r\nAfter possible changes, old `update_pqclean_alg_docs.py ` will be deleted and the new script will be added to `copy_from_upstream.py` before merge.\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/900811368","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1066#issuecomment-900811368","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1066","id":900811368,"node_id":"IC_kwDOA-eq3c41sUpo","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-08-18T04:55:55Z","updated_at":"2021-08-18T04:55:55Z","author_association":"MEMBER","body":"> Is this ready to merge?\r\n\r\nThe logic is OK AFAIK, but the data produced by this code currently is not -> If this gets run before https://github.com/pq-crystals/dilithium/pull/50 gets merged, this generates incorrect documentation for our project which I personally find not good: Thinking about it again and as unhappy as I am to not be able to integrate this work, I'd prefer to rather further delay this in line with the upstream (for which this code has been custom-made) than cause our documentation to turn wrong by merging now.","performed_via_github_app":null}},"public":true,"created_at":"2021-08-18T04:55:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17612754774","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/98","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/98/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/98/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/98/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/98","id":970876322,"node_id":"MDExOlB1bGxSZXF1ZXN0NzEyNzUzMDg5","number":98,"title":"update to Chromium 94 [skip ci]","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-14T09:51:40Z","updated_at":"2021-08-18T05:15:52Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/pulls/98","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/98","diff_url":"https://github.com/open-quantum-safe/oqs-demos/pull/98.diff","patch_url":"https://github.com/open-quantum-safe/oqs-demos/pull/98.patch"},"body":"Fixes #74.\r\n\r\nA resultant binary has been added to the [0.7.0 release page](https://github.com/open-quantum-safe/oqs-demos/releases/tag/0.7.0) for trial/validation. \r\n\r\nThis utilizes `oqs-boringssl` as contained in https://github.com/open-quantum-safe/boringssl/pull/68.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/900818591","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/98#issuecomment-900818591","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/98","id":900818591,"node_id":"IC_kwDODP--n841sWaf","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-08-18T05:15:52Z","updated_at":"2021-08-18T05:15:52Z","author_association":"MEMBER","body":"Merge only after https://github.com/open-quantum-safe/boringssl/pull/68 merges","performed_via_github_app":null}},"public":true,"created_at":"2021-08-18T05:15:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17619396550","type":"IssueCommentEvent","actor":{"id":8270508,"login":"claucece","display_login":"claucece","gravatar_id":"","url":"https://api.github.com/users/claucece","avatar_url":"https://avatars.githubusercontent.com/u/8270508?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/60","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/60/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/60/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/60/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/60","id":860102824,"node_id":"MDU6SXNzdWU4NjAxMDI4MjQ=","number":60,"title":"Add some OQS tests to x509/x509_test.cc and evp/evp_test.cc","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-04-16T19:22:12Z","updated_at":"2021-08-18T13:43:54Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This might preempt issues such as https://github.com/open-quantum-safe/boringssl/issues/58 ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/901126994","html_url":"https://github.com/open-quantum-safe/boringssl/issues/60#issuecomment-901126994","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/60","id":901126994,"node_id":"IC_kwDOCrBzOM41thtS","user":{"login":"claucece","id":8270508,"node_id":"MDQ6VXNlcjgyNzA1MDg=","avatar_url":"https://avatars.githubusercontent.com/u/8270508?v=4","gravatar_id":"","url":"https://api.github.com/users/claucece","html_url":"https://github.com/claucece","followers_url":"https://api.github.com/users/claucece/followers","following_url":"https://api.github.com/users/claucece/following{/other_user}","gists_url":"https://api.github.com/users/claucece/gists{/gist_id}","starred_url":"https://api.github.com/users/claucece/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/claucece/subscriptions","organizations_url":"https://api.github.com/users/claucece/orgs","repos_url":"https://api.github.com/users/claucece/repos","events_url":"https://api.github.com/users/claucece/events{/privacy}","received_events_url":"https://api.github.com/users/claucece/received_events","type":"User","site_admin":false},"created_at":"2021-08-18T13:43:54Z","updated_at":"2021-08-18T13:43:54Z","author_association":"COLLABORATOR","body":"@baentsch yes, I was doing intial testing. But, don't feel stopped by it. I'll rebase and fix any conflicts.","performed_via_github_app":null}},"public":true,"created_at":"2021-08-18T13:43:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17619608237","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/68","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/68/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/68/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/68/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/68","id":966566941,"node_id":"MDExOlB1bGxSZXF1ZXN0NzA4ODAzNjI4","number":68,"title":"Upgrade to upstream 519c2986c73c23461b130ad19b93fd7d081353d5  (Chromium 92 0 4515 107)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-08-11T11:58:55Z","updated_at":"2021-08-18T13:56:20Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/68","html_url":"https://github.com/open-quantum-safe/boringssl/pull/68","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/68.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/68.patch"},"body":"Fixes #57. \r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/901136814","html_url":"https://github.com/open-quantum-safe/boringssl/pull/68#issuecomment-901136814","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/68","id":901136814,"node_id":"IC_kwDOCrBzOM41tkGu","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-08-18T13:56:20Z","updated_at":"2021-08-18T13:56:20Z","author_association":"MEMBER","body":"> Will hold off on merging until #60 (comment) is resolved.\r\n\r\n@claucece thankfully agreed to rebase her work in case of conflicts; thus, review can proceed.","performed_via_github_app":null}},"public":true,"created_at":"2021-08-18T13:56:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17620370379","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1025","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1025/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1025/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1025/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1025","id":924448728,"node_id":"MDU6SXNzdWU5MjQ0NDg3Mjg=","number":1025,"title":"Deal with CI backlog","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"assignees":[{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2021-06-18T00:59:57Z","updated_at":"2021-08-18T14:39:58Z","closed_at":"2021-08-18T14:39:58Z","author_association":"MEMBER","active_lock_reason":null,"body":"@xvzcf You had some concerns about backlog of incomplete coverage in CI, e.g. some algorithms being disabled on AppVeyor.  Can you document those in this issue?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/901172145","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1025#issuecomment-901172145","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1025","id":901172145,"node_id":"IC_kwDOA-eq3c41tsux","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-08-18T14:39:58Z","updated_at":"2021-08-18T14:39:58Z","author_association":"MEMBER","body":"Basically resolved, with the exception of a few jobs; closing this issue and tracking the remaining jobs separately in #1076.","performed_via_github_app":null}},"public":true,"created_at":"2021-08-18T14:39:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17620429972","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1075","id":973412759,"node_id":"MDExOlB1bGxSZXF1ZXN0NzE0ODYxMjE4","number":1075,"title":"Added seeds for Falcon 1024 and 512","user":{"login":"jsrobson10","id":45777442,"node_id":"MDQ6VXNlcjQ1Nzc3NDQy","avatar_url":"https://avatars.githubusercontent.com/u/45777442?v=4","gravatar_id":"","url":"https://api.github.com/users/jsrobson10","html_url":"https://github.com/jsrobson10","followers_url":"https://api.github.com/users/jsrobson10/followers","following_url":"https://api.github.com/users/jsrobson10/following{/other_user}","gists_url":"https://api.github.com/users/jsrobson10/gists{/gist_id}","starred_url":"https://api.github.com/users/jsrobson10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsrobson10/subscriptions","organizations_url":"https://api.github.com/users/jsrobson10/orgs","repos_url":"https://api.github.com/users/jsrobson10/repos","events_url":"https://api.github.com/users/jsrobson10/events{/privacy}","received_events_url":"https://api.github.com/users/jsrobson10/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-08-18T08:31:06Z","updated_at":"2021-08-18T14:43:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1075","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1075","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1075.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1075.patch"},"body":"I wanted to be able to generate Falcon 512 and Falcon 1024 keypairs from seeds. This gives extra functionality to shrink the \"key pair\" to a much smaller size. \r\n\r\n* [ ] These changes don't change the behaviour of Falcon 512 and Falcon 1024 during \"normal\" use, but they do add the ability to change the seed used from a randomly generated one to one passed as a parameter. \r\n* [ ] These changes don't add any new algorithms to OQS. \r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/901174858","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1075#issuecomment-901174858","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075","id":901174858,"node_id":"IC_kwDOA-eq3c41ttZK","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-08-18T14:43:28Z","updated_at":"2021-08-18T14:43:28Z","author_association":"MEMBER","body":"Hi Joshua. Because there's a risk of undermining security of key generation by taking an external seed that may not actually be uniform, I'm hesitant to incorporate this. I think the right approach would be to first check with the Falcon team to see if they endorse this mode of operation for Falcon.  If they do, then because of how we integrate algorithms into liboqs, it would first have to go into PQClean, and then we'd get the updated code when we pull from PQClean.","performed_via_github_app":null}},"public":true,"created_at":"2021-08-18T14:43:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17620462126","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1075","id":973412759,"node_id":"MDExOlB1bGxSZXF1ZXN0NzE0ODYxMjE4","number":1075,"title":"Added seeds for Falcon 1024 and 512","user":{"login":"jsrobson10","id":45777442,"node_id":"MDQ6VXNlcjQ1Nzc3NDQy","avatar_url":"https://avatars.githubusercontent.com/u/45777442?v=4","gravatar_id":"","url":"https://api.github.com/users/jsrobson10","html_url":"https://github.com/jsrobson10","followers_url":"https://api.github.com/users/jsrobson10/followers","following_url":"https://api.github.com/users/jsrobson10/following{/other_user}","gists_url":"https://api.github.com/users/jsrobson10/gists{/gist_id}","starred_url":"https://api.github.com/users/jsrobson10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsrobson10/subscriptions","organizations_url":"https://api.github.com/users/jsrobson10/orgs","repos_url":"https://api.github.com/users/jsrobson10/repos","events_url":"https://api.github.com/users/jsrobson10/events{/privacy}","received_events_url":"https://api.github.com/users/jsrobson10/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-08-18T08:31:06Z","updated_at":"2021-08-18T14:45:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1075","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1075","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1075.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1075.patch"},"body":"I wanted to be able to generate Falcon 512 and Falcon 1024 keypairs from seeds. This gives extra functionality to shrink the \"key pair\" to a much smaller size. \r\n\r\n* [ ] These changes don't change the behaviour of Falcon 512 and Falcon 1024 during \"normal\" use, but they do add the ability to change the seed used from a randomly generated one to one passed as a parameter. \r\n* [ ] These changes don't add any new algorithms to OQS. \r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/901176361","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1075#issuecomment-901176361","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1075","id":901176361,"node_id":"IC_kwDOA-eq3c41ttwp","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-08-18T14:45:20Z","updated_at":"2021-08-18T14:45:20Z","author_association":"MEMBER","body":"One other thought is that there is no guarantee that two different implementations of Falcon would construct the same (pk, sk) pair given the same seed. The only guarantee from the Falcon specification is that if two implementations use the same (pk, sk) pair, they should be able to interoperate -- verify each others' signatures correctly.","performed_via_github_app":null}},"public":true,"created_at":"2021-08-18T14:45:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17621257071","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1072","id":962813852,"node_id":"MDU6SXNzdWU5NjI4MTM4NTI=","number":1072,"title":"Android Buildscript problem with Cross Compilation","user":{"login":"Hatzen","id":21283655,"node_id":"MDQ6VXNlcjIxMjgzNjU1","avatar_url":"https://avatars.githubusercontent.com/u/21283655?v=4","gravatar_id":"","url":"https://api.github.com/users/Hatzen","html_url":"https://github.com/Hatzen","followers_url":"https://api.github.com/users/Hatzen/followers","following_url":"https://api.github.com/users/Hatzen/following{/other_user}","gists_url":"https://api.github.com/users/Hatzen/gists{/gist_id}","starred_url":"https://api.github.com/users/Hatzen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hatzen/subscriptions","organizations_url":"https://api.github.com/users/Hatzen/orgs","repos_url":"https://api.github.com/users/Hatzen/repos","events_url":"https://api.github.com/users/Hatzen/events{/privacy}","received_events_url":"https://api.github.com/users/Hatzen/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-08-06T14:58:25Z","updated_at":"2021-08-18T15:31:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I try to setup a CI pipeline for compiling liboqs with liboqs-java for android.  \r\nBut with the current master version (and release 0.6.0) of this repo it is not possible to run the android build script (https://github.com/open-quantum-safe/liboqs/blob/main/scripts/build-android.sh)  \r\n  \r\ni run in a similar issue like compiling for windows.  But cannot use wine for this problem afaik.  \r\nhttps://github.com/open-quantum-safe/liboqs/issues/727  \r\n  \r\nWhen i run  \r\nbash build-android.sh $ndkPath -s 19-a x86_64  \r\n  \r\n1. it first runs into the problem that \"try_run\" is not working as the target architecture is not the same.  \r\nhttps://github.com/open-quantum-safe/liboqs/blob/2db7f97922a7d3e50aa9f56b7e86566f62c0365a/.CMake/gcc_clang_intrinsics.cmake#L3  \r\nExcluding that file let the compile process start.  \r\n  \r\n2. But then it crashes afterwards for the common c files  \r\n\r\n```\r\ncommon.c:169:9: error: incompatible integer to pointer conversion returning 'int' from a function with result type 'void *' [-Werror,-Wint-conversion]\r\n        return aligned_alloc(alignment, size);\r\n```\r\n\r\n<details>\r\n<summary>click for full build log</summary>  \r\n  \r\n```\r\n-- Build files have been written to: /home/hatzen/LibOQSTestApp--12-add-ci-for-prebuild-liboqs/liboqs-android/prebuild-liboqs/liboqs/build\r\nScanning dependencies of target falcon_512_clean\r\n[  0%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/sig_falcon_512.c.o\r\n[  0%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/codec.c.o\r\n[  0%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/common.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/fft.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/fpr.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/keygen.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/pqclean.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/rng.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/sign.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/vrfy.c.o\r\n[  1%] Built target falcon_512_clean\r\nScanning dependencies of target common\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/aes/aes.c.o\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/aes/aes_c.c.o\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/sha2/sha2_c.c.o\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/sha3/xkcp_sha3.c.o\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/sha3/xkcp_sha3x4.c.o\r\n[  2%] Building C object src/common/CMakeFiles/common.dir/common.c.o\r\n/home/hatzen/LibOQSTestApp--12-add-ci-for-prebuild-liboqs/liboqs-android/prebuild-liboqs/liboqs/src/common/common.c:169:9: error: implicit declaration of function 'aligned_alloc' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\r\n        return aligned_alloc(alignment, size);\r\n               ^\r\n/home/hatzen/LibOQSTestApp--12-add-ci-for-prebuild-liboqs/liboqs-android/prebuild-liboqs/liboqs/src/common/common.c:169:9: error: incompatible integer to pointer conversion returning 'int' from a function with result type 'void *' [-Werror,-Wint-conversion]\r\n        return aligned_alloc(alignment, size);\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n2 errors generated.\r\nsrc/common/CMakeFiles/common.dir/build.make:182: recipe for target 'src/common/CMakeFiles/common.dir/common.c.o' failed\r\nmake[2]: *** [src/common/CMakeFiles/common.dir/common.c.o] Error 1\r\nCMakeFiles/Makefile2:260: recipe for target 'src/common/CMakeFiles/common.dir/all' failed\r\nmake[1]: *** [src/common/CMakeFiles/common.dir/all] Error 2\r\nMakefile:129: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```  \r\n  \r\n</details>  \r\n  \r\nAs i would like to make a CI pipe for my android integration [here](https://github.com/Hatzen/LibOQSTestApp/pull/13/files#diff-cec8aea73739e8e679768673e3a38cee42b5fe69d0837642cdd7f7bfab56de59) it would be a charm if we can make the android build script work without the need of changing anything in the cloned files.  \r\nSo i would suggest \r\n1. For the first problem to pass a property which disables \"try_run\"\r\n2.  and for the second problem i need help as i am not very familiar with the code or error. So can anyone provide a suggestion or solution?   \r\n  \r\nThank you   ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/901213309","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1072#issuecomment-901213309","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072","id":901213309,"node_id":"IC_kwDOA-eq3c41t2x9","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-08-18T15:31:53Z","updated_at":"2021-08-18T15:31:53Z","author_association":"MEMBER","body":"Wondering if @greebie has any insight on to this?","performed_via_github_app":null}},"public":true,"created_at":"2021-08-18T15:31:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17621835889","type":"IssueCommentEvent","actor":{"id":111091,"login":"greebie","display_login":"greebie","gravatar_id":"","url":"https://api.github.com/users/greebie","avatar_url":"https://avatars.githubusercontent.com/u/111091?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1072","id":962813852,"node_id":"MDU6SXNzdWU5NjI4MTM4NTI=","number":1072,"title":"Android Buildscript problem with Cross Compilation","user":{"login":"Hatzen","id":21283655,"node_id":"MDQ6VXNlcjIxMjgzNjU1","avatar_url":"https://avatars.githubusercontent.com/u/21283655?v=4","gravatar_id":"","url":"https://api.github.com/users/Hatzen","html_url":"https://github.com/Hatzen","followers_url":"https://api.github.com/users/Hatzen/followers","following_url":"https://api.github.com/users/Hatzen/following{/other_user}","gists_url":"https://api.github.com/users/Hatzen/gists{/gist_id}","starred_url":"https://api.github.com/users/Hatzen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hatzen/subscriptions","organizations_url":"https://api.github.com/users/Hatzen/orgs","repos_url":"https://api.github.com/users/Hatzen/repos","events_url":"https://api.github.com/users/Hatzen/events{/privacy}","received_events_url":"https://api.github.com/users/Hatzen/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-08-06T14:58:25Z","updated_at":"2021-08-18T16:08:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I try to setup a CI pipeline for compiling liboqs with liboqs-java for android.  \r\nBut with the current master version (and release 0.6.0) of this repo it is not possible to run the android build script (https://github.com/open-quantum-safe/liboqs/blob/main/scripts/build-android.sh)  \r\n  \r\ni run in a similar issue like compiling for windows.  But cannot use wine for this problem afaik.  \r\nhttps://github.com/open-quantum-safe/liboqs/issues/727  \r\n  \r\nWhen i run  \r\nbash build-android.sh $ndkPath -s 19-a x86_64  \r\n  \r\n1. it first runs into the problem that \"try_run\" is not working as the target architecture is not the same.  \r\nhttps://github.com/open-quantum-safe/liboqs/blob/2db7f97922a7d3e50aa9f56b7e86566f62c0365a/.CMake/gcc_clang_intrinsics.cmake#L3  \r\nExcluding that file let the compile process start.  \r\n  \r\n2. But then it crashes afterwards for the common c files  \r\n\r\n```\r\ncommon.c:169:9: error: incompatible integer to pointer conversion returning 'int' from a function with result type 'void *' [-Werror,-Wint-conversion]\r\n        return aligned_alloc(alignment, size);\r\n```\r\n\r\n<details>\r\n<summary>click for full build log</summary>  \r\n  \r\n```\r\n-- Build files have been written to: /home/hatzen/LibOQSTestApp--12-add-ci-for-prebuild-liboqs/liboqs-android/prebuild-liboqs/liboqs/build\r\nScanning dependencies of target falcon_512_clean\r\n[  0%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/sig_falcon_512.c.o\r\n[  0%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/codec.c.o\r\n[  0%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/common.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/fft.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/fpr.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/keygen.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/pqclean.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/rng.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/sign.c.o\r\n[  1%] Building C object src/sig/falcon/CMakeFiles/falcon_512_clean.dir/pqclean_falcon-512_clean/vrfy.c.o\r\n[  1%] Built target falcon_512_clean\r\nScanning dependencies of target common\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/aes/aes.c.o\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/aes/aes_c.c.o\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/sha2/sha2_c.c.o\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/sha3/xkcp_sha3.c.o\r\n[  1%] Building C object src/common/CMakeFiles/common.dir/sha3/xkcp_sha3x4.c.o\r\n[  2%] Building C object src/common/CMakeFiles/common.dir/common.c.o\r\n/home/hatzen/LibOQSTestApp--12-add-ci-for-prebuild-liboqs/liboqs-android/prebuild-liboqs/liboqs/src/common/common.c:169:9: error: implicit declaration of function 'aligned_alloc' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\r\n        return aligned_alloc(alignment, size);\r\n               ^\r\n/home/hatzen/LibOQSTestApp--12-add-ci-for-prebuild-liboqs/liboqs-android/prebuild-liboqs/liboqs/src/common/common.c:169:9: error: incompatible integer to pointer conversion returning 'int' from a function with result type 'void *' [-Werror,-Wint-conversion]\r\n        return aligned_alloc(alignment, size);\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n2 errors generated.\r\nsrc/common/CMakeFiles/common.dir/build.make:182: recipe for target 'src/common/CMakeFiles/common.dir/common.c.o' failed\r\nmake[2]: *** [src/common/CMakeFiles/common.dir/common.c.o] Error 1\r\nCMakeFiles/Makefile2:260: recipe for target 'src/common/CMakeFiles/common.dir/all' failed\r\nmake[1]: *** [src/common/CMakeFiles/common.dir/all] Error 2\r\nMakefile:129: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```  \r\n  \r\n</details>  \r\n  \r\nAs i would like to make a CI pipe for my android integration [here](https://github.com/Hatzen/LibOQSTestApp/pull/13/files#diff-cec8aea73739e8e679768673e3a38cee42b5fe69d0837642cdd7f7bfab56de59) it would be a charm if we can make the android build script work without the need of changing anything in the cloned files.  \r\nSo i would suggest \r\n1. For the first problem to pass a property which disables \"try_run\"\r\n2.  and for the second problem i need help as i am not very familiar with the code or error. So can anyone provide a suggestion or solution?   \r\n  \r\nThank you   ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/901241358","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1072#issuecomment-901241358","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1072","id":901241358,"node_id":"IC_kwDOA-eq3c41t9oO","user":{"login":"greebie","id":111091,"node_id":"MDQ6VXNlcjExMTA5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/111091?v=4","gravatar_id":"","url":"https://api.github.com/users/greebie","html_url":"https://github.com/greebie","followers_url":"https://api.github.com/users/greebie/followers","following_url":"https://api.github.com/users/greebie/following{/other_user}","gists_url":"https://api.github.com/users/greebie/gists{/gist_id}","starred_url":"https://api.github.com/users/greebie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greebie/subscriptions","organizations_url":"https://api.github.com/users/greebie/orgs","repos_url":"https://api.github.com/users/greebie/repos","events_url":"https://api.github.com/users/greebie/events{/privacy}","received_events_url":"https://api.github.com/users/greebie/received_events","type":"User","site_admin":false},"created_at":"2021-08-18T16:08:51Z","updated_at":"2021-08-18T16:08:51Z","author_association":"CONTRIBUTOR","body":"I definitely dropped any hope of being able to work with 32 bit architectures in my use case/prototype (using Mac with Flutter via https://www.github.com/greebie/liboqs-flutter).  I thought it was a Mac thing (and even more especially true now that I moved to M1). Unfortunately, I have not used the java version of liboqs, other than to help (or not help) via Stack overflow.\r\n\r\nFor testing within Flutter, I had to use a hack that is not particularly fantastic from a safety point of view. I recorded it here:  https://stackoverflow.com/questions/66641396/testing-library-functions-in-a-flutter-package-with-native-functions-using-dart/66722572#66722572.\r\n\r\nIt may be worth exploring a fork tailored for ingesting the c code directly into mobile via an ffi library. I had more luck in both iOS and Android just adding the C folders and compiling liboqs into the apps during run time. I got the .so working in Android, but not iOS. It would probably work for 32-bit in a linux environment as well.\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-08-18T16:08:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
