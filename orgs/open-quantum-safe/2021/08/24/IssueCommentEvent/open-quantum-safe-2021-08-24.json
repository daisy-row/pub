{"id":"17689210633","type":"IssueCommentEvent","actor":{"id":49699333,"login":"dependabot[bot]","display_login":"dependabot","gravatar_id":"","url":"https://api.github.com/users/dependabot[bot]","avatar_url":"https://avatars.githubusercontent.com/u/49699333?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/83","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/83/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/83/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/83/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/83","id":977284301,"node_id":"MDExOlB1bGxSZXF1ZXN0NzE4MDQ2OTU5","number":83,"title":"Bump oqs-sys/liboqs from `6f64980` to `0d11cb4`","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2730583541,"node_id":"MDU6TGFiZWwyNzMwNTgzNTQx","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"},{"id":2730584915,"node_id":"MDU6TGFiZWwyNzMwNTg0OTE1","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/submodules","name":"submodules","color":"000000","default":false,"description":"Pull requests that update Submodules code"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-08-23T18:02:07Z","updated_at":"2021-08-24T07:51:54Z","closed_at":"2021-08-24T07:51:52Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/pulls/83","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/83","diff_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/83.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/83.patch"},"body":"Bumps [oqs-sys/liboqs](https://github.com/Open-Quantum-Safe/liboqs) from `6f64980` to `0d11cb4`.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/0d11cb44610a2e9ac7308ac1d7fccd8a9e530057\"><code>0d11cb4</code></a> Run constant time and undefined sanitizer jobs weekly (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1078\">#1078</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/b803b54179c1cea9091d9331cc8085fc235e1be4\"><code>b803b54</code></a> Use Github Actions for some CI (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1069\">#1069</a>)</li>\n<li>See full diff in <a href=\"https://github.com/Open-Quantum-Safe/liboqs/compare/6f649807cdfad7bc83b25ebc334c961dc14df17a...0d11cb44610a2e9ac7308ac1d7fccd8a9e530057\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/904408755","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/83#issuecomment-904408755","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/83","id":904408755,"node_id":"IC_kwDODwdmyM416C6z","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"created_at":"2021-08-24T07:51:53Z","updated_at":"2021-08-24T07:51:53Z","author_association":"CONTRIBUTOR","body":"OK, I won't notify you again about this release, but will get in touch when a new version is available. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.","performed_via_github_app":null}},"public":true,"created_at":"2021-08-24T07:51:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17692505089","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/62","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/62/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/62/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/62/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/62","id":977997447,"node_id":"MDU6SXNzdWU5Nzc5OTc0NDc=","number":62,"title":"Missing/incorrect units in benchmark results","user":{"login":"MaChengxin","id":7589678,"node_id":"MDQ6VXNlcjc1ODk2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/7589678?v=4","gravatar_id":"","url":"https://api.github.com/users/MaChengxin","html_url":"https://github.com/MaChengxin","followers_url":"https://api.github.com/users/MaChengxin/followers","following_url":"https://api.github.com/users/MaChengxin/following{/other_user}","gists_url":"https://api.github.com/users/MaChengxin/gists{/gist_id}","starred_url":"https://api.github.com/users/MaChengxin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaChengxin/subscriptions","organizations_url":"https://api.github.com/users/MaChengxin/orgs","repos_url":"https://api.github.com/users/MaChengxin/repos","events_url":"https://api.github.com/users/MaChengxin/events{/privacy}","received_events_url":"https://api.github.com/users/MaChengxin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-08-24T11:30:18Z","updated_at":"2021-08-24T11:49:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"1. On the [result page of signature algorithms memory usage](https://openquantumsafe.org/benchmarking/visualization/mem_sig.html), the unit of the values in the table is not specified. It should be \"bytes\", right?\r\n2. In the three charts (keygen operations, sign operations, verify operations) following the table on this page, the labels for the y-axis seems to be incorrect. The labels are \"keygen/s\", \"sign/s\", and \"verify/s\" respectively, same as those in [SIG algorithms runtime performance](https://openquantumsafe.org/benchmarking/visualization/speed_sig.html). Aren't they supposed to be \"bytes\"?\r\n\r\nPS: I took a look at the source code [here](https://github.com/open-quantum-safe/profiling/blob/db88970996401da1e6d6b0f25f530ee627659c03/visualization/speed_sig_script.js#L188) and [here](https://github.com/open-quantum-safe/profiling/blob/db88970996401da1e6d6b0f25f530ee627659c03/visualization/mem_sig_script.js#L197) and found that the labels are not consistent with those I saw on [the benchmark page](https://openquantumsafe.org/benchmarking/).","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/904568785","html_url":"https://github.com/open-quantum-safe/profiling/issues/62#issuecomment-904568785","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/62","id":904568785,"node_id":"IC_kwDOETYnOM416p_R","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-08-24T11:49:29Z","updated_at":"2021-08-24T11:49:29Z","author_association":"MEMBER","body":"Thanks for your interest in our project and taking the time for filing a bug report. Indeed, you are right and these are issues worth fixing. Stay tuned. ","performed_via_github_app":null}},"public":true,"created_at":"2021-08-24T11:49:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17697738507","type":"IssueCommentEvent","actor":{"id":15720856,"login":"friedrichsenm","display_login":"friedrichsenm","gravatar_id":"","url":"https://api.github.com/users/friedrichsenm","avatar_url":"https://avatars.githubusercontent.com/u/15720856?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/329","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/329/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/329/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/329/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/329","id":976888120,"node_id":"MDU6SXNzdWU5NzY4ODgxMjA=","number":329,"title":"Question on the signing process","user":{"login":"hengyongming","id":65388283,"node_id":"MDQ6VXNlcjY1Mzg4Mjgz","avatar_url":"https://avatars.githubusercontent.com/u/65388283?v=4","gravatar_id":"","url":"https://api.github.com/users/hengyongming","html_url":"https://github.com/hengyongming","followers_url":"https://api.github.com/users/hengyongming/followers","following_url":"https://api.github.com/users/hengyongming/following{/other_user}","gists_url":"https://api.github.com/users/hengyongming/gists{/gist_id}","starred_url":"https://api.github.com/users/hengyongming/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hengyongming/subscriptions","organizations_url":"https://api.github.com/users/hengyongming/orgs","repos_url":"https://api.github.com/users/hengyongming/repos","events_url":"https://api.github.com/users/hengyongming/events{/privacy}","received_events_url":"https://api.github.com/users/hengyongming/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-08-23T10:39:16Z","updated_at":"2021-08-24T17:18:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\n\r\nI am wondering how signing takes place in oqs?\r\n\r\nThese are 2 possible ways that I came up with but I am unsure whether it is the correct idea ?\r\n\r\nMethod A\r\n\r\nStep 1) Data m -> SHA2(m) -> PQSign(SHA2(m)) = S1\r\n\r\nStep 2) Data m -> SHAX(m) -> RSASign(SHAX(m)) = S2, where X = 256 / 384 / 512\r\n\r\nMethod B\r\n\r\nStep 1) Data m -> SHA2(m) -> PQSign(SHA2(m)) = S1\r\n\r\nStep 2) SHA2(m) -> SHAX(SHA2(m)) -> RSASign(SHAX(SHA2(m))) = S3, where X = 256 / 384 / 512\r\n\r\nDo correct me if I am wrong.\r\nThank you in advance!\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/904830158","html_url":"https://github.com/open-quantum-safe/openssl/issues/329#issuecomment-904830158","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/329","id":904830158,"node_id":"IC_kwDOA_fpb8417pzO","user":{"login":"friedrichsenm","id":15720856,"node_id":"MDQ6VXNlcjE1NzIwODU2","avatar_url":"https://avatars.githubusercontent.com/u/15720856?v=4","gravatar_id":"","url":"https://api.github.com/users/friedrichsenm","html_url":"https://github.com/friedrichsenm","followers_url":"https://api.github.com/users/friedrichsenm/followers","following_url":"https://api.github.com/users/friedrichsenm/following{/other_user}","gists_url":"https://api.github.com/users/friedrichsenm/gists{/gist_id}","starred_url":"https://api.github.com/users/friedrichsenm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/friedrichsenm/subscriptions","organizations_url":"https://api.github.com/users/friedrichsenm/orgs","repos_url":"https://api.github.com/users/friedrichsenm/repos","events_url":"https://api.github.com/users/friedrichsenm/events{/privacy}","received_events_url":"https://api.github.com/users/friedrichsenm/received_events","type":"User","site_admin":false},"created_at":"2021-08-24T17:18:36Z","updated_at":"2021-08-24T17:18:36Z","author_association":"NONE","body":"(Note, I'm not one of the OQS folks). Do you mean a signature in a certificate or as part of authentication in a TLS connection? [This part of the wiki](https://github.com/open-quantum-safe/openssl/wiki/Integrating-PQC-into-TLS-1.3) talks about how they integrated things in more detail, but it looks like if you sign things with just a straight PQ algorithm (not hybrid), there is no hashing done to the message before passing to the signature algorithm.\r\n\r\nI've been playing around with Falcon signatures and it looks like there is some hashing done with SHA3 internally, so maybe that's why no hashing is done prior to calling the signing API.","performed_via_github_app":null}},"public":true,"created_at":"2021-08-24T17:18:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
