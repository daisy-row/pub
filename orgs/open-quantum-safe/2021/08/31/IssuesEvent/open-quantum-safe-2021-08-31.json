{"id":"17788825414","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1083","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1083/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1083/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1083/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1083","id":983905526,"node_id":"MDU6SXNzdWU5ODM5MDU1MjY=","number":1083,"title":"Enabling more compiler warnings","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-08-31T14:07:13Z","updated_at":"2021-08-31T14:07:13Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"After reading https://queue.acm.org/detail.cfm?id=3468263 one might be tempted to activate more compiler warning flags than just `-Wall -Wextra`). When doing this in `liboqs` (only adding `-Wnull-dereference` and `-Wduplicated-branches`) the following code \"shortcomings\" are unearthed:\r\n\r\n```\r\n[26/1202] Building C object src/sig/picnic/CMakeFiles/picnic.dir/external/picnic_impl.c.o\r\n../src/sig/picnic/external/picnic_impl.c: In function ‘oqs_sig_picnic_impl_sign’:\r\n../src/sig/picnic/external/picnic_impl.c:1060:3: warning: potential null pointer dereference [-Wnull-dereference]\r\n   generate_seeds(pp, context, prf->round[0].seeds[0], prf->salt);\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n[83/1202] Building C object src/kem/sike/CMakeFiles/sike.dir/external/P610/P610_compressed.c.o\r\nIn file included from ../src/kem/sike/external/P610/P610_compressed.c:407:0:\r\n../src/kem/sike/external/P610/../ec_isogeny.c: In function ‘Ladder3pt_dual’:\r\n../src/kem/sike/external/P610/../ec_isogeny.c:690:8: warning: this condition has identical branches [-Wduplicated-branches]\r\n     if (AliceOrBob == ALICE) {\r\n        ^\r\n```\r\n-> Might it be worth while notifying upstream code maintainers of this and if fixed, also activating these warnings when building `liboqs`? Another idea may be to activate `-fanalyzer` when moving to gcc10/11. Any other flags worth while adding to make the code even more robust?","performed_via_github_app":null}},"public":true,"created_at":"2021-08-31T14:07:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
