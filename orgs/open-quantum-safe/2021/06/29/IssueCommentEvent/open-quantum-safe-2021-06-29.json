{"id":"16962949795","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","id":930548190,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc4MjIwMDM3","number":1037,"title":"Support for x86 and ppc64le architectures","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2021-06-25T22:52:19Z","updated_at":"2021-06-29T07:26:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1037","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.patch"},"body":"As requested in https://github.com/open-quantum-safe/liboqs/issues/1019#issuecomment-868131725\r\nTwo commits to support builds on x86 (`i686`) and ppc64le, all algorithms are supposed to build as generic implementations.\r\n\r\nTested and all tests are passing on [ALT Linux](http://git.altlinux.org/people/vt/packages/?p=liboqs.git;a=shortlog;h=refs/tags/0.6.0-alt2). Our build logs (with tests run):\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/i586/log\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/ppc64le/log\r\n\r\nps. These two commits are just `cherry-pick`'ed from our downstream repo, with some conflict resolved for the second one.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870345003","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037#issuecomment-870345003","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","id":870345003,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDM0NTAwMw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T07:26:08Z","updated_at":"2021-06-29T07:26:08Z","author_association":"MEMBER","body":"> We can add the TravisCI build if we want to make exception and slightly expand the CI zoo again.\r\n\r\nI'd be OK with this if it's clear that Travis (and ppc64l4 and s390x) are \"second-grade\" citizens until corresponding downstream CI checks have been added -- at the very least in those downstream projects for which this work has been initiated: Could you comment which ones those are, @vt-alt ? Was it `oqs-openssh`? Personally, I'd think `oqs-openssl` should also get added platform support as it's the basis for many (lib)OQS integrations. In my eyes, automatic downstream triggering then only would be icing on the cake.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T07:26:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16962983735","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1038","id":932296798,"node_id":"MDU6SXNzdWU5MzIyOTY3OTg=","number":1038,"title":"SPHINCS+ memcpy source and destination overlap - undefined behavior","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-29T07:12:04Z","updated_at":"2021-06-29T07:28:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The SPHINCS+ implementations have cases of memcpy use where the source and destination overlap. According to the C standard and posix, memcpy behavior is undefined if memory regions overlap.\r\n\r\nDetected using valgrind on ppc64le/Ubuntu focal. Memcpy implementations vary, so it seems to be not detected with valgrind on x86_64.\r\n\r\nThe cause in `gen_chain`:\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/d9fb4e0e81ccd0a0972b38743404d982fe0a90c1/src/sig/sphincs/pqclean_sphincs-haraka-128f-robust_clean/wots.c#L37-L44\r\n\r\nUsed for example by `wots_gen_pk`, where src and dst are the same. The replicated code of all variants is affected:\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/d9fb4e0e81ccd0a0972b38743404d982fe0a90c1/src/sig/sphincs/pqclean_sphincs-haraka-128f-robust_clean/wots.c#L122-L123\r\n\r\nBelow is the valgrind log. It's part of a constant-time check, but the issues detected are because of overlapping memory.\r\n[ppc64le.txt](https://github.com/open-quantum-safe/liboqs/files/6731356/ppc64le.txt)","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870346684","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1038#issuecomment-870346684","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038","id":870346684,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDM0NjY4NA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T07:28:43Z","updated_at":"2021-06-29T07:28:43Z","author_association":"MEMBER","body":"Yikes -- good catch! Hard to believe the upstreams didn't encounter this before, at least PQClean: Shouldn't this issue then rather be opened there?","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T07:28:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16963009054","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/70","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/70/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/70/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/70/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/70","id":931826430,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc5MjU5NTM1","number":70,"title":"Bump oqs-sys/liboqs from `bf0e388` to `d9fb4e0`","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2730583541,"node_id":"MDU6TGFiZWwyNzMwNTgzNTQx","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"},{"id":2730584915,"node_id":"MDU6TGFiZWwyNzMwNTg0OTE1","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/submodules","name":"submodules","color":"000000","default":false,"description":"Pull requests that update Submodules code"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-28T18:03:17Z","updated_at":"2021-06-29T07:30:37Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/pulls/70","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/70","diff_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/70.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/70.patch"},"body":"Bumps [oqs-sys/liboqs](https://github.com/Open-Quantum-Safe/liboqs) from `bf0e388` to `d9fb4e0`.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/d9fb4e0e81ccd0a0972b38743404d982fe0a90c1\"><code>d9fb4e0</code></a> Add OQS_PERMIT_UNSUPPORTED_ARCHITECTURE flag (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1021\">#1021</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/7a5097dbd469334cc1e9944da347b4d3e24d077d\"><code>7a5097d</code></a> Make BIKE compile for different CMake versions when AVX512 is used (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/1033\">#1033</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/44cbde234a82813a181b4cc3c1330e56b253858f\"><code>44cbde2</code></a> Fixed downstream triggering bug in CircleCI config and also refactored the co...</li>\n<li>See full diff in <a href=\"https://github.com/Open-Quantum-Safe/liboqs/compare/bf0e388545b70e775cd5f68720bde539d6e0ef56...d9fb4e0e81ccd0a0972b38743404d982fe0a90c1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/870347898","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/70#issuecomment-870347898","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/70","id":870347898,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDM0Nzg5OA==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T07:30:37Z","updated_at":"2021-06-29T07:30:37Z","author_association":"MEMBER","body":"> OQS_PERMIT_UNSUPPORTED_ARCHITECTURE\r\n\r\nI maybe should try to add a Rust feature for this flag.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T07:30:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16963215131","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1038","id":932296798,"node_id":"MDU6SXNzdWU5MzIyOTY3OTg=","number":1038,"title":"SPHINCS+ memcpy source and destination overlap - undefined behavior","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-29T07:12:04Z","updated_at":"2021-06-29T07:45:57Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The SPHINCS+ implementations have cases of memcpy use where the source and destination overlap. According to the C standard and posix, memcpy behavior is undefined if memory regions overlap.\r\n\r\nDetected using valgrind on ppc64le/Ubuntu focal. Memcpy implementations vary, so it seems to be not detected with valgrind on x86_64.\r\n\r\nThe cause in `gen_chain`:\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/d9fb4e0e81ccd0a0972b38743404d982fe0a90c1/src/sig/sphincs/pqclean_sphincs-haraka-128f-robust_clean/wots.c#L37-L44\r\n\r\nUsed for example by `wots_gen_pk`, where src and dst are the same. The replicated code of all variants is affected:\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/d9fb4e0e81ccd0a0972b38743404d982fe0a90c1/src/sig/sphincs/pqclean_sphincs-haraka-128f-robust_clean/wots.c#L122-L123\r\n\r\nBelow is the valgrind log. It's part of a constant-time check, but the issues detected are because of overlapping memory.\r\n[ppc64le.txt](https://github.com/open-quantum-safe/liboqs/files/6731356/ppc64le.txt)","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870358236","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1038#issuecomment-870358236","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038","id":870358236,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDM1ODIzNg==","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T07:45:57Z","updated_at":"2021-06-29T07:45:57Z","author_association":"CONTRIBUTOR","body":"> PQClean: Shouldn't this issue then rather be opened there?\r\n\r\nYes, thanks. Created an issue in PQClean that links to the one here.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T07:45:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16964402244","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1026","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1026/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1026/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1026/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1026","id":924449551,"node_id":"MDU6SXNzdWU5MjQ0NDk1NTE=","number":1026,"title":"Pull updated NTRU Prime from PQClean","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/16","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/16","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/16/labels","id":6858098,"node_id":"MDk6TWlsZXN0b25lNjg1ODA5OA==","number":16,"title":"0.7.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":5,"closed_issues":2,"state":"open","created_at":"2021-06-16T00:22:45Z","updated_at":"2021-06-25T01:39:41Z","due_on":null,"closed_at":null},"comments":5,"created_at":"2021-06-18T01:02:07Z","updated_at":"2021-06-29T09:07:18Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870419141","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1026#issuecomment-870419141","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1026","id":870419141,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDQxOTE0MQ==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T09:07:17Z","updated_at":"2021-06-29T09:07:17Z","author_association":"MEMBER","body":"> Yes I think that might be a better place since we should have a full view of all the liboqs algorithms there.\r\n\r\nOK, created #1039 to make progress on this issue and created #1040 to resolve the non-PQClean alg inclusion as per the above.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T09:07:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16968700886","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1018","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1018/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1018/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1018/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1018","id":919690829,"node_id":"MDU6SXNzdWU5MTk2OTA4Mjk=","number":1018,"title":"liboqs 0.6.0 does not build on Apple M1","user":{"login":"chenrui333","id":1580956,"node_id":"MDQ6VXNlcjE1ODA5NTY=","avatar_url":"https://avatars.githubusercontent.com/u/1580956?v=4","gravatar_id":"","url":"https://api.github.com/users/chenrui333","html_url":"https://github.com/chenrui333","followers_url":"https://api.github.com/users/chenrui333/followers","following_url":"https://api.github.com/users/chenrui333/following{/other_user}","gists_url":"https://api.github.com/users/chenrui333/gists{/gist_id}","starred_url":"https://api.github.com/users/chenrui333/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenrui333/subscriptions","organizations_url":"https://api.github.com/users/chenrui333/orgs","repos_url":"https://api.github.com/users/chenrui333/repos","events_url":"https://api.github.com/users/chenrui333/events{/privacy}","received_events_url":"https://api.github.com/users/chenrui333/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/16","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/16","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/16/labels","id":6858098,"node_id":"MDk6TWlsZXN0b25lNjg1ODA5OA==","number":16,"title":"0.7.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":5,"closed_issues":2,"state":"open","created_at":"2021-06-16T00:22:45Z","updated_at":"2021-06-25T01:39:41Z","due_on":null,"closed_at":null},"comments":6,"created_at":"2021-06-13T01:07:37Z","updated_at":"2021-06-29T13:47:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"👋 trying to build the latest release, but run into some build issue. The error log is as below:\r\n\r\n\r\n<details>\r\n<summary>build failure on 11-arm</summary>\r\n\r\n```\r\nld: warning: arm64 function not 4-byte aligned: oqs_kem_sike_mp_subadd751x2_asm from src/kem/sike/CMakeFiles/sike.dir/external/P751/ARM64/fp_arm64_asm.S.o\r\nld: warning: arm64 function not 4-byte aligned: oqs_kem_sike_mp_dblsub751x2_asm from src/kem/sike/CMakeFiles/sike.dir/external/P751/ARM64/fp_arm64_asm.S.o\r\nUndefined symbols for architecture arm64:\r\n  \"_oqs_kem_sike_fpadd434_asm\", referenced from:\r\n      _oqs_kem_sike_fpadd434 in P434.c.o\r\n      _oqs_kem_sike_fp2add434 in P434.c.o\r\n```\r\n\r\n</details>\r\n\r\n\r\nrelates to Homebrew/homebrew-core#79124\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870615340","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1018#issuecomment-870615340","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1018","id":870615340,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDYxNTM0MA==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T13:47:06Z","updated_at":"2021-06-29T13:47:06Z","author_association":"CONTRIBUTOR","body":"> Pushed [PR 48](https://github.com/microsoft/PQCrypto-SIDH/pull/48) on SIKE project; waiting for upstream review before merging here. Although it might be interesting to first test on your device when you get it, @dstebila.\r\n\r\nThe SIKE maintainer's and my availability won't overlap anytime soon, so in order to unblock us, I propose we integrate the changes from PR 48 into OQS directly (since the only issue with the PR is Makefile related, and we can control how the scheme is built here). I can work on Dougla's Mac Mini to test the OQS fix. cmake and ninja are missing and I'm not sure how to install them; @dstebila, can you help?","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T13:47:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16970877782","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1041","id":932685293,"node_id":"MDExOlB1bGxSZXF1ZXN0NjgwMDAxMTk1","number":1041,"title":"Suppression file update after ppc64le constant-time check","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-29T13:39:05Z","updated_at":"2021-06-29T15:44:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1041","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1041","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1041.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1041.patch"},"body":"Minor suppression file updates after a constant-time check on ppc64le (see https://github.com/open-quantum-safe/liboqs/pull/1037):\r\n\r\n- Dilithium: (i) two line numbers changed, (ii) using explicit function name (fun:rej_uniform) for generic Dilithium\r\n- Adds the new BIKE variants (adding to issues.json like the previous variants, expert review might be needed here)\r\n\r\nThe CI log with BIKE and Dilithium reports is available here: [ppc64le.txt](https://github.com/open-quantum-safe/liboqs/files/6733709/ppc64le.txt)\r\nThe SPHINCS+ reports are documented separately in #1038.\r\n\r\nThe reported issues (except #1038) should also be reproducible using the `constant-time-x64-extensions` / `constant-time-x64` circleci jobs. After this fix, all constant-time checks pass on x86_64 / ppc64le.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870711867","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1041#issuecomment-870711867","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041","id":870711867,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDcxMTg2Nw==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T15:44:46Z","updated_at":"2021-06-29T15:44:46Z","author_association":"CONTRIBUTOR","body":"The new BIKE code has some non-constant time subroutines for some platforms, but there's definitely an attempt to be constant time on recent Intel CPUs. It will take quite a bit of work to fully document this.\r\n\r\nBefore we start, it also looks like we're not always using the best BIKE code available. For instance we're using `gf2x_mul_base_port` instead of `gf2x_mul_base_pclmul` when compiling specifically for Haswell, which has PCLMUL. This is causing a lot of constant time warnings. The `cpu_features.h` file needs to be rewritten to be aware of the dist build setting and it needs to fall back to the oqs_config.h defines for non-dist builds.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T15:44:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16973541720","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","id":930548190,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc4MjIwMDM3","number":1037,"title":"Support for x86 and ppc64le architectures","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2021-06-25T22:52:19Z","updated_at":"2021-06-29T19:04:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1037","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.patch"},"body":"As requested in https://github.com/open-quantum-safe/liboqs/issues/1019#issuecomment-868131725\r\nTwo commits to support builds on x86 (`i686`) and ppc64le, all algorithms are supposed to build as generic implementations.\r\n\r\nTested and all tests are passing on [ALT Linux](http://git.altlinux.org/people/vt/packages/?p=liboqs.git;a=shortlog;h=refs/tags/0.6.0-alt2). Our build logs (with tests run):\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/i586/log\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/ppc64le/log\r\n\r\nps. These two commits are just `cherry-pick`'ed from our downstream repo, with some conflict resolved for the second one.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870842613","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037#issuecomment-870842613","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","id":870842613,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDg0MjYxMw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T19:04:48Z","updated_at":"2021-06-29T19:04:48Z","author_association":"MEMBER","body":"Thanks @bhess for creating the ppc64le Travis testing. The CI configuration looks sufficiently straightforward that I'm not worried about it expanding the CI zoo much.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T19:04:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16973566148","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1041","id":932685293,"node_id":"MDExOlB1bGxSZXF1ZXN0NjgwMDAxMTk1","number":1041,"title":"Suppression file update after ppc64le constant-time check","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-29T13:39:05Z","updated_at":"2021-06-29T19:06:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1041","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1041","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1041.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1041.patch"},"body":"Minor suppression file updates after a constant-time check on ppc64le (see https://github.com/open-quantum-safe/liboqs/pull/1037):\r\n\r\n- Dilithium: (i) two line numbers changed, (ii) using explicit function name (fun:rej_uniform) for generic Dilithium\r\n- Adds the new BIKE variants (adding to issues.json like the previous variants, expert review might be needed here)\r\n\r\nThe CI log with BIKE and Dilithium reports is available here: [ppc64le.txt](https://github.com/open-quantum-safe/liboqs/files/6733709/ppc64le.txt)\r\nThe SPHINCS+ reports are documented separately in #1038.\r\n\r\nThe reported issues (except #1038) should also be reproducible using the `constant-time-x64-extensions` / `constant-time-x64` circleci jobs. After this fix, all constant-time checks pass on x86_64 / ppc64le.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870843898","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1041#issuecomment-870843898","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1041","id":870843898,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDg0Mzg5OA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T19:06:50Z","updated_at":"2021-06-29T19:06:50Z","author_association":"MEMBER","body":"> The new BIKE code has some non-constant time subroutines for some platforms, but there's definitely an attempt to be constant time on recent Intel CPUs. It will take quite a bit of work to fully document this.\r\n> \r\n> Before we start, it also looks like we're not always using the best BIKE code available. For instance we're using `gf2x_mul_base_port` instead of `gf2x_mul_base_pclmul` when compiling specifically for Haswell, which has PCLMUL. This is causing a lot of constant time warnings. The `cpu_features.h` file needs to be rewritten to be aware of the dist build setting and it needs to fall back to the oqs_config.h defines for non-dist builds.\r\n\r\nShould we create a separate issue to track this, allowing us to merge this PR without waiting on that?","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T19:06:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16974267131","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","id":930548190,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc4MjIwMDM3","number":1037,"title":"Support for x86 and ppc64le architectures","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2021-06-25T22:52:19Z","updated_at":"2021-06-29T20:07:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1037","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.patch"},"body":"As requested in https://github.com/open-quantum-safe/liboqs/issues/1019#issuecomment-868131725\r\nTwo commits to support builds on x86 (`i686`) and ppc64le, all algorithms are supposed to build as generic implementations.\r\n\r\nTested and all tests are passing on [ALT Linux](http://git.altlinux.org/people/vt/packages/?p=liboqs.git;a=shortlog;h=refs/tags/0.6.0-alt2). Our build logs (with tests run):\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/i586/log\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/ppc64le/log\r\n\r\nps. These two commits are just `cherry-pick`'ed from our downstream repo, with some conflict resolved for the second one.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870880204","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037#issuecomment-870880204","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","id":870880204,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDg4MDIwNA==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T20:07:09Z","updated_at":"2021-06-29T20:07:09Z","author_association":"NONE","body":"> It might also make sense to push the SIKE changes to upstream.\r\n\r\nThanks. I will create PR there.\r\n\r\n\r\n> Could you comment which ones those are, @vt-alt ? Was it `oqs-openssh`?\r\n\r\nI build `liboqs` and `openwuantumsafe-openssh` for ALT linux. There is info for most distributions:\r\nhttps://repology.org/project/liboqs/versions\r\nhttps://repology.org/project/openquantumsafe-openssh/versions\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T20:07:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16974552666","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","id":930548190,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc4MjIwMDM3","number":1037,"title":"Support for x86 and ppc64le architectures","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2021-06-25T22:52:19Z","updated_at":"2021-06-29T20:31:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1037","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.patch"},"body":"As requested in https://github.com/open-quantum-safe/liboqs/issues/1019#issuecomment-868131725\r\nTwo commits to support builds on x86 (`i686`) and ppc64le, all algorithms are supposed to build as generic implementations.\r\n\r\nTested and all tests are passing on [ALT Linux](http://git.altlinux.org/people/vt/packages/?p=liboqs.git;a=shortlog;h=refs/tags/0.6.0-alt2). Our build logs (with tests run):\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/i586/log\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/ppc64le/log\r\n\r\nps. These two commits are just `cherry-pick`'ed from our downstream repo, with some conflict resolved for the second one.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870895869","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037#issuecomment-870895869","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","id":870895869,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDg5NTg2OQ==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T20:31:46Z","updated_at":"2021-06-29T20:31:46Z","author_association":"NONE","body":"While porting to [PQCrypto-SIDH](https://github.com/Microsoft/PQCrypto-SIDH) I realized that I had incorrect assumptions (about the generic implementation of SIKE) and will force push slightly corrected ppc64le commit here. (No data or behavior change, just remove redundant `#if` arguments where they aren't needed anyway.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T20:31:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16975357469","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","id":930548190,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc4MjIwMDM3","number":1037,"title":"Support for x86 and ppc64le architectures","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2021-06-25T22:52:19Z","updated_at":"2021-06-29T21:47:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1037","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1037.patch"},"body":"As requested in https://github.com/open-quantum-safe/liboqs/issues/1019#issuecomment-868131725\r\nTwo commits to support builds on x86 (`i686`) and ppc64le, all algorithms are supposed to build as generic implementations.\r\n\r\nTested and all tests are passing on [ALT Linux](http://git.altlinux.org/people/vt/packages/?p=liboqs.git;a=shortlog;h=refs/tags/0.6.0-alt2). Our build logs (with tests run):\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/i586/log\r\n* http://git.altlinux.org/tasks/archive/done/_269/275542/build/100/ppc64le/log\r\n\r\nps. These two commits are just `cherry-pick`'ed from our downstream repo, with some conflict resolved for the second one.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/870940830","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1037#issuecomment-870940830","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1037","id":870940830,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDk0MDgzMA==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T21:47:17Z","updated_at":"2021-06-29T21:47:17Z","author_association":"NONE","body":"FYI. I created a pull request there https://github.com/microsoft/PQCrypto-SIDH/pull/50\r\n\r\nForce pushed mentioned above change here:\r\n```patch\r\ndiff --git a/src/kem/sike/external/config.h b/src/kem/sike/external/config.h\r\nindex 97a9b8bf..591f1cd5 100644\r\n--- a/src/kem/sike/external/config.h\r\n+++ b/src/kem/sike/external/config.h\r\n@@ -88,8 +88,6 @@ typedef uint64_t uint128_t[2];\r\n typedef unsigned uint128_t __attribute__((mode(TI)));\r\n #elif (TARGET == TARGET_ARM64 && OS_TARGET == OS_NIX)\r\n typedef unsigned uint128_t __attribute__((mode(TI)));\r\n-#elif (TARGET == TARGET_PPC64LE && OS_TARGET == OS_NIX)\r\n-typedef unsigned uint128_t __attribute__((mode(TI)));\r\n #elif (TARGET == TARGET_AMD64 && OS_TARGET == OS_WIN)\r\n typedef uint64_t uint128_t[2];\r\n #endif\r\n@@ -228,7 +226,7 @@ static __inline unsigned int is_digit_lessthan_ct(digit_t x, digit_t y) { // Is\r\n         ADC128(addend, product, carry, result);                    \\\r\n     }\r\n\r\n-#elif ((TARGET == TARGET_AMD64 || TARGET == TARGET_ARM64 || TARGET == TARGET_PPC64LE) && OS_TARGET == OS_NIX)\r\n+#elif ((TARGET == TARGET_AMD64 || TARGET == TARGET_ARM64) && OS_TARGET == OS_NIX)\r\n\r\n // Digit multiplication\r\n #define MUL(multiplier, multiplicand, hi, lo)                                    \\\r\n```\r\nThis is because these `if`s are on `else` path of `#if defined(GENERIC_IMPLEMENTATION)`, thus unreachable anyway.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T21:47:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16976194798","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/37","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/37/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/37/events","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/37","id":931469881,"node_id":"MDU6SXNzdWU5MzE0Njk4ODE=","number":37,"title":"Changing the ciphertext a keys","user":{"login":"JamshedMemon","id":50607221,"node_id":"MDQ6VXNlcjUwNjA3MjIx","avatar_url":"https://avatars.githubusercontent.com/u/50607221?v=4","gravatar_id":"","url":"https://api.github.com/users/JamshedMemon","html_url":"https://github.com/JamshedMemon","followers_url":"https://api.github.com/users/JamshedMemon/followers","following_url":"https://api.github.com/users/JamshedMemon/following{/other_user}","gists_url":"https://api.github.com/users/JamshedMemon/gists{/gist_id}","starred_url":"https://api.github.com/users/JamshedMemon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JamshedMemon/subscriptions","organizations_url":"https://api.github.com/users/JamshedMemon/orgs","repos_url":"https://api.github.com/users/JamshedMemon/repos","events_url":"https://api.github.com/users/JamshedMemon/events{/privacy}","received_events_url":"https://api.github.com/users/JamshedMemon/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-28T11:28:05Z","updated_at":"2021-06-29T23:32:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI am working with the liboqs-python. Wanted to know how can i change the ciphertext and input encryption and shared key. I can see that It is importing oqs library and there are functions like encap and decap inside the oqs.py file where ciphertext is being generated. However, changing oqs.py file does nothing. Could you guide how to make these changes?\r\n\r\nthanks ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments/870985343","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/37#issuecomment-870985343","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/37","id":870985343,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDk4NTM0Mw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-06-29T23:32:02Z","updated_at":"2021-06-29T23:32:02Z","author_association":"MEMBER","body":"https://github.com/open-quantum-safe/liboqs-python/blob/main/examples/kem.py shows an example of how to call the KEM code.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-29T23:32:03Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
