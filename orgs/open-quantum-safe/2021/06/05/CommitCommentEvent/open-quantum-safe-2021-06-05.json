{"id":"16655409655","type":"CommitCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/comments/51763377","html_url":"https://github.com/open-quantum-safe/openssl/commit/9cf29805d39a59c15b5bd417b1151bac0a5e2b3b#commitcomment-51763377","id":51763377,"node_id":"MDEzOkNvbW1pdENvbW1lbnQ1MTc2MzM3Nw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"position":11,"line":11,"path":"oqs-template/crypto/objects/obj_mac.num/assign_ids.fragment","commit_id":"9cf29805d39a59c15b5bd417b1151bac0a5e2b3b","created_at":"2021-06-05T12:36:40Z","updated_at":"2021-06-05T12:36:40Z","author_association":"MEMBER","body":"@bhess Reviewing this again, I do not understand this code at all: This looks like all hybrid KEMs are only p256 in strength and not [what is specified](https://github.com/open-quantum-safe/openssl#key-exchange). Can you please check this again? The resultant `crypto/objects/obj_mac.num` as per this commit also seems to be incorrect. This only seems to have gotten corrected after running `make generate_crypto_objects` (as done in [this commit](https://github.com/open-quantum-safe/openssl/commit/9e342427ead2945c7a757e8497d3d1cb7ae6d578) by @xvzcf ). If both of you agree that this is (still) fishy (surely creates non-supported NIDs) I'll propose a change to this in #315..."}},"public":true,"created_at":"2021-06-05T12:36:40Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
