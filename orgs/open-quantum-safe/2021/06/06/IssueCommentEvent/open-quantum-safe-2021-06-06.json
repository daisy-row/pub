{"id":"16658659655","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/100","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/100/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/100/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/100/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/100","id":900770000,"node_id":"MDU6SXNzdWU5MDA3NzAwMDA=","number":100,"title":"8.4 README example error","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"assignees":[{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/milestones/1","html_url":"https://github.com/open-quantum-safe/openssh/milestone/1","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/milestones/1/labels","id":6693218,"node_id":"MDk6TWlsZXN0b25lNjY5MzIxOA==","number":1,"title":"OpenSSH v8 release","description":"Tracking issues that need to be resolved before our fork of OpenSSH v8 can be considered ready for release","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":1,"state":"open","created_at":"2021-04-23T20:58:58Z","updated_at":"2021-06-01T21:52:28Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2021-05-25T12:53:12Z","updated_at":"2021-06-06T01:00:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Continuing a discussion from #91 regarding `ssh` and `sshd` command line examples: \r\n\r\n> I'm not sure off the top of my head what's going on here, but it seems like there's a good lead sign_and_send_pubkey to follow up.\r\n\r\n@xvzcf : I traced this down to a routine peeking into the `sshbuf`: https://github.com/open-quantum-safe/openssh/blob/c600d653b6ce79c81f98d674e99c16d816008301/sshbuf-getput-basic.c#L150 and that routine just delivers \"ssh-\" instead of \"ssh-dilithium3\" as it would be expected. This is on the client side; the server seems to have worked OK: \r\n```\r\ndebug1: /home/mib/ssh_server/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\r\nAccepted key DILITHIUM3 SHA256:jyUbmvamkb/R663PLoR+bZbv4gK/LsG0M/VYk/tA8jE found at /home/mib/ssh_server/authorized_keys:1\r\n```\r\nSo, Question: Do you recall feeding this buffer correctly with the algorithm name? Where would this be? Possibly at the server? Please let me know if you do not have time for this issue; I'll then keep digging on my own. Simply disabling this bad string check for algorithm name has everything working OK, so it _should_ be a minor issue... ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/855318362","html_url":"https://github.com/open-quantum-safe/openssh/issues/100#issuecomment-855318362","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/100","id":855318362,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTMxODM2Mg==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-06-06T01:00:56Z","updated_at":"2021-06-06T01:00:56Z","author_association":"MEMBER","body":"Looks like I introduced the bug through [these lines](https://github.com/open-quantum-safe/openssh/blob/OQS-v8/ssh-oqs.c#L75). I've fixed it, will upload a PR tomorrow or the day after updating the test suite to test the README commands as well.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-06T01:00:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16658748192","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/315","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/315/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/315/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/315/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/315","id":911126495,"node_id":"MDU6SXNzdWU5MTExMjY0OTU=","number":315,"title":"Validate claimed NIST levels","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"assignees":[{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-06-04T05:15:47Z","updated_at":"2021-06-06T01:27:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/oqs-provider/issues/23 detected that one algorithm's claimed NIST level was incorrect. This was not detected earlier also because [the OpenSSL generate.yml](https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/oqs-template/generate.yml) can deviate from claimed NIST levels in `liboqs`. This issue to suggest a cross-validation of generate.yml with claimed `liboqs` NIST levels.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/855320734","html_url":"https://github.com/open-quantum-safe/openssl/issues/315#issuecomment-855320734","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/315","id":855320734,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTMyMDczNA==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-06-06T01:27:07Z","updated_at":"2021-06-06T01:27:07Z","author_association":"MEMBER","body":" > Interesting and true observation. I can't see a reason for this either. @xvzcf : Do you recall why this is so?\r\n\r\nThere isn't custom templating code for the `OQS_KEM_DEFAULT` algorithms, they're just present outside the templating system. \r\n\r\nAs for why this is so, I don't think there's a good reason, and the BoringSSL and OpenSSH v8 `generate.yml`s also list the `OQS_KEM_DEFAULT` and `OQS_SIG_DEFAULT` variants. Bringing `OQS_KEM_DEFAULT` into the templating system might have just been a TODO item I never got to.\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-06T01:27:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16663146045","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/87","id":818338856,"node_id":"MDU6SXNzdWU4MTgzMzg4NTY=","number":87,"title":"Interop with stock/non-PQ openssh failing","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-02-28T23:15:25Z","updated_at":"2021-06-06T17:47:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When logging in from OpenSSH_7.9p1 client to OQS-OpenSSH_7.9-2020-08_p1 server there is a connection error:\r\n```\r\n...\r\ndebug1: kex: algorithm: curve25519-sha256\r\ndebug1: kex: host key algorithm: ssh-ed25519\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\n...\r\ndebug3: receive packet: type 60\r\ndebug1: Server accepts key: /home/vt/.ssh/id_ed25519 ED25519 ...\r\ndebug3: sign_and_send_pubkey: ED25519 ...\r\ndebug3: sign_and_send_pubkey: signing using ssh-ed25519\r\ndebug3: send packet: type 50\r\ndebug3: receive packet: type 52\r\ndebug1: Authentication succeeded (publickey).\r\nAuthenticated to 10.4.0.61 ([10.4.0.61]:22).\r\ndebug1: channel 0: new [client-session]\r\ndebug3: ssh_session2_open: channel_new: 0\r\ndebug2: channel 0: send open\r\ndebug3: send packet: type 90\r\ndebug1: Entering interactive session.\r\ndebug1: pledge: network\r\nBad packet length 496648.\r\ndebug3: send packet: type 1\r\nssh_dispatch_run_fatal: Connection to 10.4.0.61 port 22: Connection corrupted\r\n\r\n```\r\nWhen logging in from OQS-OpenSSH_7.9-2020-08_p1 client to the same server there is no error.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/855435792","html_url":"https://github.com/open-quantum-safe/openssh/issues/87#issuecomment-855435792","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87","id":855435792,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTQzNTc5Mg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-06T17:47:58Z","updated_at":"2021-06-06T17:47:58Z","author_association":"MEMBER","body":"@vt-alt I now finally found time to re-do what you tried and everything worked perfectly: stock client -> OQS-sshd and also OQS-ssh -> stock sshd(s). Admittedly, I tried only the [OQS-v8 branch](https://github.com/open-quantum-safe/openssh/tree/OQS-v8) which is (quickly becoming) our new main branch with ED25519.\r\n\r\nNow, some questions: Are you absolutely certain that no PQ-signature algorithms got (inadvertently) sent (causing a buffer problem as per the above)? How did you start the `sshd`? I tried this: `sudo /opt/openssh/sbin/sshd -p 2222 -d -o AuthorizedKeysFile=/home/mib/ssh_server/authorized_keys -o HostKeyAlgorithms=ssh-ed25519 -o PubkeyAcceptedKeyTypes=ssh-ed25519 -h /home/mib/ssh_server/id_ed25519` and on client side: `ssh -p 2222 mib@localhost -i ~/ssh_client/id_ed25519 -o PasswordAuthentication=no`. My local user ID obviously is \"mib\". You can see the full server-side trace below.\r\n\r\nFull server log as per the above:\r\n```\r\ndebug1: sshd version OQS-OpenSSH_8.4-2020-08_, OpenSSL 1.1.1  11 Sep 2018\r\ndebug1: private host key #0: ssh-ed25519 SHA256:uHK++NxhbH9uRDDYEGyyD1LyhUHko9bIm5z4yeGrdRQ\r\ndebug1: rexec_argv[0]='/opt/openssh/sbin/sshd'\r\ndebug1: rexec_argv[1]='-p'\r\ndebug1: rexec_argv[2]='2222'\r\ndebug1: rexec_argv[3]='-d'\r\ndebug1: rexec_argv[4]='-o'\r\ndebug1: rexec_argv[5]='AuthorizedKeysFile=/home/mib/ssh_server/authorized_keys'\r\ndebug1: rexec_argv[6]='-o'\r\ndebug1: rexec_argv[7]='HostKeyAlgorithms=ssh-ed25519'\r\ndebug1: rexec_argv[8]='-o'\r\ndebug1: rexec_argv[9]='PubkeyAcceptedKeyTypes=ssh-ed25519'\r\ndebug1: rexec_argv[10]='-h'\r\ndebug1: rexec_argv[11]='/home/mib/ssh_server/id_ed25519'\r\ndebug1: Set /proc/self/oom_score_adj from 0 to -1000\r\ndebug1: Bind to port 2222 on 0.0.0.0.\r\nServer listening on 0.0.0.0 port 2222.\r\ndebug1: Bind to port 2222 on ::.\r\nServer listening on :: port 2222.\r\ndebug1: Server will not fork when running in debugging mode.\r\ndebug1: rexec start in 5 out 5 newsock 5 pipe -1 sock 8\r\ndebug1: sshd version OQS-OpenSSH_8.4-2020-08_, OpenSSL 1.1.1  11 Sep 2018\r\ndebug1: private host key #0: ssh-ed25519 SHA256:uHK++NxhbH9uRDDYEGyyD1LyhUHko9bIm5z4yeGrdRQ\r\ndebug1: inetd sockets after dupping: 5, 5\r\nConnection from 127.0.0.1 port 41494 on 127.0.0.1 port 2222 rdomain \"\"\r\ndebug1: Local version string SSH-2.0-OQS-OpenSSH_8.4-2020-08_\r\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.6p1 Ubuntu-4ubuntu0.3\r\ndebug1: match: OpenSSH_7.6p1 Ubuntu-4ubuntu0.3 pat OpenSSH_7.0*,OpenSSH_7.1*,OpenSSH_7.2*,OpenSSH_7.3*,OpenSSH_7.4*,OpenSSH_7.5*,OpenSSH_7.6*,OpenSSH_7.7* compat 0x04000002\r\ndebug1: permanently_set_uid: 124/65534 [preauth]\r\ndebug1: list_hostkey_types: ssh-ed25519 [preauth]\r\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\r\ndebug1: SSH2_MSG_KEXINIT received [preauth]\r\ndebug1: kex: algorithm: curve25519-sha256 [preauth]\r\ndebug1: kex: host key algorithm: ssh-ed25519 [preauth]\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\r\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\r\ndebug1: rekey out after 134217728 blocks [preauth]\r\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\r\ndebug1: Sending SSH2_MSG_EXT_INFO [preauth]\r\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\r\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\r\ndebug1: rekey in after 134217728 blocks [preauth]\r\ndebug1: KEX done [preauth]\r\ndebug1: userauth-request for user mib service ssh-connection method none [preauth]\r\ndebug1: attempt 0 failures 0 [preauth]\r\ndebug1: userauth-request for user mib service ssh-connection method publickey [preauth]\r\ndebug1: attempt 1 failures 0 [preauth]\r\nuserauth_pubkey: key type ssh-rsa not in PubkeyAcceptedKeyTypes [preauth]\r\ndebug1: userauth-request for user mib service ssh-connection method publickey [preauth]\r\ndebug1: attempt 2 failures 1 [preauth]\r\nuserauth_pubkey: key type ssh-rsa not in PubkeyAcceptedKeyTypes [preauth]\r\ndebug1: userauth-request for user mib service ssh-connection method publickey [preauth]\r\ndebug1: attempt 3 failures 2 [preauth]\r\nuserauth_pubkey: key type ssh-rsa not in PubkeyAcceptedKeyTypes [preauth]\r\ndebug1: userauth-request for user mib service ssh-connection method publickey [preauth]\r\ndebug1: attempt 4 failures 3 [preauth]\r\ndebug1: userauth_pubkey: test pkalg ssh-ed25519 pkblob ED25519 SHA256:ezp1Y/tkER9ROFM95Z37VOPkjn+sWI7OVp/x6sPxrWc [preauth]\r\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\r\ndebug1: trying public key file /home/mib/ssh_server/authorized_keys\r\ndebug1: fd 6 clearing O_NONBLOCK\r\ndebug1: /home/mib/ssh_server/authorized_keys:3: matching key found: ED25519 SHA256:ezp1Y/tkER9ROFM95Z37VOPkjn+sWI7OVp/x6sPxrWc\r\ndebug1: /home/mib/ssh_server/authorized_keys:3: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\r\nAccepted key ED25519 SHA256:ezp1Y/tkER9ROFM95Z37VOPkjn+sWI7OVp/x6sPxrWc found at /home/mib/ssh_server/authorized_keys:3\r\ndebug1: restore_uid: 0/0\r\nPostponed publickey for mib from 127.0.0.1 port 41494 ssh2 [preauth]\r\ndebug1: userauth-request for user mib service ssh-connection method publickey [preauth]\r\ndebug1: attempt 5 failures 3 [preauth]\r\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\r\ndebug1: trying public key file /home/mib/ssh_server/authorized_keys\r\ndebug1: fd 6 clearing O_NONBLOCK\r\ndebug1: /home/mib/ssh_server/authorized_keys:3: matching key found: ED25519 SHA256:ezp1Y/tkER9ROFM95Z37VOPkjn+sWI7OVp/x6sPxrWc\r\ndebug1: /home/mib/ssh_server/authorized_keys:3: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\r\nAccepted key ED25519 SHA256:ezp1Y/tkER9ROFM95Z37VOPkjn+sWI7OVp/x6sPxrWc found at /home/mib/ssh_server/authorized_keys:3\r\ndebug1: restore_uid: 0/0\r\ndebug1: auth_activate_options: setting new authentication options\r\nAccepted publickey for mib from 127.0.0.1 port 41494 ssh2: ED25519 SHA256:ezp1Y/tkER9ROFM95Z37VOPkjn+sWI7OVp/x6sPxrWc\r\ndebug1: monitor_child_preauth: mib has been authenticated by privileged process\r\ndebug1: auth_activate_options: setting new authentication options [preauth]\r\ndebug1: monitor_read_log: child log fd closed\r\nUser child is on pid 2856\r\ndebug1: permanently_set_uid: 1000/1000\r\ndebug1: rekey in after 134217728 blocks\r\ndebug1: rekey out after 134217728 blocks\r\ndebug1: ssh_packet_set_postauth: called\r\ndebug1: active: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\r\ndebug1: Entering interactive session for SSH2.\r\ndebug1: server_init_dispatch\r\ndebug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\r\ndebug1: input_session_request\r\ndebug1: channel 0: new [server-session]\r\ndebug1: session_new: session 0\r\ndebug1: session_open: channel 0\r\ndebug1: session_open: session 0: link with channel 0\r\ndebug1: server_input_channel_open: confirm session\r\ndebug1: server_input_channel_req: channel 0 request pty-req reply 1\r\ndebug1: session_by_channel: session 0 channel 0\r\ndebug1: session_input_channel_req: session 0 req pty-req\r\ndebug1: Allocating pty.\r\ndebug1: session_new: session 0\r\ndebug1: session_pty_req: session 0 alloc /dev/pts/7\r\ndebug1: server_input_channel_req: channel 0 request env reply 0\r\ndebug1: session_by_channel: session 0 channel 0\r\ndebug1: session_input_channel_req: session 0 req env\r\ndebug1: server_input_channel_req: channel 0 request shell reply 1\r\ndebug1: session_by_channel: session 0 channel 0\r\ndebug1: session_input_channel_req: session 0 req shell\r\nStarting session: shell on pts/7 for mib from 127.0.0.1 port 41494 id 0\r\ndebug1: Setting controlling tty using TIOCSCTTY.\r\n\r\n```","performed_via_github_app":null}},"public":true,"created_at":"2021-06-06T17:47:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16663609087","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/87","id":818338856,"node_id":"MDU6SXNzdWU4MTgzMzg4NTY=","number":87,"title":"Interop with stock/non-PQ openssh failing","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-02-28T23:15:25Z","updated_at":"2021-06-06T19:31:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When logging in from OpenSSH_7.9p1 client to OQS-OpenSSH_7.9-2020-08_p1 server there is a connection error:\r\n```\r\n...\r\ndebug1: kex: algorithm: curve25519-sha256\r\ndebug1: kex: host key algorithm: ssh-ed25519\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\n...\r\ndebug3: receive packet: type 60\r\ndebug1: Server accepts key: /home/vt/.ssh/id_ed25519 ED25519 ...\r\ndebug3: sign_and_send_pubkey: ED25519 ...\r\ndebug3: sign_and_send_pubkey: signing using ssh-ed25519\r\ndebug3: send packet: type 50\r\ndebug3: receive packet: type 52\r\ndebug1: Authentication succeeded (publickey).\r\nAuthenticated to 10.4.0.61 ([10.4.0.61]:22).\r\ndebug1: channel 0: new [client-session]\r\ndebug3: ssh_session2_open: channel_new: 0\r\ndebug2: channel 0: send open\r\ndebug3: send packet: type 90\r\ndebug1: Entering interactive session.\r\ndebug1: pledge: network\r\nBad packet length 496648.\r\ndebug3: send packet: type 1\r\nssh_dispatch_run_fatal: Connection to 10.4.0.61 port 22: Connection corrupted\r\n\r\n```\r\nWhen logging in from OQS-OpenSSH_7.9-2020-08_p1 client to the same server there is no error.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/855450258","html_url":"https://github.com/open-quantum-safe/openssh/issues/87#issuecomment-855450258","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87","id":855450258,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTQ1MDI1OA==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-06T19:31:13Z","updated_at":"2021-06-06T19:31:13Z","author_association":"NONE","body":"Of course, `sshd` is started with OQS algorithms enabled. Do you suggest disabling them? If so there is still no interop with generic OpenSSH as users cannot run OQS OpenSSH server and connect to the host from generic OpenSSH client.\r\n```\r\n5.11.21-un-def-alt1:~# /usr/sbin/sshd -d\r\ndebug1: sshd version OQS-OpenSSH_7.9-2020-08_, OpenSSL 1.1.1i  8 Dec 2020\r\ndebug1: private host key #0: ssh-rsa SHA256:S55R4DEAM5CULhicHTme8ebOLe3apyaKN8Ga3gx6TDU\r\ndebug1: private host key #1: ecdsa-sha2-nistp256 SHA256:FBDGLniuuO/UfP1e1CMTPzoX30/C/Eo5wgCK9p9Y+h4\r\ndebug1: private host key #2: ssh-ed25519 SHA256:HJ9knt1F/aJGHPiYDjFfp9iXgybu1LdHBxZtkUArylA\r\ndebug1: private host key #3: ssh-oqsdefault SHA256:yDMvnks9e9NuQKwvzRzD90YEaH+BxqLFQE42IRHxm+c\r\ndebug1: private host key #4: ssh-dilithium2 SHA256:+VQiwT6H3G/+4WR3E3dfaX89oGMrA8p3mIpI++2cZRg\r\ndebug1: private host key #5: ssh-falcon512 SHA256:GPRxueFrCJRxlnlEFY8AtbIf7TwOoDD/7UBWNiM+6Qs\r\ndebug1: private host key #6: ssh-picnicl1full SHA256:waQvgIRfUIS4bx36a8YQnLPheyXu1dvaLtsFM31eN8s\r\ndebug1: private host key #7: ssh-picnic3l1 SHA256:PgmbeFmOhts8c+bN4xaB3PWM3NzRAjWmTXfU5SFktDc\r\ndebug1: private host key #8: ssh-rainbowiclassic SHA256:OnKxzrjOrs/8hxLbihFIzd5EsviM63bSghMorgWZk8I\r\ndebug1: private host key #9: ssh-sphincsharaka128frobust SHA256:kgOSqAPMW/J7xlTW5h0XIe8/ZPtIp4jGYHX8eHdSeXU\r\ndebug1: private host key #10: ssh-sphincssha256128frobust SHA256:80hJgMMWuPKLSCtxSIcSj6IMLvViStNjtZ5eL2KJwVc\r\ndebug1: private host key #11: ssh-sphincsshake256128frobust SHA256:ITmJpIFlcMJceBfFMwMaU47CfHRr9Li4D6R6GPTOFOs\r\ndebug1: private host key #12: ssh-rsa3072-oqsdefault SHA256:lctAJ+ItvupfYyI7khnJ/HoCF2T8CN+9AJVkFfqypMQ\r\ndebug1: private host key #13: ssh-p256-oqsdefault SHA256:TLtb8kha88Dk5h5F62ynAKlD29mMR8UrWNNMsdhFFEY\r\ndebug1: private host key #14: ssh-rsa3072-dilithium2 SHA256:eF51RFndgbcQd9l4lebcmbdMCfRh4/igxexYcEwcETk\r\ndebug1: private host key #15: ssh-p256-dilithium2 SHA256:4TwgN3/AnHg6vcipC7iST6IhLD/pZ9VTvC52XtsPV+k\r\ndebug1: private host key #16: ssh-rsa3072-falcon512 SHA256:aIbK0sO1UG3ajcgincTLxjrA1cLhMLR3WyBlgErowJQ\r\ndebug1: private host key #17: ssh-p256-falcon512 SHA256:JeDcebpxuLyLVukrQ1RNuN7OMMMKP3zSWP+5ib6iUwg\r\ndebug1: private host key #18: ssh-rsa3072-picnicl1full SHA256:7nfa7WZq2nVVYbEOQbFcuccjhs7fOUJS1gnTJDx0n/4\r\ndebug1: private host key #19: ssh-p256-picnicl1full SHA256:G67u5Ow91HR5fEGeEUmt8Puvcp6+mnPJ8WAt4QftI70\r\ndebug1: private host key #20: ssh-rsa3072-picnic3l1 SHA256:1n3e9zc8lvhh2no+KFaRQKIF8L/Wc5txT1hdfbXuQc0\r\ndebug1: private host key #21: ssh-p256-picnic3l1 SHA256:ofDTbey1lG81wGIrkw1+T9gYkH7ccchWco+IOJNr/K0\r\ndebug1: private host key #22: ssh-rsa3072-rainbowiclassic SHA256:Qt7pm/aZYhepJRWMCYbkR4lbWFXmKDyeL9LdAkxri2k\r\ndebug1: private host key #23: ssh-p256-rainbowiclassic SHA256:yp/gDsyX0DacMwsmVb+zGWB9XwfHbAPhR/2KmpKmLdU\r\ndebug1: private host key #24: ssh-rsa3072-sphincsharaka128frobust SHA256:zTYTuQpMZ70712eTaL+cw2uxTERx5tqLFZra4cFZPbk\r\ndebug1: private host key #25: ssh-p256-sphincsharaka128frobust SHA256:MxzHUJGHdb5k4CVMk9M3F6Xj9J+stIuwGm1QjQuBups\r\ndebug1: private host key #26: ssh-rsa3072-sphincssha256128frobust SHA256:IRWSfX0PK+xr+6WlqwbvLxctn6aO9SXGcMmM2qibifE\r\ndebug1: private host key #27: ssh-p256-sphincssha256128frobust SHA256:ZKbo07m4V1+bnA4vstZQz5pj8LFcJXGLmLABosImjOY\r\ndebug1: private host key #28: ssh-rsa3072-sphincsshake256128frobust SHA256:AiOQIcCAbBDIg21prG6PyDm/q7vzVjmeuMcAVB0sgTs\r\ndebug1: private host key #29: ssh-p256-sphincsshake256128frobust SHA256:Ul39sZbHdV6wJTnGEmvK0U4n+c3VDQpnAxjzW08WYAE\r\ndebug1: rexec_argv[0]='/usr/sbin/sshd'\r\ndebug1: rexec_argv[1]='-d'\r\ndebug1: Set /proc/self/oom_score_adj from 0 to -1000\r\ndebug1: Bind to port 22 on 0.0.0.0.\r\nServer listening on 0.0.0.0 port 22.\r\ndebug1: Bind to port 22 on ::.\r\nServer listening on :: port 22.\r\n\r\ndebug1: Server will not fork when running in debugging mode.\r\ndebug1: rexec start in 5 out 5 newsock 5 pipe -1 sock 8\r\ndebug1: inetd sockets after dupping: 3, 3\r\nConnection from 10.4.128.5 port 42282 on 10.4.0.61 port 22\r\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.9\r\ndebug1: match: OpenSSH_7.9 pat OpenSSH* compat 0x04000000\r\ndebug1: Local version string SSH-2.0-OQS-OpenSSH_7.9-2020-08_\r\ndebug1: permanently_set_uid: 498/490 [preauth]\r\ndebug1: list_hostkey_types: rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\r\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\r\ndebug1: SSH2_MSG_KEXINIT received [preauth]\r\ndebug1: kex: algorithm: curve25519-sha256 [preauth]\r\ndebug1: kex: host key algorithm: ssh-ed25519 [preauth]\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\r\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\r\ndebug1: rekey after 134217728 blocks [preauth]\r\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\r\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\r\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\r\ndebug1: rekey after 134217728 blocks [preauth]\r\ndebug1: KEX done [preauth]\r\ndebug1: userauth-request for user root service ssh-connection method none [preauth]\r\ndebug1: attempt 0 failures 0 [preauth]\r\ndebug1: userauth-request for user root service ssh-connection method publickey [preauth]\r\ndebug1: attempt 1 failures 0 [preauth]\r\ndebug1: userauth_pubkey: test pkalg ssh-ed25519 pkblob ED25519 SHA256:IaPR4qIYS7sUYutipr5Kicf2E618U4TOONgwjrcSR5w [preauth]\r\ndebug1: temporarily_use_uid: 0/0 (e=0/0)\r\ndebug1: trying public key file /root/.ssh/authorized_keys\r\ndebug1: fd 4 clearing O_NONBLOCK\r\ndebug1: /root/.ssh/authorized_keys:3: matching key found: ED25519 SHA256:IaPR4qIYS7sUYutipr5Kicf2E618U4TOONgwjrcSR5w\r\ndebug1: /root/.ssh/authorized_keys:3: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\r\nAccepted key ED25519 SHA256:IaPR4qIYS7sUYutipr5Kicf2E618U4TOONgwjrcSR5w found at /root/.ssh/authorized_keys:3\r\ndebug1: restore_uid: 0/0\r\nPostponed publickey for root from 10.4.128.5 port 42282 ssh2 [preauth]\r\ndebug1: userauth-request for user root service ssh-connection method publickey [preauth]\r\ndebug1: attempt 2 failures 0 [preauth]\r\ndebug1: temporarily_use_uid: 0/0 (e=0/0)\r\ndebug1: trying public key file /root/.ssh/authorized_keys\r\ndebug1: fd 4 clearing O_NONBLOCK\r\ndebug1: /root/.ssh/authorized_keys:3: matching key found: ED25519 SHA256:IaPR4qIYS7sUYutipr5Kicf2E618U4TOONgwjrcSR5w\r\ndebug1: /root/.ssh/authorized_keys:3: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\r\nAccepted key ED25519 SHA256:IaPR4qIYS7sUYutipr5Kicf2E618U4TOONgwjrcSR5w found at /root/.ssh/authorized_keys:3\r\ndebug1: restore_uid: 0/0\r\ndebug1: auth_activate_options: setting new authentication options\r\nAccepted publickey for root from 10.4.128.5 port 42282 ssh2: ED25519 SHA256:IaPR4qIYS7sUYutipr5Kicf2E618U4TOONgwjrcSR5w\r\ndebug1: monitor_child_preauth: root has been authenticated by privileged process\r\ndebug1: auth_activate_options: setting new authentication options [preauth]\r\ndebug1: monitor_read_log: child log fd closed\r\ndebug1: rekey after 134217728 blocks\r\ndebug1: rekey after 134217728 blocks\r\ndebug1: ssh_packet_set_postauth: called\r\ndebug1: active: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\r\nssh_packet_send_debug: Connection reset by peer\r\ndebug1: do_cleanup\r\ndebug1: audit_event: unhandled event 12\r\n```","performed_via_github_app":null}},"public":true,"created_at":"2021-06-06T19:31:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16663651524","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/87","id":818338856,"node_id":"MDU6SXNzdWU4MTgzMzg4NTY=","number":87,"title":"Interop with stock/non-PQ openssh failing","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-02-28T23:15:25Z","updated_at":"2021-06-06T19:40:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When logging in from OpenSSH_7.9p1 client to OQS-OpenSSH_7.9-2020-08_p1 server there is a connection error:\r\n```\r\n...\r\ndebug1: kex: algorithm: curve25519-sha256\r\ndebug1: kex: host key algorithm: ssh-ed25519\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\n...\r\ndebug3: receive packet: type 60\r\ndebug1: Server accepts key: /home/vt/.ssh/id_ed25519 ED25519 ...\r\ndebug3: sign_and_send_pubkey: ED25519 ...\r\ndebug3: sign_and_send_pubkey: signing using ssh-ed25519\r\ndebug3: send packet: type 50\r\ndebug3: receive packet: type 52\r\ndebug1: Authentication succeeded (publickey).\r\nAuthenticated to 10.4.0.61 ([10.4.0.61]:22).\r\ndebug1: channel 0: new [client-session]\r\ndebug3: ssh_session2_open: channel_new: 0\r\ndebug2: channel 0: send open\r\ndebug3: send packet: type 90\r\ndebug1: Entering interactive session.\r\ndebug1: pledge: network\r\nBad packet length 496648.\r\ndebug3: send packet: type 1\r\nssh_dispatch_run_fatal: Connection to 10.4.0.61 port 22: Connection corrupted\r\n\r\n```\r\nWhen logging in from OQS-OpenSSH_7.9-2020-08_p1 client to the same server there is no error.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/855451504","html_url":"https://github.com/open-quantum-safe/openssh/issues/87#issuecomment-855451504","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87","id":855451504,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTQ1MTUwNA==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-06T19:40:47Z","updated_at":"2021-06-06T19:40:47Z","author_association":"NONE","body":"For the completeness I just tested with `/usr/sbin/sshd -d -o HostKeyAlgorithms=ssh-ed25519 -o PubkeyAcceptedKeyTypes=ssh-ed25519 -h /etc/openssh/ssh_host_ed25519_key` and this does not cause connection errors. So, problem only if OQS algorithms are enabled on the server side.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-06T19:40:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16663782907","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/87","id":818338856,"node_id":"MDU6SXNzdWU4MTgzMzg4NTY=","number":87,"title":"Interop with stock/non-PQ openssh failing","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-02-28T23:15:25Z","updated_at":"2021-06-06T20:10:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When logging in from OpenSSH_7.9p1 client to OQS-OpenSSH_7.9-2020-08_p1 server there is a connection error:\r\n```\r\n...\r\ndebug1: kex: algorithm: curve25519-sha256\r\ndebug1: kex: host key algorithm: ssh-ed25519\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\n...\r\ndebug3: receive packet: type 60\r\ndebug1: Server accepts key: /home/vt/.ssh/id_ed25519 ED25519 ...\r\ndebug3: sign_and_send_pubkey: ED25519 ...\r\ndebug3: sign_and_send_pubkey: signing using ssh-ed25519\r\ndebug3: send packet: type 50\r\ndebug3: receive packet: type 52\r\ndebug1: Authentication succeeded (publickey).\r\nAuthenticated to 10.4.0.61 ([10.4.0.61]:22).\r\ndebug1: channel 0: new [client-session]\r\ndebug3: ssh_session2_open: channel_new: 0\r\ndebug2: channel 0: send open\r\ndebug3: send packet: type 90\r\ndebug1: Entering interactive session.\r\ndebug1: pledge: network\r\nBad packet length 496648.\r\ndebug3: send packet: type 1\r\nssh_dispatch_run_fatal: Connection to 10.4.0.61 port 22: Connection corrupted\r\n\r\n```\r\nWhen logging in from OQS-OpenSSH_7.9-2020-08_p1 client to the same server there is no error.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/855455867","html_url":"https://github.com/open-quantum-safe/openssh/issues/87#issuecomment-855455867","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/87","id":855455867,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTQ1NTg2Nw==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-06T20:10:38Z","updated_at":"2021-06-06T20:10:38Z","author_association":"NONE","body":"> Admittedly, I tried only the [OQS-v8 branch](https://github.com/open-quantum-safe/openssh/tree/OQS-v8) which is (quickly becoming) our new main branch with ED25519.\r\n\r\n[Btw, if it will support ED25519 as a hybrid algorithm with OQS algorithms that would be really nice, because of the popularity of ED25519.]\r\n\r\nI think the choice should be given to the end-users — the server should run with OQS enabled, but client users should be able to choose to connect with OQS (if they enable it) or using generic algorithms and generic OpenSSH clients. That way generic OpenSSH server may be replaced with OQS OpenSSH transparently. If we only enable generic and hybrid algorithms on the server side the security should not decrease in comparison to generic OpenSSH.\r\n\r\nPlease correct me if I'm wrong.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-06T20:10:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
