{"id":"16845054409","type":"IssuesEvent","actor":{"id":85164885,"login":"erdem-cqc","display_login":"erdem-cqc","gravatar_id":"","url":"https://api.github.com/users/erdem-cqc","avatar_url":"https://avatars.githubusercontent.com/u/85164885?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/318","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/318/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/318/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/318/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/318","id":925107062,"node_id":"MDU6SXNzdWU5MjUxMDcwNjI=","number":318,"title":"Overwriting method call through ENGINE","user":{"login":"erdem-cqc","id":85164885,"node_id":"MDQ6VXNlcjg1MTY0ODg1","avatar_url":"https://avatars.githubusercontent.com/u/85164885?v=4","gravatar_id":"","url":"https://api.github.com/users/erdem-cqc","html_url":"https://github.com/erdem-cqc","followers_url":"https://api.github.com/users/erdem-cqc/followers","following_url":"https://api.github.com/users/erdem-cqc/following{/other_user}","gists_url":"https://api.github.com/users/erdem-cqc/gists{/gist_id}","starred_url":"https://api.github.com/users/erdem-cqc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erdem-cqc/subscriptions","organizations_url":"https://api.github.com/users/erdem-cqc/orgs","repos_url":"https://api.github.com/users/erdem-cqc/repos","events_url":"https://api.github.com/users/erdem-cqc/events{/privacy}","received_events_url":"https://api.github.com/users/erdem-cqc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-06-18T18:06:50Z","updated_at":"2021-06-19T09:47:01Z","closed_at":"2021-06-19T09:47:01Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\nI am working on a PoC application, where we want to overwrite the keygen method calls so that, when an OQS Signature keygen method is called through `EVP_PKEY_keygen()`, our method, registered in `pmeth->keygen`, will be invoked.\r\n\r\nI was looking for a way to overwrite the `ctx->pmeth->keygen` Â value before passed to `int EVP_PKEY_keygen(EVP_PKEY_CTX *ctx, EVP_PKEY **ppkey)` method.\r\n\r\nI can achieve the above behaviour with RSA through ENGINE. It was a relatively easy setup, but I wasn't able to replicate it with OQS signatures, e.g. Dilithium. Existing code within oqs-engine project (not supported anymore) can do this but I couldn't get it to run with the latest version of OQS-OpenSSL.\r\n\r\nI read about, oqs-engine not being supported under OQS-OpenSSL anymore and it was advised to use Providers with the OpenSSL3.0 instead, but for our PoC, I need to work with the engine on OpenSSL 1.1.1 and OQS.\r\n\r\nIs it possible to achieve the behaviour described above through ENGINE for OQS signatures?\r\n\r\nAny help/lead is appreciated.\r\nRegards.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-19T09:47:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
