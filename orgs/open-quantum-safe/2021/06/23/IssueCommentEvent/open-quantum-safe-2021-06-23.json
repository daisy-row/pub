{"id":"16895147902","type":"IssueCommentEvent","actor":{"id":8270508,"login":"claucece","display_login":"claucece","gravatar_id":"","url":"https://api.github.com/users/claucece","avatar_url":"https://avatars.githubusercontent.com/u/8270508?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1020","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1020/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1020/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1020/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1020","id":922827405,"node_id":"MDU6SXNzdWU5MjI4Mjc0MDU=","number":1020,"title":"Documentation: add the ability to jump into different sections","user":{"login":"claucece","id":8270508,"node_id":"MDQ6VXNlcjgyNzA1MDg=","avatar_url":"https://avatars.githubusercontent.com/u/8270508?v=4","gravatar_id":"","url":"https://api.github.com/users/claucece","html_url":"https://github.com/claucece","followers_url":"https://api.github.com/users/claucece/followers","following_url":"https://api.github.com/users/claucece/following{/other_user}","gists_url":"https://api.github.com/users/claucece/gists{/gist_id}","starred_url":"https://api.github.com/users/claucece/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/claucece/subscriptions","organizations_url":"https://api.github.com/users/claucece/orgs","repos_url":"https://api.github.com/users/claucece/repos","events_url":"https://api.github.com/users/claucece/events{/privacy}","received_events_url":"https://api.github.com/users/claucece/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-16T16:25:16Z","updated_at":"2021-06-23T13:59:47Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the html generated documentation, the links to different sections on the same page don't work.\r\nIt seems to be possible to do this though, by using something like: http://doxygen.10944.n7.nabble.com/Creating-links-in-and-between-Markdown-files-pages-td6689.html\r\n\r\nThough, this might break the markdown links...","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/866861239","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1020#issuecomment-866861239","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1020","id":866861239,"node_id":"MDEyOklzc3VlQ29tbWVudDg2Njg2MTIzOQ==","user":{"login":"claucece","id":8270508,"node_id":"MDQ6VXNlcjgyNzA1MDg=","avatar_url":"https://avatars.githubusercontent.com/u/8270508?v=4","gravatar_id":"","url":"https://api.github.com/users/claucece","html_url":"https://github.com/claucece","followers_url":"https://api.github.com/users/claucece/followers","following_url":"https://api.github.com/users/claucece/following{/other_user}","gists_url":"https://api.github.com/users/claucece/gists{/gist_id}","starred_url":"https://api.github.com/users/claucece/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/claucece/subscriptions","organizations_url":"https://api.github.com/users/claucece/orgs","repos_url":"https://api.github.com/users/claucece/repos","events_url":"https://api.github.com/users/claucece/events{/privacy}","received_events_url":"https://api.github.com/users/claucece/received_events","type":"User","site_admin":false},"created_at":"2021-06-23T13:59:47Z","updated_at":"2021-06-23T13:59:47Z","author_association":"CONTRIBUTOR","body":"I agree.I think this is doxygen-specific. I'll try searching if there is a solution for both worlds ;)","performed_via_github_app":null}},"public":true,"created_at":"2021-06-23T13:59:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16897972210","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1019","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1019/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1019/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1019/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1019","id":920519891,"node_id":"MDU6SXNzdWU5MjA1MTk4OTE=","number":1019,"title":"Is there a plan to support of other architectures?","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2021-06-14T15:18:33Z","updated_at":"2021-06-23T16:55:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Is it planned to support other architectures besides x86_64 and arm? Especially i586 and ppc64le.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867004170","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1019#issuecomment-867004170","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1019","id":867004170,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzAwNDE3MA==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-23T16:55:43Z","updated_at":"2021-06-23T16:55:43Z","author_association":"NONE","body":"FYI: I attempted simplistic port to x86 and ppc64le:\r\nhttp://git.altlinux.org/people/vt/packages/?p=liboqs.git;a=commitdiff;h=c5023ce0eef244f324864c51bf9d68751cc84ddf\r\nhttp://git.altlinux.org/people/vt/packages/?p=liboqs.git;a=commitdiff;h=387fdab3492c0e22cde571e3df6c636adae25706\r\nAll tests are passing except skipped ones (distbuild and constant_time).\r\n\r\nps. I'm aware that `secure_cmp32` for BIKE  does not handle ppc64le properly, but I did not notice (at the first glance) branching in asm (`objdump -S`) there.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-23T16:55:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16899148940","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/61","id":868200056,"node_id":"MDU6SXNzdWU4NjgyMDAwNTY=","number":61,"title":"Hybrid certificate verification ","user":{"login":"prchander","id":54725951,"node_id":"MDQ6VXNlcjU0NzI1OTUx","avatar_url":"https://avatars.githubusercontent.com/u/54725951?v=4","gravatar_id":"","url":"https://api.github.com/users/prchander","html_url":"https://github.com/prchander","followers_url":"https://api.github.com/users/prchander/followers","following_url":"https://api.github.com/users/prchander/following{/other_user}","gists_url":"https://api.github.com/users/prchander/gists{/gist_id}","starred_url":"https://api.github.com/users/prchander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prchander/subscriptions","organizations_url":"https://api.github.com/users/prchander/orgs","repos_url":"https://api.github.com/users/prchander/repos","events_url":"https://api.github.com/users/prchander/events{/privacy}","received_events_url":"https://api.github.com/users/prchander/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-04-26T21:01:56Z","updated_at":"2021-06-23T18:29:41Z","closed_at":"2021-06-22T21:28:30Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, this topic was discussed in issue #58 which functions for the the post-quantum certificates but the NID's for the hybrids are still not added. ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/867065318","html_url":"https://github.com/open-quantum-safe/boringssl/issues/61#issuecomment-867065318","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61","id":867065318,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzA2NTMxOA==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-06-23T18:29:41Z","updated_at":"2021-06-23T18:29:41Z","author_association":"MEMBER","body":"Re-opening this since it hasn't been implemented yet, and can serve as additional documentation in the meanwhile.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-23T18:29:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16901604718","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64","id":928621988,"node_id":"MDU6SXNzdWU5Mjg2MjE5ODg=","number":64,"title":"Fails to compile with current liboqs version","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-23T20:38:26Z","updated_at":"2021-06-23T22:04:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Tried to follow the standard instructions to compile BoringSSL with liboqs on Ubuntu and it seems liboqs has inconsistencies with BIKE. Would this be an issue?\r\n\r\nThe liboqs commit is 44cbde234a82813a181b4cc3c1330e56b253858f.\r\n\r\nSee the output below:\r\n```bash\r\nosboxes@osboxes:~$git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs.git\r\nosboxes@osboxes:~$cd liboqs\r\nosboxes@osboxes:~$mkdir build && cd build\r\nosboxes@osboxes:~$cmake -G\"Ninja\" -DCMAKE_INSTALL_PREFIX=<MYBORINGSSL_DIR>/oqs -DOQS_USE_OPENSSL=OFF ..\r\nosboxes@osboxes:~$ninja\r\n[31/1941] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o\r\nFAILED: src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o \r\n/usr/bin/cc -DDISABLE_VPCLMUL -DFUNC_PREFIX=OQS_KEM_bike_l3 -DLEVEL=3 -DX86_64 -Iinclude -I../src/kem/bike/additional_r3 -fPIC -fvisibility=hidden   -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -include /home/osboxes/Documents/paranoid-pq/liboqs/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o -MF src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o.d -o src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o   -c ../src/kem/bike/additional_r3/decode_avx512.c\r\n../src/kem/bike/additional_r3/decode_avx512.c: In function ‘rotate512_big’:\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: error: AVX512F vector return without AVX512F enabled changes the ABI [-Werror=psabi]\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\ncc1: all warnings being treated as errors\r\n[33/1941] Building C object src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600times4_avx2.dir/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c.o\r\nninja: build stopped: subcommand failed.\r\n```","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/867191122","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64#issuecomment-867191122","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","id":867191122,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzE5MTEyMg==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-06-23T22:04:47Z","updated_at":"2021-06-23T22:04:47Z","author_association":"MEMBER","body":"Are you using a GCC version > 8?","performed_via_github_app":null}},"public":true,"created_at":"2021-06-23T22:04:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16901973408","type":"IssueCommentEvent","actor":{"id":9383677,"login":"geovandro","display_login":"geovandro","gravatar_id":"","url":"https://api.github.com/users/geovandro","avatar_url":"https://avatars.githubusercontent.com/u/9383677?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64","id":928621988,"node_id":"MDU6SXNzdWU5Mjg2MjE5ODg=","number":64,"title":"Fails to compile with current liboqs version","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-23T20:38:26Z","updated_at":"2021-06-23T22:48:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Tried to follow the standard instructions to compile BoringSSL with liboqs on Ubuntu and it seems liboqs has inconsistencies with BIKE. Would this be an issue?\r\n\r\nThe liboqs commit is 44cbde234a82813a181b4cc3c1330e56b253858f.\r\n\r\nSee the output below:\r\n```bash\r\nosboxes@osboxes:~$git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs.git\r\nosboxes@osboxes:~$cd liboqs\r\nosboxes@osboxes:~$mkdir build && cd build\r\nosboxes@osboxes:~$cmake -G\"Ninja\" -DCMAKE_INSTALL_PREFIX=<MYBORINGSSL_DIR>/oqs -DOQS_USE_OPENSSL=OFF ..\r\nosboxes@osboxes:~$ninja\r\n[31/1941] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o\r\nFAILED: src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o \r\n/usr/bin/cc -DDISABLE_VPCLMUL -DFUNC_PREFIX=OQS_KEM_bike_l3 -DLEVEL=3 -DX86_64 -Iinclude -I../src/kem/bike/additional_r3 -fPIC -fvisibility=hidden   -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -include /home/osboxes/Documents/paranoid-pq/liboqs/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o -MF src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o.d -o src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o   -c ../src/kem/bike/additional_r3/decode_avx512.c\r\n../src/kem/bike/additional_r3/decode_avx512.c: In function ‘rotate512_big’:\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: error: AVX512F vector return without AVX512F enabled changes the ABI [-Werror=psabi]\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\ncc1: all warnings being treated as errors\r\n[33/1941] Building C object src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600times4_avx2.dir/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c.o\r\nninja: build stopped: subcommand failed.\r\n```","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/867208707","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64#issuecomment-867208707","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","id":867208707,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzIwODcwNw==","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"created_at":"2021-06-23T22:48:35Z","updated_at":"2021-06-23T22:48:35Z","author_association":"NONE","body":"Yes, I recently moved to GCC 11.1 in order to reproduce and fix https://github.com/open-quantum-safe/liboqs/issues/1003 ","performed_via_github_app":null}},"public":true,"created_at":"2021-06-23T22:48:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
