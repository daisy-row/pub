{"id":"16728305453","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T15:17:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858712260","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858712260","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858712260,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODcxMjI2MA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T15:17:38Z","updated_at":"2021-06-10T15:17:38Z","author_association":"MEMBER","body":"That somewhat [sounds familiar](https://github.com/open-quantum-safe/liboqs/pull/1013#issuecomment-856516192). Might it be an option to completely disable BIKE for that environment (i.e., set `cmake` config option '-DOQS_ENABLE_KEM_BIKE=OFF`)? @dkostic: Should BIKE compile OK on Cortex-A72?","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T15:17:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16728321553","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T15:18:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858713083","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858713083","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858713083,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODcxMzA4Mw==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T15:18:37Z","updated_at":"2021-06-10T15:18:37Z","author_association":"NONE","body":"It seems that code sets `-mcpu=cortex-a5` which conflicts with `-march=armv7-a` set on our generic `cmake` line (for this arch):\r\n```\r\nif(CMAKE_C_COMPILER_ID MATCHES \"Clang|GNU\")\r\n    if(${OQS_DIST_BUILD})\r\n          set(OQS_OPT_TARGET \"generic\")\r\n    endif()\r\n\r\n    if(OQS_OPT_TARGET STREQUAL \"generic\")\r\n...\r\n      elseif(ARCH_ARM32v7)\r\n        set(OQS_OPT_FLAG \"-mcpu=cortex-a5\")\r\n      endif()\r\n```\r\nIf I delete this line or replace with -mtune=cortex-a8` (I don't know really what `-mcpu=` I should set in that case, `gcc -Q --help=target` shows that `-mcpu=` is empty) it compiles successfully.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T15:18:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16728503508","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T15:29:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858721404","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858721404","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858721404,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODcyMTQwNA==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T15:29:30Z","updated_at":"2021-06-10T15:29:30Z","author_association":"NONE","body":"@baentsch It seem not particularly BIKE related, but just the first algo where error appears.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T15:29:30Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16728642110","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T15:38:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858728201","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858728201","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858728201,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODcyODIwMQ==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T15:38:05Z","updated_at":"2021-06-10T15:38:05Z","author_association":"CONTRIBUTOR","body":"@vt-alt the problem is with passing \"-march=armv7-a\" manually.\r\n\r\n> [00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=... -march=armv7-a\r\n\r\nIf you want to build the library that only runs on Cortex-A72 and is optimized for Cortex-A72, then you should pass\r\n`OQS_DIST_BUILD=OFF` and `OQS_OPT_TARGET=cortex-a72`.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T15:38:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16728802814","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T15:48:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858736017","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858736017","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858736017,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODczNjAxNw==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T15:48:06Z","updated_at":"2021-06-10T15:48:06Z","author_association":"NONE","body":"I want to build a package for our distribution (ALT) that works on all `armh` (which is `armv7hf`) machines, not just on Cortex-A72 which happen to be on this build box. We have default gcc flags like this:\r\n```\r\nrpmrc:optflags: armh -O2 -g -fomit-frame-pointer -march=armv7-a -mfloat-abi=hard -mthumb\r\n```\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T15:48:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16728974949","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T15:58:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858744749","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858744749","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858744749,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODc0NDc0OQ==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T15:58:30Z","updated_at":"2021-06-10T15:58:30Z","author_association":"MEMBER","body":"I'm not really familiar with ARM but wouldn't the two comments above call for setting `OQS_DIST_BUILD=OFF` and `OQS_OPT_TARGET=armv7-a`?","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T15:58:30Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16729262310","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T16:17:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858759745","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858759745","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858759745,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODc1OTc0NQ==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T16:17:18Z","updated_at":"2021-06-10T16:17:18Z","author_association":"NONE","body":"Setting `-DOQS_OPT_TARGET=cortex-a8` does not work either:\r\n```\r\ncc1: error: switch '-mcpu=cortex-a8' conflicts with '-march=armv7-a' switch [-Werror]\r\n```\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T16:17:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16729330328","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T16:22:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858762964","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858762964","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858762964,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODc2Mjk2NA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T16:22:02Z","updated_at":"2021-06-10T16:22:02Z","author_association":"MEMBER","body":"> because -DOQS_OPT_TARGET=armv7-a goes into -mcpu= and produces error\r\n\r\nYes - my mistake: I thought it goes into -march. Will check things next time before commenting \"from memory\" :-/","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T16:22:03Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16729341570","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T16:22:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858763503","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858763503","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858763503,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODc2MzUwMw==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T16:22:50Z","updated_at":"2021-06-10T16:22:50Z","author_association":"CONTRIBUTOR","body":"I suppose it makes more sense to use -march instead of -mcpu (which implies -mtune) when OQS_OPT_TARGET=generic. I'll make a PR.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T16:22:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16729415261","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T16:28:03Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858767201","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858767201","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858767201,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODc2NzIwMQ==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T16:28:03Z","updated_at":"2021-06-10T16:28:03Z","author_association":"NONE","body":"`option(OQS_DIST_BUILD \"Build distributable library with optimized code for several CPU microarchitectures. Enables run-time CPU feature detection.\" OFF)`\r\n\r\nI want exactly that, because I build for distribution. I fear if I unset `OQS_DIST_BUILD` to `OFF` and set (in the future) `-march=` via `-DOQS_OPT_TARGET=` it will make code somehow non-generic enough and not compatible with other `armh` hardware. I see there is a lot of `#if defined(OQS_DIST_BUILD)` in the code.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T16:28:03Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16729580435","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016","id":917415148,"node_id":"MDU6SXNzdWU5MTc0MTUxNDg=","number":1016,"title":"Build failures on 32-bit armv8l / Cortex-A72","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2021-06-10T14:31:52Z","updated_at":"2021-06-10T16:40:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When building package for ALT Linux for liboqs 0.6.0:\r\n1. On Cortex-A72 hardware [which is identified as arch `armv8l`] we get build failure:\r\n```\r\n[00:00:06] + /bin/mkdir -p /usr/src/RPM/BUILD\r\n[00:00:06] + cd /usr/src/RPM/BUILD\r\n[00:00:06] + cd liboqs-0.6.0\r\n[00:00:06] + mkdir -p armh-alt-linux-gnueabi\r\n[00:00:06] + cmake -DCMAKE_SKIP_INSTALL_RPATH:BOOL=yes '-DCMAKE_C_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_CXX_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' '-DCMAKE_Fortran_FLAGS:STRING=-pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb' -DCMAKE_INSTALL_PREFIX=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_DESTINATION=lib -DLIB_SUFFIX= -S . -B armh-alt-linux-gnueabi -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic -DOQS_KEM_DEFAULT=OQS_KEM_alg_ntruprime_ntrulpr653 -DOQS_SIG_DEFAULT=OQS_SIG_alg_sphincs_haraka_192f_simple\r\n[00:00:06] -- The C compiler identification is GNU 10.2.1\r\n[00:00:06] -- The ASM compiler identification is GNU\r\n[00:00:06] -- Found assembler: /usr/bin/cc\r\n[00:00:06] -- Detecting C compiler ABI info\r\n[00:00:07] -- Detecting C compiler ABI info - done\r\n[00:00:07] -- Check for working C compiler: /usr/bin/cc - skipped\r\n[00:00:07] -- Detecting C compile features\r\n[00:00:07] -- Detecting C compile features - done\r\n[00:00:07] CMake Error at CMakeLists.txt:50 (message):\r\n[00:00:07]   Unknown or unsupported processor: armv8l\r\n```\r\nWhen I try to \"fix\" like this:\r\n```patch\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex c09671c6..b7bd3246 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -40,7 +40,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|arm64|arm64v8\")\r\n     if(${OQS_DIST_BUILD})\r\n         set(OQS_DIST_ARM64v8_BUILD ON)\r\n     endif()\r\n-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7\")\r\n+elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"armel|armhf|armv7|arm32v7|armv8l\")\r\n     set(ARCH \"arm32v7\")\r\n     set(ARCH_ARM32v7 ON)\r\n     if(${OQS_DIST_BUILD})\r\n```\r\n2. Another failure appears:\r\n```\r\n[00:00:08] [1/1081] Building C object src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o\r\n[00:00:08] FAILED: src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o \r\n[00:00:08] /usr/bin/cc -DFUNC_PREFIX=OQS_KEM_bike1_l1_cpa -DINDCPA=1 -DLEVEL=1 -DPORTABLE -Iinclude -pipe -frecord-gcc-switches -Wall -g -O2 -fomit-frame-pointer -march=armv7-a -mthumb -O2 -g -DNDEBUG -fPIC -fvisibility=hidden -mcpu=cortex-a5 -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -include /usr/src/RPM/BUILD/liboqs-0.6.0/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -MF src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o.d -o src/kem/bike/CMakeFiles/bike1_l1_cpa.dir/additional/error.c.o -c ../src/kem/bike/additional/error.c\r\n[00:00:08] cc1: error: switch '-mcpu=cortex-a5' conflicts with '-march=armv7-a' switch [-Werror]\r\n[00:00:08] cc1: all warnings being treated as errors\r\n```\r\nWhat would you suggest?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/858775075","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1016#issuecomment-858775075","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1016","id":858775075,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODc3NTA3NQ==","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2021-06-10T16:40:05Z","updated_at":"2021-06-10T16:40:05Z","author_association":"NONE","body":"Perhaps, the best solution for our build is just to remove this line from `.CMake/compiler_opts.cmake`:\r\n```\r\n        set(OQS_OPT_FLAG \"-mcpu=cortex-a5\")\r\n```\r\nThis will avoid me setting `-march` (or whatever) manually leaving working defaults, and don't need to change compilation recipe, which now is the same for all architectures (while adding manual setting of `-march` have chance to break some other arch).\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-10T16:40:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
