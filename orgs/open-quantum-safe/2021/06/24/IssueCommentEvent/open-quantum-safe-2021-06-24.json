{"id":"16903587816","type":"IssueCommentEvent","actor":{"id":9383677,"login":"geovandro","display_login":"geovandro","gravatar_id":"","url":"https://api.github.com/users/geovandro","avatar_url":"https://avatars.githubusercontent.com/u/9383677?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64","id":928621988,"node_id":"MDU6SXNzdWU5Mjg2MjE5ODg=","number":64,"title":"Fails to compile with current liboqs version","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-06-23T20:38:26Z","updated_at":"2021-06-24T02:43:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Tried to follow the standard instructions to compile BoringSSL with liboqs on Ubuntu and it seems liboqs has inconsistencies with BIKE. Would this be an issue?\r\n\r\nThe liboqs commit is 44cbde234a82813a181b4cc3c1330e56b253858f.\r\n\r\nSee the output below:\r\n```bash\r\nosboxes@osboxes:~$git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs.git\r\nosboxes@osboxes:~$cd liboqs\r\nosboxes@osboxes:~$mkdir build && cd build\r\nosboxes@osboxes:~$cmake -G\"Ninja\" -DCMAKE_INSTALL_PREFIX=<MYBORINGSSL_DIR>/oqs -DOQS_USE_OPENSSL=OFF ..\r\nosboxes@osboxes:~$ninja\r\n[31/1941] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o\r\nFAILED: src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o \r\n/usr/bin/cc -DDISABLE_VPCLMUL -DFUNC_PREFIX=OQS_KEM_bike_l3 -DLEVEL=3 -DX86_64 -Iinclude -I../src/kem/bike/additional_r3 -fPIC -fvisibility=hidden   -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -include /home/osboxes/Documents/paranoid-pq/liboqs/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o -MF src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o.d -o src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o   -c ../src/kem/bike/additional_r3/decode_avx512.c\r\n../src/kem/bike/additional_r3/decode_avx512.c: In function ‘rotate512_big’:\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: error: AVX512F vector return without AVX512F enabled changes the ABI [-Werror=psabi]\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\ncc1: all warnings being treated as errors\r\n[33/1941] Building C object src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600times4_avx2.dir/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c.o\r\nninja: build stopped: subcommand failed.\r\n```","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/867291554","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64#issuecomment-867291554","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","id":867291554,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzI5MTU1NA==","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T02:43:58Z","updated_at":"2021-06-24T02:43:58Z","author_association":"NONE","body":"Tried with GCC version 7.5.0 now, and had the same problems with BIKE.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T02:43:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16904582463","type":"IssueCommentEvent","actor":{"id":9383677,"login":"geovandro","display_login":"geovandro","gravatar_id":"","url":"https://api.github.com/users/geovandro","avatar_url":"https://avatars.githubusercontent.com/u/9383677?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64","id":928621988,"node_id":"MDU6SXNzdWU5Mjg2MjE5ODg=","number":64,"title":"Fails to compile with current liboqs version","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-06-23T20:38:26Z","updated_at":"2021-06-24T05:07:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Tried to follow the standard instructions to compile BoringSSL with liboqs on Ubuntu and it seems liboqs has inconsistencies with BIKE. Would this be an issue?\r\n\r\nThe liboqs commit is 44cbde234a82813a181b4cc3c1330e56b253858f.\r\n\r\nSee the output below:\r\n```bash\r\nosboxes@osboxes:~$git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs.git\r\nosboxes@osboxes:~$cd liboqs\r\nosboxes@osboxes:~$mkdir build && cd build\r\nosboxes@osboxes:~$cmake -G\"Ninja\" -DCMAKE_INSTALL_PREFIX=<MYBORINGSSL_DIR>/oqs -DOQS_USE_OPENSSL=OFF ..\r\nosboxes@osboxes:~$ninja\r\n[31/1941] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o\r\nFAILED: src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o \r\n/usr/bin/cc -DDISABLE_VPCLMUL -DFUNC_PREFIX=OQS_KEM_bike_l3 -DLEVEL=3 -DX86_64 -Iinclude -I../src/kem/bike/additional_r3 -fPIC -fvisibility=hidden   -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -include /home/osboxes/Documents/paranoid-pq/liboqs/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o -MF src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o.d -o src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o   -c ../src/kem/bike/additional_r3/decode_avx512.c\r\n../src/kem/bike/additional_r3/decode_avx512.c: In function ‘rotate512_big’:\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: error: AVX512F vector return without AVX512F enabled changes the ABI [-Werror=psabi]\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\ncc1: all warnings being treated as errors\r\n[33/1941] Building C object src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600times4_avx2.dir/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c.o\r\nninja: build stopped: subcommand failed.\r\n```","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/867339172","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64#issuecomment-867339172","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","id":867339172,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzMzOTE3Mg==","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T05:07:46Z","updated_at":"2021-06-24T05:07:46Z","author_association":"NONE","body":"After some debugging I was able to figure it out: some files in BIKE implementation assume that every X86_64 architecture has AVX512 available, which is not the case. My i5 6267U processor for example has AVX2 but not AVX512. \r\n\r\nIn order to make it compile in those platforms the [CMakeLists.txt](https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/CMakeLists.txt) file (lines 39-73) has to omit the declaration of source files *_avx512.c. In addition, files [sampling_internal.h](https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/additional_r3/sampling_internal.h), [decode_internal.h](https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/additional_r3/decode_internal.h) and [gf2x_internal.h](https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/additional_r3/gf2x_internal.h), have to omit the usage of the AVX512 functions.\r\n\r\nAfter commenting those out, the code compiled. ","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T05:07:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16904661946","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1031","id":928799016,"node_id":"MDU6SXNzdWU5Mjg3OTkwMTY=","number":1031,"title":"Add NTRU HPS-4096-1229","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-24T02:58:22Z","updated_at":"2021-06-24T05:18:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"NTRU team submitted Security Category 5 parameter set `NTRU-HPS-4096-1229` (available source is at https://github.com/jschanck/ntru).\r\n\r\nCould you please add it to the library?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867343062","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1031#issuecomment-867343062","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031","id":867343062,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzM0MzA2Mg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T05:18:22Z","updated_at":"2021-06-24T05:18:22Z","author_association":"MEMBER","body":"Isn't this issue basically the same as #1026, @jschanck ?","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T05:18:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16904932404","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032","id":928852528,"node_id":"MDU6SXNzdWU5Mjg4NTI1Mjg=","number":1032,"title":"BIKE does not compile on some X86_64 architectures with AVX512","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-06-24T05:09:33Z","updated_at":"2021-06-24T05:53:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"See the thread https://github.com/open-quantum-safe/boringssl/issues/64 for the description of the issue and a suggestion for a fix.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867355944","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032#issuecomment-867355944","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","id":867355944,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzM1NTk0NA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T05:53:42Z","updated_at":"2021-06-24T05:53:42Z","author_association":"MEMBER","body":"Tagging @dkostic : I can't reproduce myself unfortunately as I either don't have AVX2 _and_ AVX512 or have both in my test hosts but from reading the code the report looks correct: There are AVX512 runtime checks in place, but no(t enough) such guards seem to be in place in the CMake files: For example, [gf2x_mul_base_vpclmul.c](https://github.com/open-quantum-safe/liboqs/blob/44cbde234a82813a181b4cc3c1330e56b253858f/src/kem/bike/additional_r3/gf2x_mul_base_vpclmul.c#L12) in code activates/defines `AVX512_INTERNAL` but (that file) is not on the list of AVX512 sources as per [these](https://github.com/open-quantum-safe/liboqs/blob/44cbde234a82813a181b4cc3c1330e56b253858f/src/kem/bike/CMakeLists.txt#L53-L60) CMake instructions.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T05:53:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16905376497","type":"IssueCommentEvent","actor":{"id":9383677,"login":"geovandro","display_login":"geovandro","gravatar_id":"","url":"https://api.github.com/users/geovandro","avatar_url":"https://avatars.githubusercontent.com/u/9383677?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032","id":928852528,"node_id":"MDU6SXNzdWU5Mjg4NTI1Mjg=","number":1032,"title":"BIKE does not compile on some X86_64 architectures with AVX512","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-24T05:09:33Z","updated_at":"2021-06-24T06:40:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"See the thread https://github.com/open-quantum-safe/boringssl/issues/64 for the description of the issue and a suggestion for a fix.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867382354","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032#issuecomment-867382354","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","id":867382354,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzM4MjM1NA==","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T06:40:37Z","updated_at":"2021-06-24T06:40:37Z","author_association":"NONE","body":"\r\n@baentsch, I made two simple changes in the [CMakeLists.txt](https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/CMakeLists.txt) file and got it working.\r\n\r\n1) Removed colons from line [56](https://github.com/open-quantum-safe/liboqs/blob/44cbde234a82813a181b4cc3c1330e56b253858f/src/kem/bike/CMakeLists.txt#L56), i.e., used `set(AVX512_FLAGS \"-mavx512f -mavx512bw -mavx512dq\")`.\r\n2) Used the option COMPILE_FLAGS instead of COMPILE_OPTIONS in line [60](https://github.com/open-quantum-safe/liboqs/blob/44cbde234a82813a181b4cc3c1330e56b253858f/src/kem/bike/CMakeLists.txt#L60).\r\n\r\nMaybe different CMake versions have different syntaxes? ","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T06:40:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16906062724","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032","id":928852528,"node_id":"MDU6SXNzdWU5Mjg4NTI1Mjg=","number":1032,"title":"BIKE does not compile on some X86_64 architectures with AVX512","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-06-24T05:09:33Z","updated_at":"2021-06-24T07:32:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"See the thread https://github.com/open-quantum-safe/boringssl/issues/64 for the description of the issue and a suggestion for a fix.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867410006","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032#issuecomment-867410006","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","id":867410006,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzQxMDAwNg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T07:32:55Z","updated_at":"2021-06-24T07:32:55Z","author_association":"MEMBER","body":"The semicolons indeed look fishy: I'd think those options are passed as-is to the compiler and semicolons indeed may cause issues. Even more importantly, this observation is clearly true:\r\n\r\n> Maybe different CMake versions have different syntaxes? \r\n\r\nWell, it seems COMPILE_OPTIONS doesn't even exist in 3.10: See https://cmake.org/cmake/help/v3.20/prop_sf/COMPILE_FLAGS.html . From this documentation perspective, it seems using `COMPILE_FLAGS` is more safe, indeed (and we use COMPILE_FLAGS in other parts of `liboqs`, too). @dkostic , @jschanck : Any objections to switch to COMPILE_FLAGS in BIKE (to also support older `cmake`'s?): \r\n@geovandro: Thanks a lot for the investigation: Would you want to submit a PR?","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T07:32:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16906145196","type":"IssueCommentEvent","actor":{"id":9383677,"login":"geovandro","display_login":"geovandro","gravatar_id":"","url":"https://api.github.com/users/geovandro","avatar_url":"https://avatars.githubusercontent.com/u/9383677?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032","id":928852528,"node_id":"MDU6SXNzdWU5Mjg4NTI1Mjg=","number":1032,"title":"BIKE does not compile on some X86_64 architectures with AVX512","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-06-24T05:09:33Z","updated_at":"2021-06-24T07:38:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"See the thread https://github.com/open-quantum-safe/boringssl/issues/64 for the description of the issue and a suggestion for a fix.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867413077","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032#issuecomment-867413077","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","id":867413077,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzQxMzA3Nw==","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T07:38:05Z","updated_at":"2021-06-24T07:38:05Z","author_association":"NONE","body":"Thanks for the CMake observations @baentsch, so I think we nailed it. I would be happy to submit a PR. I will wait for the others confirmation first. ","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T07:38:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16906353477","type":"IssueCommentEvent","actor":{"id":25055813,"login":"dkostic","display_login":"dkostic","gravatar_id":"","url":"https://api.github.com/users/dkostic","avatar_url":"https://avatars.githubusercontent.com/u/25055813?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032","id":928852528,"node_id":"MDU6SXNzdWU5Mjg4NTI1Mjg=","number":1032,"title":"BIKE does not compile on some X86_64 architectures with AVX512","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-06-24T05:09:33Z","updated_at":"2021-06-24T07:49:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"See the thread https://github.com/open-quantum-safe/boringssl/issues/64 for the description of the issue and a suggestion for a fix.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867420012","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1032#issuecomment-867420012","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1032","id":867420012,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzQyMDAxMg==","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T07:49:30Z","updated_at":"2021-06-24T07:49:30Z","author_association":"CONTRIBUTOR","body":"Thanks for fixing this @geovandro!\r\n@baentsch No objections to switch to COMPILE_FLAGS. I think this is what we had to do in s2n as well because of the CMake version they are using. Sorry for the confusion!","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T07:49:30Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16910133270","type":"IssueCommentEvent","actor":{"id":5923577,"login":"mouse07410","display_login":"mouse07410","gravatar_id":"","url":"https://api.github.com/users/mouse07410","avatar_url":"https://avatars.githubusercontent.com/u/5923577?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1031","id":928799016,"node_id":"MDU6SXNzdWU5Mjg3OTkwMTY=","number":1031,"title":"Add NTRU HPS-4096-1229","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-24T02:58:22Z","updated_at":"2021-06-24T12:16:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"NTRU team submitted Security Category 5 parameter set `NTRU-HPS-4096-1229` (available source is at https://github.com/jschanck/ntru).\r\n\r\nCould you please add it to the library?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867589887","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1031#issuecomment-867589887","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1031","id":867589887,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzU4OTg4Nw==","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T12:16:19Z","updated_at":"2021-06-24T12:16:19Z","author_association":"NONE","body":"It would've been the same if PQClean had the updated NTRU code. See https://github.com/PQClean/PQClean/issues/399 ;-)","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T12:16:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16910934480","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64","id":928621988,"node_id":"MDU6SXNzdWU5Mjg2MjE5ODg=","number":64,"title":"Fails to compile with current liboqs version","user":{"login":"geovandro","id":9383677,"node_id":"MDQ6VXNlcjkzODM2Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/9383677?v=4","gravatar_id":"","url":"https://api.github.com/users/geovandro","html_url":"https://github.com/geovandro","followers_url":"https://api.github.com/users/geovandro/followers","following_url":"https://api.github.com/users/geovandro/following{/other_user}","gists_url":"https://api.github.com/users/geovandro/gists{/gist_id}","starred_url":"https://api.github.com/users/geovandro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/geovandro/subscriptions","organizations_url":"https://api.github.com/users/geovandro/orgs","repos_url":"https://api.github.com/users/geovandro/repos","events_url":"https://api.github.com/users/geovandro/events{/privacy}","received_events_url":"https://api.github.com/users/geovandro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-06-23T20:38:26Z","updated_at":"2021-06-24T13:11:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Tried to follow the standard instructions to compile BoringSSL with liboqs on Ubuntu and it seems liboqs has inconsistencies with BIKE. Would this be an issue?\r\n\r\nThe liboqs commit is 44cbde234a82813a181b4cc3c1330e56b253858f.\r\n\r\nSee the output below:\r\n```bash\r\nosboxes@osboxes:~$git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs.git\r\nosboxes@osboxes:~$cd liboqs\r\nosboxes@osboxes:~$mkdir build && cd build\r\nosboxes@osboxes:~$cmake -G\"Ninja\" -DCMAKE_INSTALL_PREFIX=<MYBORINGSSL_DIR>/oqs -DOQS_USE_OPENSSL=OFF ..\r\nosboxes@osboxes:~$ninja\r\n[31/1941] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o\r\nFAILED: src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o \r\n/usr/bin/cc -DDISABLE_VPCLMUL -DFUNC_PREFIX=OQS_KEM_bike_l3 -DLEVEL=3 -DX86_64 -Iinclude -I../src/kem/bike/additional_r3 -fPIC -fvisibility=hidden   -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -include /home/osboxes/Documents/paranoid-pq/liboqs/src/kem/bike/functions_renaming.h -std=gnu11 -MD -MT src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o -MF src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o.d -o src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o   -c ../src/kem/bike/additional_r3/decode_avx512.c\r\n../src/kem/bike/additional_r3/decode_avx512.c: In function ‘rotate512_big’:\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: error: AVX512F vector return without AVX512F enabled changes the ABI [-Werror=psabi]\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:461:1: error: inlining failed in call to always_inline ‘_mm512_mask_store_epi64’: target specific option mismatch\r\n _mm512_mask_store_epi64 (void *__P, __mmask8 __U, __m512i __A)\r\n ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/bike/additional_r3/decode_avx512.c:25:0:\r\n../src/kem/bike/additional_r3/x86_64_intrinsic.h:97:34: note: called from here\r\n #  define MSTORE(mem, mask, reg) _mm512_mask_store_epi64((mem), (mask), (reg))\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:44:7: note: in expansion of macro ‘MSTORE’\r\n       MSTORE(&out->qw[8 * i], mask, a);\r\n       ^~~~~~\r\nIn file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/immintrin.h:45:0,\r\n                 from ../src/kem/bike/additional_r3/x86_64_intrinsic.h:17,\r\n                 from ../src/kem/bike/additional_r3/decode_avx512.c:25:\r\n/usr/lib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:5805:1: error: inlining failed in call to always_inline ‘_mm512_loadu_si512’: target specific option mismatch\r\n _mm512_loadu_si512 (void const *__P)\r\n ^~~~~~~~~~~~~~~~~~\r\n../src/kem/bike/additional_r3/decode_avx512.c:43:21: note: called from here\r\n       const __m512i a = LOAD(&out->qw[8 * (i + idx)]);\r\n                     ^\r\ncc1: all warnings being treated as errors\r\n[33/1941] Building C object src/common/sha3/xkcp_low/CMakeFiles/xkcp_low_keccakp_1600times4_avx2.dir/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c.o\r\nninja: build stopped: subcommand failed.\r\n```","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/867624781","html_url":"https://github.com/open-quantum-safe/boringssl/issues/64#issuecomment-867624781","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/64","id":867624781,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzYyNDc4MQ==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T13:11:17Z","updated_at":"2021-06-24T13:11:17Z","author_association":"MEMBER","body":"> Yes, I recently moved to GCC 11.1 in order to reproduce and fix [open-quantum-safe/liboqs#1003](https://github.com/open-quantum-safe/liboqs/issues/1003)\r\n\r\nApologies, the `/usr/lib/gcc/x86_64-linux-gnu/7/` threw me off.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T13:11:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16911433601","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/316","id":911315211,"node_id":"MDExOlB1bGxSZXF1ZXN0NjYxNjA5MTQy","number":316,"title":"checking NIST levels in generate.py","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-06-04T09:32:25Z","updated_at":"2021-06-24T13:42:47Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/316","html_url":"https://github.com/open-quantum-safe/openssl/pull/316","diff_url":"https://github.com/open-quantum-safe/openssl/pull/316.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/316.patch"},"body":"Fixes #315 \r\n\r\nThis new logic could also be used to completely do away with fields \"[bits_]security\" in `generate.yml` (as it can deduce them from `liboqs`' `claimed_nist_level`. What'd you think @dstebila @xvzcf ?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/867647193","html_url":"https://github.com/open-quantum-safe/openssl/pull/316#issuecomment-867647193","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316","id":867647193,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzY0NzE5Mw==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T13:42:47Z","updated_at":"2021-06-24T13:42:47Z","author_association":"MEMBER","body":"I'm not so sure about this: I think we should keep additional processing in `generate.py` to a minimum so as to ensure what the jinja fragments get is close or equal to what is in `generate.yml`, and compiling minimal C code in a python script also seems like a rather complex addition.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T13:42:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16912273766","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1030","id":928581147,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc2NTY0OTk0","number":1030,"title":"New datasheets","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-23T19:41:17Z","updated_at":"2021-06-24T14:33:20Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1030","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1030","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1030.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1030.patch"},"body":"Opening this as a draft PR to get feedback. The main thing to look at is `update_pqclean_alg_docs.py` in the latest commit.\r\n\r\n- hqc.yml is formatted differently as it was generated by PyYAML (the other non-pqclean datasheets can also be similarly re-generated without much work)\r\n- `update_pqclean_alg_docs.py` can be incorporated into `copy_from_upstream.py` once we're set.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867686393","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1030#issuecomment-867686393","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030","id":867686393,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzY4NjM5Mw==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T14:33:20Z","updated_at":"2021-06-24T14:33:20Z","author_association":"MEMBER","body":"> As requested a quick review: 1) the \"import\" logic for SIGs seems to be missing. \r\n\r\nYeah, will just add this in late.\r\n\r\n> The code simply seems to be overriding fields possibly already existing in the liboqs .yml with PQClean META.yml input, right? Wouldn't it be reasonable to output something in case this happens (such as to clean up our data)?\r\n\r\nI'm not sure I follow, do you mean having a \"verbose\" mode that logs the replacements? If so, we could also have a \"dry-run\" mode that just lists the changes without actually making them.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T14:33:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16913127366","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1030","id":928581147,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc2NTY0OTk0","number":1030,"title":"New datasheets","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-06-23T19:41:17Z","updated_at":"2021-06-24T15:25:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1030","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1030","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1030.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1030.patch"},"body":"Opening this as a draft PR to get feedback. The main thing to look at is `update_pqclean_alg_docs.py` in the latest commit.\r\n\r\n- hqc.yml is formatted differently as it was generated by PyYAML (the other non-pqclean datasheets can also be similarly re-generated without much work)\r\n- `update_pqclean_alg_docs.py` can be incorporated into `copy_from_upstream.py` once we're set.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/867729637","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1030#issuecomment-867729637","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1030","id":867729637,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzcyOTYzNw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T15:25:22Z","updated_at":"2021-06-24T15:25:22Z","author_association":"MEMBER","body":">  If so, we could also have a \"dry-run\" mode that just lists the changes without actually making them.\r\n\r\nYes - that would do.","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T15:25:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16913196908","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/316","id":911315211,"node_id":"MDExOlB1bGxSZXF1ZXN0NjYxNjA5MTQy","number":316,"title":"checking NIST levels in generate.py","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-06-04T09:32:25Z","updated_at":"2021-06-24T15:29:51Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/316","html_url":"https://github.com/open-quantum-safe/openssl/pull/316","diff_url":"https://github.com/open-quantum-safe/openssl/pull/316.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/316.patch"},"body":"Fixes #315 \r\n\r\nThis new logic could also be used to completely do away with fields \"[bits_]security\" in `generate.yml` (as it can deduce them from `liboqs`' `claimed_nist_level`. What'd you think @dstebila @xvzcf ?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/867732846","html_url":"https://github.com/open-quantum-safe/openssl/pull/316#issuecomment-867732846","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/316","id":867732846,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzczMjg0Ng==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-06-24T15:29:51Z","updated_at":"2021-06-24T15:29:51Z","author_association":"MEMBER","body":"Compiling code looked more simple to me than exposing the NIST levels to downstream code by other means. Whatever, then do you suggest not dealing with #315? Or do you suggest another approach? ","performed_via_github_app":null}},"public":true,"created_at":"2021-06-24T15:29:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
