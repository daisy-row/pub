{"id":"16856565786","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"push_id":7366999620,"size":2,"distinct_size":1,"ref":"refs/heads/mb-alpineopenssh","head":"14eda9f9135f9c7f9315d04b6343e50f7059aeb1","before":"73167391c8e082e084a098f8398aa54e267be51c","commits":[{"sha":"4ed783c34a0093b38d6099c370f6d276211d7a1c","author":{"name":"Michael Baentsch","email":"59bd0a3ff43b32849b319e645d4798d8a5d1e889@baentsch.ch"},"message":"working around latest alpine make bug (#89)\n\n* working around latest alpine make bug\r\n\r\n* haproxy workaround\r\n\r\n* 3.13 upgrade & ToDo added","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/commits/4ed783c34a0093b38d6099c370f6d276211d7a1c"},{"sha":"14eda9f9135f9c7f9315d04b6343e50f7059aeb1","author":{"name":"Michael","email":"89a7750c63a2a70a7f0f74740e03cfc4501a2bdb@users.noreply.github.com"},"message":"revert to Alpine","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/commits/14eda9f9135f9c7f9315d04b6343e50f7059aeb1"}]},"public":true,"created_at":"2021-06-21T07:35:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16856594134","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"push_id":7367012746,"size":1,"distinct_size":1,"ref":"refs/heads/mb-alpineopenssh","head":"c450647c6b277af0c3c0ee6057ad51a987b763d0","before":"14eda9f9135f9c7f9315d04b6343e50f7059aeb1","commits":[{"sha":"c450647c6b277af0c3c0ee6057ad51a987b763d0","author":{"name":"Michael","email":"89a7750c63a2a70a7f0f74740e03cfc4501a2bdb@users.noreply.github.com"},"message":"remove priv sep user","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/commits/c450647c6b277af0c3c0ee6057ad51a987b763d0"}]},"public":true,"created_at":"2021-06-21T07:37:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16856616967","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"push_id":7367023820,"size":1,"distinct_size":1,"ref":"refs/heads/OQS-v8","head":"f058d3168ea1c7b275801136c2627d638d219c24","before":"5c924ba12f773d00551bd4c544f139bb9ff793ed","commits":[{"sha":"f058d3168ea1c7b275801136c2627d638d219c24","author":{"name":"Michael Baentsch","email":"59bd0a3ff43b32849b319e645d4798d8a5d1e889@baentsch.ch"},"message":"8.6 upgrade (#106)\n\n* Restore correct flags during localtime_r check.\r\n\r\nWe were restoring the wrong thing CPPFLAGS (we used CFLAGS) for any\r\nplatform that doesn't have localtime_r.\r\n\r\n* Use \"=\" not \"==\" in string test.\r\n\r\nPOSIX says \"=\" is string comparison and some shells (eg HP-UX) will\r\ncomplain about \"==\".\r\n\r\n* upstream: when mentioning that the host key has changed, don't\r\n\r\nreport the type because it is ambiguous as to whether it referred to the\r\nknown or new host key. bz3216; ok dtucker@\r\n\r\nOpenBSD-Commit-ID: 2d5ce4a83dbcf44e340a572e361decad8aab7bad\r\n\r\n* upstream: when loading PKCS#11 keys, include the key fingerprints\r\n\r\nand provider/slot information in debug output.\r\n\r\nOpenBSD-Commit-ID: 969a089575d0166a9a364a9901bb6a8d9b8a1431\r\n\r\n* upstream: clean up passing of struct passwd from monitor to preauth\r\n\r\nprivsep process. No longer copy entire struct w/ pointer addresses, but pass\r\nremaining scalar fields explicitly,\r\n\r\nPrompted by Yuichiro NAITO, feedback Thorsten Glaser; ok dtucker@\r\n\r\nOpenBSD-Commit-ID: 9925df75a56732c43f3663e70dd15ff413ab3e53\r\n\r\n* upstream: Set the specified TOS/DSCP for interactive use prior to\r\n\r\nTCP connect. The connection phase of the SSH session is time-sensitive (due\r\nto server side login grace periods) and is frequently interactive (e.g.\r\nentering passwords). The ultimate interactive/bulk TOS/DSCP will be set after\r\nauthentication completes.\r\n\r\nok dtucker@\r\n\r\nOpenBSD-Commit-ID: f31ab10d9233363a6d2c9996007083ba43a093f1\r\n\r\n* upstream: Document ssh-keygen -Z, sanity check its argument earlier and\r\n\r\nprovide a better error message if it's not correct.  Prompted by bz#2879, ok\r\ndjm@ jmc@\r\n\r\nOpenBSD-Commit-ID: 484178a173e92230fb1803fb4f206d61f7b58005\r\n\r\n* upstream: check result of strchr() against NULL rather than\r\n\r\nsearched-for characters; from zhongjubin@huawei.com\r\n\r\nOpenBSD-Commit-ID: e6f57de1d4a4d25f8db2d44e8d58d847e247a4fe\r\n\r\n* upstream: Include cipher.h for declaration of cipher_by_name.\r\n\r\nOpenBSD-Commit-ID: ddfebbca03ca0e14e00bbad9d35f94b99655d032\r\n\r\n* upstream: Ignore comments at the end of config lines in ssh_config,\r\n\r\nsimilar to what we already do for sshd_config.  bz#2320, with & ok djm@\r\n\r\nOpenBSD-Commit-ID: bdbf9fc5bc72b1a14266f5f61723ed57307a6db4\r\n\r\n* upstream: make program name be const\r\n\r\nOpenBSD-Commit-ID: ece25680ec637fdf20502721ccb0276691df5384\r\n\r\n* upstream: typos: s/hex/kex/ in error messages\r\n\r\nOpenBSD-Commit-ID: 43a026c9571dd779ec148de1829cf5a6b6651905\r\n\r\n* upstream: fix minor memleak of kex->hostkey_alg on rekex\r\n\r\nOpenBSD-Commit-ID: 2c3969c74966d4ccdfeff5e5f0df0791919aef50\r\n\r\n* upstream: memleak of DH public bignum; found with libfuzzer\r\n\r\nOpenBSD-Commit-ID: 0e913b542c3764b100b1571fdb0d0e5cc086fe97\r\n\r\n* upstream: make ssh_free(NULL) a no-op\r\n\r\nOpenBSD-Commit-ID: 42cb285d94789cefe6608db89c63040ab0a80fa0\r\n\r\n* upstream: shuffle a few utility functions into sftp-client.c; from\r\n\r\nJakub Jelen\r\n\r\nOpenBSD-Commit-ID: fdeb1aae1f6149b193f12cd2af158f948c514a2a\r\n\r\n* use options that work with recent clang\r\n\r\n* basic KEX fuzzer; adapted from Markus' unittest\r\n\r\n* upstream: use _PATH_SSH_USER_DIR instead of hardcoded .ssh in path\r\n\r\nOpenBSD-Commit-ID: 5c1048468813107baa872f5ee33ba51623630e01\r\n\r\n* upstream: prepare readconf.c for fuzzing; remove fatal calls and\r\n\r\nfix some (one-off) memory leaks; ok markus@\r\n\r\nOpenBSD-Commit-ID: 91c6aec57b0e7aae9190de188e9fe8933aad5ec5\r\n\r\n* upstream: refactor client percent_expand() argument passing;\r\n\r\nconsolidate the common arguments into a single struct and pass that around\r\ninstead of using a bunch of globals. ok markus@\r\n\r\nOpenBSD-Commit-ID: 035e6d7ca9145ad504f6af5a021943f1958cd19b\r\n\r\n* upstream: fix possible error(\"%s\", NULL) on error paths\r\n\r\nOpenBSD-Commit-ID: 0b3833c2cb985453ecca1d76803ebb8f3b736a11\r\n\r\n* upstream: Print client kem key with correct length.\r\n\r\nok markus@\r\n\r\nOpenBSD-Commit-ID: 91689e14a4fc6c270e265a32d1c8faba63a45755\r\n\r\n* upstream: load_hostkeys()/hostkeys_foreach() variants for FILE*\r\n\r\nAdd load_hostkeys_file() and hostkeys_foreach_file() that accept a\r\nFILE* argument instead of opening the file directly.\r\n\r\nOriginal load_hostkeys() and hostkeys_foreach() are implemented using\r\nthese new interfaces.\r\n\r\nAdd a u_int note field to the hostkey_entry and hostkey_foreach_line\r\nstructs that is passed directly from the load_hostkeys() and\r\nhostkeys_foreach() call. This is a lightweight way to annotate results\r\nbetween different invocations of load_hostkeys().\r\n\r\nok markus@\r\n\r\nOpenBSD-Commit-ID: 6ff6db13ec9ee4edfa658b2c38baad0f505d8c20\r\n\r\n* upstream: allow UserKnownHostsFile=none; feedback and ok markus@\r\n\r\nOpenBSD-Commit-ID: c46d515eac94a35a1d50d5fd71c4b1ca53334b48\r\n\r\n* upstream: plumb ssh_conn_info through to sshconnect.c; feedback/ok\r\n\r\nmarkus@\r\n\r\nOpenBSD-Commit-ID: e8d14a09cda3f1dc55df08f8a4889beff74e68b0\r\n\r\n* Pull in missing rev 1.2.\r\n\r\n* upstream: few more things needs match.c and addrmatch.c now that\r\n\r\nlog.c calls match_pattern_list()\r\n\r\nOpenBSD-Regress-ID: f7c95c76b150d0aeb00a67858b9579b7d1b2db74\r\n\r\n* upstream: adapt to API change in hostkeys_foreach()/load_hostkeys()\r\n\r\nOpenBSD-Regress-ID: dcb468514f32da49a446372453497dc6eeafdbf3\r\n\r\n* upstream: properly fix ProxyJump parsing; Thanks to tb@ for\r\n\r\npointing out my error (parse_ssh_uri() can return -1/0/1, that I missed).\r\nReported by Raf Czlonka via bugs@\r\n\r\nok tb@\r\n\r\nOpenBSD-Commit-ID: a2991a3794bcaf1ca2b025212cce11cdb5f6b7d6\r\n\r\n* upstream: Remove the pre-standardization cipher\r\n\r\nrijndael-cbc@lysator.liu.se. It is an alias for aes256-cbc which was\r\nstandardized in RFC4253 (2006), has been deprecated and disabled by default\r\nsince OpenSSH 7.2 (2016) and was only briefly documented in ssh.1 in 2001.\r\n\r\nThis will reduce the amount of work the cipher/kex regression tests need\r\nto do by a little bit.  ok markus@ djm@\r\n\r\nOpenBSD-Commit-ID: fb460acc18290a998fd70910b19c29b4e4f199ad\r\n\r\n* upstream: Remove explicit rijndael-cbc@lysator.liu.se test since the\r\n\r\ncipher was removed.\r\n\r\nOpenBSD-Regress-ID: aa93cddb4ecd9bc21446a79008a1a53050e64f17\r\n\r\n* upstream: move subprocess() from auth.c to misc.c\r\n\r\nmake privilege dropping optional but allow it via callbacks (to avoid\r\nneed to link uidswap.c everywhere)\r\n\r\nadd some other flags (keep environment, disable strict path safety check)\r\nthat make this more useful for client-side use.\r\n\r\nfeedback & ok markus@\r\n\r\nOpenBSD-Commit-ID: a80ea9fdcc156f1a18e9c166122c759fae1637bf\r\n\r\n* upstream: add a ssh_config KnownHostsCommand that allows the client\r\n\r\nto obtain known_hosts data from a command in addition to the usual files.\r\n\r\nThe command accepts bunch of %-expansions, including details of the\r\nconnection and the offered server host key. Note that the command may\r\nbe invoked up to three times per connection (see the manpage for\r\ndetails).\r\n\r\nok markus@\r\n\r\nOpenBSD-Commit-ID: 2433cff4fb323918ae968da6ff38feb99b4d33d0\r\n\r\n* upstream: Remove lines accidentally left behind in the ProxyJump\r\n\r\nparsing fix r1.345.\r\n\r\nok djm\r\n\r\nOpenBSD-Commit-ID: fe767c108c8117bea33767b080ff62eef2c55f5c\r\n\r\n* upstream: regress test for KnownHostsCommand\r\n\r\nOpenBSD-Regress-ID: ffc77464320b6dabdcfa0a72e0df02659233a38a\r\n\r\n* upstream: more detail for failing tests\r\n\r\nOpenBSD-Regress-ID: c68c0e5a521cad7e7f68e54c54ebf86d6c10ee1d\r\n\r\n* ensure $LOGNAME is set in tests\r\n\r\n* Include stdio.h for FILE in misc.h.\r\n\r\nFixes build on at least OpenBSD.\r\n\r\n* Improve AIX text.\r\n\r\n* whitespace at EOL\r\n\r\n* whitespace at EOL\r\n\r\n* upstream: tweak the description of KnownHostsCommand in ssh_conf.5,\r\n\r\nand add entries for it to the -O list in scp.1 and sftp.1;\r\n\r\nok djm\r\n\r\nOpenBSD-Commit-ID: aba31ebea03f38f8d218857f7ce16a500c3e4aff\r\n\r\n* upstream: Update/replace the experimental post-quantim hybrid key\r\n\r\nexchange method based on Streamlined NTRU Prime (coupled with X25519).\r\n\r\nThe previous sntrup4591761x25519-sha512@tinyssh.org method is\r\nreplaced with sntrup761x25519-sha512@openssh.com. Per the authors,\r\nsntrup4591761 was replaced almost two years ago by sntrup761.\r\n\r\nThe sntrup761 implementaion, like sntrup4591761 before it, is public\r\ndomain code extracted from the SUPERCOP cryptography benchmark\r\nsuite (https://bench.cr.yp.to/supercop.html).\r\n\r\nThanks for Daniel J Bernstein for guidance on algorithm selection.\r\nPatch from Tobias Heider; feedback & ok markus@ and myself\r\n\r\n(note this both the updated method and the one that it replaced are\r\ndisabled by default)\r\n\r\nOpenBSD-Commit-ID: 2bf582b772d81ee24e911bb6f4b2aecfd39338ae\r\n\r\n* upstream: Adapt to replacement of\r\n\r\nsntrup4591761x25519-sha512@tinyssh.org with\r\nsntrup761x25519-sha512@openssh.com.\r\n\r\nAlso test sntrup761x25519-sha512@openssh.com in unittests/kex\r\n\r\nOpenBSD-Regress-ID: cfa3506b2b077a9cac1877fb521efd2641b6030c\r\n\r\n* adapt KEX fuzzer to PQ kex change\r\n\r\n* upstream: Use int64_t for intermediate values in int32_MINMAX to\r\n\r\nprevent signed 32-bit integer overflow.\r\n\r\nFound by and ok djm@\r\nok markus@\r\n\r\nOpenBSD-Commit-ID: 4f0704768e34cf45fdd792bac4011c6971881bb3\r\n\r\n* fix: missing pieces of previous commit\r\n\r\n* Undef int32 after sort routines.\r\n\r\nThis prevents typedef'ing crypto_int32 twice, in sntrup761.c and\r\ncrypto_api.h, which some compilers (at least some GCCs) don't accept.\r\n\r\n* upstream: Prevent redefinition of `crypto_int32' error with gcc3.\r\n\r\nFixes compilation on luna88k.\r\n\r\nFeedback millert@\r\nFound by and ok aoyama@\r\n\r\nOpenBSD-Commit-ID: f305ddfe575a26cc53431af3fde3f4aeebed9ba6\r\n\r\n* upstream: estructure sntrup761.sh to process all files in a single\r\n\r\nlist, which will make it easier to reorder.  Re-inline int32_MINMAX.  ok\r\ntobhe@\r\n\r\nOpenBSD-Commit-ID: d145c6c19b08bb93c9e14bfaa7af589d90f144c0\r\n\r\n* upstream: mention that DisableForwarding is valid in a sshd_config\r\n\r\nMatch block reported by Fredrik Eriksson in bz3239\r\n\r\nOpenBSD-Commit-ID: 3a71c3d84b597f5e43e4b40d5232797daf0993f6\r\n\r\n* upstream: Update the sntrup761 creation script and generated code:\r\n\r\n- remove unneeded header files and typedefs and rely on crypto_api.h  - add\r\ndefines to map types used to the crypto_api ones instead of typedefs.  This\r\n prevents typedef name collisions in -portable.  - remove CRYPTO_NAMESPACE\r\nentirely instead of making it a no-op  - delete unused functions and make the\r\nremaining ones that aren't exported static.\r\n\r\nok djm@\r\n\r\nOpenBSD-Commit-ID: 7b9d0cf3acd5a3c1091da8afe00c904d38cf5783\r\n\r\n* upstream: don't try to use timespeccmp(3) directly as a qsort(3)\r\n\r\ncomparison function - it returns 0/1 and not the -1/0/1 that qsort expectes.\r\n\r\nfixes sftp \"ls -ltr\" under some circumstances.\r\n\r\nBased on patch by Masahiro Matsuya via bz3248.\r\n\r\nOpenBSD-Commit-ID: 65b5e9f18bb0d10573868c3516de6e5170adb163\r\n\r\n* upstream: If a signature operation on a FIDO key fails with a\r\n\r\n\"incorrect PIN\" reason and no PIN was initially requested from the user, then\r\nrequest a PIN and retry the operation.\r\n\r\nThis smoothes over a few corner cases including FIDO devices that\r\nrequire PINs for all hosted credentials, biometric FIDO devices that\r\nfall back to requiring PIN when reading the biometric failed, devices\r\nthat don't implement reading credProtect status for downloaded keys\r\nand probably a few more cases that I haven't though of yet.\r\n\r\nok dtucker@\r\n\r\nOpenBSD-Commit-ID: 176db8518933d6a5bbf81a2e3cf62447158dc878\r\n\r\n* Add Ubuntu 16.04 and 20.04 test targets.\r\n\r\n* Run tests with sudo for better coverage.\r\n\r\n* upstream: make CheckHostIP default to 'no'. It doesn't provide any\r\n\r\nperceptible value and makes it much harder for hosts to change host keys,\r\nparticularly ones that use IP-based load-balancing.\r\n\r\nok dtucker@\r\n\r\nOpenBSD-Commit-ID: 0db98413e82074f78c7d46784b1286d08aee78f0\r\n\r\n* Add test against Graphene hardened malloc.\r\n\r\n* upstream: Move address handling functions out into their own file\r\n\r\nin order to reuse them for per-source maxstartups limiting.  Supplement with\r\nsome additional functions from djm's flowtools that we'll also need.  ok djm@\r\n(as part of a larger diff).\r\n\r\nOpenBSD-Commit-ID: e3e7d9ccc6c9b82e25cfef0ec83598e8e2327cbf\r\n\r\n* upstream: Add PerSourceMaxStartups and PerSourceNetBlockSize\r\n\r\noptions which provide more fine grained MaxStartups limits.  Man page help\r\njmc@, feedback & ok djm@\r\n\r\nOpenBSD-Commit-ID: e2f68664e3d02c0895b35aa751c48a2af622047b\r\n\r\n* upstream: add a comma to previous;\r\n\r\nOpenBSD-Commit-ID: 9139433701c0aa86a0d3a6c7afe10d1c9c2e0869\r\n\r\n* upstream: Change convtime() from returning long to returning int.\r\n\r\nOn platforms where sizeof(int) != sizeof(long), convtime could accept values\r\n>MAX_INT which subsequently truncate when stored in an int during config\r\nparsing.  bz#3250, ok djm@\r\n\r\nOpenBSD-Commit-ID: 8fc932683d6b4660d52f50911d62bd6639c5db31\r\n\r\n* upstream: Update unittests for addr.c/addrmatch.c split.\r\n\r\nOpenBSD-Regress-ID: de2b415fb7af084a91c6ef147a90482d8f771eef\r\n\r\n* upstream: Adjust kexfuzz to addr.c/addrmatch.c split.\r\n\r\nOpenBSD-Regress-ID: 1d8d23bb548078020be2fb52c4c643efb190f0eb\r\n\r\n* upstream: Correct spelling of persourcenetblocksize in config-dump\r\n\r\nmode.\r\n\r\nOpenBSD-Commit-ID: ecdc49e2b6bde6b6b0e52163d621831f6ac7b13d\r\n\r\n* Remove duplicated declaration in fatal.c .\r\n\r\n* Add Mac OS X test targets.\r\n\r\n* Merge Mac OS X targets into a single config.\r\n\r\n* upstream: Minor grammatical correction.\r\n\r\nOK jmc@\r\n\r\nOpenBSD-Commit-ID: de0fad0581e212b2750751e479b79c18ff8cac02\r\n\r\n* upstream: In waitfd(), when poll returns early we are subtracting\r\n\r\nthe elapsed time from the timeout each loop, so we only want to measure the\r\nelapsed time the poll() in that loop, not since the start of the function.\r\nSpotted by chris.xj.zhu at gmail.com, ok djm@\r\n\r\nOpenBSD-Commit-ID: 199df060978ee9aa89b8041a3dfaf1bf7ae8dd7a\r\n\r\n* upstream: Change types in convtime() unit test to int to match\r\n\r\nchange its new type. Add tests for boundary conditions and fix convtime to\r\nwork up to INT_MAX. ok djm@\r\n\r\nOpenBSD-Commit-ID: 01dc0475f1484ac2f47facdfcf9221f9472145de\r\n\r\n* upstream: Make output buffer larger to prevent potential truncation\r\n\r\nwarnings from compilers not smart enough to know the strftime calls won't\r\never fully fill \"to\" and \"from\".  ok djm@\r\n\r\nOpenBSD-Commit-ID: 83733f1b01b82da88b9dd1769475952aff10bdd7\r\n\r\n* upstream: Change types in convtime() unit test to int to match change\r\n\r\nits new type. Add tests for boundary conditions and fix convtime to work up\r\nto INT_MAX. ok djm@\r\n\r\nOpenBSD-Regress-ID: ba2b81e9a3257fff204b020affe85b604a44f97e\r\n\r\n* upstream: Rename PubkeyAcceptedKeyTypes keyword to\r\n\r\nPubkeyAcceptedAlgorithms. While the two were originally equivalent, this\r\nactually specifies the signature algorithms that are accepted.  Some key\r\ntypes (eg RSA) can be used by multiple algorithms (eg ssh-rsa, rsa-sha2-512)\r\nso the old name is becoming increasingly misleading.  The old name is\r\nretained as an alias. Prompted by bz#3253, help & ok djm@, man page help jmc@\r\n\r\nOpenBSD-Commit-ID: 0346b2f73f54c43d4e001089759d149bfe402ca5\r\n\r\n* upstream: PubkeyAcceptedKeyTypes->PubkeyAcceptedAlgorithms\r\n\r\nhere too.\r\n\r\nOpenBSD-Commit-ID: 3b64a640f8ce8c21d9314da9df7ce2420eefde3a\r\n\r\n* upstream: Fix long->int for convtime tests here too. Spotted by\r\n\r\ntobhe@.\r\n\r\nOpenBSD-Regress-ID: a87094f5863312d00938afba771d25f788c849d0\r\n\r\n* ifdef new instance of sin6_scope_id\r\n\r\nPut inside HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID similar to\r\nexisting instance.  Should fix error on UnixWare 7.\r\n\r\n* upstream: make ssh hostbased authentication send the signature\r\n\r\nalgorithm in its SSH2_MSG_USERAUTH_REQUEST packets instead of the key type.\r\nThis make HostbasedAcceptedAlgorithms do what it is supposed to - filter on\r\nsignature algorithm and not key type.\r\n\r\nspotted with dtucker@ ok markus@\r\n\r\nOpenBSD-Commit-ID: 25bffe19f0326972f5728170f7da81d5f45c78c6\r\n\r\n* upstream: factor out common code in the agent client\r\n\r\nAdd a ssh_request_reply_decode() function that sends a message to\r\nthe agent, reads and parses a success/failure reply.\r\nUse it for all requests that only expect success/failure\r\n\r\nok markus@\r\n\r\nOpenBSD-Commit-ID: e0c1f4d5e6cfa525d62581e2b8de93be0cb85adb\r\n\r\n* upstream: use recallocarray to allocate the agent sockets table;\r\n\r\nalso clear socket entries that are being marked as unused.\r\n\r\nspinkle in some debug2() spam to make it easier to watch an agent\r\ndo its thing.\r\n\r\nok markus\r\n\r\nOpenBSD-Commit-ID: 74582c8e82e96afea46f6c7b6813a429cbc75922\r\n\r\n* upstream: move check_host_cert() from sshconnect,c to sshkey.c and\r\n\r\nrefactor it to make it more generally usable and testable.\r\n\r\nok markus@\r\n\r\nOpenBSD-Commit-ID: 536f489f5ff38808c1fa711ba58d4579b636f9e4\r\n\r\n* upstream: make struct hostkeys public; I have no idea why I made it\r\n\r\nopaque originally.\r\n\r\nok markus@\r\n\r\nOpenBSD-Commit-ID: e50780b34d4bbe628d69b2405b024dd749d982f3\r\n\r\n* upstream: more ssh-agent refactoring\r\n\r\nAllow confirm_key() to accept an additional reason suffix\r\n\r\nFactor publickey userauth parsing out into its own function and allow\r\nit to optionally return things it parsed out of the message to its\r\ncaller.\r\n\r\nfeedback/ok markus@\r\n\r\nOpenBSD-Commit-ID: 29006515617d1aa2d8b85cd2bf667e849146477e\r\n\r\n* upstream: refactor key constraint parsing in ssh-agent\r\n\r\nKey constraints parsing code previously existed in both the \"add regular\r\nkey\" and \"add smartcard key\" path. This unifies them but also introduces\r\nmore consistency checking: duplicated constraints and constraints that\r\nare nonsensical for a particular situation (e.g. FIDO provider for a\r\nsmartcard key) are now banned.\r\n\r\nok markus@\r\n\r\nOpenBSD-Commit-ID: 511cb1b1c021ee1d51a4c2d649b937445de7983c\r\n\r\n* Disable sntrup761 if compiler doesn't support VLAs.\r\n\r\nThe sntrup761 code sourced from supercop uses variable length\r\narrays.  Although widely supported, they are not part of the ANSI\r\nC89 spec so if the compiler does not support VLAs, disable the\r\nsntrup761x25519-sha512@openssh.com KEX method by replacing the kex\r\nfunctions with no-op ones similar to what we do in kexecdh.c.\r\n\r\nThis should allow OpenSSH to build with a plain C89 compiler again.\r\nSpotted by tim@, ok djm@.\r\n\r\n* upstream: Rename HostbasedKeyTypes (ssh) and\r\n\r\nHostbasedAcceptedKeyTypes (sshd) to HostbasedAcceptedAlgorithms, which more\r\naccurately reflects its effect. This matches a previous change to\r\nPubkeyAcceptedAlgorithms.  The previous names are retained as aliases.  ok\r\ndjm@\r\n\r\nOpenBSD-Commit-ID: 49451c382adc6e69d3fa0e0663eeef2daa4b199e\r\n\r\n* upstream: Remove unused variables leftover from refactoring. ok\r\n\r\ndjm@\r\n\r\nOpenBSD-Commit-ID: 8b3ad58bff828fcf874e54b2fc27a4cf1d9505e8\r\n\r\n* upstream: move HostbasedAcceptedAlgorithms to the right place in\r\n\r\nalphabetical order\r\n\r\nOpenBSD-Commit-ID: d766820d33dd874d944c14b0638239adb522c7ec\r\n\r\n* upstream: Logical not bitwise or. ok djm@\r\n\r\nOpenBSD-Commit-ID: d4dc855cf04951b93c45caa383e1ac9af0a3b0e5\r\n\r\n* Run one test with -Werror to catch warnings.\r\n\r\n* Install moduli file before tests.\r\n\r\nReduces warnings during test runs.\r\n\r\n* upstream: remove global variable used to stash compat flags and use the\r\n\r\npurpose-built ssh->compat variable instead; feedback/ok markus@\r\n\r\nOpenBSD-Commit-ID: 7c4f200e112dae6bcf99f5bae1a5629288378a06\r\n\r\n* upstream: make ssh->kex->session_id a sshbuf instead of u_char*/size_t\r\n\r\nand use that instead of global variables containing copies of it. feedback/ok\r\nmarkus@\r\n\r\nOpenBSD-Commit-ID: a4b1b1ca4afd2e37cb9f64f737b30a6a7f96af68\r\n\r\n* upstream: this needs kex.h now\r\n\r\nOpenBSD-Commit-ID: c5a42166c5aa002197217421a971e48be7cb5d41\r\n\r\n* correct kex name in disabled code\r\n\r\n* upstream: fix leak: was double allocating kex->session_id buffer\r\n\r\nOpenBSD-Commit-ID: 3765f4cc3ae1df874dba9102a3588ba7b48b8183\r\n\r\n* Remove whitespace.\r\n\r\n* Add test against openssl head and libressl head.\r\n\r\n* make with -j2 to use available CPUs.\r\n\r\n* support for running kex fuzzer with null cipher\r\n\r\n* fuzz diffie-hellman-group-exchange-sha1 kex too\r\n\r\n* upstream: give typedef'd struct a struct name; makes the fuzzer I'm\r\n\r\nwriting a bit easier\r\n\r\nOpenBSD-Commit-ID: 1052ab521505a4d8384d67acb3974ef81b8896cb\r\n\r\n* upstream: fix the values of enum sock_type\r\n\r\nOpenBSD-Commit-ID: 18d048f4dbfbb159ff500cfc2700b8fb1407facd\r\n\r\n* upstream: add a SK_DUMMY_INTEGRATE define that allows the dummy\r\n\r\nsecurity key middleware to be directly linked; useful for writing fuzzers,\r\netc.\r\n\r\nOpenBSD-Regress-ID: 0ebd00159b58ebd85e61d8270fc02f1e45df1544\r\n\r\n* some fixed test data (mostly keys) for fuzzing\r\n\r\n* move keys out of kex_fuzz.cc into separate header\r\n\r\nadd certificates and missing key types\r\n\r\n* ssh-agent fuzzer\r\n\r\n* expect fuzz cases to have length prefix\r\n\r\nmight make life a little easier for the fuzzer, e.g. it can now\r\nproduce valid (multi-request) messages by smashing two cases together.\r\n\r\n* allow a fuzz case to contain more than one request\r\n\r\nloop until input buffer empty, no message consumed or 256 messages\r\nprocessed\r\n\r\n* upstream: Set linesize returned by getline to zero when freeing and\r\n\r\nNULLing the returned string.  OpenBSD's getline handles this just fine, but\r\nsome implementations used by -portable do not.  ok djm@\r\n\r\nOpenBSD-Commit-ID: 4d7bd5169d3397654247db9655cc69a9908d165c\r\n\r\n* upstream: more strictly enforce KEX state-machine by banning packet\r\n\r\ntypes once they are received. Fixes memleak caused by duplicate\r\nSSH2_MSG_KEX_DH_GEX_REQUEST (spotted by portable OpenSSH kex_fuzz via\r\noss-fuzz #30078).\r\n\r\nok markus@\r\n\r\nOpenBSD-Commit-ID: 87331c715c095b587d5c88724694cdeb701c9def\r\n\r\n* upstream: memleak on error path; ok markus@\r\n\r\nOpenBSD-Commit-ID: 2091a36d6ca3980c81891a6c4bdc544e63cb13a8\r\n\r\n* upstream: fix memleaks in private key deserialisation; enforce more\r\n\r\nconsistency between redundant fields in private key certificate and private\r\nkey body; ok markus@\r\n\r\nOpenBSD-Commit-ID: dec344e414d47f0a7adc13aecf3760fe58101240\r\n\r\n* upstream: whitespace\r\n\r\nOpenBSD-Commit-ID: 544bb092e03fcbecb420196cd0f70af13ea868ad\r\n\r\n* upstream: Remove debug message from sigchld handler. While this\r\n\r\nworks on OpenBSD it can cause problems on other platforms.  From kircherlike\r\nat outlook.com via bz#3259, ok djm@\r\n\r\nOpenBSD-Commit-ID: 3e241d7ac1ee77e3de3651780b5dc47b283a7668\r\n\r\n* Deny (non-fatal) statx in preauth privsep child.\r\n\r\n* Using explicit_memset for the explicit_bzero compatibility layer.\r\n\r\nFavoriting the native implementation in this case.\r\n\r\n* upstream: hostname is not specified by POSIX but uname -n is, so use\r\n\r\nthe latter for portability.  Patch from Geert Hendrickx via github PR#208.\r\n\r\nOpenBSD-Regress-ID: d6a79c7c4d141a0d05ade4a042eb57dddbce89f3\r\n\r\n* upstream: Roll back the hostname->uname change in rev 1.10. It turns\r\n\r\nout uname -n doesn't do what we need for some platforms in portable, so we'll\r\nfix the original problem (that some other platforms don't have hostname at\r\nall) by providing wrapper function to implement it.\r\n\r\nOpenBSD-Regress-ID: 827a707d6201d5a8e196a8c28aec1d2c76c52341\r\n\r\n* Add a hostname function for systems that don't have it.\r\n\r\nSome systems don't have a hostname command (it's not required by POSIX).\r\nThe do have uname -n (which is), but as found by tim@ some others (eg\r\nUnixWare) do not report the FQDN from uname -n.\r\n\r\n* Add __NR_futex_time64 to seccomp sandbox.\r\n\r\nThis is apparently needed for (some) 32 bit platforms with glibc 2.33.\r\nPatch from nix at esperi.org.uk and jjelen at redhat.com via bz#3260.\r\n\r\n* upstream: factor SSH_AGENT_CONSTRAIN_EXTENSION parsing into its own\r\n\r\nfunction and remove an unused variable; ok dtucker@\r\n\r\nOpenBSD-Commit-ID: e1a938657fbf7ef0ba5e73b30365734a0cc96559\r\n\r\n* upstream: sftp: add missing lsetstat@openssh.com documentation\r\n\r\npatch from Mike Frysinger\r\n\r\nOpenBSD-Commit-ID: 9c114db88d505864075bfe7888b7c8745549715b\r\n\r\n* upstream: ProxyJump takes \"none\" to disable processing like\r\n\r\nProxyCommand does\r\n\r\nok djm@ jmc@\r\n\r\nOpenBSD-Commit-ID: 941a2399da2193356bdc30b879d6e1692f18b6d3\r\n\r\n* upstream: factor out opt_array_append; ok djm@\r\n\r\nOpenBSD-Commit-ID: 571bc5dd35f99c5cf9de6aaeac428b168218e74a\r\n\r\n* upstream: ssh: add PermitRemoteOpen for remote dynamic forwarding\r\n\r\nwith SOCKS ok djm@, dtucker@\r\n\r\nOpenBSD-Commit-ID: 64fe7b6360acc4ea56aa61b66498b5ecc0a96a7c\r\n\r\n* upstream: Make sure puttygen is new enough to successfully run the\r\n\r\nPuTTY interop tests, otherwise skip them.\r\n\r\nOpenBSD-Regress-ID: 34565bb50b8aec58331ed02a5e9e0a9a929bef51\r\n\r\n* Add self-hosted runners for VMs of other platforms.\r\n\r\nGithub only hosts a limited number of platforms, and the runner code\r\nis only supported on slightly wider range of platforms.  To increase\r\nour test coverage beyond that, we run the runner natively on a VM host,\r\nwhere it runs a jobs that boot VMs of other platforms, waits for them\r\nto come up then runs the build and test by ssh'ing into the guest.\r\nThis means that the minimum dependencies for the guests are quite low\r\n(basically just sshd, a compiler and make).\r\n\r\nThe interface to the VM host is fairly simple (basically 3 scripts:\r\nvmstartup, vmrun and vmshutdown), but those are specific to the VM host\r\nso are not in the public repo.  We also mount the working directory on the\r\nhost via sshfs, so things like artifact upload by the runner also work.\r\n\r\nAs part of this we are moving the per-test-target configs into a single\r\nplace (.github/configs) where there will be referenced by a single short\r\n\"config\" key.  I plan to make the github-hosted runners use this too.\r\n\r\nThe self-hosted runners are run off a private repo on github since that\r\nprevents third parties from accessing them[0], and since runner quota is\r\nlimited on private repos, we avoid running the tests we run on the public\r\nrepo.\r\n\r\n[0] https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners#self-hosted-runner-security-with-public-repositories\r\n\r\n* Only run selfhosted tests from selfhosted repo.\r\n\r\n* Convert most github hosted tests to new config structure.\r\n\r\n* Merge macos and ubuntu tests.\r\n\r\n* Skip unit tests on hosted VMs to speed things up.\r\n\r\n* More compact representation of config matrix.\r\n\r\n* Fix labels on targets (dots vs underscores).\r\n\r\n* Quote SSHD_CONFOPTS in case it contains spaces.\r\n\r\n* Always intall moduli.\r\n\r\nAllows us to run tests without falling back to a fixed modulus.  Ensure that\r\nthe directory exists.\r\n\r\n* Remove SKIP_UNIT as it needs to be a make arg.\r\n\r\n* Skip unit tests on sol11 to speed things up.\r\n\r\n* don't free string returned by login_getcapstr(3)\r\n\r\nOpenBSD and NetBSD require the caller to free strings returned\r\nbu the login_* functions, but FreeBSD requires that callers don't.\r\n\r\nFortunately in this case, we can harmlessly leak as the process is\r\nabout to exec the shell/command.\r\n\r\nFrom https://reviews.freebsd.org/D28617 via Ed Maste; ok dtucker@\r\n\r\n* Install moduli on target not host.\r\n\r\n* Fixing quoting for installing moduli on target guest.\r\n\r\n* prefer login_getpwclass() to login_getclass()\r\n\r\nFreeBSD has login_getpwclass() that does some special magic for\r\nUID=0. Prefer this to login_getclass() as its easier to emulate\r\nthe former with the latter.\r\n\r\nBased on FreeBSD PR 37416 via Ed Maste; ok dtucker@\r\n\r\n* support OpenSSL 3.x cipher IV API change\r\n\r\nOpenSSL renamed the \"get current CIPHER_CTX\" IV operation in 3.x.\r\nThis uses the new name if available.\r\n\r\nhttps://github.com/openssl/openssl/issues/13411\r\n\r\nbz#3238 ok dtucker@\r\n\r\n* upstream: sftp-server: implement limits@openssh.com extension\r\n\r\nThis is a simple extension that allows the server to clearly\r\ncommunicate transfer limits it is imposing so the client doesn't\r\nhave to guess, or force the user to manually tune.  This is\r\nparticularly useful when an attempt to use too large of a value\r\ncauses the server to abort the connection.\r\n\r\nPatch from Mike Frysinger; ok dtucker@\r\n\r\nOpenBSD-Commit-ID: f96293221e5aa24102d9bf30e4f4ef04d5f4fb51\r\n\r\n* upstream: unbreak SK_DEBUG builds\r\n\r\nfrom https://github.com/openssh/openssh-portable/pull/225 by\r\nZenithalHourlyRate\r\n\r\nOpenBSD-Commit-ID: 28d7259ce1b04d025411464decfa2f1a097b43eb\r\n\r\n* upstream: make names in function prototypes match those in\r\n\r\ndefinition from https://github.com/openssh/openssh-portable/pull/225 by\r\nZenithalHourlyRate\r\n\r\nOpenBSD-Commit-ID: 7c736307bf3f2c7cb24d6f82f244eee959485acd\r\n\r\n* upstream: Fix the hostkeys rotation extension documentation\r\n\r\nThe documentation was lacking the needed want-reply field in the initial\r\nglobal request.\r\n\r\nhttps://github.com/openssh/openssh-portable/pull/218 by dbussink\r\n\r\nOpenBSD-Commit-ID: 051824fd78edf6d647a0b9ac011bf88e28775054\r\n\r\n* Add bbone test target (arm32).\r\n\r\n* Add DEBUG_SK to kitchensink builds.\r\n\r\n* Remove unused arg.\r\n\r\n* Add fbsd12 test target.\r\n\r\n* Add test against Valgrind.\r\n\r\n* Actually run Valgrind tests.\r\n\r\n* Comment out Solaris 64bit PAM build...\r\n\r\nuntil I can figure out why it's failing.\r\n\r\n* Upload regress failure logs in c-cpp too.\r\n\r\n* Rename \"vm\" to \"os\" in selfhosted to match c-cpp.\r\n\r\nShould make it easier to share code or maybe merge at some point.\r\n\r\n* Upload valgrind logs on failure.\r\n\r\n* Disable rlimit sandbox, doesn't work with valgrind\r\n\r\nOnly run regress tests, runing unit tests as well makes it run longer\r\nthan allowed y github.\r\n\r\n* upstream: warn when the user specifies a ForwardAgent path that does\r\n\r\nnot exist and exit if ExitOnForwardFailure is set; bz3264\r\n\r\nOpenBSD-Commit-ID: 72f7875865e723e464c71bf8692e83110699bf26\r\n\r\n* Valgrind test: split and move up list.\r\n\r\nSince the valgrind test takes so long it approaches the limit allowed by\r\ngithub, move it to the head of the list so it's the first one started and\r\nsplit the longest tests out into a second instance that runs concurrently\r\nwith the first.\r\n\r\n* Add a couple more test VMs.\r\n\r\n* upstream: Correct reference to signature algorithms as keys; from\r\n\r\nJakub Jelen\r\n\r\nOpenBSD-Commit-ID: 36f7ecee86fc811aa0f8e21e7a872eee044b4be5\r\n\r\n* upstream: lots more s/key types/signature algorithms/ mostly in\r\n\r\nHostbasedAcceptedAlgorithms and HostKeyAlgorithms; prompted by Jakub Jelen\r\n\r\nOpenBSD-Commit-ID: 3f719de4385b1a89e4323b2549c66aae050129cb\r\n\r\n* upstream: Put obsolete aliases for hostbasedalgorithms and\r\n\r\npubkeyacceptedalgorithms after their current names so that the config-dump\r\nmode finds and uses the current names.  Spotted by Phil Pennock.\r\n\r\nOpenBSD-Commit-ID: 5dd10e93cccfaff3aaaa09060c917adff04a9b15\r\n\r\n* upstream: Rename pubkeyacceptedkeytypes to pubkeyacceptedalgorithms in\r\n\r\ntest to match change to config-dump output.\r\n\r\nOpenBSD-Regress-ID: 74c9a4ad50306be873d032819d5e55c24eb74d5d\r\n\r\n* upstream: s/PubkeyAcceptedKeyTypes/PubkeyAcceptedAlgorithms/\r\n\r\nOpenBSD-Regress-ID: 3dbc005fa29f69dc23d97e433b6dffed6fe7cb69\r\n\r\n* restorecon the correct directory\r\n\r\nif using different path for authorized_keys file\r\n\r\nSSH-Copy-ID-Upstream: 791a3df47b48412c726bff6f7b1d190721e65d51\r\n\r\n* use $AUTH_KEY_DIR, now that we have it\r\n\r\nsince that was a change made since jjelen's commit was written\r\n\r\nalso, quote the variables\r\n\r\nSSH-Copy-ID-Upstream: 588cd8e5cbf95f3443d92b9ab27c5d73ceaf6616\r\n\r\n* if unable to add a missing newline, fail\r\n\r\nSSH-Copy-ID-Upstream: 76b25e18f55499ea9edb4c4d6dc4a80bebc36d95\r\n\r\n* tidy the $INSTALLKEY_SH code layout a little\r\n\r\nSSH-Copy-ID-Upstream: 78178aa5017222773e4c23d9001391eeaeca8983\r\n\r\n* Remove macos-11.0 from the test target list.\r\n\r\nIt has been consistently failing for the past few days with a github\r\nactions internal error.\r\n\r\n* upstream: a bit more debugging behind #ifdef DEBUG_SK\r\n\r\nOpenBSD-Commit-ID: d9fbce14945721061cb322f0084c2165d33d1993\r\n\r\n* Remove macos-11.00 PAM test target too.\r\n\r\nThese are failing apparently due to some kind of infrastructure problem,\r\nmaking it look like every commit is busted.\r\n\r\n* upstream: remove this KEX fuzzer; it's awkward to use and doesn't play\r\n\r\nnice with popular fuzzing drivers like libfuzzer. AFAIK nobody has used it\r\nbut me.\r\n\r\nOpenBSD-Regress-ID: cad919522b3ce90c147c95abaf81b0492ac296c9\r\n\r\n* ssh: optional bind interface if bind address specified.\r\n\r\nAllows the -b and -B options to be used together.\r\nFor example, when the interface is in the VRF.\r\n\r\n* detech BSD libc hash functions in libbsd / libmd\r\n\r\nSome Linux distributions are shipping the BSD-style hashing functions\r\n(e.g. SHA256Update) in libbsd and/or libmd. Detect this situation to\r\navoid header/replacement clashes later. ok dtucker@\r\n\r\n* Revert \"ssh: optional bind interface if bind address specified.\"\r\n\r\nThis reverts commit 5a878a71a3528c2626aa1d331934fd964782d41c.\r\n\r\nApologies - I accidentally pushed this.\r\n\r\n* Fix punctuatio and typo in README.md.\r\n\r\nSome very minor fixes, missing 's' and punctuation.\r\n\r\n* zlib is now optional.\r\n\r\n* upstream: fix alphabetic ordering of options; spotted by Iain Morgan\r\n\r\nOpenBSD-Commit-ID: f955fec617d74af0feb5b275831a9fee813d7ad5\r\n\r\n* upstream: Do not try to reset signal handler for signal 0 in\r\n\r\nsubprocess. Prevents spurious debug message.  ok djm@\r\n\r\nOpenBSD-Commit-ID: 7f9785e292dcf304457566ad4637effd27ad1d46\r\n\r\n* upstream: Add %k to list of keywords. From\r\n\r\n=?UTF-8?q?=20Eero=20H=C3=A4kkinenvia=20bz#3267?=\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\nOpenBSD-Commit-ID: 9c87f39a048cee2a7d1c8bab951b2f716256865e\r\n\r\n* Only upload config logs if configure fails.\r\n\r\n* upstream: openssh-8.5\r\n\r\nOpenBSD-Commit-ID: 185e85d60fe042b8f8fa1ef29d4ef637bdf397d6\r\n\r\n* update RPM spec version numbers\r\n\r\n* update relnotes URL\r\n\r\n* update depend\r\n\r\n* upstream: needs FILE*; from Mike Frysinger\r\n\r\nOpenBSD-Commit-ID: dddb3aa9cb5792eeeaa37a1af67b5a3f25ded41d\r\n\r\n* upstream: typo in other_hostkeys_message() display output, ok djm\r\n\r\nOpenBSD-Commit-ID: 276f58afc97b6f5826e0be58380b737603dbf5f5\r\n\r\n* upstream: don't sshbuf_get_u32() into an enum; reported by goetze\r\n\r\nAT dovetail.com via bz3269\r\n\r\nOpenBSD-Commit-ID: 99a30a8f1df9bd72be54e21eee5c56a0f050921a\r\n\r\n* upstream: Fix PRINT macro, the suffix param to sshlog() was missing.\r\n\r\nAlso remove redundant __func__ prefix from PRINT calls as the macro already\r\nadds __FILE__, __func__ and __LINE__.  From Christos Zoulas. OK dtucker@\r\n\r\nOpenBSD-Commit-ID: 01fdfa9c5541151b5461d9d7d6ca186a3413d949\r\n\r\n* Import regenerated moduli file.\r\n\r\n* Move generic includes outside of ifdef.\r\n\r\nThis ensures that the macros in log.h are defined in the case where\r\neither of --with-solaris-projects or --with-solaris-privs are used\r\nwithout --with-solaris-contracts.  bz#3278.\r\n\r\n* Allow (but return EACCES) fstatat64 in sandbox.\r\n\r\nThis is apparently used in some configurations of OpenSSL when glibc\r\nhas getrandom().  bz#3276, patch from Kris Karas, ok djm@\r\n\r\n* upstream: Add TEST_SSH_MODULI_FILE variable to allow overriding of the\r\n\r\nmoduli file used during the test run.\r\n\r\nOpenBSD-Regress-ID: be10f785263120edb64fc87db0e0d6570a10220a\r\n\r\n* upstream: no need to reset buffer after send_msg() as that is done\r\n\r\nfor us; patch from Mike Frysinger\r\n\r\nOpenBSD-Commit-ID: 565516495ff8362a38231e0f1a087b8ae66da59c\r\n\r\n* upstream: Import regenerated moduli file.\r\n\r\nOpenBSD-Commit-ID: 7ac6c252d2a5be8fbad4c66d9d35db507c9dac5b\r\n\r\n* upstream: pwcopy() struct passwd that we're going to reuse across a\r\n\r\nbunch of library calls; bz3273 ok dtucker@\r\n\r\nOpenBSD-Commit-ID: b6eafa977b2e44607b1b121f5de855107809b762\r\n\r\n* upstream: Add ModuliFile keyword to sshd_config to specify the\r\n\r\nlocation of the \"moduli\" file containing the groups for DH-GEX.  This will\r\nallow us to run tests against arbitrary moduli files without having to\r\ninstall them. ok djm@\r\n\r\nOpenBSD-Commit-ID: 8df99d60b14ecaaa28f3469d01fc7f56bff49f66\r\n\r\n* upstream: spelling\r\n\r\nOpenBSD-Commit-ID: 478bc3db04f62f1048ed6e1765400f3ab325e60f\r\n\r\n* Point TEST_SSH_MODULI_FILE at our own moduli.\r\n\r\nThis will allow the test to run without requiring a moduli file\r\ninstalled at the configured default path.\r\n\r\n* Don't install moduli during tests.\r\n\r\nNow that we have TEST_SSH_MODULI_FILE pointing to the moduli in the\r\nsoure directory we don't need to install the file to prevent warnings\r\nabout it being missing.\r\n\r\n* Only call dh_set_moduli_file if using OpenSSL.\r\n\r\nFixes link failure when configuring --without-openssl since dh.c is not\r\nlinked in.\r\n\r\n* upstream: don't let logging clobber errno before use\r\n\r\nOpenBSD-Commit-ID: ce6cca370005c270c277c51c111bb6911e1680ec\r\n\r\n* upstream: increase maximum SSH2_FXP_READ to match the maximum\r\n\r\npacket size. Also handle zero-length reads that are borderline nonsensical\r\nbut not explicitly banned by the spec. Based on patch from Mike Frysinger,\r\nfeedback deraadt@ ok dtucker@\r\n\r\nOpenBSD-Commit-ID: 4e67d60d81bde7b84a742b4ee5a34001bdf80d9c\r\n\r\n* upstream: return non-zero exit status when killed by signal; bz#3281 ok\r\n\r\ndtucker@\r\n\r\nOpenBSD-Commit-ID: 117b31cf3c807993077b596bd730c24da9e9b816\r\n\r\n* gnome-ssh-askpass3 is a valid target here\r\n\r\n* upstream: do not advertise protocol extensions that have been\r\n\r\ndisallowed by the command-line options (e.g. -p/-P/-R); ok dtucker@\r\n\r\nOpenBSD-Commit-ID: 3a8a76b3f5131741aca4b41bfab8d101c9926205\r\n\r\n* upstream: Use new limits@openssh.com protocol extension to let the\r\n\r\nclient select good limits based on what the server supports. Split the\r\ndownload and upload buffer sizes to allow them to be chosen independently.\r\n\r\nIn practice (and assuming upgraded sftp/sftp-server at each end), this\r\nincreases the download buffer 32->64KiB and the upload buffer\r\n32->255KiB.\r\n\r\nPatches from Mike Frysinger; ok dtucker@\r\n\r\nOpenBSD-Commit-ID: ebd61c80d85b951b794164acc4b2f2fd8e88606c\r\n\r\n* upstream: split\r\n\r\nOpenBSD-Regress-ID: f6c03c0e4c58b3b9e04b161757b8c10dc8378c34\r\n\r\n* upstream: add a test for misc.c:argv_split(), currently fails\r\n\r\nOpenBSD-Regress-ID: ad6b96d6ebeb9643b698b3575bdd6f78bb144200\r\n\r\n* upstream: cannot effectively test posix-rename extension after\r\n\r\nchanges in feature advertisment.\r\n\r\nOpenBSD-Regress-ID: 5e390bf88d379162aaa81b60ed86b34cb0c54d29\r\n\r\n* missing bits from 259d648e\r\n\r\n* upstream: Fix two problems in string->argv conversion: 1) multiple\r\n\r\nbackslashes were not being dequoted correctly and 2) quoted space in the\r\nmiddle of a string was being incorrectly split.\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\nA unit test for these cases has already been committed\r\n\r\nprompted by and based on GHPR#223 by Eero Häkkinen; ok markus@\r\n\r\nOpenBSD-Commit-ID: d7ef27abb4eeeaf6e167e9312e4abe9e89faf1e4\r\n\r\n* upstream: unused variable\r\n\r\nOpenBSD-Commit-ID: 85f6a394c8e0f60d15ecddda75176f112007b205\r\n\r\n* upstream: ensure that pkcs11_del_provider() is called before exit -\r\n\r\nsome PKCS#11 providers get upset if C_Initialize is not matched with\r\nC_Finalize.\r\n\r\nFrom Adithya Baglody via GHPR#234; ok markus\r\n\r\nOpenBSD-Commit-ID: f8e770e03b416ee9a58f9762e162add900f832b6\r\n\r\n* upstream: fix incorrect plural; from Ville Skyt\r\n\r\n=?UTF-8?q?t=C3=A4=20via=20GHPR#181?=\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\nOpenBSD-Commit-ID: 92f31754c6296d8f403d7c293e09dc27292d22c9\r\n\r\n* Save config.h and config.log on failure too.\r\n\r\n* upstream: whitespace (tab after space)\r\n\r\nOpenBSD-Commit-ID: 0e2b3f7674e985d3f7c27ff5028e690ba1c2efd4\r\n\r\n* upstream: highly polished whitespace, mostly fixing spaces-for-tab\r\n\r\nand bad indentation on continuation lines. Prompted by GHPR#185\r\n\r\nOpenBSD-Commit-ID: e5c81f0cbdcc6144df1ce468ec1bac366d8ad6e9\r\n\r\n* polish whitespace for portable files\r\n\r\n* upstream: sync CASignatureAlgorithms lists with reality. GHPR#174 from\r\n\r\nMatt Hazinski\r\n\r\nOpenBSD-Commit-ID: f05e4ca54d7e67b90fe58fe1bdb1d2a37e0e2696\r\n\r\n* upstream: typos in comments; GHPR#180 from Vill\r\n\r\n=?UTF-8?q?e=20Skytt=C3=A4?=\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\nOpenBSD-Commit-ID: 93c732381ae0e2b680c79e67c40c1814b7ceed2c\r\n\r\n* enable authopt and misc unit tests\r\n\r\nNeither were wired into the build, both required some build\r\nadaptations for -portable\r\n\r\n* Install libcbor with libfido2.\r\n\r\n* upstream: missing comma; from kawashima james\r\n\r\nOpenBSD-Commit-ID: 31cec6bf26c6db4ffefc8a070715ebef274e68ea\r\n\r\n* upstream: remove stray inserts; from matthias schmidt\r\n\r\nOpenBSD-Commit-ID: 2c36ebdc54e14bbf1daad70c6a05479a073d5c63\r\n\r\n* upstream: Don't check return value of unsetenv(). It's part of the\r\n\r\nenvironment setup and not part of the actual test, and some platforms\r\n-portable runs on declare it as returning void, which prevents the test from\r\ncompiling.\r\n\r\nOpenBSD-Regress-ID: 24f08543ee3cdebc404f2951f3e388cc82b844a1\r\n\r\n* wrap getrlimit call in HAVE_GETRLIMIT; bz3291\r\n\r\n* wrap struct rlimit in HAVE_GETRLIMIT too\r\n\r\n* upstream: include \"ssherr.h\" not <ssherr.h>; from Balu Gajjala via\r\n\r\nbz#3292\r\n\r\nOpenBSD-Commit-ID: e9535cd9966eb2e69e73d1ede1f44905c30310bd\r\n\r\n* Further split Valgrind tests.\r\n\r\nEven split in two, the Valgrind tests take by far the longest to run,\r\nso split them four ways to further increase parallelism.\r\n\r\n* Move the TEST_SSH_PORT section down a bit.\r\n\r\nThis groups the portable-specific changes together and makes it a\r\nlittle more likely that patches will apply cleanly.\r\n\r\n* upstream: Add TEST_SSH_ELAPSED_TIMES environment variable to print the\r\n\r\nelapsed time in seconds of each test.  This depends on \"date +%s\" which is\r\nnot specified by POSIX but is commonly implemented.\r\n\r\nOpenBSD-Regress-ID: ec3c8c19ff49b2192116a0a646ee7c9b944e8a9c\r\n\r\n* Move make_tmpdir() into portable-specific area.\r\n\r\nReduces diff vs OpenBSD and makes it more likely diffs will apply\r\ncleanly.\r\n\r\n* Remove only use of warn().\r\n\r\nThe warn() function is only used in one place in portable and does not\r\nexist upstream.  Upgrade the only instance it's used to fail()\r\n(the privsep/sandbox+proxyconnect, from back when that was new) and\r\nremove the now-unused function.\r\n\r\n* ifdef out MIN and MAX.\r\n\r\nIn -portable, defines.h ensures that these are defined, so redefining\r\npotentially causes a warning.  We don't just delete it to make any\r\nfuture code syncs a little but easier.  bz#3293.\r\n\r\n* Run unit tests under valgrind.\r\n\r\nRun a separate build for the unit tests under Valgrind.  They take long\r\nenough that running in parallel with the other Valgrind tests helps.\r\n\r\n* Add pattern for valgrind-unit.\r\n\r\n* Pass OBJ to unit test make invocation.\r\n\r\nAt least the Valgrind unit tests uses $OBJ.\r\n\r\n* Ensure valgrind-out exists.\r\n\r\nNormally the regress tests would create it, but running the unit tests\r\non their own would fail because the directory did not exist.\r\n\r\n* dedicated gnome-ssk-askpass3 source\r\n\r\nCompatibility with Wayland requires that we use the gdk_seat_grab()\r\nAPI for grabbing mouse/keyboard, however these API don't exist in\r\nGtk+2.\r\n\r\nThis branches gnome-ssk-askpass2.c => gnome-ssk-askpass3.c and\r\nmakes the changes to use the gdk_seat_grab() instead of grabbing\r\nmouse/focus separately via GDK.\r\n\r\nIn the future, we can also use the branched file to avoid some\r\nAPI that has been soft-deprecated in GTK+3, e.g. gtk_widget_modify_fg\r\n\r\n* perform report_failed_grab() inline\r\n\r\n* sshd don't exit on transient read errors\r\n\r\nopenssh-8.5 introduced a regression that would cause sshd to exit\r\nbecause of transient read errors on the network socket (e.g. EINTR,\r\nEAGAIN). Reported by balu.gajjala AT gmail.com via bz3297\r\n\r\n* upstream: do not pass file/func to monitor; noted by Ilja van Sprundel;\r\n\r\nok djm@\r\n\r\nOpenBSD-Commit-ID: 85ae5c063845c410283cbdce685515dcd19479fa\r\n\r\n* upstream: openssh-8.6\r\n\r\nOpenBSD-Commit-ID: b5f3e133c846127ec114812248bc17eff07c3e19\r\n\r\n* crank version in README and RPM spec files\r\n\r\n* depend\r\n\r\nCo-authored-by: Darren Tucker <dtucker@dtucker.net>\r\nCo-authored-by: djm@openbsd.org <djm@openbsd.org>\r\nCo-authored-by: dtucker@openbsd.org <dtucker@openbsd.org>\r\nCo-authored-by: Damien Miller <djm@mindrot.org>\r\nCo-authored-by: tobhe@openbsd.org <tobhe@openbsd.org>\r\nCo-authored-by: tb@openbsd.org <tb@openbsd.org>\r\nCo-authored-by: jmc@openbsd.org <jmc@openbsd.org>\r\nCo-authored-by: anatasluo <luolongjuna@gmail.com>\r\nCo-authored-by: rob@openbsd.org <rob@openbsd.org>\r\nCo-authored-by: naddy@openbsd.org <naddy@openbsd.org>\r\nCo-authored-by: Luca Weiss <luca@z3ntu.xyz>\r\nCo-authored-by: David Carlier <devnexen@gmail.com>\r\nCo-authored-by: dlg@openbsd.org <dlg@openbsd.org>\r\nCo-authored-by: markus@openbsd.org <markus@openbsd.org>\r\nCo-authored-by: Jakub Jelen <jjelen@redhat.com>\r\nCo-authored-by: Philip Hands <phil@hands.com>\r\nCo-authored-by: Dmitrii Turlupov <dturlupov@factor-ts.ru>\r\nCo-authored-by: Jeffrey H. Johnson <61629094+johnsonjh@users.noreply.github.com>\r\nCo-authored-by: sthen@openbsd.org <sthen@openbsd.org>\r\nCo-authored-by: millert@openbsd.org <millert@openbsd.org>\r\nCo-authored-by: jsg@openbsd.org <jsg@openbsd.org>","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/f058d3168ea1c7b275801136c2627d638d219c24"}]},"public":true,"created_at":"2021-06-21T07:39:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16859006954","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"push_id":7368148743,"size":1,"distinct_size":1,"ref":"refs/heads/mb-cciv8","head":"82aaa683e045e443cf1501b2981fdbbd395b7202","before":"1ece3a3531a0fd2c101c57b556d79d7d76136f9e","commits":[{"sha":"82aaa683e045e443cf1501b2981fdbbd395b7202","author":{"name":"Michael","email":"89a7750c63a2a70a7f0f74740e03cfc4501a2bdb@users.noreply.github.com"},"message":"correct for build without openssl","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/82aaa683e045e443cf1501b2981fdbbd395b7202"}]},"public":true,"created_at":"2021-06-21T10:32:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16862702502","type":"PushEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"push_id":7369937531,"size":1,"distinct_size":1,"ref":"refs/heads/cci-fix","head":"e5e2894065ecb570983e1ec6d106d019d525a92d","before":"da3c7c0e965ae19f521305456f089902b8717173","commits":[{"sha":"e5e2894065ecb570983e1ec6d106d019d525a92d","author":{"name":"xvzcf","email":"0d09a926d00eb6e4de1be873a121117412a307d0@users.noreply.github.com"},"message":"YAML curveballs.","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/e5e2894065ecb570983e1ec6d106d019d525a92d"}]},"public":true,"created_at":"2021-06-21T14:49:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16863223350","type":"PushEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"push_id":7370182828,"size":1,"distinct_size":1,"ref":"refs/heads/cci-fix","head":"27afbedfe111a6438fad02476ff174d9b320b55c","before":"e5e2894065ecb570983e1ec6d106d019d525a92d","commits":[{"sha":"27afbedfe111a6438fad02476ff174d9b320b55c","author":{"name":"xvzcf","email":"0d09a926d00eb6e4de1be873a121117412a307d0@users.noreply.github.com"},"message":"One time trigger of downstream jobs.","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/27afbedfe111a6438fad02476ff174d9b320b55c"}]},"public":true,"created_at":"2021-06-21T15:20:44Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16863692881","type":"PushEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"push_id":7370404594,"size":2,"distinct_size":2,"ref":"refs/heads/cci-fix","head":"0f52f2f5be6e5cdd13b185ae9f9b38ce7b92c14d","before":"27afbedfe111a6438fad02476ff174d9b320b55c","commits":[{"sha":"192be2885a658899f7b3c038dc7bfad07fdffb1b","author":{"name":"xvzcf","email":"0d09a926d00eb6e4de1be873a121117412a307d0@users.noreply.github.com"},"message":"YAML curveballs.","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/192be2885a658899f7b3c038dc7bfad07fdffb1b"},{"sha":"0f52f2f5be6e5cdd13b185ae9f9b38ce7b92c14d","author":{"name":"xvzcf","email":"0d09a926d00eb6e4de1be873a121117412a307d0@users.noreply.github.com"},"message":"Temporary","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/0f52f2f5be6e5cdd13b185ae9f9b38ce7b92c14d"}]},"public":true,"created_at":"2021-06-21T15:51:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16863876423","type":"PushEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"push_id":7370492160,"size":1,"distinct_size":1,"ref":"refs/heads/cci-fix","head":"c16994a70214efa0fbedc49124a6ca7ad87bf127","before":"0f52f2f5be6e5cdd13b185ae9f9b38ce7b92c14d","commits":[{"sha":"c16994a70214efa0fbedc49124a6ca7ad87bf127","author":{"name":"xvzcf","email":"0d09a926d00eb6e4de1be873a121117412a307d0@users.noreply.github.com"},"message":"Fixed downstream triggering bug in CircleCI config and also refactored the config.yml","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/c16994a70214efa0fbedc49124a6ca7ad87bf127"}]},"public":true,"created_at":"2021-06-21T16:03:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16864224426","type":"PushEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"push_id":7370655704,"size":1,"distinct_size":1,"ref":"refs/heads/cci-fix","head":"a7add4a0ab1e706fcc3137b6ce40acc32764f43c","before":"c16994a70214efa0fbedc49124a6ca7ad87bf127","commits":[{"sha":"a7add4a0ab1e706fcc3137b6ce40acc32764f43c","author":{"name":"xvzcf","email":"0d09a926d00eb6e4de1be873a121117412a307d0@users.noreply.github.com"},"message":"Trigger jobs on OQS-v8 branch of OpenSSH.","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/a7add4a0ab1e706fcc3137b6ce40acc32764f43c"}]},"public":true,"created_at":"2021-06-21T16:28:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16865221643","type":"PushEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"push_id":7371131162,"size":34,"distinct_size":9,"ref":"refs/heads/new-datasheets","head":"e016eeff2752916016d4fa48e1c5051a1314a1a7","before":"7bc86a780adfc6bab12e5c585935e76009b91188","commits":[{"sha":"b1d07278d1b7d6304eb29080729680405b801c67","author":{"name":"Christian Paquin","email":"5e354fbc60a50a4914bb55be34107b73e39fe98c@microsoft.com"},"message":"SIKE March 2021 bug fix (#981)\n\n* SIKE March 2021 bug fix\r\n\r\n* Reverted typo.","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/b1d07278d1b7d6304eb29080729680405b801c67"},{"sha":"8f8bb44c2fb8ce4b65aca2889ca2b8c11861f2cb","author":{"name":"Michael Baentsch","email":"59bd0a3ff43b32849b319e645d4798d8a5d1e889@baentsch.ch"},"message":"output CPU feature CT/RT distinction (#984)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/8f8bb44c2fb8ce4b65aca2889ca2b8c11861f2cb"},{"sha":"1923b82a3bee42a72c4fdedf2023896007813c91","author":{"name":"Thom Wiggers","email":"4bfd49cd9cbd72c733e8f05c2ba38bc8d87a72f1@users.noreply.github.com"},"message":"Test without alignment (#986)\n\n* Fix potential NULL dereference in fix_test_kem\r\n\r\n* Test without aligned pk, sk\r\n\r\nThis changes the test_kem.c functions like those in PQClean:\r\n* also prefix magic bytes for checking for out-of-bounds access\r\n* use odd numbers for breaking alignment\r\n\r\nIncludes #985\r\n\r\n* Fix style","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/1923b82a3bee42a72c4fdedf2023896007813c91"},{"sha":"8ae15e6a88e4d2479f0834ca9e161ad1e68b8f22","author":{"name":"Sofía Celi","email":"7b30dc170a390730f3753c772dc45ddb2a2df056@users.noreply.github.com"},"message":"astyle is needed to be installed on MacOS for run_tests to succeed (#991)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/8ae15e6a88e4d2479f0834ca9e161ad1e68b8f22"},{"sha":"9e2044ff2da61510f88fff403485b4290e6b458c","author":{"name":"John Schanck","email":"a48892d6e1c225014bc6a01fc59006b16d3c40da@uwaterloo.ca"},"message":"Pull latest HQC-192 from PQClean (#992)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/9e2044ff2da61510f88fff403485b4290e6b458c"},{"sha":"8981b7f33749abb027e9fe907c2f0e811c5c9048","author":{"name":"John Schanck","email":"a48892d6e1c225014bc6a01fc59006b16d3c40da@uwaterloo.ca"},"message":"tests/constant_time: SIKE issues are resolved (#987)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/8981b7f33749abb027e9fe907c2f0e811c5c9048"},{"sha":"83af71078bae3a6e4ba4a5c3a8ed4f0099faeb21","author":{"name":"John Schanck","email":"a48892d6e1c225014bc6a01fc59006b16d3c40da@uwaterloo.ca"},"message":"Add canaries around malloc'd regions in test_sig (#993)\n\n* test_sig: Add canaries around malloc'd regions\r\n\r\n* test_sig/kem: disable canary checks in test_constant_time\r\n\r\n* test_kem: test canaries after testing malformed ciphertext","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/83af71078bae3a6e4ba4a5c3a8ed4f0099faeb21"},{"sha":"1b25f45f352122d4e4c00bddac4ec5f5b649dd2b","author":{"name":"John Schanck","email":"a48892d6e1c225014bc6a01fc59006b16d3c40da@uwaterloo.ca"},"message":"tests/constant_time: update passes file for AVX2 impl of HQC [skip ci] (#994)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/1b25f45f352122d4e4c00bddac4ec5f5b649dd2b"},{"sha":"e4568033cc5a9b8ac603bff1be0c730bd59b463e","author":{"name":"Michael Baentsch","email":"59bd0a3ff43b32849b319e645d4798d8a5d1e889@baentsch.ch"},"message":"documentation consolidation (#998)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/e4568033cc5a9b8ac603bff1be0c730bd59b463e"},{"sha":"f42b8b0033f23b242336dfaf2eb397b9b5f94bd9","author":{"name":"Michael Baentsch","email":"59bd0a3ff43b32849b319e645d4798d8a5d1e889@baentsch.ch"},"message":"change MSVC compile opts to openssl integration (#996)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/f42b8b0033f23b242336dfaf2eb397b9b5f94bd9"},{"sha":"530d7059b27946db8941a8c8d012740a8d03f9c2","author":{"name":"John Schanck","email":"a48892d6e1c225014bc6a01fc59006b16d3c40da@uwaterloo.ca"},"message":"sha3: respect OQS_ENABLE_SHA3_xkcp_low_avx2=OFF in CMakeLists.txt (#999)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/530d7059b27946db8941a8c8d012740a8d03f9c2"},{"sha":"92e6418b356eed18f3dce1e42edc5ca8cfed56c2","author":{"name":"Michael Baentsch","email":"59bd0a3ff43b32849b319e645d4798d8a5d1e889@baentsch.ch"},"message":"BIKE and Picnic enablement for cygwin (#1001)\n\n* BIKE and Picnic enablement for cygwin\r\n\r\n* no doxygen support for cygwin","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/92e6418b356eed18f3dce1e42edc5ca8cfed56c2"},{"sha":"3a56677a935e52b6b76edaa8f9312f0ba46a0398","author":{"name":"Michael Baentsch","email":"59bd0a3ff43b32849b319e645d4798d8a5d1e889@baentsch.ch"},"message":"fix for #865 (#1002)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/3a56677a935e52b6b76edaa8f9312f0ba46a0398"},{"sha":"35489ee82319cdbba19e22e01bbc9dffb068e27c","author":{"name":"Michael Baentsch","email":"59bd0a3ff43b32849b319e645d4798d8a5d1e889@baentsch.ch"},"message":"ARM64 via CCI machine (#1010)\n\n* activating ARM64 machine use for CCI","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/35489ee82319cdbba19e22e01bbc9dffb068e27c"},{"sha":"63ffa9854af532f6245c418ed47f2e95a2872598","author":{"name":"Christian Paquin","email":"5e354fbc60a50a4914bb55be34107b73e39fe98c@microsoft.com"},"message":"Integrated sike compressed elligator fix. (#1008)\n\n* Integrated sike compressed elligator fix.\r\n\r\n* Updated SIKE's github commit ref","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/63ffa9854af532f6245c418ed47f2e95a2872598"},{"sha":"8d7e8f5579eedb74d05a27965546e9b6b52ce9c3","author":{"name":"Douglas Stebila","email":"b00bf5c152be32a8a3632a9751d43d05edde6c4e@users.noreply.github.com"},"message":"Consistent type in KEM decaps API (#1004) (#1005)\n\n* Consistent type in KEM decaps API (#1004)\r\n\r\n* uint8_t in non-PQClean KEM APIs\r\n\r\n* uint8_t in PQCleam KEM APIs\r\n\r\n* Additional uint8_t tweaks in PQClean KEM APIs\r\n\r\nCo-authored-by: Sebastian <sebastianv89@users.noreply.github.com>","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/8d7e8f5579eedb74d05a27965546e9b6b52ce9c3"},{"sha":"bd239778187913e0506c22f6060ee4cf7427729a","author":{"name":"John Schanck","email":"a48892d6e1c225014bc6a01fc59006b16d3c40da@uwaterloo.ca"},"message":"tests/constant_time: update SIKE suppression files [skip ci] (#1009)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/bd239778187913e0506c22f6060ee4cf7427729a"},{"sha":"f8e339dcae8432b41e60621d25a4a3596bd14a14","author":{"name":"Douglas Stebila","email":"b00bf5c152be32a8a3632a9751d43d05edde6c4e@uwaterloo.ca"},"message":"liboqs 0.6.0 RC2","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/f8e339dcae8432b41e60621d25a4a3596bd14a14"},{"sha":"2e7f65752bcf96a885b03ff141a5831e45b3b536","author":{"name":"Douglas Stebila","email":"b00bf5c152be32a8a3632a9751d43d05edde6c4e@uwaterloo.ca"},"message":"Add astyle to Ubuntu install instructions [skip ci]","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/2e7f65752bcf96a885b03ff141a5831e45b3b536"},{"sha":"70eae32dd55a5253beb4154aa669b5a79e2d211b","author":{"name":"Douglas Stebila","email":"b00bf5c152be32a8a3632a9751d43d05edde6c4e@users.noreply.github.com"},"message":"Quick fix to Kyber768-90s NIST level (#1014)","distinct":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs/commits/70eae32dd55a5253beb4154aa669b5a79e2d211b"}]},"public":true,"created_at":"2021-06-21T17:47:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
