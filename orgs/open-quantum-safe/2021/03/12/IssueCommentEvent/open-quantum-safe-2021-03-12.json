{"id":"15512743666","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/937","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/937/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/937/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/937/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/937","id":827905044,"node_id":"MDU6SXNzdWU4Mjc5MDUwNDQ=","number":937,"title":"Update SPHINCS+ to R3 specification","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-03-10T15:22:21Z","updated_at":"2021-03-12T02:26:20Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"It flew under the radar for quite a while, but it's recently been pointed out to us that the parameters for SPHINCS+ had been updated back in september.\r\n\r\nThere's a PR in PQClean that will hopefully be merged soon (https://github.com/PQClean/PQClean/pull/377).  Once that's merged, it'll have to be updated here.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797189464","html_url":"https://github.com/open-quantum-safe/liboqs/issues/937#issuecomment-797189464","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/937","id":797189464,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzE4OTQ2NA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T02:26:20Z","updated_at":"2021-03-12T02:26:20Z","author_association":"MEMBER","body":"It's been merged into PQClean, so work can start on a liboqs PR.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T02:26:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15512835837","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/922","id":813619057,"node_id":"MDExOlB1bGxSZXF1ZXN0NTc3NzM3NjQ3","number":922,"title":"Refactor SHA3 implementations and improve API","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/13","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13/labels","id":6475880,"node_id":"MDk6TWlsZXN0b25lNjQ3NTg4MA==","number":13,"title":"0.5.1 RC1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":6,"closed_issues":3,"state":"open","created_at":"2021-02-24T18:42:42Z","updated_at":"2021-03-12T02:31:27Z","due_on":"2021-03-19T07:00:00Z","closed_at":null},"comments":1,"created_at":"2021-02-22T15:44:33Z","updated_at":"2021-03-12T02:39:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/922","html_url":"https://github.com/open-quantum-safe/liboqs/pull/922","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/922.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/922.patch"},"body":"This is an attempt to restructure our sha3 api to meet the needs of the remaining schemes and avoid code duplication.\r\n\r\nChanges:\r\n* Added a complete four-way parallel shake interface made public through sha3x4.h.  This interface does not require AVX2 instructions. It accepts any implementation of \"Keccak1600P-times4\" from the XKCP low-level interface, and it quietly falls back to a serial implementation using whatever (possibly platform optimized) implementation of Keccak1600P is available. A serial implementation is also used when OpenSSL is enabled.\r\n* Scripted the importing/patching of implementations of the low-level XKCP interface. (scripts will be submitted in a followup commit or pr). The implementations are made available in src/common/sha3/xkcp_low and a suitable implementation is chosen at compile time by src/common/sha3/xkcp_low/CMakeLists.txt.\r\n* Replaced fips202.c, sha3_c.c, and sha3_avx.c with xkcp_sha3.c, which implements sha3.h using the low-level XKCP interface.\r\n* Replaced sha3_x4.c, and sha3x4_avx2.c with xkcp_sha3x4.c, which implements sha3x4.h using the low-level XKCP interface.\r\n* Added ossl_sha3.c and ossl_sha3x4.c which implement sha3.h and sha3x4, including the incremental APIs (#502), using openssl.\r\n* Removed (unused) cshake functions.\r\n* Removed non-incremental shake functions like OQS_SHA3_shake128_absorb, but keep simple shake functions like OQS_SHA3_shake128.\r\n* Added \"sha3_*_ctx_reset\" which re-initializes an already allocated context.\r\n* Changed OQS_SHA3_sha3_*_inc_finalize so that it does not free the context. This allows you to re-use a context with \"reset\".\r\n* Removed Picnic's duplicate sha3 code\r\n* Added a patching mechanism to copy_from_upstream\r\n* Removed SPHINCS's duplicate sha3 code (with copy_from_upstream patch)\r\n* Removed Kyber's duplicate sha3 code (with copy_from_upstream patch)\r\n* Removed Dilithium's duplicate sha3 code (with copy_from_upstream patch)\r\n\r\nIssues:\r\n* OpenSSL does not implement a proper \"squeeze\" function. There's work in progress to fix this (https://github.com/openssl/openssl/pull/7921), but we should not expect it to be available anytime soon. The implementation of the incremental API that I've written is quadratic in the total output length if O(1) bytes are squeezed at a time. This leads to a severe loss of performance for Falcon, so this PR currently turns off OQS_USE_SHA3_OPENSSL even when OQS_USE_OPENSSL is on.\r\n\r\nTODO:\r\n* Import optimized Keccak routines for other architectures and select appropriately at compile time. There are several ARM implementations available. There's also AVX512.\r\n* (Future work) Compile multiple Keccak implementations and select an appropriate one at runtime for \"portable\" builds. \r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797193675","html_url":"https://github.com/open-quantum-safe/liboqs/pull/922#issuecomment-797193675","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922","id":797193675,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzE5MzY3NQ==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T02:39:00Z","updated_at":"2021-03-12T02:39:00Z","author_association":"MEMBER","body":"I'm a little worried about the patching mechanism and the size of the patches.  Suppose there are changes to the upstream implementations that invalidate the patches.  How would we regenerate patches in the future if need be?  \r\n\r\nAnd perhaps to ask a question before that: why were these patches needed in the first place?  It looks like the main reason is to change something to do with the hash context object allocation/releasing.  Is there something about OQS's architecture that is so different from PQClean's that we want to manage hash context objects different?","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T02:39:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15514087389","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/922","id":813619057,"node_id":"MDExOlB1bGxSZXF1ZXN0NTc3NzM3NjQ3","number":922,"title":"Refactor SHA3 implementations and improve API","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/13","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13/labels","id":6475880,"node_id":"MDk6TWlsZXN0b25lNjQ3NTg4MA==","number":13,"title":"0.5.1 RC1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":6,"closed_issues":3,"state":"open","created_at":"2021-02-24T18:42:42Z","updated_at":"2021-03-12T02:31:27Z","due_on":"2021-03-19T07:00:00Z","closed_at":null},"comments":2,"created_at":"2021-02-22T15:44:33Z","updated_at":"2021-03-12T05:42:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/922","html_url":"https://github.com/open-quantum-safe/liboqs/pull/922","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/922.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/922.patch"},"body":"This is an attempt to restructure our sha3 api to meet the needs of the remaining schemes and avoid code duplication.\r\n\r\nChanges:\r\n* Added a complete four-way parallel shake interface made public through sha3x4.h.  This interface does not require AVX2 instructions. It accepts any implementation of \"Keccak1600P-times4\" from the XKCP low-level interface, and it quietly falls back to a serial implementation using whatever (possibly platform optimized) implementation of Keccak1600P is available. A serial implementation is also used when OpenSSL is enabled.\r\n* Scripted the importing/patching of implementations of the low-level XKCP interface. (scripts will be submitted in a followup commit or pr). The implementations are made available in src/common/sha3/xkcp_low and a suitable implementation is chosen at compile time by src/common/sha3/xkcp_low/CMakeLists.txt.\r\n* Replaced fips202.c, sha3_c.c, and sha3_avx.c with xkcp_sha3.c, which implements sha3.h using the low-level XKCP interface.\r\n* Replaced sha3_x4.c, and sha3x4_avx2.c with xkcp_sha3x4.c, which implements sha3x4.h using the low-level XKCP interface.\r\n* Added ossl_sha3.c and ossl_sha3x4.c which implement sha3.h and sha3x4, including the incremental APIs (#502), using openssl.\r\n* Removed (unused) cshake functions.\r\n* Removed non-incremental shake functions like OQS_SHA3_shake128_absorb, but keep simple shake functions like OQS_SHA3_shake128.\r\n* Added \"sha3_*_ctx_reset\" which re-initializes an already allocated context.\r\n* Changed OQS_SHA3_sha3_*_inc_finalize so that it does not free the context. This allows you to re-use a context with \"reset\".\r\n* Removed Picnic's duplicate sha3 code\r\n* Added a patching mechanism to copy_from_upstream\r\n* Removed SPHINCS's duplicate sha3 code (with copy_from_upstream patch)\r\n* Removed Kyber's duplicate sha3 code (with copy_from_upstream patch)\r\n* Removed Dilithium's duplicate sha3 code (with copy_from_upstream patch)\r\n\r\nIssues:\r\n* OpenSSL does not implement a proper \"squeeze\" function. There's work in progress to fix this (https://github.com/openssl/openssl/pull/7921), but we should not expect it to be available anytime soon. The implementation of the incremental API that I've written is quadratic in the total output length if O(1) bytes are squeezed at a time. This leads to a severe loss of performance for Falcon, so this PR currently turns off OQS_USE_SHA3_OPENSSL even when OQS_USE_OPENSSL is on.\r\n\r\nTODO:\r\n* Import optimized Keccak routines for other architectures and select appropriately at compile time. There are several ARM implementations available. There's also AVX512.\r\n* (Future work) Compile multiple Keccak implementations and select an appropriate one at runtime for \"portable\" builds. \r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797249490","html_url":"https://github.com/open-quantum-safe/liboqs/pull/922#issuecomment-797249490","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922","id":797249490,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzI0OTQ5MA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T05:42:06Z","updated_at":"2021-03-12T05:42:06Z","author_association":"MEMBER","body":">  Suppose there are changes to the upstream implementations that invalidate the patches. How would we regenerate patches in the future if need be?\r\n\r\nI'd echo this concern. Wouldn't it be better to provide the SHA3 API (and prove its value for one implementation) and then let the upstreams use/cater to it (and then just pick that code up) - saving us the hassle/responsibility (to keep patching the implementations)? Should the upstreams not pick up the API wouldn't we then not know it's not quite right?","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T05:42:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15516400060","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/938","id":829847263,"node_id":"MDExOlB1bGxSZXF1ZXN0NTkxNDQ4MDc0","number":938,"title":"Fix small error in comments of kem.h and sig.h","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-03-12T07:44:24Z","updated_at":"2021-03-12T09:32:04Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/938","html_url":"https://github.com/open-quantum-safe/liboqs/pull/938","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/938.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/938.patch"},"body":"They made a reference to example files that had been moved at some point.\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Please answer the following questions to help manage version and changes across projects. -->\n\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\n\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797363386","html_url":"https://github.com/open-quantum-safe/liboqs/pull/938#issuecomment-797363386","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938","id":797363386,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzM2MzM4Ng==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T09:32:04Z","updated_at":"2021-03-12T09:32:04Z","author_association":"MEMBER","body":"Yeah I'd of course realised that as soon as the commit had been pushed — I wasn't sure if fixing it would just leave those builds running anyway...","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T09:32:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15516823853","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/938","id":829847263,"node_id":"MDExOlB1bGxSZXF1ZXN0NTkxNDQ4MDc0","number":938,"title":"Fix small error in comments of kem.h and sig.h","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-03-12T07:44:24Z","updated_at":"2021-03-12T10:04:47Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/938","html_url":"https://github.com/open-quantum-safe/liboqs/pull/938","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/938.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/938.patch"},"body":"They made a reference to example files that had been moved at some point.\n<!-- Please give a brief explanation of the purpose of this pull request. -->\n\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\n\n<!-- Please answer the following questions to help manage version and changes across projects. -->\n\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\n\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797381643","html_url":"https://github.com/open-quantum-safe/liboqs/pull/938#issuecomment-797381643","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/938","id":797381643,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzM4MTY0Mw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T10:04:47Z","updated_at":"2021-03-12T10:04:47Z","author_association":"MEMBER","body":"> I wasn't sure if fixing it would just leave those builds running anyway...\r\n\r\nIt would have left them running (you can tell I fell into that myself before :). Even a `commit --amend` didn't help.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T10:04:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15520715089","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/940","id":830180482,"node_id":"MDU6SXNzdWU4MzAxODA0ODI=","number":940,"title":"Current master - McEliece AVX2 is broken","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-03-12T14:39:09Z","updated_at":"2021-03-12T15:11:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"MacOS 10.15.7, Xcode-12.4, current master.\r\n```\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/ur20980/src/liboqs/build\r\n[1272/2236] Building ASM object src/kem/classic_mceliece/CMakeFile...ic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.\r\nFAILED: src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o \r\n/opt/local/bin/clang  -Iinclude -I../src/kem/classic_mceliece/pqclean_mceliece8192128_avx -I../src/common/pqclean_shims -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.1.sdk -mmacosx-version-min=10.15 -fPIC -Werror -Wall -Wextra -Wpedantic -Wno-unused-command-line-argument -O3 -fomit-frame-pointer -mavx2 -mpopcnt -Wno-language-extension-token -MD -MT src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o -MF src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o.d -o src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o -c ../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:19:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK0_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:20:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK0_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:21:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK1_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:22:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK1_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:23:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK2_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:24:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK2_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:25:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK3_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:26:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK3_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:27:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK4_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:28:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK4_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:29:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK5_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:30:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK5_1\r\n^\r\n[1293/2236] Building C object src/kem/sike/CMakeFiles/sike.dir/external/P610/P610_compressed.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\nHow do I configure the build to **exclude** algorithms?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797551624","html_url":"https://github.com/open-quantum-safe/liboqs/issues/940#issuecomment-797551624","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940","id":797551624,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzU1MTYyNA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T15:11:36Z","updated_at":"2021-03-12T15:11:36Z","author_association":"MEMBER","body":"Weird.  \r\n\r\nTo disable it temporarily, you can use `cmake -DOQS_ENABLE_KEM_CLASSIC_MCELIECE=OFF` as per https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs.\r\n\r\n@jschanck Any idea what might have gone wrong in #932?","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T15:11:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15521137476","type":"IssueCommentEvent","actor":{"id":5923577,"login":"mouse07410","display_login":"mouse07410","gravatar_id":"","url":"https://api.github.com/users/mouse07410","avatar_url":"https://avatars.githubusercontent.com/u/5923577?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/940","id":830180482,"node_id":"MDU6SXNzdWU4MzAxODA0ODI=","number":940,"title":"Current master - McEliece AVX2 is broken","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-03-12T14:39:09Z","updated_at":"2021-03-12T15:41:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"MacOS 10.15.7, Xcode-12.4, current master.\r\n```\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/ur20980/src/liboqs/build\r\n[1272/2236] Building ASM object src/kem/classic_mceliece/CMakeFile...ic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.\r\nFAILED: src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o \r\n/opt/local/bin/clang  -Iinclude -I../src/kem/classic_mceliece/pqclean_mceliece8192128_avx -I../src/common/pqclean_shims -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.1.sdk -mmacosx-version-min=10.15 -fPIC -Werror -Wall -Wextra -Wpedantic -Wno-unused-command-line-argument -O3 -fomit-frame-pointer -mavx2 -mpopcnt -Wno-language-extension-token -MD -MT src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o -MF src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o.d -o src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o -c ../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:19:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK0_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:20:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK0_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:21:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK1_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:22:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK1_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:23:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK2_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:24:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK2_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:25:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK3_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:26:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK3_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:27:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK4_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:28:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK4_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:29:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK5_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:30:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK5_1\r\n^\r\n[1293/2236] Building C object src/kem/sike/CMakeFiles/sike.dir/external/P610/P610_compressed.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\nHow do I configure the build to **exclude** algorithms?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797570703","html_url":"https://github.com/open-quantum-safe/liboqs/issues/940#issuecomment-797570703","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940","id":797570703,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzU3MDcwMw==","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T15:41:29Z","updated_at":"2021-03-12T15:41:29Z","author_association":"NONE","body":"> To disable it temporarily, you can use `cmake -DOQS_ENABLE_KEM_CLASSIC_MCELIECE=OFF`\r\n\r\nThank you! As I don't really need McEliece, this will work for me.\r\n\r\nAlso, when I add to `src/kem/classic_mceliece/CMakeLists.txt` file the following code (to attempt compiling `.S` files with YASM instead of Clang):\r\n```cmake\r\n# Locate YASM executable first\r\nfind_program(YASM_EXE NAMES yasm)\r\nif(YASM_EXE_NOTFOUND)\r\n   message(\"YASM executable NOT found!\")\r\n   message(\"YASM_EXE value is ${YASM_EXE}\")\r\n   message(FATAL_ERROR \"Cannot compile AES-NI assembly code without YASM - aborting...\")\r\nelse(YASM_EXE_NOTFOUND)\r\n   message(\"-- Found Yasm executable at ${YASM_EXE}\")\r\n   set(CMAKE_ASM_COMPILER ${YASM_EXE})\r\nendif(YASM_EXE_NOTFOUND)\r\n\r\nset(CMAKE_ASM_COMPILER \"${YASM_EXE}\")\r\nmessage(\"-- Setting CMAKE_ASM_COMPILER for McEliece to ${YASM_EXE} for ${ARCH} build\")\r\nenable_language(ASM)\r\n\r\n# YASM flags for Linux and MacOS differ - accommodate for that\r\nif (APPLE)\r\n   set(ASM_OPTIONS \"-m amd64 -f macho${ARCH_BITS} -p gas -X gnu\")\r\nelse (APPLE)       \r\n   set(ASM_OPTIONS \"-D__linux__ -m amd64 -f elf${ARCH_BITS} -p gas -X gnu -g dwarf2\")\r\nendif (APPLE)\r\nset(CMAKE_ASM_FLAGS \"${ASM_OPTIONS}\")\r\n```\r\n\r\nthe following command gets into infinite loop with the following repeating output:\r\n```\r\nenv RUN_TESTS_PARALLEL_UPPER=FALSE cmake -GNinja .. -DOQS_USE_OPENSSL=ON -DOQS_USE_CPU_EXTENSIONS=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/opt/local -DOQS_KEM_DEFAULT=\"OQS_KEM_alg_ntru_hps4096821\" -DOQS_SIG_DEFAULT=\"OQS_SIG_alg_falcon_1024\" -DCMAKE_BUILD_TYPE=Release\r\n\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Found Yasm executable at /opt/local/bin/yasm\r\n-- Setting CMAKE_ASM_COMPILER for McEliece to /opt/local/bin/yasm for  build\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\nYou have changed variables that require your cache to be deleted.\r\nConfigure will be re-run and you may have to reset some variables.\r\nThe following variables have changed:\r\nCMAKE_ASM_COMPILER= /opt/local/bin/clang\r\n\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Found Yasm executable at /opt/local/bin/yasm\r\n-- Setting CMAKE_ASM_COMPILER for McEliece to /opt/local/bin/yasm for  build\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\nYou have changed variables that require your cache to be deleted.\r\nConfigure will be re-run and you may have to reset some variables.\r\nThe following variables have changed:\r\nCMAKE_ASM_COMPILER= /opt/local/bin/clang\r\n\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Found Yasm executable at /opt/local/bin/yasm\r\n-- Setting CMAKE_ASM_COMPILER for McEliece to /opt/local/bin/yasm for  build\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\nYou have changed variables that require your cache to be deleted.\r\nConfigure will be re-run and you may have to reset some variables.\r\nThe following variables have changed:\r\nCMAKE_ASM_COMPILER= /opt/local/bin/clang\r\n\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Found Yasm executable at /opt/local/bin/yasm\r\n-- Setting CMAKE_ASM_COMPILER for McEliece to /opt/local/bin/yasm for  build\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\nYou have changed variables that require your cache to be deleted.\r\nConfigure will be re-run and you may have to reset some variables.\r\nThe following variables have changed:\r\nCMAKE_ASM_COMPILER= /opt/local/bin/clang\r\n\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Found Yasm executable at /opt/local/bin/yasm\r\n-- Setting CMAKE_ASM_COMPILER for McEliece to /opt/local/bin/yasm for  build\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\nYou have changed variables that require your cache to be deleted.\r\nConfigure will be re-run and you may have to reset some variables.\r\nThe following variables have changed:\r\nCMAKE_ASM_COMPILER= /opt/local/bin/clang\r\n\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Found Yasm executable at /opt/local/bin/yasm\r\n-- Setting CMAKE_ASM_COMPILER for McEliece to /opt/local/bin/yasm for  build\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\nYou have changed variables that require your cache to be deleted.\r\nConfigure will be re-run and you may have to reset some variables.\r\nThe following variables have changed:\r\nCMAKE_ASM_COMPILER= /opt/local/bin/clang\r\n\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Found Yasm executable at /opt/local/bin/yasm\r\n-- Setting CMAKE_ASM_COMPILER for McEliece to /opt/local/bin/yasm for  build\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\nYou have changed variables that require your cache to be deleted.\r\nConfigure will be re-run and you may have to reset some variables.\r\nThe following variables have changed:\r\nCMAKE_ASM_COMPILER= /opt/local/bin/clang\r\n\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Found Yasm executable at /opt/local/bin/yasm\r\n-- Setting CMAKE_ASM_COMPILER for McEliece to /opt/local/bin/yasm for  build\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\nYou have changed variables that require your cache to be deleted.\r\nConfigure will be re-run and you may have to reset some variables.\r\nThe following variables have changed:\r\nCMAKE_ASM_COMPILER= /opt/local/bin/clang\r\n\r\n.  .  .  .  .\r\n```\r\n\r\nIn short, McEliece and it's `CMakeLists.txt` appear to be screwed up.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T15:41:30Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15521538461","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939","id":829953192,"node_id":"MDExOlB1bGxSZXF1ZXN0NTkxNTM2NDc4","number":939,"title":"guard Frodo AVX2 code if CPU_EXTENSIONS not requested","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-03-12T10:01:33Z","updated_at":"2021-03-12T16:10:40Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/939","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/939.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/939.patch"},"body":"#927 breaks builds when [OQS_USE_CPU_EXTENSIONS=OFF](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs#oqs_use_cpu_extensions): See e.g. [here](https://app.circleci.com/pipelines/github/open-quantum-safe/oqs-demos/338/workflows/84da16f9-8f90-446e-b371-25d7e6d88258/jobs/413). This PR is one way to fix it. Another alternative is to not set `OQS_PORTABLE_X86_64_BUILD` if `OQS_USE_CPU_EXTENSIONS=OFF`: Any preference, @jschanck ?\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797590371","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939#issuecomment-797590371","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939","id":797590371,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzU5MDM3MQ==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T16:10:40Z","updated_at":"2021-03-12T16:10:40Z","author_association":"CONTRIBUTOR","body":"The issue is\r\nhttps://github.com/open-quantum-safe/liboqs/blob/e116748c50ef3adbbf08f4bc1ad0c18ab8f7b7df/src/common/common.c#L13\r\n\r\nSince OQS_PORTABLE_BUILDs are the only builds that use runtime CPU feature detection, this should be\r\n\r\n```c\r\n#if defined(OQS_PORTABLE_BUILD)\r\n```\r\n\r\nThe only use I see for OQS_USE_CPU_EXTENSIONS is the combination `OQS_PORTABLE_BUILD=OFF` + `OQS_USE_CPU_EXTENSIONS=OFF`, which allows one to build for the local machine while disabling the use of the local machine's CPU extensions.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T16:10:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15521945584","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939","id":829953192,"node_id":"MDExOlB1bGxSZXF1ZXN0NTkxNTM2NDc4","number":939,"title":"guard Frodo AVX2 code if CPU_EXTENSIONS not requested","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-03-12T10:01:33Z","updated_at":"2021-03-12T16:41:28Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/939","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/939.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/939.patch"},"body":"#927 breaks builds when [OQS_USE_CPU_EXTENSIONS=OFF](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs#oqs_use_cpu_extensions): See e.g. [here](https://app.circleci.com/pipelines/github/open-quantum-safe/oqs-demos/338/workflows/84da16f9-8f90-446e-b371-25d7e6d88258/jobs/413). This PR is one way to fix it. Another alternative is to not set `OQS_PORTABLE_X86_64_BUILD` if `OQS_USE_CPU_EXTENSIONS=OFF`: Any preference, @jschanck ?\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797610449","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939#issuecomment-797610449","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939","id":797610449,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzYxMDQ0OQ==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T16:41:28Z","updated_at":"2021-03-12T16:41:28Z","author_association":"MEMBER","body":"> The issue is\r\n> \r\n> https://github.com/open-quantum-safe/liboqs/blob/e116748c50ef3adbbf08f4bc1ad0c18ab8f7b7df/src/common/common.c#L13\r\n> \r\n> Since OQS_PORTABLE_BUILDs are the only builds that use runtime CPU feature detection, this should be\r\n> \r\n> ```c\r\n> #if defined(OQS_PORTABLE_BUILD)\r\n> ```\r\n> \r\n> The only use I see for OQS_USE_CPU_EXTENSIONS is the combination `OQS_PORTABLE_BUILD=OFF` + `OQS_USE_CPU_EXTENSIONS=OFF`, which allows one to build for the local machine while disabling the use of the local machine's CPU extensions.\r\n\r\nAgreed, and the `OQS_PORTABLE_BUILD=OFF + OQS_USE_CPU_EXTENSIONS=OFF` seems like a marginal use case to me.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T16:41:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15521984662","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939","id":829953192,"node_id":"MDExOlB1bGxSZXF1ZXN0NTkxNTM2NDc4","number":939,"title":"guard Frodo AVX2 code if CPU_EXTENSIONS not requested","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-03-12T10:01:33Z","updated_at":"2021-03-12T16:44:26Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/939","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/939.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/939.patch"},"body":"#927 breaks builds when [OQS_USE_CPU_EXTENSIONS=OFF](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs#oqs_use_cpu_extensions): See e.g. [here](https://app.circleci.com/pipelines/github/open-quantum-safe/oqs-demos/338/workflows/84da16f9-8f90-446e-b371-25d7e6d88258/jobs/413). This PR is one way to fix it. Another alternative is to not set `OQS_PORTABLE_X86_64_BUILD` if `OQS_USE_CPU_EXTENSIONS=OFF`: Any preference, @jschanck ?\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797612267","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939#issuecomment-797612267","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939","id":797612267,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzYxMjI2Nw==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T16:44:26Z","updated_at":"2021-03-12T16:44:26Z","author_association":"CONTRIBUTOR","body":"I will submit a separate PR with a potential fix.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T16:44:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15522389759","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939","id":829953192,"node_id":"MDExOlB1bGxSZXF1ZXN0NTkxNTM2NDc4","number":939,"title":"guard Frodo AVX2 code if CPU_EXTENSIONS not requested","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-03-12T10:01:33Z","updated_at":"2021-03-12T17:16:12Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/939","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/939.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/939.patch"},"body":"#927 breaks builds when [OQS_USE_CPU_EXTENSIONS=OFF](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs#oqs_use_cpu_extensions): See e.g. [here](https://app.circleci.com/pipelines/github/open-quantum-safe/oqs-demos/338/workflows/84da16f9-8f90-446e-b371-25d7e6d88258/jobs/413). This PR is one way to fix it. Another alternative is to not set `OQS_PORTABLE_X86_64_BUILD` if `OQS_USE_CPU_EXTENSIONS=OFF`: Any preference, @jschanck ?\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797633203","html_url":"https://github.com/open-quantum-safe/liboqs/pull/939#issuecomment-797633203","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/939","id":797633203,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NzYzMzIwMw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T17:16:12Z","updated_at":"2021-03-12T17:16:12Z","author_association":"MEMBER","body":"> Agreed, and the OQS_PORTABLE_BUILD=OFF + OQS_USE_CPU_EXTENSIONS=OFF seems like a marginal use case to me.\r\n\r\nAgreed. But that combination wasn't the case here. What I've been looking for in this case was a portable image without the need for/cost of CPU feature checks. And that --I thought-- `OQS_USE_CPU_EXTENSIONS=OFF` should yield.\r\n\r\nWhatever, I'll be looking forward to\r\n\r\n> I will submit a separate PR with a potential fix.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T17:16:12Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15525159110","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/941","id":830479259,"node_id":"MDExOlB1bGxSZXF1ZXN0NTkxOTg3NzEw","number":941,"title":"Fix OQS_PORTABLE_BUILD logic for upstream imports","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-03-12T21:20:00Z","updated_at":"2021-03-12T21:57:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/941","html_url":"https://github.com/open-quantum-safe/liboqs/pull/941","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/941.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/941.patch"},"body":"The first commit fixes the issue that @baentsch ran into in #939.\r\n\r\nThe second commit fixes the OQS_PORTABLE_BUILD logic for the schemes that are imported using copy_from_upstream. Previously you would only get functional runtime CPU feature detection if you compiled on a machine with every CPU feature.\r\n\r\nThe third commit is a temporary fix so that the AVX2 implementation of HQC will compile. Turns out we've never built it! Upstream META.yml wants a 'pclmulqdq' feature, but we call that feature 'pclmul'. The new OQS_PORTABLE_BUILD logic tries to build anyway and hits some compiler warnings. I'll open issues upstream.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797779040","html_url":"https://github.com/open-quantum-safe/liboqs/pull/941#issuecomment-797779040","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941","id":797779040,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Nzc3OTA0MA==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T21:57:22Z","updated_at":"2021-03-12T21:57:22Z","author_association":"CONTRIBUTOR","body":"Side effect of these changes is that we observed #940 in CI. The fix in 3637b73 appears to work.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T21:57:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15525317838","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/941","id":830479259,"node_id":"MDExOlB1bGxSZXF1ZXN0NTkxOTg3NzEw","number":941,"title":"Fix OQS_PORTABLE_BUILD logic for upstream imports","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-03-12T21:20:00Z","updated_at":"2021-03-12T22:14:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/941","html_url":"https://github.com/open-quantum-safe/liboqs/pull/941","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/941.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/941.patch"},"body":"The first commit fixes the issue that @baentsch ran into in #939.\r\n\r\nThe second commit fixes the OQS_PORTABLE_BUILD logic for the schemes that are imported using copy_from_upstream. Previously you would only get functional runtime CPU feature detection if you compiled on a machine with every CPU feature.\r\n\r\nThe third commit is a temporary fix so that the AVX2 implementation of HQC will compile. Turns out we've never built it! Upstream META.yml wants a 'pclmulqdq' feature, but we call that feature 'pclmul'. The new OQS_PORTABLE_BUILD logic tries to build anyway and hits some compiler warnings. I'll open issues upstream.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/797786918","html_url":"https://github.com/open-quantum-safe/liboqs/pull/941#issuecomment-797786918","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/941","id":797786918,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Nzc4NjkxOA==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-03-12T22:14:15Z","updated_at":"2021-03-12T22:14:15Z","author_association":"CONTRIBUTOR","body":"macOS is failing because the OQS_PORTABLE_BUILD logic for sha3 is broken on main. Not going to fix this, since main's sha3 is obsolete. This PR is on pause until #922 is merged.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-12T22:14:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
