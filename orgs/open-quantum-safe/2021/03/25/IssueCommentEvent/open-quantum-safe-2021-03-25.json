{"id":"15679907680","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/775","id":646321682,"node_id":"MDU6SXNzdWU2NDYzMjE2ODI=","number":775,"title":"When CPU_EXTENSIONS becomes supported in cross-compilation, update cross-compilation instructions to use it","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"},{"id":1876026231,"node_id":"MDU6TGFiZWwxODc2MDI2MjMx","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/future-work","name":"future-work","color":"cccccc","default":false,"description":"Will not be fixed in current release cycle"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-26T14:59:00Z","updated_at":"2021-03-25T01:38:09Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"CPU_EXTENSIONS currently causes a CMake error when configuring for cross-compilation. If and when it becomes capable of being used in cross-compilation, two sets of instructions need to be updated to remove the `-DOQS_USE_CPU_EXTENSIONS=OFF` directive currently present:\r\n\r\n1. In liboqs's README.md, undoing where it was added in #772.\r\n2. In OQS-OpenSSL's [cross-compilation wiki](https://github.com/open-quantum-safe/openssl/wiki/Cross-compiling-for-Windows-on-Linux).","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/806295381","html_url":"https://github.com/open-quantum-safe/liboqs/issues/775#issuecomment-806295381","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775","id":806295381,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjI5NTM4MQ==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-03-25T01:38:09Z","updated_at":"2021-03-25T01:38:09Z","author_association":"MEMBER","body":"@jschanck Do you think #942 brings us any closer to this one?","performed_via_github_app":null}},"public":true,"created_at":"2021-03-25T01:38:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15684333318","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/296","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/296/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/296/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/296/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/296","id":839763637,"node_id":"MDU6SXNzdWU4Mzk3NjM2Mzc=","number":296,"title":"KEMs, Hybrid KEMs and code points","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-03-24T14:09:54Z","updated_at":"2021-03-25T09:52:37Z","closed_at":"2021-03-25T09:52:37Z","author_association":"NONE","active_lock_reason":null,"body":"While working at adding hybrid KEMs to the OSSL3 provider, I ran into a few questions about the code points used for KEMs and hybrid KEMs in TLS. I open an issue here because it also affects interop with OSSL1.1.1.\r\n\r\n- Interop with previous-round algorithms\r\n\r\nLooking at the google sheets, some of the algorithm names still refer to round 2 variants:\r\nhttps://docs.google.com/spreadsheets/d/12YarzaNv3XQNLnvDsWLlRKwtZFhRrDdWf36YlzwrPeg/edit#gid=0\r\nIn the meanwhile, the algorithms were updated to r3 while keeping the same code points. \r\nI imagine that this can cause confusion, similar to https://github.com/open-quantum-safe/liboqs/issues/909, when trying to interop between different libraries or between different versions of OQS.\r\nDo we want to consider to update the code points after future algorithm updates?\r\n\r\n- Hybrid KEM code points with ECX (X25519, X448)\r\n\r\nI'm adding support for combining all OQS KEM with ECX and ECP curves in https://github.com/open-quantum-safe/oqs-provider/pull/16. The `generate.yml` file currently only defines code points for ECP-hybrids. Looking at https://tools.ietf.org/html/draft-ietf-tls-hybrid-design-01#section-3.1, the hybrid code points should fit in `0x2F00 .. 0x2FFF`. An option is to add the ECX-hybrids with a `0x40` offset to `0x2F..` (except for those three hybrid algorithms already defined with X25519). For example, a field in generate.yml would look like this:\r\n\r\n```\r\n    family: 'FrodoKEM'\r\n    name_group: 'frodo640aes'\r\n    nid: '0x0200'\r\n    nid_hybrid: '0x2F00'\r\n    nid_ecx_hybrid: '0x2F40'\r\n    oqs_alg: 'OQS_KEM_alg_frodokem_640_aes'\r\n    bit_security: 128\r\n```\r\nThe OSSL3 provider currently imports generate.yml from the OSSL1.1.1 repository. If you agree, I'd open a PR here with new code points for ECX-hybrids (and the google sheets can be updated). OSSL1.1.1 doesn't necessarily need to support the additional ECX-hybrid code points.\r\n\r\n- Strength matching X448\r\n\r\nX448 with 224 bit security sits between NIST L3/L4 and L5. The initial attempt in https://github.com/open-quantum-safe/oqs-provider/pull/16 is to match PQC L3-L5 with X448, being aware that this is not an \"exact\" match. Are there any thoughts about this and if/how we should support hybrids with X448?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/806513298","html_url":"https://github.com/open-quantum-safe/openssl/issues/296#issuecomment-806513298","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/296","id":806513298,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjUxMzI5OA==","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2021-03-25T09:52:37Z","updated_at":"2021-03-25T09:52:37Z","author_association":"NONE","body":"Thanks @baentsch and @xvzcf.\r\n\r\nRegarding the ECX-hybrid code points: Since this is so far only supported in OSSL3-provider, I'm adding a separate .yml file there (with the new code points only).\r\nRegarding X448: As discussed, we don't combine it with L5, only with L3/L4.\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-03-25T09:52:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15687134888","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/775","id":646321682,"node_id":"MDU6SXNzdWU2NDYzMjE2ODI=","number":775,"title":"When CPU_EXTENSIONS becomes supported in cross-compilation, update cross-compilation instructions to use it","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"},{"id":1876026231,"node_id":"MDU6TGFiZWwxODc2MDI2MjMx","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/future-work","name":"future-work","color":"cccccc","default":false,"description":"Will not be fixed in current release cycle"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-06-26T14:59:00Z","updated_at":"2021-03-25T13:21:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"CPU_EXTENSIONS currently causes a CMake error when configuring for cross-compilation. If and when it becomes capable of being used in cross-compilation, two sets of instructions need to be updated to remove the `-DOQS_USE_CPU_EXTENSIONS=OFF` directive currently present:\r\n\r\n1. In liboqs's README.md, undoing where it was added in #772.\r\n2. In OQS-OpenSSL's [cross-compilation wiki](https://github.com/open-quantum-safe/openssl/wiki/Cross-compiling-for-Windows-on-Linux).","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/806730756","html_url":"https://github.com/open-quantum-safe/liboqs/issues/775#issuecomment-806730756","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/775","id":806730756,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjczMDc1Ng==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-03-25T13:21:03Z","updated_at":"2021-03-25T13:21:03Z","author_association":"CONTRIBUTOR","body":"@dstebila Not quite. But Michael and I discussed some changes (https://github.com/open-quantum-safe/liboqs/discussions/943, specifically OQS_TARGET_ARCH) that would allow one to target a particular microarchitecture during cross-compilation. I'll do a mock-up of that idea soon.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-25T13:21:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15687810057","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/297","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/297/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/297/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/297/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/297","id":840485846,"node_id":"MDU6SXNzdWU4NDA0ODU4NDY=","number":297,"title":"Sync with OpenSSL 1.1.1k","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/milestones/1","html_url":"https://github.com/open-quantum-safe/openssl/milestone/1","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/milestones/1/labels","id":6475871,"node_id":"MDk6TWlsZXN0b25lNjQ3NTg3MQ==","number":1,"title":"March 2021 snapshot","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":5,"state":"open","created_at":"2021-02-24T18:39:30Z","updated_at":"2021-03-25T01:58:13Z","due_on":"2021-03-12T08:00:00Z","closed_at":null},"comments":1,"created_at":"2021-03-25T01:58:13Z","updated_at":"2021-03-25T14:03:38Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"To be released on Thursday; has a high severity security fix.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/806812629","html_url":"https://github.com/open-quantum-safe/openssl/issues/297#issuecomment-806812629","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/297","id":806812629,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjgxMjYyOQ==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-03-25T14:03:38Z","updated_at":"2021-03-25T14:03:38Z","author_association":"MEMBER","body":"OpenSSL 1.1.1k has been released.  Looks like [the diff between j and k](https://github.com/openssl/openssl/compare/OpenSSL_1_1_1j..OpenSSL_1_1_1k) is not very big.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-25T14:03:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15692555141","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/298","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/298/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/298/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/298/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/298","id":841100629,"node_id":"MDExOlB1bGxSZXF1ZXN0NjAwODg0NDQx","number":298,"title":"ossl111k merge","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-03-25T16:27:18Z","updated_at":"2021-03-25T19:17:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/298","html_url":"https://github.com/open-quantum-safe/openssl/pull/298","diff_url":"https://github.com/open-quantum-safe/openssl/pull/298.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/298.patch"},"body":"Fixes #297 \r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/807317772","html_url":"https://github.com/open-quantum-safe/openssl/pull/298#issuecomment-807317772","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/298","id":807317772,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzMxNzc3Mg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-03-25T19:17:58Z","updated_at":"2021-03-25T19:17:58Z","author_association":"MEMBER","body":"> Looks good. We should update our README.md, which still has an old reference:\r\n> \r\n> ```\r\n> This fork is currently in sync with the OpenSSL_1_1_1g tag, and adds the following:\r\n> ```\r\n\r\nCorrected.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-25T19:17:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15693374563","type":"IssueCommentEvent","actor":{"id":81308792,"login":"crispySafe","display_login":"crispySafe","gravatar_id":"","url":"https://api.github.com/users/crispySafe","avatar_url":"https://avatars.githubusercontent.com/u/81308792?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/295","id":837206565,"node_id":"MDU6SXNzdWU4MzcyMDY1NjU=","number":295,"title":"Issue when signing with new algorithms","user":{"login":"opencrypto","id":7943812,"node_id":"MDQ6VXNlcjc5NDM4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7943812?v=4","gravatar_id":"","url":"https://api.github.com/users/opencrypto","html_url":"https://github.com/opencrypto","followers_url":"https://api.github.com/users/opencrypto/followers","following_url":"https://api.github.com/users/opencrypto/following{/other_user}","gists_url":"https://api.github.com/users/opencrypto/gists{/gist_id}","starred_url":"https://api.github.com/users/opencrypto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opencrypto/subscriptions","organizations_url":"https://api.github.com/users/opencrypto/orgs","repos_url":"https://api.github.com/users/opencrypto/repos","events_url":"https://api.github.com/users/opencrypto/events{/privacy}","received_events_url":"https://api.github.com/users/opencrypto/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2021-03-21T23:08:27Z","updated_at":"2021-03-25T20:25:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello Everybody. I am trying to use the new algorithms in our wrapper library (LibPKI) that builds on top of OpenSSL. One thing I am having difficulties is to understand how to properly use the signing functions. \r\n\r\nSpecifically, I am trying to implement a generic signing function for DER encoded data (PKI_X509_sign(der (data), md (digest algor), evp_pkey) -> signature), and although the same functions work with RSA or ECDSA, they fail when I try with falcon, dilithium, or sphincs+.\r\n\r\nHere's the first code I tried:\r\n\r\n```\r\n// Creates the context\r\nif ((ctx = EVP_MD_CTX_create()) == NULL) {\r\n\tPKI_ERROR(PKI_ERR_MEMORY_ALLOC, NULL);\r\n\tif (out_mem) PKI_MEM_free(out_mem);\r\n\treturn NULL;\r\n}\r\n\r\n// Initializes the Context\r\nEVP_MD_CTX_init(ctx);\r\n\r\n// Initializes the Signature\r\nEVP_SignInit_ex(ctx, md, NULL);\r\nEVP_SignUpdate (ctx, der->data, der->size);\r\n\r\n// Finalizes the signature\r\nif (!EVP_SignFinal(ctx, out_mem->data, (unsigned int *) &ossl_ret, pkey))\r\n{\r\n\tPKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot finalize signature (%s)\", \r\n\t\tHSM_OPENSSL_get_errdesc(HSM_OPENSSL_get_errno(), NULL, 0));\r\n\r\n\tPKI_MEM_free(out_mem);\r\n\tout_mem = NULL;\r\n}\r\nelse out_mem->size = (size_t) ossl_ret;\r\n```\r\nI also tried the DigestSign version:\r\n```\r\n// Creates the context\r\nif ((ctx = EVP_MD_CTX_create()) == NULL) {\r\n\tPKI_ERROR(PKI_ERR_MEMORY_ALLOC, NULL);\r\n\tif (out_mem) PKI_MEM_free(out_mem);\r\n\treturn NULL;\r\n}\r\n\r\n// Initializes the Context\r\nEVP_MD_CTX_init(ctx);\r\n\r\nif (!EVP_DigestSignInit(ctx, &pCtx, md, NULL, pkey)) {\r\n    PKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot Initialize EVP_DigestSignInit()\");\r\n    goto err;\r\n}\r\n\r\nif (EVP_DigestSignUpdate(ctx, \r\n                                            der->data,\r\n   \t                                    der->size) <= 0) {\r\n   PKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot Update EVP_DigestSignUpdate()\");\r\n   goto err;\r\n}\r\n\r\nif (EVP_DigestSignFinal(ctx,\r\n                                        out_mem->data,\r\n                                        &ossl_ret) <= 0) {\r\n    PKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot Finalize EVP_DigestSignFinal()\");\r\n    goto err;\r\n}\r\nelse out_mem->size = (size_t) ossl_ret;\r\n```\r\nThe error seems to be related to the digest used (\"md\"). Specifically, if the md is not NULL, the EVP_SignFinal()/EVP_DigestSignFinal() fail with the following error trace:\r\n\r\n```\r\nMar 21 22:48:28 2021 GMT [91455] ERROR: [openssl_hsm.c:349] Can not create signature (117): Cannot finalize signature (  H??)\r\nMar 21 22:48:28 2021 GMT [91455] ERROR: [openssl_hsm.c:392] [HSM_OPENSSL_sign()] [ERROR] PKEY Type => 1294, falcon512\r\nMar 21 22:48:28 2021 GMT [91455] INFO: [openssl_hsm.c:395] [HSM_OPENSSL_sign()] [DEBUG]: [Signature Generated: 0 bytes (estimated: 690 bytes)]\r\nMar 21 22:48:28 2021 GMT [91455] INFO: [hsm_main.c:614] [PKI_sign()] [DEBUG]: Can not generate signature (returned from sign cb)\r\nMar 21 22:48:28 2021 GMT [91455] ERROR: [hsm_main.c:541] Can not create signature (117):\r\nMar 21 22:48:28 2021 GMT [91455] INFO: [pki_x509_req.c:222] [PKI_X509_REQ_new()] [DEBUG] REQ::ERROR 0 signing the Request [error:1012F0B1:elliptic curve routines:pkey_oqs_ctrl:wrong digest]\r\n```\r\nI know I am doing something wrong here, but I am not sure what... \r\n\r\nTo probe a bit further, I forced the use of a specific hashing algorithm - since the error was related to that, somehow: md = EVP_sha512(). If I do that, I get a success return code but the signature in the data is all zeroes.\r\n\r\n```\r\nMar 21 22:54:41 2021 GMT [97064] INFO: [pki_x509_req.c:61] [PKI_X509_REQ_new()] [DEBUG]: No Digest Associated with used algorithm\r\nMar 21 22:54:41 2021 GMT [97064] ERROR: [openssl_hsm.c:392] [HSM_OPENSSL_sign()] [ERROR] PKEY Type => 1294, falcon512\r\nMar 21 22:54:41 2021 GMT [97064] INFO: [openssl_hsm.c:395] [HSM_OPENSSL_sign()] [DEBUG]: [Signature Generated: 690 bytes (estimated: 690 bytes)]\r\n```\r\n\r\nJust to be very precise, when I use the standard apps/ tools (i.e., openssl req -new ...) I am able to generate things correctly.\r\n\r\nAnybody experiencing similar issues and/or know what I might be doing wrong?\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/807422798","html_url":"https://github.com/open-quantum-safe/openssl/issues/295#issuecomment-807422798","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295","id":807422798,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzQyMjc5OA==","user":{"login":"crispySafe","id":81308792,"node_id":"MDQ6VXNlcjgxMzA4Nzky","avatar_url":"https://avatars.githubusercontent.com/u/81308792?v=4","gravatar_id":"","url":"https://api.github.com/users/crispySafe","html_url":"https://github.com/crispySafe","followers_url":"https://api.github.com/users/crispySafe/followers","following_url":"https://api.github.com/users/crispySafe/following{/other_user}","gists_url":"https://api.github.com/users/crispySafe/gists{/gist_id}","starred_url":"https://api.github.com/users/crispySafe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crispySafe/subscriptions","organizations_url":"https://api.github.com/users/crispySafe/orgs","repos_url":"https://api.github.com/users/crispySafe/repos","events_url":"https://api.github.com/users/crispySafe/events{/privacy}","received_events_url":"https://api.github.com/users/crispySafe/received_events","type":"User","site_admin":false},"created_at":"2021-03-25T20:25:41Z","updated_at":"2021-03-25T20:25:41Z","author_association":"NONE","body":"Thanks @baentsch for your reply and working on this project to merge OQS into openssl.\r\nMy issue was just for convenience with the usage for signing only. The usage of cms works for me too, but it is an overhead.\r\n\r\nMy interest was to generate a OQS signing key, use it for signing, and verify the signed file in an easy way. \r\n\r\nThe open issue from @opencrypto brought the possibility to report my related one.\r\n\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-03-25T20:25:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
