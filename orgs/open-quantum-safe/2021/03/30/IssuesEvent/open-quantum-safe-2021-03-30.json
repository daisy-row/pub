{"id":"15737189918","type":"IssuesEvent","actor":{"id":76058344,"login":"Hannah336","display_login":"Hannah336","gravatar_id":"","url":"https://api.github.com/users/Hannah336","avatar_url":"https://avatars.githubusercontent.com/u/76058344?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/301","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/301/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/301/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/301/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/301","id":843997088,"node_id":"MDU6SXNzdWU4NDM5OTcwODg=","number":301,"title":"How to change the supported algorithm and use self-defined algorithm","user":{"login":"Hannah336","id":76058344,"node_id":"MDQ6VXNlcjc2MDU4MzQ0","avatar_url":"https://avatars.githubusercontent.com/u/76058344?v=4","gravatar_id":"","url":"https://api.github.com/users/Hannah336","html_url":"https://github.com/Hannah336","followers_url":"https://api.github.com/users/Hannah336/followers","following_url":"https://api.github.com/users/Hannah336/following{/other_user}","gists_url":"https://api.github.com/users/Hannah336/gists{/gist_id}","starred_url":"https://api.github.com/users/Hannah336/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hannah336/subscriptions","organizations_url":"https://api.github.com/users/Hannah336/orgs","repos_url":"https://api.github.com/users/Hannah336/repos","events_url":"https://api.github.com/users/Hannah336/events{/privacy}","received_events_url":"https://api.github.com/users/Hannah336/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-03-30T02:21:50Z","updated_at":"2021-03-30T02:21:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I saw in some blogs that you can change algorithm with engine and mark the changed algorithm in RSA_mothod, DSA_method etc. If I want to change signature algorithm in this case, what should I do? What's the relation between RSA and dilithium for example?","performed_via_github_app":null}},"public":true,"created_at":"2021-03-30T02:21:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15743470961","type":"IssuesEvent","actor":{"id":37668804,"login":"taimoorgit","display_login":"taimoorgit","gravatar_id":"","url":"https://api.github.com/users/taimoorgit","avatar_url":"https://avatars.githubusercontent.com/u/37668804?"},"repo":{"id":247826799,"name":"open-quantum-safe/liboqs-java","url":"https://api.github.com/repos/open-quantum-safe/liboqs-java"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/14","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/14/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/14/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/14/events","html_url":"https://github.com/open-quantum-safe/liboqs-java/issues/14","id":842527991,"node_id":"MDU6SXNzdWU4NDI1Mjc5OTE=","number":14,"title":"JAVA_HOME is set, but jni.h not found","user":{"login":"taimoorgit","id":37668804,"node_id":"MDQ6VXNlcjM3NjY4ODA0","avatar_url":"https://avatars.githubusercontent.com/u/37668804?v=4","gravatar_id":"","url":"https://api.github.com/users/taimoorgit","html_url":"https://github.com/taimoorgit","followers_url":"https://api.github.com/users/taimoorgit/followers","following_url":"https://api.github.com/users/taimoorgit/following{/other_user}","gists_url":"https://api.github.com/users/taimoorgit/gists{/gist_id}","starred_url":"https://api.github.com/users/taimoorgit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taimoorgit/subscriptions","organizations_url":"https://api.github.com/users/taimoorgit/orgs","repos_url":"https://api.github.com/users/taimoorgit/repos","events_url":"https://api.github.com/users/taimoorgit/events{/privacy}","received_events_url":"https://api.github.com/users/taimoorgit/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-03-27T15:32:15Z","updated_at":"2021-03-30T11:53:42Z","closed_at":"2021-03-30T11:53:42Z","author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI am trying to build the Maven package on WSL/Ubuntu. I have liboqs installed with shared libs enabled. I have installed JDK 11 and set my JAVA_HOME environment variable, but it seems like jni.h still isn't found. Is there a step I am missing that can fix this? \r\n\r\n```\r\ntaimoor@GAMING-PC:~/liboqs-java$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 20.04.1 LTS\r\nRelease:        20.04\r\nCodename:       focal\r\ntaimoor@GAMING-PC:~/liboqs-java$ java --version\r\nopenjdk 11.0.10 2021-01-19\r\nOpenJDK Runtime Environment (build 11.0.10+9-Ubuntu-0ubuntu1.20.04)\r\nOpenJDK 64-Bit Server VM (build 11.0.10+9-Ubuntu-0ubuntu1.20.04, mixed mode, sharing)\r\ntaimoor@GAMING-PC:~/liboqs-java$ echo $JAVA_HOME && ls $JAVA_HOME\r\n/usr/lib/jvm/java-1.11.0-openjdk-amd64\r\nbin  conf  docs  legal  lib  man  release\r\ntaimoor@GAMING-PC:~/liboqs-java$ mvn package -P linux -Dliboqs.include.dir=\"/usr/local/include\" -Dliboqs.lib.dir=\"/usr/local/lib\"\r\nWARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\r\nWARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\n[INFO] Scanning for projects...\r\n[INFO]\r\n[INFO] ------------------< org.openquantumsafe:liboqs-java >-------------------\r\n[INFO] Building liboqs-java: Java wrapper for liboqs 1.0\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO]\r\n[INFO] --- maven-antrun-plugin:3.0.0:run (default) @ liboqs-java ---\r\n[INFO] Executing tasks\r\n[INFO] Executed tasks\r\n[INFO]\r\n[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ liboqs-java ---\r\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\r\n[INFO] Copying 0 resource\r\n[INFO]\r\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ liboqs-java ---\r\n[INFO] Nothing to compile - all classes are up to date\r\n[INFO]\r\n[INFO] --- native-maven-plugin:1.0-alpha-9:initialize (generate-shared-oqs-library) @ liboqs-java ---\r\n[INFO]\r\n[INFO] --- native-maven-plugin:1.0-alpha-9:compile (generate-shared-oqs-library) @ liboqs-java ---\r\n[INFO] /bin/sh -c cd '/home/taimoor/liboqs-java' && 'gcc' '-I/usr/lib/jvm/java-1.11.0-openjdk-amd64/include' '-I/usr/lib/jvm/java-1.11.0-openjdk-amd64/include/linux' '-fPIC' '-Wall' '-O3' '-I/usr/local/include' '-I/home/taimoor/liboqs-java/src/main/c' '-I/home/taimoor/liboqs-java/target/generated-sources/annotations' '-o/home/taimoor/liboqs-java/target/objs/handle.o' '-c' '/home/taimoor/liboqs-java/src/main/c/handle.c'\r\nIn file included from /home/taimoor/liboqs-java/src/main/c/handle.c:1:\r\n/home/taimoor/liboqs-java/src/main/c/handle.h:4:10: fatal error: jni.h: No such file or directory\r\n    4 | #include <jni.h>\r\n      |          ^~~~~~~\r\ncompilation terminated.\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  0.905 s\r\n[INFO] Finished at: 2021-03-27T11:21:45-04:00\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal org.codehaus.mojo:native-maven-plugin:1.0-alpha-9:compile (generate-shared-oqs-library) on project liboqs-java: Error executing command line. Exit code:1 -> [Help 1]\r\n[ERROR]\r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR]\r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\r\n```\r\n\r\nThank you","performed_via_github_app":null}},"public":true,"created_at":"2021-03-30T11:53:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15744789058","type":"IssuesEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/17/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/17","id":844531551,"node_id":"MDU6SXNzdWU4NDQ1MzE1NTE=","number":17,"title":"Hybrid KEM: more combiners, more abstraction","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-03-30T13:15:07Z","updated_at":"2021-03-30T13:15:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Follow-up after #16:\r\n\r\n- So far, the shared secret uses \"Comb-Concat\" as described in https://tools.ietf.org/html/draft-ietf-tls-hybrid-design-01#appendix-B.4.1. The same is done in OSSL111. This is suitable for inputting the shared secret to the TLS 1.3 key schedule. Compared to the implementation in OSSL111, the oqs-provider can also be used outside a TLS context. For this purpose, a method like \"Comb-KDF\" would be useful.\r\n- Investigate using more OSSL3 API to allow more flexible combination of hybrid schemes:\r\n -> query algorithm parameters (secret-, ciphertext-, key-lengths) with provider API\r\n -> define individual algorithms for hybrid KEM in an array\r\n -> unify initialization of EVP-ECP and EVP-ECX code","performed_via_github_app":null}},"public":true,"created_at":"2021-03-30T13:15:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15745579988","type":"IssuesEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"reopened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/295","id":837206565,"node_id":"MDU6SXNzdWU4MzcyMDY1NjU=","number":295,"title":"Issue when signing with new algorithms","user":{"login":"opencrypto","id":7943812,"node_id":"MDQ6VXNlcjc5NDM4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7943812?v=4","gravatar_id":"","url":"https://api.github.com/users/opencrypto","html_url":"https://github.com/opencrypto","followers_url":"https://api.github.com/users/opencrypto/followers","following_url":"https://api.github.com/users/opencrypto/following{/other_user}","gists_url":"https://api.github.com/users/opencrypto/gists{/gist_id}","starred_url":"https://api.github.com/users/opencrypto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opencrypto/subscriptions","organizations_url":"https://api.github.com/users/opencrypto/orgs","repos_url":"https://api.github.com/users/opencrypto/repos","events_url":"https://api.github.com/users/opencrypto/events{/privacy}","received_events_url":"https://api.github.com/users/opencrypto/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2021-03-21T23:08:27Z","updated_at":"2021-03-30T13:56:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello Everybody. I am trying to use the new algorithms in our wrapper library (LibPKI) that builds on top of OpenSSL. One thing I am having difficulties is to understand how to properly use the signing functions. \r\n\r\nSpecifically, I am trying to implement a generic signing function for DER encoded data (PKI_X509_sign(der (data), md (digest algor), evp_pkey) -> signature), and although the same functions work with RSA or ECDSA, they fail when I try with falcon, dilithium, or sphincs+.\r\n\r\nHere's the first code I tried:\r\n\r\n```\r\n// Creates the context\r\nif ((ctx = EVP_MD_CTX_create()) == NULL) {\r\n\tPKI_ERROR(PKI_ERR_MEMORY_ALLOC, NULL);\r\n\tif (out_mem) PKI_MEM_free(out_mem);\r\n\treturn NULL;\r\n}\r\n\r\n// Initializes the Context\r\nEVP_MD_CTX_init(ctx);\r\n\r\n// Initializes the Signature\r\nEVP_SignInit_ex(ctx, md, NULL);\r\nEVP_SignUpdate (ctx, der->data, der->size);\r\n\r\n// Finalizes the signature\r\nif (!EVP_SignFinal(ctx, out_mem->data, (unsigned int *) &ossl_ret, pkey))\r\n{\r\n\tPKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot finalize signature (%s)\", \r\n\t\tHSM_OPENSSL_get_errdesc(HSM_OPENSSL_get_errno(), NULL, 0));\r\n\r\n\tPKI_MEM_free(out_mem);\r\n\tout_mem = NULL;\r\n}\r\nelse out_mem->size = (size_t) ossl_ret;\r\n```\r\nI also tried the DigestSign version:\r\n```\r\n// Creates the context\r\nif ((ctx = EVP_MD_CTX_create()) == NULL) {\r\n\tPKI_ERROR(PKI_ERR_MEMORY_ALLOC, NULL);\r\n\tif (out_mem) PKI_MEM_free(out_mem);\r\n\treturn NULL;\r\n}\r\n\r\n// Initializes the Context\r\nEVP_MD_CTX_init(ctx);\r\n\r\nif (!EVP_DigestSignInit(ctx, &pCtx, md, NULL, pkey)) {\r\n    PKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot Initialize EVP_DigestSignInit()\");\r\n    goto err;\r\n}\r\n\r\nif (EVP_DigestSignUpdate(ctx, \r\n                                            der->data,\r\n   \t                                    der->size) <= 0) {\r\n   PKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot Update EVP_DigestSignUpdate()\");\r\n   goto err;\r\n}\r\n\r\nif (EVP_DigestSignFinal(ctx,\r\n                                        out_mem->data,\r\n                                        &ossl_ret) <= 0) {\r\n    PKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot Finalize EVP_DigestSignFinal()\");\r\n    goto err;\r\n}\r\nelse out_mem->size = (size_t) ossl_ret;\r\n```\r\nThe error seems to be related to the digest used (\"md\"). Specifically, if the md is not NULL, the EVP_SignFinal()/EVP_DigestSignFinal() fail with the following error trace:\r\n\r\n```\r\nMar 21 22:48:28 2021 GMT [91455] ERROR: [openssl_hsm.c:349] Can not create signature (117): Cannot finalize signature (  H??)\r\nMar 21 22:48:28 2021 GMT [91455] ERROR: [openssl_hsm.c:392] [HSM_OPENSSL_sign()] [ERROR] PKEY Type => 1294, falcon512\r\nMar 21 22:48:28 2021 GMT [91455] INFO: [openssl_hsm.c:395] [HSM_OPENSSL_sign()] [DEBUG]: [Signature Generated: 0 bytes (estimated: 690 bytes)]\r\nMar 21 22:48:28 2021 GMT [91455] INFO: [hsm_main.c:614] [PKI_sign()] [DEBUG]: Can not generate signature (returned from sign cb)\r\nMar 21 22:48:28 2021 GMT [91455] ERROR: [hsm_main.c:541] Can not create signature (117):\r\nMar 21 22:48:28 2021 GMT [91455] INFO: [pki_x509_req.c:222] [PKI_X509_REQ_new()] [DEBUG] REQ::ERROR 0 signing the Request [error:1012F0B1:elliptic curve routines:pkey_oqs_ctrl:wrong digest]\r\n```\r\nI know I am doing something wrong here, but I am not sure what... \r\n\r\nTo probe a bit further, I forced the use of a specific hashing algorithm - since the error was related to that, somehow: md = EVP_sha512(). If I do that, I get a success return code but the signature in the data is all zeroes.\r\n\r\n```\r\nMar 21 22:54:41 2021 GMT [97064] INFO: [pki_x509_req.c:61] [PKI_X509_REQ_new()] [DEBUG]: No Digest Associated with used algorithm\r\nMar 21 22:54:41 2021 GMT [97064] ERROR: [openssl_hsm.c:392] [HSM_OPENSSL_sign()] [ERROR] PKEY Type => 1294, falcon512\r\nMar 21 22:54:41 2021 GMT [97064] INFO: [openssl_hsm.c:395] [HSM_OPENSSL_sign()] [DEBUG]: [Signature Generated: 690 bytes (estimated: 690 bytes)]\r\n```\r\n\r\nJust to be very precise, when I use the standard apps/ tools (i.e., openssl req -new ...) I am able to generate things correctly.\r\n\r\nAnybody experiencing similar issues and/or know what I might be doing wrong?\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-03-30T13:56:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15746983580","type":"IssuesEvent","actor":{"id":5923577,"login":"mouse07410","display_login":"mouse07410","gravatar_id":"","url":"https://api.github.com/users/mouse07410","avatar_url":"https://avatars.githubusercontent.com/u/5923577?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/953","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/953/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/953/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/953/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/953","id":844709380,"node_id":"MDU6SXNzdWU4NDQ3MDkzODA=","number":953,"title":"Two tests fail on the current master","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-03-30T15:09:48Z","updated_at":"2021-03-30T15:09:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"MacOS Catalina 10.15.7, Xcode-12.4. Current master.\r\n\r\n```\r\n.  .  .  .  .\r\n======================================================= FAILURES ========================================================\r\n___________________________________________________ test_kem[HQC-128] ___________________________________________________\r\n[gw16] darwin -- Python 3.9.2 /opt/local/bin/python3\r\n\r\nkem_name = 'HQC-128'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('kem_name', helpers.available_kems_by_name())\r\n    def test_kem(kem_name):\r\n        if not(helpers.is_kem_enabled_by_name(kem_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess(\r\n            [helpers.path_to_executable('test_kem'), kem_name],\r\n        )\r\n\r\ntests/test_cmdline.py:19: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ncommand = ['./build/tests/test_kem', 'HQC-128'], working_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -10\r\n\r\ntests/helpers.py:41: AssertionError\r\n------------------------------------------------- Captured stdout call --------------------------------------------------\r\n. > ./build/tests/test_kem HQC-128\r\n\r\n___________________________________________________ test_kem[HQC-192] ___________________________________________________\r\n[gw17] darwin -- Python 3.9.2 /opt/local/bin/python3\r\n\r\nkem_name = 'HQC-192'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('kem_name', helpers.available_kems_by_name())\r\n    def test_kem(kem_name):\r\n        if not(helpers.is_kem_enabled_by_name(kem_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess(\r\n            [helpers.path_to_executable('test_kem'), kem_name],\r\n        )\r\n\r\ntests/test_cmdline.py:19: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ncommand = ['./build/tests/test_kem', 'HQC-192'], working_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -10\r\n\r\ntests/helpers.py:41: AssertionError\r\n------------------------------------------------- Captured stdout call --------------------------------------------------\r\n. > ./build/tests/test_kem HQC-192\r\n\r\n================================================ short test summary info ================================================\r\nFAILED tests/test_cmdline.py::test_kem[HQC-128] - AssertionError: Got unexpected return code -10\r\nFAILED tests/test_cmdline.py::test_kem[HQC-192] - AssertionError: Got unexpected return code -10\r\n====================================== 2 failed, 502 passed, 254 skipped in 44.37s ===============\r\n```","performed_via_github_app":null}},"public":true,"created_at":"2021-03-30T15:09:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
