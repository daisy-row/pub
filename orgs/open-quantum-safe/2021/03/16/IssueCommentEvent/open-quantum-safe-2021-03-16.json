{"id":"15555663000","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/944","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/944/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/944/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/944/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/944","id":831917916,"node_id":"MDExOlB1bGxSZXF1ZXN0NTkzMTYzOTU1","number":944,"title":"Patch mechanism for copy from upstream","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-03-15T15:19:35Z","updated_at":"2021-03-16T06:32:26Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/944","html_url":"https://github.com/open-quantum-safe/liboqs/pull/944","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/944.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/944.patch"},"body":"Opening this PR for discussion around whether we want a patch mechanism for copy from upstream.\r\n\r\nThis PR contains a functioning patch mechanism. The documentation is here:\r\nhttps://gist.github.com/jschanck/c67d37551da2a5f6e06c640816d2c99f","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/799993138","html_url":"https://github.com/open-quantum-safe/liboqs/pull/944#issuecomment-799993138","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/944","id":799993138,"node_id":"MDEyOklzc3VlQ29tbWVudDc5OTk5MzEzOA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-03-16T06:32:26Z","updated_at":"2021-03-16T06:32:26Z","author_association":"MEMBER","body":"Conceptually, a patch mechanism for upstream code is a good thing, particularly for quick fixes we fully understand. \r\n\r\nMy key concern doing this on a regular and long-term basis is this: `liboqs` changes from being an independent maintainer of a collection of unchanged upstream code bases into being the active maintainer (taking responsibility of the internal operations) of certain (such patched) algorithms.\r\n\r\nI thus fully agree with @bhess comments\r\n> - Adding shim API (similar to src/common/pqclean_shims) to avoid having to patch namespaces, function names and incompatible API.\r\n> - Offer the patch to upstream, if it is not only for OQS-internal reasons.\r\n\r\nand would amend them as follows\r\n- all patches need to be designed such that they can be taken up by upstream\r\n- if the upstream maintainers don't take up the patch by the next run of `copy_from_upstream` and provide their own implementation for the function in question, the patch shall be removed again from liboqs.\r\n\r\nThis way we can introduce quick improvements without moving into the position of becoming a long-term maintainer of upstream patches. \r\n\r\nIf we agree and document all of this, I'm all for this (PR).","performed_via_github_app":null}},"public":true,"created_at":"2021-03-16T06:32:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15555685745","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/922","id":813619057,"node_id":"MDExOlB1bGxSZXF1ZXN0NTc3NzM3NjQ3","number":922,"title":"Refactor SHA3 implementations and improve API","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/13","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13/labels","id":6475880,"node_id":"MDk6TWlsZXN0b25lNjQ3NTg4MA==","number":13,"title":"0.5.1 RC1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":6,"closed_issues":3,"state":"open","created_at":"2021-02-24T18:42:42Z","updated_at":"2021-03-12T02:31:27Z","due_on":"2021-03-19T07:00:00Z","closed_at":null},"comments":7,"created_at":"2021-02-22T15:44:33Z","updated_at":"2021-03-16T06:34:51Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/922","html_url":"https://github.com/open-quantum-safe/liboqs/pull/922","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/922.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/922.patch"},"body":"This is an attempt to restructure our sha3 api to meet the needs of the remaining schemes and avoid code duplication.\r\n\r\nChanges:\r\n* Added a complete four-way parallel shake interface made public through sha3x4.h.  This interface does not require AVX2 instructions. It accepts any implementation of \"Keccak1600P-times4\" from the XKCP low-level interface, and it quietly falls back to a serial implementation using whatever (possibly platform optimized) implementation of Keccak1600P is available. A serial implementation is also used when OpenSSL is enabled.\r\n* Scripted the importing/patching of implementations of the low-level XKCP interface. (scripts will be submitted in a followup commit or pr). The implementations are made available in src/common/sha3/xkcp_low and a suitable implementation is chosen at compile time by src/common/sha3/xkcp_low/CMakeLists.txt.\r\n* Replaced fips202.c, sha3_c.c, and sha3_avx.c with xkcp_sha3.c, which implements sha3.h using the low-level XKCP interface.\r\n* Replaced sha3_x4.c, and sha3x4_avx2.c with xkcp_sha3x4.c, which implements sha3x4.h using the low-level XKCP interface.\r\n* Added ossl_sha3.c and ossl_sha3x4.c which implement sha3.h and sha3x4, including the incremental APIs (#502), using openssl.\r\n* Removed (unused) cshake functions.\r\n* Removed non-incremental shake functions like OQS_SHA3_shake128_absorb, but keep simple shake functions like OQS_SHA3_shake128.\r\n* Added \"sha3_*_ctx_reset\" which re-initializes an already allocated context.\r\n* Changed OQS_SHA3_sha3_*_inc_finalize so that it does not free the context. This allows you to re-use a context with \"reset\".\r\n* Removed Picnic's duplicate sha3 code\r\n* Added a patching mechanism to copy_from_upstream\r\n* Removed SPHINCS's duplicate sha3 code (with copy_from_upstream patch)\r\n* Removed Kyber's duplicate sha3 code (with copy_from_upstream patch)\r\n* Removed Dilithium's duplicate sha3 code (with copy_from_upstream patch)\r\n\r\nIssues:\r\n* OpenSSL does not implement a proper \"squeeze\" function. There's work in progress to fix this (https://github.com/openssl/openssl/pull/7921), but we should not expect it to be available anytime soon. The implementation of the incremental API that I've written is quadratic in the total output length if O(1) bytes are squeezed at a time. This leads to a severe loss of performance for Falcon, so this PR currently turns off OQS_USE_SHA3_OPENSSL even when OQS_USE_OPENSSL is on.\r\n\r\nTODO:\r\n* Import optimized Keccak routines for other architectures and select appropriately at compile time. There are several ARM implementations available. There's also AVX512.\r\n* (Future work) Compile multiple Keccak implementations and select an appropriate one at runtime for \"portable\" builds. \r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/799994302","html_url":"https://github.com/open-quantum-safe/liboqs/pull/922#issuecomment-799994302","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/922","id":799994302,"node_id":"MDEyOklzc3VlQ29tbWVudDc5OTk5NDMwMg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-03-16T06:34:51Z","updated_at":"2021-03-16T06:34:51Z","author_association":"MEMBER","body":"> @baentsch I found it hard to follow your comment. I understand that you have concerns about the patching mechanism. Could you please separate those concerns from the core question of whether we want to provide a SHA3 interface, like what this PR provides, that eliminates the need for (say) Picnic to bring their own implementations?\r\n\r\nI (hopefully) [did reformulate my concerns in a more understandable way in the discussion for #944](https://github.com/open-quantum-safe/liboqs/pull/944#issuecomment-799993138)","performed_via_github_app":null}},"public":true,"created_at":"2021-03-16T06:34:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15563681891","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/940","id":830180482,"node_id":"MDU6SXNzdWU4MzAxODA0ODI=","number":940,"title":"Current master - McEliece AVX2 is broken","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-03-12T14:39:09Z","updated_at":"2021-03-16T15:57:39Z","closed_at":"2021-03-16T15:57:39Z","author_association":"NONE","active_lock_reason":null,"body":"MacOS 10.15.7, Xcode-12.4, current master.\r\n```\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\n-- The ASM compiler identification is Clang\r\n-- Found assembler: /opt/local/bin/clang\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /opt/local/bin/clang - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /opt/local/lib/libcrypto.dylib (found suitable version \"1.1.1j\", minimum required is \"1.1.1\")  \r\n-- Looking for OPENSSL_NO_EC2M\r\n-- Looking for OPENSSL_NO_EC2M - not found\r\n-- Found Doxygen: /opt/local/bin/doxygen (found version \"1.9.1\") found components: doxygen dot \r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/ur20980/src/liboqs/build\r\n[1272/2236] Building ASM object src/kem/classic_mceliece/CMakeFile...ic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.\r\nFAILED: src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o \r\n/opt/local/bin/clang  -Iinclude -I../src/kem/classic_mceliece/pqclean_mceliece8192128_avx -I../src/common/pqclean_shims -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.1.sdk -mmacosx-version-min=10.15 -fPIC -Werror -Wall -Wextra -Wpedantic -Wno-unused-command-line-argument -O3 -fomit-frame-pointer -mavx2 -mpopcnt -Wno-language-extension-token -MD -MT src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o -MF src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o.d -o src/kem/classic_mceliece/CMakeFiles/classic_mceliece_8192128_avx.dir/pqclean_mceliece8192128_avx/consts.S.o -c ../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:19:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK0_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:20:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK0_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:21:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK1_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:22:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK1_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:23:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK2_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:24:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK2_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:25:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK3_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:26:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK3_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:27:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK4_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:28:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK4_1\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:29:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK5_0\r\n^\r\n../src/kem/classic_mceliece/pqclean_mceliece8192128_avx/consts.S:30:1: error: unknown directive\r\n.hidden PQCLEAN_MCELIECE8192128_AVX_MASK5_1\r\n^\r\n[1293/2236] Building C object src/kem/sike/CMakeFiles/sike.dir/external/P610/P610_compressed.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\nHow do I configure the build to **exclude** algorithms?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/800387107","html_url":"https://github.com/open-quantum-safe/liboqs/issues/940#issuecomment-800387107","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/940","id":800387107,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDM4NzEwNw==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-03-16T15:57:39Z","updated_at":"2021-03-16T15:57:39Z","author_association":"CONTRIBUTOR","body":"This is fixed by https://github.com/PQClean/PQClean/commit/6f22c50511e2743c4da31d3a37c7a84579cc9765. It will trickle down to liboqs when we pull the latest PQClean for #937.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-16T15:57:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15569020485","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/292","id":831030567,"node_id":"MDU6SXNzdWU4MzEwMzA1Njc=","number":292,"title":"Hybrid-Algorithm unexpected behavior","user":{"login":"mraavi5","id":55515041,"node_id":"MDQ6VXNlcjU1NTE1MDQx","avatar_url":"https://avatars.githubusercontent.com/u/55515041?v=4","gravatar_id":"","url":"https://api.github.com/users/mraavi5","html_url":"https://github.com/mraavi5","followers_url":"https://api.github.com/users/mraavi5/followers","following_url":"https://api.github.com/users/mraavi5/following{/other_user}","gists_url":"https://api.github.com/users/mraavi5/gists{/gist_id}","starred_url":"https://api.github.com/users/mraavi5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mraavi5/subscriptions","organizations_url":"https://api.github.com/users/mraavi5/orgs","repos_url":"https://api.github.com/users/mraavi5/repos","events_url":"https://api.github.com/users/mraavi5/events{/privacy}","received_events_url":"https://api.github.com/users/mraavi5/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-03-14T00:21:41Z","updated_at":"2021-03-16T23:12:48Z","closed_at":"2021-03-16T23:12:48Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI was wondering about the uncertainties in key-pair generation time and certificate generation times using hybrid algorithms with OpenSSL. I generated a key-pair and a certificate using the following classical, post-quantum, and hybrid algorithms. I got the following times and I couldn’t understand the reason behind slower key-pair generation/certificate generation times using hybrid algorithms.\r\n\r\nKey Generation\r\nClassical:\r\nRSA 3072 : 351.64 ms\r\nP256 : 3.7 ms\r\n\r\nPost-Quantum:\r\nDilithium 2 : 3.07 ms\r\n\r\nHybrids:\r\nRSA 3072-Dilithium2 : 263 ms (shouldn’t this be more than 351.64 ms?)\r\nP256-Dilihthium 2 : 3.21 ms (shouldn’t this be more than 3.7 ms?)\r\n\r\nMy understanding is that hybrid algorithms generate both keys/signatures and concatenate them in the certification process. If that is the case, key-pair/certificate generation time at a minimum should be the maximum key-pair/certificate generation times of individual algorithms. For example, algorithms A and B form a hybrid algorithm C. C should take a longer time than max(A,B) to generate key-pair/certificates. Is this correct?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/800673553","html_url":"https://github.com/open-quantum-safe/openssl/issues/292#issuecomment-800673553","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292","id":800673553,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDY3MzU1Mw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-03-16T23:12:48Z","updated_at":"2021-03-16T23:12:48Z","author_association":"MEMBER","body":"Closing based on Michael's reply. Feel free to ask follow-up questions as needed but it doesn't seem to be an issue that requires fixing.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-16T23:12:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15569113218","type":"IssueCommentEvent","actor":{"id":55515041,"login":"mraavi5","display_login":"mraavi5","gravatar_id":"","url":"https://api.github.com/users/mraavi5","avatar_url":"https://avatars.githubusercontent.com/u/55515041?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/292","id":831030567,"node_id":"MDU6SXNzdWU4MzEwMzA1Njc=","number":292,"title":"Hybrid-Algorithm unexpected behavior","user":{"login":"mraavi5","id":55515041,"node_id":"MDQ6VXNlcjU1NTE1MDQx","avatar_url":"https://avatars.githubusercontent.com/u/55515041?v=4","gravatar_id":"","url":"https://api.github.com/users/mraavi5","html_url":"https://github.com/mraavi5","followers_url":"https://api.github.com/users/mraavi5/followers","following_url":"https://api.github.com/users/mraavi5/following{/other_user}","gists_url":"https://api.github.com/users/mraavi5/gists{/gist_id}","starred_url":"https://api.github.com/users/mraavi5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mraavi5/subscriptions","organizations_url":"https://api.github.com/users/mraavi5/orgs","repos_url":"https://api.github.com/users/mraavi5/repos","events_url":"https://api.github.com/users/mraavi5/events{/privacy}","received_events_url":"https://api.github.com/users/mraavi5/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-03-14T00:21:41Z","updated_at":"2021-03-16T23:25:05Z","closed_at":"2021-03-16T23:12:48Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI was wondering about the uncertainties in key-pair generation time and certificate generation times using hybrid algorithms with OpenSSL. I generated a key-pair and a certificate using the following classical, post-quantum, and hybrid algorithms. I got the following times and I couldn’t understand the reason behind slower key-pair generation/certificate generation times using hybrid algorithms.\r\n\r\nKey Generation\r\nClassical:\r\nRSA 3072 : 351.64 ms\r\nP256 : 3.7 ms\r\n\r\nPost-Quantum:\r\nDilithium 2 : 3.07 ms\r\n\r\nHybrids:\r\nRSA 3072-Dilithium2 : 263 ms (shouldn’t this be more than 351.64 ms?)\r\nP256-Dilihthium 2 : 3.21 ms (shouldn’t this be more than 3.7 ms?)\r\n\r\nMy understanding is that hybrid algorithms generate both keys/signatures and concatenate them in the certification process. If that is the case, key-pair/certificate generation time at a minimum should be the maximum key-pair/certificate generation times of individual algorithms. For example, algorithms A and B form a hybrid algorithm C. C should take a longer time than max(A,B) to generate key-pair/certificates. Is this correct?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/800678186","html_url":"https://github.com/open-quantum-safe/openssl/issues/292#issuecomment-800678186","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/292","id":800678186,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDY3ODE4Ng==","user":{"login":"mraavi5","id":55515041,"node_id":"MDQ6VXNlcjU1NTE1MDQx","avatar_url":"https://avatars.githubusercontent.com/u/55515041?v=4","gravatar_id":"","url":"https://api.github.com/users/mraavi5","html_url":"https://github.com/mraavi5","followers_url":"https://api.github.com/users/mraavi5/followers","following_url":"https://api.github.com/users/mraavi5/following{/other_user}","gists_url":"https://api.github.com/users/mraavi5/gists{/gist_id}","starred_url":"https://api.github.com/users/mraavi5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mraavi5/subscriptions","organizations_url":"https://api.github.com/users/mraavi5/orgs","repos_url":"https://api.github.com/users/mraavi5/repos","events_url":"https://api.github.com/users/mraavi5/events{/privacy}","received_events_url":"https://api.github.com/users/mraavi5/received_events","type":"User","site_admin":false},"created_at":"2021-03-16T23:25:05Z","updated_at":"2021-03-16T23:25:05Z","author_association":"NONE","body":"Thank you for the explanation. It helped in better understanding the behavior. \r\n\r\nI'm still curious and unsure on calling the OpenSSL APIs repeatedly avoiding all setup. It would help a lot if you can provide an example or direct me to somewhere I can find the information.","performed_via_github_app":null}},"public":true,"created_at":"2021-03-16T23:25:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
