{"id":"18928912357","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125","id":1056059087,"node_id":"I_kwDOA-eq3c4-8i7P","number":1125,"title":"GCC 11 throws `mismatched bound` errors on arm64","user":{"login":"merkys","id":10404021,"node_id":"MDQ6VXNlcjEwNDA0MDIx","avatar_url":"https://avatars.githubusercontent.com/u/10404021?v=4","gravatar_id":"","url":"https://api.github.com/users/merkys","html_url":"https://github.com/merkys","followers_url":"https://api.github.com/users/merkys/followers","following_url":"https://api.github.com/users/merkys/following{/other_user}","gists_url":"https://api.github.com/users/merkys/gists{/gist_id}","starred_url":"https://api.github.com/users/merkys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merkys/subscriptions","organizations_url":"https://api.github.com/users/merkys/orgs","repos_url":"https://api.github.com/users/merkys/repos","events_url":"https://api.github.com/users/merkys/events{/privacy}","received_events_url":"https://api.github.com/users/merkys/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-11-17T12:13:34Z","updated_at":"2021-11-17T12:35:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am interested in packaging liboqs for Debian. Debian build of ba5b61a7 on arm64 fails due to `mismatched bound` errors:\r\n```\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:24:57: error: argument 1 of type ‘uint8_t[800]’ {aka ‘unsigned char[800]’} with mismatched bound [-Werror=array-parameter=]\r\n   24 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t pk[KYBER_PUBLICKEYBYTES],\r\n      |                                                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:2:\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.h:14:58: note: previously declared as ‘uint8_t *’ {aka ‘unsigned char *’}\r\n   14 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t *pk, uint8_t *sk);\r\n      |                                                 ~~~~~~~~~^~\r\n```\r\n([full build log](https://buildd.debian.org/status/fetch.php?pkg=liboqs&arch=arm64&ver=0.7.0.27.gba5b61a7%2Bdfsg-1&stamp=1637141594&raw=0); note Debian turns all GCC warning to errors)\r\n\r\nSimilar issue was reported as #1035 and seemingly has been fixed since then. Interestingly, most of the other architectures build just fine.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971538470","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125#issuecomment-971538470","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","id":971538470,"node_id":"IC_kwDOA-eq3c456IAm","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T12:35:06Z","updated_at":"2021-11-17T12:35:06Z","author_association":"MEMBER","body":"Thanks for the notification. We recently added aarch64-optimized code, so this may indeed be a regression: While we look into your report, would you want to check your build based on a commit prior to #1117?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971538470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T12:35:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18928988054","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125","id":1056059087,"node_id":"I_kwDOA-eq3c4-8i7P","number":1125,"title":"GCC 11 throws `mismatched bound` errors on arm64","user":{"login":"merkys","id":10404021,"node_id":"MDQ6VXNlcjEwNDA0MDIx","avatar_url":"https://avatars.githubusercontent.com/u/10404021?v=4","gravatar_id":"","url":"https://api.github.com/users/merkys","html_url":"https://github.com/merkys","followers_url":"https://api.github.com/users/merkys/followers","following_url":"https://api.github.com/users/merkys/following{/other_user}","gists_url":"https://api.github.com/users/merkys/gists{/gist_id}","starred_url":"https://api.github.com/users/merkys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merkys/subscriptions","organizations_url":"https://api.github.com/users/merkys/orgs","repos_url":"https://api.github.com/users/merkys/repos","events_url":"https://api.github.com/users/merkys/events{/privacy}","received_events_url":"https://api.github.com/users/merkys/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-11-17T12:13:34Z","updated_at":"2021-11-17T12:39:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am interested in packaging liboqs for Debian. Debian build of ba5b61a7 on arm64 fails due to `mismatched bound` errors:\r\n```\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:24:57: error: argument 1 of type ‘uint8_t[800]’ {aka ‘unsigned char[800]’} with mismatched bound [-Werror=array-parameter=]\r\n   24 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t pk[KYBER_PUBLICKEYBYTES],\r\n      |                                                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:2:\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.h:14:58: note: previously declared as ‘uint8_t *’ {aka ‘unsigned char *’}\r\n   14 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t *pk, uint8_t *sk);\r\n      |                                                 ~~~~~~~~~^~\r\n```\r\n([full build log](https://buildd.debian.org/status/fetch.php?pkg=liboqs&arch=arm64&ver=0.7.0.27.gba5b61a7%2Bdfsg-1&stamp=1637141594&raw=0); note Debian turns all GCC warning to errors)\r\n\r\nSimilar issue was reported as #1035 and seemingly has been fixed since then. Interestingly, most of the other architectures build just fine.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971541647","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125#issuecomment-971541647","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","id":971541647,"node_id":"IC_kwDOA-eq3c456IyP","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T12:39:54Z","updated_at":"2021-11-17T12:39:54Z","author_association":"CONTRIBUTOR","body":"The aarch64 code is pulled from pqclean while the other versions from pqcrystals-upstream. It seems that the pqclean-version needs to be updated with the recent fix for GCC 11 available on pqcrystals-upstream. See https://github.com/pq-crystals/kyber/pull/43.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971541647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T12:39:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18929036200","type":"IssueCommentEvent","actor":{"id":10404021,"login":"merkys","display_login":"merkys","gravatar_id":"","url":"https://api.github.com/users/merkys","avatar_url":"https://avatars.githubusercontent.com/u/10404021?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125","id":1056059087,"node_id":"I_kwDOA-eq3c4-8i7P","number":1125,"title":"GCC 11 throws `mismatched bound` errors on arm64","user":{"login":"merkys","id":10404021,"node_id":"MDQ6VXNlcjEwNDA0MDIx","avatar_url":"https://avatars.githubusercontent.com/u/10404021?v=4","gravatar_id":"","url":"https://api.github.com/users/merkys","html_url":"https://github.com/merkys","followers_url":"https://api.github.com/users/merkys/followers","following_url":"https://api.github.com/users/merkys/following{/other_user}","gists_url":"https://api.github.com/users/merkys/gists{/gist_id}","starred_url":"https://api.github.com/users/merkys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merkys/subscriptions","organizations_url":"https://api.github.com/users/merkys/orgs","repos_url":"https://api.github.com/users/merkys/repos","events_url":"https://api.github.com/users/merkys/events{/privacy}","received_events_url":"https://api.github.com/users/merkys/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-11-17T12:13:34Z","updated_at":"2021-11-17T12:42:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am interested in packaging liboqs for Debian. Debian build of ba5b61a7 on arm64 fails due to `mismatched bound` errors:\r\n```\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:24:57: error: argument 1 of type ‘uint8_t[800]’ {aka ‘unsigned char[800]’} with mismatched bound [-Werror=array-parameter=]\r\n   24 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t pk[KYBER_PUBLICKEYBYTES],\r\n      |                                                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:2:\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.h:14:58: note: previously declared as ‘uint8_t *’ {aka ‘unsigned char *’}\r\n   14 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t *pk, uint8_t *sk);\r\n      |                                                 ~~~~~~~~~^~\r\n```\r\n([full build log](https://buildd.debian.org/status/fetch.php?pkg=liboqs&arch=arm64&ver=0.7.0.27.gba5b61a7%2Bdfsg-1&stamp=1637141594&raw=0); note Debian turns all GCC warning to errors)\r\n\r\nSimilar issue was reported as #1035 and seemingly has been fixed since then. Interestingly, most of the other architectures build just fine.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971543736","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125#issuecomment-971543736","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","id":971543736,"node_id":"IC_kwDOA-eq3c456JS4","user":{"login":"merkys","id":10404021,"node_id":"MDQ6VXNlcjEwNDA0MDIx","avatar_url":"https://avatars.githubusercontent.com/u/10404021?v=4","gravatar_id":"","url":"https://api.github.com/users/merkys","html_url":"https://github.com/merkys","followers_url":"https://api.github.com/users/merkys/followers","following_url":"https://api.github.com/users/merkys/following{/other_user}","gists_url":"https://api.github.com/users/merkys/gists{/gist_id}","starred_url":"https://api.github.com/users/merkys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merkys/subscriptions","organizations_url":"https://api.github.com/users/merkys/orgs","repos_url":"https://api.github.com/users/merkys/repos","events_url":"https://api.github.com/users/merkys/events{/privacy}","received_events_url":"https://api.github.com/users/merkys/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T12:42:56Z","updated_at":"2021-11-17T12:42:56Z","author_association":"NONE","body":"> Thanks for the notification. We recently added aarch64-optimized code, so this may indeed be a regression: While we look into your report, would you want to check your build based on a commit prior to #1117?\r\n\r\nOK, I will try building it.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971543736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T12:42:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18931741844","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","id":1054493551,"node_id":"PR_kwDOA-eq3c4uknlv","number":1123,"title":"Adding multiple upstream support to doc generation","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-11-16T06:22:42Z","updated_at":"2021-11-17T15:10:51Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1123","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR fixes an issue discovered by  Michael (https://github.com/open-quantum-safe/liboqs/pull/1117#issuecomment-969116802).\r\n\r\nThis will update legacy yaml files so that the new format is followed, and when a yaml file is updated the script it indicate it has done so. When this happens I recommend double checking the yaml file to make sure the ordering \"makes sense\" to human eyes.\r\n\r\nI also manually patched the yaml files of schemes that the copy_from_upstream.py script doesn't manage.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971673567","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123#issuecomment-971673567","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","id":971673567,"node_id":"IC_kwDOA-eq3c456o_f","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T15:10:51Z","updated_at":"2021-11-17T15:10:51Z","author_association":"MEMBER","body":"@Martyrshot Thanks for the latest commits: They resolve the errors reported above. \r\n\r\nHowever, the execution of `copy_from_upstream.py copy` on a \"clean slate\" 'martyrshort/liboqs/main' still causes `git status` to report many changed files; also the MD files are still not part of the PR.\r\n\r\nIn turn, when I do a test-commit on your latest changes (and after running `python3 scripts/update_docs_from_yaml.py` to create the MD files), everything behaves as I'd expect it: Further runs of these scripts don't yield changes to the repo's files, so I wonder whether all that's missing now is a `git add -A` on your side to complete the PR (?).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971673567/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T15:10:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18931788729","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","id":1054493551,"node_id":"PR_kwDOA-eq3c4uknlv","number":1123,"title":"Adding multiple upstream support to doc generation","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-11-16T06:22:42Z","updated_at":"2021-11-17T15:13:14Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1123","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR fixes an issue discovered by  Michael (https://github.com/open-quantum-safe/liboqs/pull/1117#issuecomment-969116802).\r\n\r\nThis will update legacy yaml files so that the new format is followed, and when a yaml file is updated the script it indicate it has done so. When this happens I recommend double checking the yaml file to make sure the ordering \"makes sense\" to human eyes.\r\n\r\nI also manually patched the yaml files of schemes that the copy_from_upstream.py script doesn't manage.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971676102","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123#issuecomment-971676102","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","id":971676102,"node_id":"IC_kwDOA-eq3c456pnG","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T15:13:14Z","updated_at":"2021-11-17T15:13:14Z","author_association":"COLLABORATOR","body":"I'm just fixing one issue where copy_from_upstream copies in implementations that are *new* to upstream but haven't been integrated into liboqs yet (the aarch64 implementations in pqclean for the sabre family). Once that's done then I think it's safe to do a git add -A. Shouldn't be too much longer. Sorry about the wait...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971676102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T15:13:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18932003946","type":"IssueCommentEvent","actor":{"id":10404021,"login":"merkys","display_login":"merkys","gravatar_id":"","url":"https://api.github.com/users/merkys","avatar_url":"https://avatars.githubusercontent.com/u/10404021?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125","id":1056059087,"node_id":"I_kwDOA-eq3c4-8i7P","number":1125,"title":"GCC 11 throws `mismatched bound` errors on arm64","user":{"login":"merkys","id":10404021,"node_id":"MDQ6VXNlcjEwNDA0MDIx","avatar_url":"https://avatars.githubusercontent.com/u/10404021?v=4","gravatar_id":"","url":"https://api.github.com/users/merkys","html_url":"https://github.com/merkys","followers_url":"https://api.github.com/users/merkys/followers","following_url":"https://api.github.com/users/merkys/following{/other_user}","gists_url":"https://api.github.com/users/merkys/gists{/gist_id}","starred_url":"https://api.github.com/users/merkys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merkys/subscriptions","organizations_url":"https://api.github.com/users/merkys/orgs","repos_url":"https://api.github.com/users/merkys/repos","events_url":"https://api.github.com/users/merkys/events{/privacy}","received_events_url":"https://api.github.com/users/merkys/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-11-17T12:13:34Z","updated_at":"2021-11-17T15:24:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am interested in packaging liboqs for Debian. Debian build of ba5b61a7 on arm64 fails due to `mismatched bound` errors:\r\n```\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:24:57: error: argument 1 of type ‘uint8_t[800]’ {aka ‘unsigned char[800]’} with mismatched bound [-Werror=array-parameter=]\r\n   24 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t pk[KYBER_PUBLICKEYBYTES],\r\n      |                                                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:2:\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.h:14:58: note: previously declared as ‘uint8_t *’ {aka ‘unsigned char *’}\r\n   14 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t *pk, uint8_t *sk);\r\n      |                                                 ~~~~~~~~~^~\r\n```\r\n([full build log](https://buildd.debian.org/status/fetch.php?pkg=liboqs&arch=arm64&ver=0.7.0.27.gba5b61a7%2Bdfsg-1&stamp=1637141594&raw=0); note Debian turns all GCC warning to errors)\r\n\r\nSimilar issue was reported as #1035 and seemingly has been fixed since then. Interestingly, most of the other architectures build just fine.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971686689","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125#issuecomment-971686689","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","id":971686689,"node_id":"IC_kwDOA-eq3c456sMh","user":{"login":"merkys","id":10404021,"node_id":"MDQ6VXNlcjEwNDA0MDIx","avatar_url":"https://avatars.githubusercontent.com/u/10404021?v=4","gravatar_id":"","url":"https://api.github.com/users/merkys","html_url":"https://github.com/merkys","followers_url":"https://api.github.com/users/merkys/followers","following_url":"https://api.github.com/users/merkys/following{/other_user}","gists_url":"https://api.github.com/users/merkys/gists{/gist_id}","starred_url":"https://api.github.com/users/merkys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merkys/subscriptions","organizations_url":"https://api.github.com/users/merkys/orgs","repos_url":"https://api.github.com/users/merkys/repos","events_url":"https://api.github.com/users/merkys/events{/privacy}","received_events_url":"https://api.github.com/users/merkys/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T15:24:18Z","updated_at":"2021-11-17T15:24:18Z","author_association":"NONE","body":"I can confirm that c366e19805387d70483c460b77afb10b7c9c9269 (commit before merging #1117) builds just fine on aarch64.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971686689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T15:24:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18932120982","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","id":1054493551,"node_id":"PR_kwDOA-eq3c4uknlv","number":1123,"title":"Adding multiple upstream support to doc generation","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-11-16T06:22:42Z","updated_at":"2021-11-17T15:30:10Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1123","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR fixes an issue discovered by  Michael (https://github.com/open-quantum-safe/liboqs/pull/1117#issuecomment-969116802).\r\n\r\nThis will update legacy yaml files so that the new format is followed, and when a yaml file is updated the script it indicate it has done so. When this happens I recommend double checking the yaml file to make sure the ordering \"makes sense\" to human eyes.\r\n\r\nI also manually patched the yaml files of schemes that the copy_from_upstream.py script doesn't manage.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971692027","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123#issuecomment-971692027","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","id":971692027,"node_id":"IC_kwDOA-eq3c456tf7","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T15:30:10Z","updated_at":"2021-11-17T15:30:10Z","author_association":"COLLABORATOR","body":"I haven't removed the need for the second step (`python3 scripts/update_docs_from_yaml.py`) yet, but I need to run to a meeting. I think once that's done then this PR is ready to go. Sorry about all the problems.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971692027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T15:30:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18932516865","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125","id":1056059087,"node_id":"I_kwDOA-eq3c4-8i7P","number":1125,"title":"GCC 11 throws `mismatched bound` errors on arm64","user":{"login":"merkys","id":10404021,"node_id":"MDQ6VXNlcjEwNDA0MDIx","avatar_url":"https://avatars.githubusercontent.com/u/10404021?v=4","gravatar_id":"","url":"https://api.github.com/users/merkys","html_url":"https://github.com/merkys","followers_url":"https://api.github.com/users/merkys/followers","following_url":"https://api.github.com/users/merkys/following{/other_user}","gists_url":"https://api.github.com/users/merkys/gists{/gist_id}","starred_url":"https://api.github.com/users/merkys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merkys/subscriptions","organizations_url":"https://api.github.com/users/merkys/orgs","repos_url":"https://api.github.com/users/merkys/repos","events_url":"https://api.github.com/users/merkys/events{/privacy}","received_events_url":"https://api.github.com/users/merkys/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-11-17T12:13:34Z","updated_at":"2021-11-17T15:50:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am interested in packaging liboqs for Debian. Debian build of ba5b61a7 on arm64 fails due to `mismatched bound` errors:\r\n```\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:24:57: error: argument 1 of type ‘uint8_t[800]’ {aka ‘unsigned char[800]’} with mismatched bound [-Werror=array-parameter=]\r\n   24 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t pk[KYBER_PUBLICKEYBYTES],\r\n      |                                                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:2:\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.h:14:58: note: previously declared as ‘uint8_t *’ {aka ‘unsigned char *’}\r\n   14 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t *pk, uint8_t *sk);\r\n      |                                                 ~~~~~~~~~^~\r\n```\r\n([full build log](https://buildd.debian.org/status/fetch.php?pkg=liboqs&arch=arm64&ver=0.7.0.27.gba5b61a7%2Bdfsg-1&stamp=1637141594&raw=0); note Debian turns all GCC warning to errors)\r\n\r\nSimilar issue was reported as #1035 and seemingly has been fixed since then. Interestingly, most of the other architectures build just fine.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971711214","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125#issuecomment-971711214","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","id":971711214,"node_id":"IC_kwDOA-eq3c456yLu","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T15:50:46Z","updated_at":"2021-11-17T15:50:46Z","author_association":"MEMBER","body":"So maybe a question to @jschanck : Would addressing https://github.com/PQClean/PQClean/issues/420#issuecomment-971547997 be \"quick and easy\" for you (maybe extending https://github.com/PQClean/PQClean/pull/426)? \r\n\r\nIf so, we'd pull it in when closing out #1031. Otherwise, what about a patch to Kyber-aarch64 as part of https://github.com/open-quantum-safe/liboqs/pull/1123 to resolve this issue before the `liboqs` release as a solution until the PQClean-aarch64-Kyber code gets upgraded? Thoughts, @Martyrshot @dstebila ?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971711214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T15:50:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18935079237","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/events","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/40","id":1051440009,"node_id":"I_kwDOCa-Cls4-q7OJ","number":40,"title":"using openssl generated keys into liboqs-python code","user":{"login":"JamshedMemon","id":50607221,"node_id":"MDQ6VXNlcjUwNjA3MjIx","avatar_url":"https://avatars.githubusercontent.com/u/50607221?v=4","gravatar_id":"","url":"https://api.github.com/users/JamshedMemon","html_url":"https://github.com/JamshedMemon","followers_url":"https://api.github.com/users/JamshedMemon/followers","following_url":"https://api.github.com/users/JamshedMemon/following{/other_user}","gists_url":"https://api.github.com/users/JamshedMemon/gists{/gist_id}","starred_url":"https://api.github.com/users/JamshedMemon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JamshedMemon/subscriptions","organizations_url":"https://api.github.com/users/JamshedMemon/orgs","repos_url":"https://api.github.com/users/JamshedMemon/repos","events_url":"https://api.github.com/users/JamshedMemon/events{/privacy}","received_events_url":"https://api.github.com/users/JamshedMemon/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-11-11T23:22:10Z","updated_at":"2021-11-17T18:20:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI am trying to use the private key generated through openssl genpkey to sign a data into python. However, i am getting error about by string being too long. I can understand that the format of key generated through openssl and through your sig.py is different. Could you tell me how can i use the key generated through openssl into your python code?\r\n\r\nThanks.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments/971839225","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/40#issuecomment-971839225","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40","id":971839225,"node_id":"IC_kwDOCa-Cls457Rb5","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T18:20:04Z","updated_at":"2021-11-17T18:20:04Z","author_association":"CONTRIBUTOR","body":"Can you clarify what key (alg) you are trying to create? Are you trying to generate a post-quantum key using the OQS OpenSSL fork, and then using that key with our python wrapper?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments/971839225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T18:20:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18935113642","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","id":1054493551,"node_id":"PR_kwDOA-eq3c4uknlv","number":1123,"title":"Adding multiple upstream support to doc generation","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-11-16T06:22:42Z","updated_at":"2021-11-17T18:22:19Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1123","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR fixes an issue discovered by  Michael (https://github.com/open-quantum-safe/liboqs/pull/1117#issuecomment-969116802).\r\n\r\nThis will update legacy yaml files so that the new format is followed, and when a yaml file is updated the script it indicate it has done so. When this happens I recommend double checking the yaml file to make sure the ordering \"makes sense\" to human eyes.\r\n\r\nI also manually patched the yaml files of schemes that the copy_from_upstream.py script doesn't manage.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971841754","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123#issuecomment-971841754","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","id":971841754,"node_id":"IC_kwDOA-eq3c457SDa","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T18:22:19Z","updated_at":"2021-11-17T18:22:19Z","author_association":"COLLABORATOR","body":"We using `subprocess.run` (via `shell()`) in several places, so I think it's ok if this script is unix only?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971841754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T18:22:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18935196508","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","id":1054493551,"node_id":"PR_kwDOA-eq3c4uknlv","number":1123,"title":"Adding multiple upstream support to doc generation","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2021-11-16T06:22:42Z","updated_at":"2021-11-17T18:27:56Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1123","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR fixes an issue discovered by  Michael (https://github.com/open-quantum-safe/liboqs/pull/1117#issuecomment-969116802).\r\n\r\nThis will update legacy yaml files so that the new format is followed, and when a yaml file is updated the script it indicate it has done so. When this happens I recommend double checking the yaml file to make sure the ordering \"makes sense\" to human eyes.\r\n\r\nI also manually patched the yaml files of schemes that the copy_from_upstream.py script doesn't manage.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971848894","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123#issuecomment-971848894","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","id":971848894,"node_id":"IC_kwDOA-eq3c457Ty-","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T18:27:56Z","updated_at":"2021-11-17T18:27:56Z","author_association":"COLLABORATOR","body":"Assuming the arm64 test is some random docker issue (and all other tests pass) this pr should be ready for final review.\r\n\r\ntests pass on my arm based mac, so it should be ok.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971848894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T18:27:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18935215406","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","id":1054493551,"node_id":"PR_kwDOA-eq3c4uknlv","number":1123,"title":"Adding multiple upstream support to doc generation","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2021-11-16T06:22:42Z","updated_at":"2021-11-17T18:29:14Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1123","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR fixes an issue discovered by  Michael (https://github.com/open-quantum-safe/liboqs/pull/1117#issuecomment-969116802).\r\n\r\nThis will update legacy yaml files so that the new format is followed, and when a yaml file is updated the script it indicate it has done so. When this happens I recommend double checking the yaml file to make sure the ordering \"makes sense\" to human eyes.\r\n\r\nI also manually patched the yaml files of schemes that the copy_from_upstream.py script doesn't manage.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971850619","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123#issuecomment-971850619","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","id":971850619,"node_id":"IC_kwDOA-eq3c457UN7","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T18:29:14Z","updated_at":"2021-11-17T18:29:14Z","author_association":"MEMBER","body":"> We using `subprocess.run` (via `shell()`) in several places, so I think it's ok if this script is unix only?\r\n\r\nWe only need to be able to run the upstream code on Unix; preferably it would run on both Linux and macOS.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971850619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T18:29:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18935313812","type":"IssueCommentEvent","actor":{"id":50607221,"login":"JamshedMemon","display_login":"JamshedMemon","gravatar_id":"","url":"https://api.github.com/users/JamshedMemon","avatar_url":"https://avatars.githubusercontent.com/u/50607221?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/events","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/40","id":1051440009,"node_id":"I_kwDOCa-Cls4-q7OJ","number":40,"title":"using openssl generated keys into liboqs-python code","user":{"login":"JamshedMemon","id":50607221,"node_id":"MDQ6VXNlcjUwNjA3MjIx","avatar_url":"https://avatars.githubusercontent.com/u/50607221?v=4","gravatar_id":"","url":"https://api.github.com/users/JamshedMemon","html_url":"https://github.com/JamshedMemon","followers_url":"https://api.github.com/users/JamshedMemon/followers","following_url":"https://api.github.com/users/JamshedMemon/following{/other_user}","gists_url":"https://api.github.com/users/JamshedMemon/gists{/gist_id}","starred_url":"https://api.github.com/users/JamshedMemon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JamshedMemon/subscriptions","organizations_url":"https://api.github.com/users/JamshedMemon/orgs","repos_url":"https://api.github.com/users/JamshedMemon/repos","events_url":"https://api.github.com/users/JamshedMemon/events{/privacy}","received_events_url":"https://api.github.com/users/JamshedMemon/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-11-11T23:22:10Z","updated_at":"2021-11-17T18:36:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI am trying to use the private key generated through openssl genpkey to sign a data into python. However, i am getting error about by string being too long. I can understand that the format of key generated through openssl and through your sig.py is different. Could you tell me how can i use the key generated through openssl into your python code?\r\n\r\nThanks.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments/971859347","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/40#issuecomment-971859347","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40","id":971859347,"node_id":"IC_kwDOCa-Cls457WWT","user":{"login":"JamshedMemon","id":50607221,"node_id":"MDQ6VXNlcjUwNjA3MjIx","avatar_url":"https://avatars.githubusercontent.com/u/50607221?v=4","gravatar_id":"","url":"https://api.github.com/users/JamshedMemon","html_url":"https://github.com/JamshedMemon","followers_url":"https://api.github.com/users/JamshedMemon/followers","following_url":"https://api.github.com/users/JamshedMemon/following{/other_user}","gists_url":"https://api.github.com/users/JamshedMemon/gists{/gist_id}","starred_url":"https://api.github.com/users/JamshedMemon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JamshedMemon/subscriptions","organizations_url":"https://api.github.com/users/JamshedMemon/orgs","repos_url":"https://api.github.com/users/JamshedMemon/repos","events_url":"https://api.github.com/users/JamshedMemon/events{/privacy}","received_events_url":"https://api.github.com/users/JamshedMemon/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T18:36:05Z","updated_at":"2021-11-17T18:36:05Z","author_association":"NONE","body":"> Can you clarify what key (alg) you are trying to create? Are you trying to generate a post-quantum key using the OQS OpenSSL fork, and then using that key with our python wrapper?\r\n\r\nI am using Falcon-1024 and want to use the rest of OQS signature algorithms. Problem is that they certificate and private key generated by openssl cannot be used in the python wrapper as key generated by it is encoded. I am currently extracting the private key from .key file and public key from crt file and using it in python wrapper to sign and verify the signature. Is it possible to use certificate and key directly in python wrapper and verify that the certificate is signed by root ca. Thanks ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments/971859347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T18:36:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18935362454","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/events","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/40","id":1051440009,"node_id":"I_kwDOCa-Cls4-q7OJ","number":40,"title":"using openssl generated keys into liboqs-python code","user":{"login":"JamshedMemon","id":50607221,"node_id":"MDQ6VXNlcjUwNjA3MjIx","avatar_url":"https://avatars.githubusercontent.com/u/50607221?v=4","gravatar_id":"","url":"https://api.github.com/users/JamshedMemon","html_url":"https://github.com/JamshedMemon","followers_url":"https://api.github.com/users/JamshedMemon/followers","following_url":"https://api.github.com/users/JamshedMemon/following{/other_user}","gists_url":"https://api.github.com/users/JamshedMemon/gists{/gist_id}","starred_url":"https://api.github.com/users/JamshedMemon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JamshedMemon/subscriptions","organizations_url":"https://api.github.com/users/JamshedMemon/orgs","repos_url":"https://api.github.com/users/JamshedMemon/repos","events_url":"https://api.github.com/users/JamshedMemon/events{/privacy}","received_events_url":"https://api.github.com/users/JamshedMemon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-11-11T23:22:10Z","updated_at":"2021-11-17T18:39:31Z","closed_at":"2021-11-17T18:39:31Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI am trying to use the private key generated through openssl genpkey to sign a data into python. However, i am getting error about by string being too long. I can understand that the format of key generated through openssl and through your sig.py is different. Could you tell me how can i use the key generated through openssl into your python code?\r\n\r\nThanks.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments/971863919","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/40#issuecomment-971863919","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/40","id":971863919,"node_id":"IC_kwDOCa-Cls457Xdv","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T18:39:31Z","updated_at":"2021-11-17T18:39:31Z","author_association":"MEMBER","body":"Unfortunately we don't have support for that now.  The Python library uses raw byte strings for public / private keys following the NIST API, whereas OpenSSL's .key and .crt wrap those byte strings into bigger data structures.  In principle one could decode the ASN.1 and extract the byte strings for use in liboqs-Python, but we haven't written code to do that.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments/971863919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T18:39:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18935368696","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","id":1054493551,"node_id":"PR_kwDOA-eq3c4uknlv","number":1123,"title":"Adding multiple upstream support to doc generation","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2021-11-16T06:22:42Z","updated_at":"2021-11-17T18:39:59Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1123","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR fixes an issue discovered by  Michael (https://github.com/open-quantum-safe/liboqs/pull/1117#issuecomment-969116802).\r\n\r\nThis will update legacy yaml files so that the new format is followed, and when a yaml file is updated the script it indicate it has done so. When this happens I recommend double checking the yaml file to make sure the ordering \"makes sense\" to human eyes.\r\n\r\nI also manually patched the yaml files of schemes that the copy_from_upstream.py script doesn't manage.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971864523","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123#issuecomment-971864523","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","id":971864523,"node_id":"IC_kwDOA-eq3c457XnL","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T18:39:59Z","updated_at":"2021-11-17T18:39:59Z","author_association":"COLLABORATOR","body":"> > We using `subprocess.run` (via `shell()`) in several places, so I think it's ok if this script is unix only?\r\n> \r\n> We only need to be able to run the upstream code on Unix; preferably it would run on both Linux and macOS.\r\n\r\nI just tested that the script runs both on macOS and linux. But I found one small issue I need to fix with ignore before merging.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971864523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T18:39:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18935752675","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","id":1054493551,"node_id":"PR_kwDOA-eq3c4uknlv","number":1123,"title":"Adding multiple upstream support to doc generation","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2021-11-16T06:22:42Z","updated_at":"2021-11-17T19:06:56Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1123","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1123.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR fixes an issue discovered by  Michael (https://github.com/open-quantum-safe/liboqs/pull/1117#issuecomment-969116802).\r\n\r\nThis will update legacy yaml files so that the new format is followed, and when a yaml file is updated the script it indicate it has done so. When this happens I recommend double checking the yaml file to make sure the ordering \"makes sense\" to human eyes.\r\n\r\nI also manually patched the yaml files of schemes that the copy_from_upstream.py script doesn't manage.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971887361","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1123#issuecomment-971887361","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1123","id":971887361,"node_id":"IC_kwDOA-eq3c457dMB","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T19:06:56Z","updated_at":"2021-11-17T19:06:56Z","author_association":"COLLABORATOR","body":"> But I found one small issue I need to fix with ignore before merging.\r\n\r\nI fixed this issue, and we should be good to go now.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/971887361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T19:06:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18937602018","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125","id":1056059087,"node_id":"I_kwDOA-eq3c4-8i7P","number":1125,"title":"GCC 11 throws `mismatched bound` errors on arm64","user":{"login":"merkys","id":10404021,"node_id":"MDQ6VXNlcjEwNDA0MDIx","avatar_url":"https://avatars.githubusercontent.com/u/10404021?v=4","gravatar_id":"","url":"https://api.github.com/users/merkys","html_url":"https://github.com/merkys","followers_url":"https://api.github.com/users/merkys/followers","following_url":"https://api.github.com/users/merkys/following{/other_user}","gists_url":"https://api.github.com/users/merkys/gists{/gist_id}","starred_url":"https://api.github.com/users/merkys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merkys/subscriptions","organizations_url":"https://api.github.com/users/merkys/orgs","repos_url":"https://api.github.com/users/merkys/repos","events_url":"https://api.github.com/users/merkys/events{/privacy}","received_events_url":"https://api.github.com/users/merkys/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-11-17T12:13:34Z","updated_at":"2021-11-17T21:18:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I am interested in packaging liboqs for Debian. Debian build of ba5b61a7 on arm64 fails due to `mismatched bound` errors:\r\n```\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:24:57: error: argument 1 of type ‘uint8_t[800]’ {aka ‘unsigned char[800]’} with mismatched bound [-Werror=array-parameter=]\r\n   24 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t pk[KYBER_PUBLICKEYBYTES],\r\n      |                                                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.c:2:\r\n/<<PKGBUILDDIR>>/src/kem/kyber/pqclean_kyber512_aarch64/kem.h:14:58: note: previously declared as ‘uint8_t *’ {aka ‘unsigned char *’}\r\n   14 | int PQCLEAN_KYBER512_AARCH64_crypto_kem_keypair(uint8_t *pk, uint8_t *sk);\r\n      |                                                 ~~~~~~~~~^~\r\n```\r\n([full build log](https://buildd.debian.org/status/fetch.php?pkg=liboqs&arch=arm64&ver=0.7.0.27.gba5b61a7%2Bdfsg-1&stamp=1637141594&raw=0); note Debian turns all GCC warning to errors)\r\n\r\nSimilar issue was reported as #1035 and seemingly has been fixed since then. Interestingly, most of the other architectures build just fine.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125/timeline","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/972044960","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1125#issuecomment-972044960","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1125","id":972044960,"node_id":"IC_kwDOA-eq3c458Dqg","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-11-17T21:18:15Z","updated_at":"2021-11-17T21:18:15Z","author_association":"CONTRIBUTOR","body":"Matthias has been packaging the aarch64 version. I tagged him in the PQClean issue. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/972044960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2021-11-17T21:18:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
