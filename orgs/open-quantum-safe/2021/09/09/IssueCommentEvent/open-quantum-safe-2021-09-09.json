{"id":"17909379061","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1035","id":929893467,"node_id":"MDU6SXNzdWU5Mjk4OTM0Njc=","number":1035,"title":"Many schemes fail to compile with GCC 11.1.0","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-06-25T07:02:41Z","updated_at":"2021-09-09T01:37:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"After the SIKE issues in #1003 I saw that:\r\n\r\n* [ ] #1036\r\n```\r\nFAILED: src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o\r\n/usr/bin/cc  -Iinclude -I../src/kem/classic_mceliece/pqclean_mceliece348864_avx -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -mpopcnt -Wno-language-extension-token -std=gnu11 -MD -MT src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o -MF src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o.d -o src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o -c ../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c\r\n../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c:351:47: error: argument 1 of type ‘vec128[12]’ {aka ‘__m128i[12]’} with mismatched bound [-Werror=array-parameter=]\r\n  351 | void PQCLEAN_MCELIECE348864_AVX_fft_tr(vec128 out[GFBITS], vec256 in[][ GFBITS ]) {\r\n      |                                        ~~~~~~~^~~~~~~~~~~\r\nIn file included from ../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c:6:\r\n../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.h:11:40: note: previously declared as ‘vec128 *’ {aka ‘__m128i *’}\r\n   11 | void PQCLEAN_MCELIECE348864_AVX_fft_tr(vec128 * /*out*/, vec256  /*in*/[][ GFBITS ]);\r\n      |                                        ^~~~~~~~\r\n```\r\n\r\n* [ ] Kyber has problems\r\n\r\n```\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:557:64: error: argument 3 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  557 | void aes256ctr_prf(uint8_t *out, size_t outlen, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                 ~~~~~~~~~~~~~~~^~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:19:34: note: previously declared as an array ‘const uint8_t[32]’ {aka ‘const unsigned char[32]’}\r\n   19 |                    const uint8_t key[32],\r\n      |                    ~~~~~~~~~~~~~~^~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:557:84: error: argument 4 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  557 | void aes256ctr_prf(uint8_t *out, size_t outlen, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                                     ~~~~~~~~~~~~~~~^~~~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:20:34: note: previously declared as an array ‘const uint8_t[12]’ {aka ‘const unsigned char[12]’}\r\n   20 |                    const uint8_t nonce[12]);\r\n      |                    ~~~~~~~~~~~~~~^~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:565:54: error: argument 2 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  565 | void aes256ctr_init(aes256ctr_ctx *s, const uint8_t *key, const uint8_t *nonce)\r\n      |                                       ~~~~~~~~~~~~~~~^~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:24:35: note: previously declared as an array ‘const uint8_t[32]’ {aka ‘const unsigned char[32]’}\r\n   24 |                     const uint8_t key[32],\r\n      |                     ~~~~~~~~~~~~~~^~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:565:74: error: argument 3 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  565 | void aes256ctr_init(aes256ctr_ctx *s, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                           ~~~~~~~~~~~~~~~^~~~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:25:35: note: previously declared as an array ‘const uint8_t[12]’ {aka ‘const unsigned char[12]’}\r\n   25 |                     const uint8_t nonce[12]);\r\n      |                     ~~~~~~~~~~~~~~^~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c: In function ‘aes_ctr4x’:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:415:19: error: array subscript 112 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  415 |         q[0] ^= sk[0];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:416:19: error: array subscript 113 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  416 |         q[1] ^= sk[1];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:417:19: error: array subscript 114 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  417 |         q[2] ^= sk[2];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:418:19: error: array subscript 115 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  418 |         q[3] ^= sk[3];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:419:19: error: array subscript 116 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  419 |         q[4] ^= sk[4];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:420:19: error: array subscript 117 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  420 |         q[5] ^= sk[5];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:421:19: error: array subscript 118 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  421 |         q[6] ^= sk[6];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:422:19: error: array subscript 119 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  422 |         q[7] ^= sk[7];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n```\r\n\r\n* [ ] NTRU has problems\r\n\r\n```\r\nFAILED: src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o\r\n/usr/bin/cc  -Iinclude -I../src/kem/ntru/pqclean_ntruhps2048677_avx2 -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -mbmi2 -std=gnu11 -MD -MT src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o -MF src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o.d -o src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o -c ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:3:64: error: argument 1 of type ‘unsigned char[272]’ with mismatched bound [-Werror=array-parameter=]\r\n    3 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_tobytes(unsigned char msg[NTRU_OWCPA_MSGBYTES], const poly *a) {\r\n      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:1:\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/poly.h:25:64: note: previously declared as ‘unsigned char[136]’\r\n   25 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_tobytes(unsigned char msg[NTRU_PACK_TRINARY_BYTES], const poly *a);\r\n      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:24:81: error: argument 2 of type ‘const unsigned char[272]’ with mismatched bound [-Werror=array-parameter=]\r\n   24 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_frombytes(poly *r, const unsigned char msg[NTRU_OWCPA_MSGBYTES]) {\r\n      |                                                             ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:1:\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/poly.h:26:81: note: previously declared as ‘const unsigned char[136]’\r\n   26 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_frombytes(poly *r, const unsigned char msg[NTRU_PACK_TRINARY_BYTES]);\r\n      |                                                             ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n```\r\n\r\n* [ ] Dilithium has problems\r\n\r\n```\r\nFAILED: src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o\r\n/usr/bin/cc  -Iinclude -I../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2 -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -maes -mpopcnt -DDILITHIUM_MODE=2 -DDILITHIUM_USE_AES -DDILITHIUM_RANDOMIZED_SIGNING -std=gnu11 -MD -MT src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o -MF src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o.d -o src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o -c ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c\r\nIn file included from ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/params.h:4,\r\n                 from ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c:5:\r\n../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c: In function ‘pqcrystals_dilithium2aes_avx2_poly_uniform_eta_preinit’:\r\n../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/config.h:18:32: error: ‘pqcrystals_dilithium2aes_avx2_rej_eta_avx’ reading 768 bytes from a region of size 192 [-Werror=stringop-overread]\r\n```\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/915691351","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1035#issuecomment-915691351","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035","id":915691351,"node_id":"IC_kwDOA-eq3c42lFdX","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-09-09T01:37:58Z","updated_at":"2021-09-09T01:37:58Z","author_association":"MEMBER","body":"@bhess Would you be able to look at the Kyber and Dilithium issues here?","performed_via_github_app":null}},"public":true,"created_at":"2021-09-09T01:37:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17909476871","type":"IssueCommentEvent","actor":{"id":85988181,"login":"ray19941201","display_login":"ray19941201","gravatar_id":"","url":"https://api.github.com/users/ray19941201","avatar_url":"https://avatars.githubusercontent.com/u/85988181?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100","id":989523192,"node_id":"MDU6SXNzdWU5ODk1MjMxOTI=","number":100,"title":"How to change the default PQ KEX algorithm of OQS-chromium?","user":{"login":"ray19941201","id":85988181,"node_id":"MDQ6VXNlcjg1OTg4MTgx","avatar_url":"https://avatars.githubusercontent.com/u/85988181?v=4","gravatar_id":"","url":"https://api.github.com/users/ray19941201","html_url":"https://github.com/ray19941201","followers_url":"https://api.github.com/users/ray19941201/followers","following_url":"https://api.github.com/users/ray19941201/following{/other_user}","gists_url":"https://api.github.com/users/ray19941201/gists{/gist_id}","starred_url":"https://api.github.com/users/ray19941201/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ray19941201/subscriptions","organizations_url":"https://api.github.com/users/ray19941201/orgs","repos_url":"https://api.github.com/users/ray19941201/repos","events_url":"https://api.github.com/users/ray19941201/events{/privacy}","received_events_url":"https://api.github.com/users/ray19941201/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-09-07T01:55:36Z","updated_at":"2021-09-09T01:51:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI have followed the instructions within the oqs-demos repository to build an OQS-enabled chromium and an OQS-enabled httpd server. \r\n\r\nI found out that due to the chromium currently doesn't support curves option like the command line, it will use the default algorithm when I issue a HTTP request to my httpd server from it. \r\nSo if I configure my server only support algorithm \"kyber512\", the chromium will return the error page as shown below.\r\n![image](https://user-images.githubusercontent.com/85988181/132272365-a0b58946-a1e0-428a-8f99-d1d4bff63cb6.png)\r\n\r\nI have read the implementation notes of the BoringSSL saying that the client can use the `SSL_CTX_set1_curves_list` call to  override this. But I can't find any instructions about how to actually do this.\r\n\r\nIs that possible can anyone provide some information or instructions about how to do this? \r\n\r\nKind regards,\r\n\r\nRay\r\n ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/915696130","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100#issuecomment-915696130","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","id":915696130,"node_id":"IC_kwDODP--n842lGoC","user":{"login":"ray19941201","id":85988181,"node_id":"MDQ6VXNlcjg1OTg4MTgx","avatar_url":"https://avatars.githubusercontent.com/u/85988181?v=4","gravatar_id":"","url":"https://api.github.com/users/ray19941201","html_url":"https://github.com/ray19941201","followers_url":"https://api.github.com/users/ray19941201/followers","following_url":"https://api.github.com/users/ray19941201/following{/other_user}","gists_url":"https://api.github.com/users/ray19941201/gists{/gist_id}","starred_url":"https://api.github.com/users/ray19941201/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ray19941201/subscriptions","organizations_url":"https://api.github.com/users/ray19941201/orgs","repos_url":"https://api.github.com/users/ray19941201/repos","events_url":"https://api.github.com/users/ray19941201/events{/privacy}","received_events_url":"https://api.github.com/users/ray19941201/received_events","type":"User","site_admin":false},"created_at":"2021-09-09T01:51:27Z","updated_at":"2021-09-09T01:51:27Z","author_association":"NONE","body":"> In my view, a good researcher (still consider myself one) shouldn't shy back from understanding others' code to give it new capabilities (call it \"source code archaeology\" and it's a scientific undertaking :-)\r\n\r\nTotally agree. Maybe I should put it another way, I should say coding is my weakness and I'm still learning to improve it. But just consider what I am currently capable of I would say that the task is too hard for me. 😅😅\r\n\r\n\r\n\r\n\r\n> Yes. Thus it would be prudent to include all QSC algorithms your company servers would want to support: This is just a list: The more complete it is, the more algorithms your QSC-chromium build can support. It's only getting slightly more inefficient with an _extremely_ long list of algorithms.\r\n\r\n> Yes. If you successfully built chromium all you (should) need to do is a re-build (after changing the list): The build system should take care of the rest.\r\n\r\nI see. Thank you very much sir. This is very clear and helpful. I will rebuild it and choose a proper subset of the algorithms.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-09-09T01:51:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17910989284","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100","id":989523192,"node_id":"MDU6SXNzdWU5ODk1MjMxOTI=","number":100,"title":"How to change the default PQ KEX algorithm of OQS-chromium?","user":{"login":"ray19941201","id":85988181,"node_id":"MDQ6VXNlcjg1OTg4MTgx","avatar_url":"https://avatars.githubusercontent.com/u/85988181?v=4","gravatar_id":"","url":"https://api.github.com/users/ray19941201","html_url":"https://github.com/ray19941201","followers_url":"https://api.github.com/users/ray19941201/followers","following_url":"https://api.github.com/users/ray19941201/following{/other_user}","gists_url":"https://api.github.com/users/ray19941201/gists{/gist_id}","starred_url":"https://api.github.com/users/ray19941201/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ray19941201/subscriptions","organizations_url":"https://api.github.com/users/ray19941201/orgs","repos_url":"https://api.github.com/users/ray19941201/repos","events_url":"https://api.github.com/users/ray19941201/events{/privacy}","received_events_url":"https://api.github.com/users/ray19941201/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-09-07T01:55:36Z","updated_at":"2021-09-09T05:13:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI have followed the instructions within the oqs-demos repository to build an OQS-enabled chromium and an OQS-enabled httpd server. \r\n\r\nI found out that due to the chromium currently doesn't support curves option like the command line, it will use the default algorithm when I issue a HTTP request to my httpd server from it. \r\nSo if I configure my server only support algorithm \"kyber512\", the chromium will return the error page as shown below.\r\n![image](https://user-images.githubusercontent.com/85988181/132272365-a0b58946-a1e0-428a-8f99-d1d4bff63cb6.png)\r\n\r\nI have read the implementation notes of the BoringSSL saying that the client can use the `SSL_CTX_set1_curves_list` call to  override this. But I can't find any instructions about how to actually do this.\r\n\r\nIs that possible can anyone provide some information or instructions about how to do this? \r\n\r\nKind regards,\r\n\r\nRay\r\n ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/915769230","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100#issuecomment-915769230","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","id":915769230,"node_id":"IC_kwDODP--n842lYeO","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-09-09T05:13:28Z","updated_at":"2021-09-09T05:13:28Z","author_association":"MEMBER","body":"> I would say that the task is too hard for me\r\n\r\nAll right. But skills change over time and it'd be great if you could see this as a challenge to grow your skills on and help us resolve #52.\r\n\r\n> I see. Thank you very much sir. This is very clear and helpful. I will rebuild it and choose a proper subset of the algorithms.\r\n\r\nGood to hear. I'd then be glad to hear if this worked and we can close this issue.\r\n\r\nIn any case, thanks for making us aware of some shortcomings in our documentation: We improved that accordingly.","performed_via_github_app":null}},"public":true,"created_at":"2021-09-09T05:13:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17911747259","type":"IssueCommentEvent","actor":{"id":51086295,"login":"chongweil907","display_login":"chongweil907","gravatar_id":"","url":"https://api.github.com/users/chongweil907","avatar_url":"https://avatars.githubusercontent.com/u/51086295?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/331","id":988905153,"node_id":"MDU6SXNzdWU5ODg5MDUxNTM=","number":331,"title":"TLS demo of openssl","user":{"login":"chongweil907","id":51086295,"node_id":"MDQ6VXNlcjUxMDg2Mjk1","avatar_url":"https://avatars.githubusercontent.com/u/51086295?v=4","gravatar_id":"","url":"https://api.github.com/users/chongweil907","html_url":"https://github.com/chongweil907","followers_url":"https://api.github.com/users/chongweil907/followers","following_url":"https://api.github.com/users/chongweil907/following{/other_user}","gists_url":"https://api.github.com/users/chongweil907/gists{/gist_id}","starred_url":"https://api.github.com/users/chongweil907/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chongweil907/subscriptions","organizations_url":"https://api.github.com/users/chongweil907/orgs","repos_url":"https://api.github.com/users/chongweil907/repos","events_url":"https://api.github.com/users/chongweil907/events{/privacy}","received_events_url":"https://api.github.com/users/chongweil907/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-09-06T08:16:14Z","updated_at":"2021-09-09T06:34:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, I am an undergraduate student trying to use the OQS OpenSSL library for my project and I have some questions that I hope you can answer me.\r\n\r\n1. Can I seek your clarification on what kind of TLS connection is set up (what data is communicated between client and server)  in the TLS demo of the readme file?\r\n\r\n2. Personally, I created a self-signed root server where it’s signature algorithm is Falcon1024 and a  dilithium2 server where it is signed by the root server using Falcon1024. The following is the result that I got when I run the client and the server:\r\n\r\n![image](https://user-images.githubusercontent.com/51086295/132183850-ba64f267-079f-410c-85ff-ba8127206506.png)\r\n![image](https://user-images.githubusercontent.com/51086295/132183080-68335131-0780-4bed-9f40-14c3b44a6c65.png)\r\n\r\nI don’t get why there is an error (underlined in red) as dilithium2_srv is not a self-signed CA because it is signed by the root CA using falcon1024.\r\n \r\n  \r\n![image](https://user-images.githubusercontent.com/51086295/132183201-778dfbdf-81d8-4222-94aa-03e9cdb58f48.png)\r\n\r\n\r\n3. I also want to ask if OQS is able to create a certificate chain and then set up a TLS connection between client A and client B as shown above ? \r\n\r\nThank you very much and hope to hear from you soon!\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/915804548","html_url":"https://github.com/open-quantum-safe/openssl/issues/331#issuecomment-915804548","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331","id":915804548,"node_id":"IC_kwDOA_fpb842lhGE","user":{"login":"chongweil907","id":51086295,"node_id":"MDQ6VXNlcjUxMDg2Mjk1","avatar_url":"https://avatars.githubusercontent.com/u/51086295?v=4","gravatar_id":"","url":"https://api.github.com/users/chongweil907","html_url":"https://github.com/chongweil907","followers_url":"https://api.github.com/users/chongweil907/followers","following_url":"https://api.github.com/users/chongweil907/following{/other_user}","gists_url":"https://api.github.com/users/chongweil907/gists{/gist_id}","starred_url":"https://api.github.com/users/chongweil907/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chongweil907/subscriptions","organizations_url":"https://api.github.com/users/chongweil907/orgs","repos_url":"https://api.github.com/users/chongweil907/repos","events_url":"https://api.github.com/users/chongweil907/events{/privacy}","received_events_url":"https://api.github.com/users/chongweil907/received_events","type":"User","site_admin":false},"created_at":"2021-09-09T06:34:49Z","updated_at":"2021-09-09T06:34:49Z","author_association":"NONE","body":"Hi, \r\n\r\nThanks for the prompt replies. I really appreciate it.\r\n\r\nI have several follow-up questions that I hope you don’t mind answering as I am still relatively new to this field. \r\n\r\nLet’s say if I have a root self-signed falcon1024_CA and it signs dilithium2_srv and dilithium2_srv signs sphincsharaka128frobust_srv.  Can a dilithium2_srv sign another server ?\r\nEg  apps/openssl x509 -req -in sphincsharaka128frobust_srv.csr -out -CA  dilithium2_srv.crt -CAkey  dilithium2_srv.key -CAcreateserial -days 365\r\n\r\nNext if I run sphincsharaka128frobust_srv as a server, what should I put as <SIG>_CA.crt in \r\napps/openssl s_client -groups <KEX> -CAfile <SIG>_CA.crt? Is it falcon1024_CA or dilithium2_srv?\r\n\r\nThe aim of my project is to measure the efficiency between servers of different certificate chains and clients.\r\n\r\nThank you so much!\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-09-09T06:34:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17912031794","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/331","id":988905153,"node_id":"MDU6SXNzdWU5ODg5MDUxNTM=","number":331,"title":"TLS demo of openssl","user":{"login":"chongweil907","id":51086295,"node_id":"MDQ6VXNlcjUxMDg2Mjk1","avatar_url":"https://avatars.githubusercontent.com/u/51086295?v=4","gravatar_id":"","url":"https://api.github.com/users/chongweil907","html_url":"https://github.com/chongweil907","followers_url":"https://api.github.com/users/chongweil907/followers","following_url":"https://api.github.com/users/chongweil907/following{/other_user}","gists_url":"https://api.github.com/users/chongweil907/gists{/gist_id}","starred_url":"https://api.github.com/users/chongweil907/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chongweil907/subscriptions","organizations_url":"https://api.github.com/users/chongweil907/orgs","repos_url":"https://api.github.com/users/chongweil907/repos","events_url":"https://api.github.com/users/chongweil907/events{/privacy}","received_events_url":"https://api.github.com/users/chongweil907/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-09-06T08:16:14Z","updated_at":"2021-09-09T06:59:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, I am an undergraduate student trying to use the OQS OpenSSL library for my project and I have some questions that I hope you can answer me.\r\n\r\n1. Can I seek your clarification on what kind of TLS connection is set up (what data is communicated between client and server)  in the TLS demo of the readme file?\r\n\r\n2. Personally, I created a self-signed root server where it’s signature algorithm is Falcon1024 and a  dilithium2 server where it is signed by the root server using Falcon1024. The following is the result that I got when I run the client and the server:\r\n\r\n![image](https://user-images.githubusercontent.com/51086295/132183850-ba64f267-079f-410c-85ff-ba8127206506.png)\r\n![image](https://user-images.githubusercontent.com/51086295/132183080-68335131-0780-4bed-9f40-14c3b44a6c65.png)\r\n\r\nI don’t get why there is an error (underlined in red) as dilithium2_srv is not a self-signed CA because it is signed by the root CA using falcon1024.\r\n \r\n  \r\n![image](https://user-images.githubusercontent.com/51086295/132183201-778dfbdf-81d8-4222-94aa-03e9cdb58f48.png)\r\n\r\n\r\n3. I also want to ask if OQS is able to create a certificate chain and then set up a TLS connection between client A and client B as shown above ? \r\n\r\nThank you very much and hope to hear from you soon!\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/915817219","html_url":"https://github.com/open-quantum-safe/openssl/issues/331#issuecomment-915817219","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/331","id":915817219,"node_id":"IC_kwDOA_fpb842lkMD","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-09-09T06:59:41Z","updated_at":"2021-09-09T06:59:41Z","author_association":"MEMBER","body":"Yes, all of this is possible and I think it's up to you which CA in a chain you set (but I didn't check openssl's behaviour in such case myself). But I'm personally wary that you're playing with many variables (intermediate certs, algorithms, openssl behaviour) at the same time, so I'm not sure you'll get sufficiently \"informative\"/algorithm-discriminating results/numbers. Also, did you already check out https://openquantumsafe.org/benchmarking/visualization/handshakes.html (open the \"...\"/Hamburger menu on the top left to toggle between algorithms)? You'll see that such measurements are subject to large variability over time and thus arguably of limited utility. Raw (signature) performance numbers are probably more reliable/tell-tale if you want to know algorithm efficiency. However, should you do get reliably reproducible numbers with clear dependency on algorithms chosen, please let us know, e.g., adding a link to your results below: Thanks in advance!","performed_via_github_app":null}},"public":true,"created_at":"2021-09-09T06:59:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17914004693","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1035","id":929893467,"node_id":"MDU6SXNzdWU5Mjk4OTM0Njc=","number":1035,"title":"Many schemes fail to compile with GCC 11.1.0","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-06-25T07:02:41Z","updated_at":"2021-09-09T09:16:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"After the SIKE issues in #1003 I saw that:\r\n\r\n* [ ] #1036\r\n```\r\nFAILED: src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o\r\n/usr/bin/cc  -Iinclude -I../src/kem/classic_mceliece/pqclean_mceliece348864_avx -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -mpopcnt -Wno-language-extension-token -std=gnu11 -MD -MT src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o -MF src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o.d -o src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o -c ../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c\r\n../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c:351:47: error: argument 1 of type ‘vec128[12]’ {aka ‘__m128i[12]’} with mismatched bound [-Werror=array-parameter=]\r\n  351 | void PQCLEAN_MCELIECE348864_AVX_fft_tr(vec128 out[GFBITS], vec256 in[][ GFBITS ]) {\r\n      |                                        ~~~~~~~^~~~~~~~~~~\r\nIn file included from ../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c:6:\r\n../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.h:11:40: note: previously declared as ‘vec128 *’ {aka ‘__m128i *’}\r\n   11 | void PQCLEAN_MCELIECE348864_AVX_fft_tr(vec128 * /*out*/, vec256  /*in*/[][ GFBITS ]);\r\n      |                                        ^~~~~~~~\r\n```\r\n\r\n* [ ] Kyber has problems\r\n\r\n```\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:557:64: error: argument 3 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  557 | void aes256ctr_prf(uint8_t *out, size_t outlen, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                 ~~~~~~~~~~~~~~~^~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:19:34: note: previously declared as an array ‘const uint8_t[32]’ {aka ‘const unsigned char[32]’}\r\n   19 |                    const uint8_t key[32],\r\n      |                    ~~~~~~~~~~~~~~^~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:557:84: error: argument 4 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  557 | void aes256ctr_prf(uint8_t *out, size_t outlen, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                                     ~~~~~~~~~~~~~~~^~~~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:20:34: note: previously declared as an array ‘const uint8_t[12]’ {aka ‘const unsigned char[12]’}\r\n   20 |                    const uint8_t nonce[12]);\r\n      |                    ~~~~~~~~~~~~~~^~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:565:54: error: argument 2 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  565 | void aes256ctr_init(aes256ctr_ctx *s, const uint8_t *key, const uint8_t *nonce)\r\n      |                                       ~~~~~~~~~~~~~~~^~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:24:35: note: previously declared as an array ‘const uint8_t[32]’ {aka ‘const unsigned char[32]’}\r\n   24 |                     const uint8_t key[32],\r\n      |                     ~~~~~~~~~~~~~~^~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:565:74: error: argument 3 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  565 | void aes256ctr_init(aes256ctr_ctx *s, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                           ~~~~~~~~~~~~~~~^~~~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:25:35: note: previously declared as an array ‘const uint8_t[12]’ {aka ‘const unsigned char[12]’}\r\n   25 |                     const uint8_t nonce[12]);\r\n      |                     ~~~~~~~~~~~~~~^~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c: In function ‘aes_ctr4x’:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:415:19: error: array subscript 112 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  415 |         q[0] ^= sk[0];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:416:19: error: array subscript 113 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  416 |         q[1] ^= sk[1];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:417:19: error: array subscript 114 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  417 |         q[2] ^= sk[2];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:418:19: error: array subscript 115 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  418 |         q[3] ^= sk[3];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:419:19: error: array subscript 116 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  419 |         q[4] ^= sk[4];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:420:19: error: array subscript 117 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  420 |         q[5] ^= sk[5];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:421:19: error: array subscript 118 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  421 |         q[6] ^= sk[6];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:422:19: error: array subscript 119 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  422 |         q[7] ^= sk[7];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n```\r\n\r\n* [ ] NTRU has problems\r\n\r\n```\r\nFAILED: src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o\r\n/usr/bin/cc  -Iinclude -I../src/kem/ntru/pqclean_ntruhps2048677_avx2 -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -mbmi2 -std=gnu11 -MD -MT src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o -MF src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o.d -o src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o -c ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:3:64: error: argument 1 of type ‘unsigned char[272]’ with mismatched bound [-Werror=array-parameter=]\r\n    3 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_tobytes(unsigned char msg[NTRU_OWCPA_MSGBYTES], const poly *a) {\r\n      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:1:\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/poly.h:25:64: note: previously declared as ‘unsigned char[136]’\r\n   25 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_tobytes(unsigned char msg[NTRU_PACK_TRINARY_BYTES], const poly *a);\r\n      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:24:81: error: argument 2 of type ‘const unsigned char[272]’ with mismatched bound [-Werror=array-parameter=]\r\n   24 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_frombytes(poly *r, const unsigned char msg[NTRU_OWCPA_MSGBYTES]) {\r\n      |                                                             ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:1:\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/poly.h:26:81: note: previously declared as ‘const unsigned char[136]’\r\n   26 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_frombytes(poly *r, const unsigned char msg[NTRU_PACK_TRINARY_BYTES]);\r\n      |                                                             ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n```\r\n\r\n* [ ] Dilithium has problems\r\n\r\n```\r\nFAILED: src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o\r\n/usr/bin/cc  -Iinclude -I../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2 -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -maes -mpopcnt -DDILITHIUM_MODE=2 -DDILITHIUM_USE_AES -DDILITHIUM_RANDOMIZED_SIGNING -std=gnu11 -MD -MT src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o -MF src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o.d -o src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o -c ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c\r\nIn file included from ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/params.h:4,\r\n                 from ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c:5:\r\n../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c: In function ‘pqcrystals_dilithium2aes_avx2_poly_uniform_eta_preinit’:\r\n../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/config.h:18:32: error: ‘pqcrystals_dilithium2aes_avx2_rej_eta_avx’ reading 768 bytes from a region of size 192 [-Werror=stringop-overread]\r\n```\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/915910349","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1035#issuecomment-915910349","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035","id":915910349,"node_id":"IC_kwDOA-eq3c42l67N","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2021-09-09T09:16:02Z","updated_at":"2021-09-09T09:16:02Z","author_association":"CONTRIBUTOR","body":"> @bhess Would you be able to look at the Kyber and Dilithium issues here?\r\n\r\nYes, I'll take a closer look at the issues.","performed_via_github_app":null}},"public":true,"created_at":"2021-09-09T09:16:03Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
