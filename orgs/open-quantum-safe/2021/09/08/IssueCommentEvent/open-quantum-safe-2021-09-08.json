{"id":"17893732149","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100","id":989523192,"node_id":"MDU6SXNzdWU5ODk1MjMxOTI=","number":100,"title":"How to change the default PQ KEX algorithm of OQS-chromium?","user":{"login":"ray19941201","id":85988181,"node_id":"MDQ6VXNlcjg1OTg4MTgx","avatar_url":"https://avatars.githubusercontent.com/u/85988181?v=4","gravatar_id":"","url":"https://api.github.com/users/ray19941201","html_url":"https://github.com/ray19941201","followers_url":"https://api.github.com/users/ray19941201/followers","following_url":"https://api.github.com/users/ray19941201/following{/other_user}","gists_url":"https://api.github.com/users/ray19941201/gists{/gist_id}","starred_url":"https://api.github.com/users/ray19941201/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ray19941201/subscriptions","organizations_url":"https://api.github.com/users/ray19941201/orgs","repos_url":"https://api.github.com/users/ray19941201/repos","events_url":"https://api.github.com/users/ray19941201/events{/privacy}","received_events_url":"https://api.github.com/users/ray19941201/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-09-07T01:55:36Z","updated_at":"2021-09-08T05:15:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI have followed the instructions within the oqs-demos repository to build an OQS-enabled chromium and an OQS-enabled httpd server. \r\n\r\nI found out that due to the chromium currently doesn't support curves option like the command line, it will use the default algorithm when I issue a HTTP request to my httpd server from it. \r\nSo if I configure my server only support algorithm \"kyber512\", the chromium will return the error page as shown below.\r\n![image](https://user-images.githubusercontent.com/85988181/132272365-a0b58946-a1e0-428a-8f99-d1d4bff63cb6.png)\r\n\r\nI have read the implementation notes of the BoringSSL saying that the client can use the `SSL_CTX_set1_curves_list` call to  override this. But I can't find any instructions about how to actually do this.\r\n\r\nIs that possible can anyone provide some information or instructions about how to do this? \r\n\r\nKind regards,\r\n\r\nRay\r\n ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/914924302","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100#issuecomment-914924302","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","id":914924302,"node_id":"IC_kwDODP--n842iKMO","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-09-08T05:15:46Z","updated_at":"2021-09-08T05:15:46Z","author_association":"MEMBER","body":"> Unfortunately I'm more like a researcher than a developer. Not really good at programming.\r\n\r\nIn my view, a good researcher (still consider myself one) shouldn't shy back from understanding others' code to give it new capabilities (call it \"source code archaeology\" and it's a scientific undertaking :-)\r\n\r\n> Does this mean once I built the chromium I can no longer change it anymore?\r\n\r\nYes. Thus it would be prudent to include all QSC algorithms your company servers would want to support: This is just a list: The more complete it is, the more algorithms your QSC-chromium build can support. It's only getting slightly more inefficient with an _extremely_ long list of algorithms.\r\n\r\n> I'm guessing I probably should do this once the BoringSSL has been swapped with OQS-BoringSSL?\r\n\r\nYes. If you successfully built chromium all you (should) need to do is a re-build (after changing the list): The build system should take care of the rest.","performed_via_github_app":null}},"public":true,"created_at":"2021-09-08T05:15:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17894017910","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1035","id":929893467,"node_id":"MDU6SXNzdWU5Mjk4OTM0Njc=","number":1035,"title":"Many schemes fail to compile with GCC 11.1.0","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-06-25T07:02:41Z","updated_at":"2021-09-08T05:50:38Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"After the SIKE issues in #1003 I saw that:\r\n\r\n* [ ] #1036\r\n```\r\nFAILED: src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o\r\n/usr/bin/cc  -Iinclude -I../src/kem/classic_mceliece/pqclean_mceliece348864_avx -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -mpopcnt -Wno-language-extension-token -std=gnu11 -MD -MT src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o -MF src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o.d -o src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o -c ../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c\r\n../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c:351:47: error: argument 1 of type ‘vec128[12]’ {aka ‘__m128i[12]’} with mismatched bound [-Werror=array-parameter=]\r\n  351 | void PQCLEAN_MCELIECE348864_AVX_fft_tr(vec128 out[GFBITS], vec256 in[][ GFBITS ]) {\r\n      |                                        ~~~~~~~^~~~~~~~~~~\r\nIn file included from ../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c:6:\r\n../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.h:11:40: note: previously declared as ‘vec128 *’ {aka ‘__m128i *’}\r\n   11 | void PQCLEAN_MCELIECE348864_AVX_fft_tr(vec128 * /*out*/, vec256  /*in*/[][ GFBITS ]);\r\n      |                                        ^~~~~~~~\r\n```\r\n\r\n* [ ] Kyber has problems\r\n\r\n```\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:557:64: error: argument 3 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  557 | void aes256ctr_prf(uint8_t *out, size_t outlen, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                 ~~~~~~~~~~~~~~~^~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:19:34: note: previously declared as an array ‘const uint8_t[32]’ {aka ‘const unsigned char[32]’}\r\n   19 |                    const uint8_t key[32],\r\n      |                    ~~~~~~~~~~~~~~^~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:557:84: error: argument 4 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  557 | void aes256ctr_prf(uint8_t *out, size_t outlen, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                                     ~~~~~~~~~~~~~~~^~~~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:20:34: note: previously declared as an array ‘const uint8_t[12]’ {aka ‘const unsigned char[12]’}\r\n   20 |                    const uint8_t nonce[12]);\r\n      |                    ~~~~~~~~~~~~~~^~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:565:54: error: argument 2 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  565 | void aes256ctr_init(aes256ctr_ctx *s, const uint8_t *key, const uint8_t *nonce)\r\n      |                                       ~~~~~~~~~~~~~~~^~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:24:35: note: previously declared as an array ‘const uint8_t[32]’ {aka ‘const unsigned char[32]’}\r\n   24 |                     const uint8_t key[32],\r\n      |                     ~~~~~~~~~~~~~~^~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:565:74: error: argument 3 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  565 | void aes256ctr_init(aes256ctr_ctx *s, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                           ~~~~~~~~~~~~~~~^~~~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:25:35: note: previously declared as an array ‘const uint8_t[12]’ {aka ‘const unsigned char[12]’}\r\n   25 |                     const uint8_t nonce[12]);\r\n      |                     ~~~~~~~~~~~~~~^~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c: In function ‘aes_ctr4x’:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:415:19: error: array subscript 112 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  415 |         q[0] ^= sk[0];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:416:19: error: array subscript 113 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  416 |         q[1] ^= sk[1];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:417:19: error: array subscript 114 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  417 |         q[2] ^= sk[2];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:418:19: error: array subscript 115 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  418 |         q[3] ^= sk[3];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:419:19: error: array subscript 116 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  419 |         q[4] ^= sk[4];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:420:19: error: array subscript 117 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  420 |         q[5] ^= sk[5];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:421:19: error: array subscript 118 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  421 |         q[6] ^= sk[6];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:422:19: error: array subscript 119 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  422 |         q[7] ^= sk[7];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n```\r\n\r\n* [ ] NTRU has problems\r\n\r\n```\r\nFAILED: src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o\r\n/usr/bin/cc  -Iinclude -I../src/kem/ntru/pqclean_ntruhps2048677_avx2 -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -mbmi2 -std=gnu11 -MD -MT src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o -MF src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o.d -o src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o -c ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:3:64: error: argument 1 of type ‘unsigned char[272]’ with mismatched bound [-Werror=array-parameter=]\r\n    3 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_tobytes(unsigned char msg[NTRU_OWCPA_MSGBYTES], const poly *a) {\r\n      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:1:\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/poly.h:25:64: note: previously declared as ‘unsigned char[136]’\r\n   25 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_tobytes(unsigned char msg[NTRU_PACK_TRINARY_BYTES], const poly *a);\r\n      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:24:81: error: argument 2 of type ‘const unsigned char[272]’ with mismatched bound [-Werror=array-parameter=]\r\n   24 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_frombytes(poly *r, const unsigned char msg[NTRU_OWCPA_MSGBYTES]) {\r\n      |                                                             ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:1:\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/poly.h:26:81: note: previously declared as ‘const unsigned char[136]’\r\n   26 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_frombytes(poly *r, const unsigned char msg[NTRU_PACK_TRINARY_BYTES]);\r\n      |                                                             ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n```\r\n\r\n* [ ] Dilithium has problems\r\n\r\n```\r\nFAILED: src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o\r\n/usr/bin/cc  -Iinclude -I../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2 -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -maes -mpopcnt -DDILITHIUM_MODE=2 -DDILITHIUM_USE_AES -DDILITHIUM_RANDOMIZED_SIGNING -std=gnu11 -MD -MT src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o -MF src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o.d -o src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o -c ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c\r\nIn file included from ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/params.h:4,\r\n                 from ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c:5:\r\n../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c: In function ‘pqcrystals_dilithium2aes_avx2_poly_uniform_eta_preinit’:\r\n../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/config.h:18:32: error: ‘pqcrystals_dilithium2aes_avx2_rej_eta_avx’ reading 768 bytes from a region of size 192 [-Werror=stringop-overread]\r\n```\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/914937268","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1035#issuecomment-914937268","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035","id":914937268,"node_id":"IC_kwDOA-eq3c42iNW0","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-09-08T05:50:38Z","updated_at":"2021-09-08T05:50:38Z","author_association":"MEMBER","body":"FWIW: `cygwin` seems to have upgraded by default to GCC11, triggering [this Appveyor failure](https://ci.appveyor.com/project/dstebila/liboqs/builds/40682266/job/ulj3g4nod20c57bd) making resolution of this issue more urgent. Alternative: Force use of GCC<11...","performed_via_github_app":null}},"public":true,"created_at":"2021-09-08T05:50:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
