{"id":"17927357943","type":"IssueCommentEvent","actor":{"id":85988181,"login":"ray19941201","display_login":"ray19941201","gravatar_id":"","url":"https://api.github.com/users/ray19941201","avatar_url":"https://avatars.githubusercontent.com/u/85988181?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100","id":989523192,"node_id":"MDU6SXNzdWU5ODk1MjMxOTI=","number":100,"title":"How to change the default PQ KEX algorithm of OQS-chromium?","user":{"login":"ray19941201","id":85988181,"node_id":"MDQ6VXNlcjg1OTg4MTgx","avatar_url":"https://avatars.githubusercontent.com/u/85988181?v=4","gravatar_id":"","url":"https://api.github.com/users/ray19941201","html_url":"https://github.com/ray19941201","followers_url":"https://api.github.com/users/ray19941201/followers","following_url":"https://api.github.com/users/ray19941201/following{/other_user}","gists_url":"https://api.github.com/users/ray19941201/gists{/gist_id}","starred_url":"https://api.github.com/users/ray19941201/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ray19941201/subscriptions","organizations_url":"https://api.github.com/users/ray19941201/orgs","repos_url":"https://api.github.com/users/ray19941201/repos","events_url":"https://api.github.com/users/ray19941201/events{/privacy}","received_events_url":"https://api.github.com/users/ray19941201/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-09-07T01:55:36Z","updated_at":"2021-09-10T02:40:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI have followed the instructions within the oqs-demos repository to build an OQS-enabled chromium and an OQS-enabled httpd server. \r\n\r\nI found out that due to the chromium currently doesn't support curves option like the command line, it will use the default algorithm when I issue a HTTP request to my httpd server from it. \r\nSo if I configure my server only support algorithm \"kyber512\", the chromium will return the error page as shown below.\r\n![image](https://user-images.githubusercontent.com/85988181/132272365-a0b58946-a1e0-428a-8f99-d1d4bff63cb6.png)\r\n\r\nI have read the implementation notes of the BoringSSL saying that the client can use the `SSL_CTX_set1_curves_list` call to  override this. But I can't find any instructions about how to actually do this.\r\n\r\nIs that possible can anyone provide some information or instructions about how to do this? \r\n\r\nKind regards,\r\n\r\nRay\r\n ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/916586534","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100#issuecomment-916586534","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","id":916586534,"node_id":"IC_kwDODP--n842ogAm","user":{"login":"ray19941201","id":85988181,"node_id":"MDQ6VXNlcjg1OTg4MTgx","avatar_url":"https://avatars.githubusercontent.com/u/85988181?v=4","gravatar_id":"","url":"https://api.github.com/users/ray19941201","html_url":"https://github.com/ray19941201","followers_url":"https://api.github.com/users/ray19941201/followers","following_url":"https://api.github.com/users/ray19941201/following{/other_user}","gists_url":"https://api.github.com/users/ray19941201/gists{/gist_id}","starred_url":"https://api.github.com/users/ray19941201/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ray19941201/subscriptions","organizations_url":"https://api.github.com/users/ray19941201/orgs","repos_url":"https://api.github.com/users/ray19941201/repos","events_url":"https://api.github.com/users/ray19941201/events{/privacy}","received_events_url":"https://api.github.com/users/ray19941201/received_events","type":"User","site_admin":false},"created_at":"2021-09-10T02:40:16Z","updated_at":"2021-09-10T02:40:16Z","author_association":"NONE","body":"> All right. But skills change over time and it'd be great if you could see this as a challenge to grow your skills on and help us resolve #52.\r\n\r\nSure. May I ask is there any information I can dig in to do this? I might start with researching about how to build this feature first. But no guarantee about completion cuz this task is apparently beyond my might.  ðŸ˜…ðŸ˜…\r\n\r\n> I'd then be glad to hear if this worked and we can close this issue.\r\nSure, I will get back to you once I've done this. Considering my testing environment, it might be next week.","performed_via_github_app":null}},"public":true,"created_at":"2021-09-10T02:40:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17931079706","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100","id":989523192,"node_id":"MDU6SXNzdWU5ODk1MjMxOTI=","number":100,"title":"How to change the default PQ KEX algorithm of OQS-chromium?","user":{"login":"ray19941201","id":85988181,"node_id":"MDQ6VXNlcjg1OTg4MTgx","avatar_url":"https://avatars.githubusercontent.com/u/85988181?v=4","gravatar_id":"","url":"https://api.github.com/users/ray19941201","html_url":"https://github.com/ray19941201","followers_url":"https://api.github.com/users/ray19941201/followers","following_url":"https://api.github.com/users/ray19941201/following{/other_user}","gists_url":"https://api.github.com/users/ray19941201/gists{/gist_id}","starred_url":"https://api.github.com/users/ray19941201/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ray19941201/subscriptions","organizations_url":"https://api.github.com/users/ray19941201/orgs","repos_url":"https://api.github.com/users/ray19941201/repos","events_url":"https://api.github.com/users/ray19941201/events{/privacy}","received_events_url":"https://api.github.com/users/ray19941201/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-09-07T01:55:36Z","updated_at":"2021-09-10T09:19:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI have followed the instructions within the oqs-demos repository to build an OQS-enabled chromium and an OQS-enabled httpd server. \r\n\r\nI found out that due to the chromium currently doesn't support curves option like the command line, it will use the default algorithm when I issue a HTTP request to my httpd server from it. \r\nSo if I configure my server only support algorithm \"kyber512\", the chromium will return the error page as shown below.\r\n![image](https://user-images.githubusercontent.com/85988181/132272365-a0b58946-a1e0-428a-8f99-d1d4bff63cb6.png)\r\n\r\nI have read the implementation notes of the BoringSSL saying that the client can use the `SSL_CTX_set1_curves_list` call to  override this. But I can't find any instructions about how to actually do this.\r\n\r\nIs that possible can anyone provide some information or instructions about how to do this? \r\n\r\nKind regards,\r\n\r\nRay\r\n ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/916760935","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100#issuecomment-916760935","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","id":916760935,"node_id":"IC_kwDODP--n842pKln","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-09-10T09:19:16Z","updated_at":"2021-09-10T09:19:16Z","author_association":"MEMBER","body":"> May I ask is there any information I can dig in to do this? \r\n\r\nSorry, I don't know: I didn't look into that myself. I'd start with a web search on chromium design docs and probably also use `grep -r` for existing command line parameters (implementation) and dig forward from there.","performed_via_github_app":null}},"public":true,"created_at":"2021-09-10T09:19:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17931588673","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1086","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1086/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1086/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1086/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1086","id":992605124,"node_id":"MDExOlB1bGxSZXF1ZXN0NzMwOTEzNzAw","number":1086,"title":"Adding armv8 crypto extensions to AES","user":{"login":"tedeaton","id":7863838,"node_id":"MDQ6VXNlcjc4NjM4Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/7863838?v=4","gravatar_id":"","url":"https://api.github.com/users/tedeaton","html_url":"https://github.com/tedeaton","followers_url":"https://api.github.com/users/tedeaton/followers","following_url":"https://api.github.com/users/tedeaton/following{/other_user}","gists_url":"https://api.github.com/users/tedeaton/gists{/gist_id}","starred_url":"https://api.github.com/users/tedeaton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tedeaton/subscriptions","organizations_url":"https://api.github.com/users/tedeaton/orgs","repos_url":"https://api.github.com/users/tedeaton/repos","events_url":"https://api.github.com/users/tedeaton/events{/privacy}","received_events_url":"https://api.github.com/users/tedeaton/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-09-09T20:29:24Z","updated_at":"2021-09-10T09:57:44Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1086","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1086","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1086.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1086.patch"},"body":"Adds armv8 crypto extension to AES, similar to #1052.\r\n\r\n* Adds additional files to CMakeLists.txt\r\n* Changes tests/system_info.c to describe if arm extensions are used for AES\r\n* Generalizes the C_OR_NI macro in src/common/aes/aes.c and tests/system_info.c to C_OR_NI_OR_ARM\r\n* input / output behaviour is not changes\r\n* algorithms available does not change\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/916783110","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1086#issuecomment-916783110","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1086","id":916783110,"node_id":"IC_kwDOA-eq3c42pQAG","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-09-10T09:57:44Z","updated_at":"2021-09-10T09:57:44Z","author_association":"MEMBER","body":"FWIW: If you want to get AppVeyor to pass (by using an old `gcc`), you may want to (temporarily, until #1035 is fixed) replace \r\n```\r\nc:\\cygwin64\\bin\\bash.exe -lc \"setup-x86_64.exe -qnNdO -R C:/cygwin64 -l C:/cygwin/var/cache/setup -P openssl -P libssl-devel -P ninja -P cmake -P gcc ...\r\n```\r\nwith \r\n```\r\nc:\\cygwin64\\bin\\bash.exe -lc \"setup-x86_64.exe -qnNdO -R C:/cygwin64 -l C:/cygwin/var/cache/setup -P openssl -P libssl-devel -P ninja -P cmake -P gcc-core=9.3.0-2 ...\r\n```\r\nin `appveyor_build.bat`.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-09-10T09:57:44Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
