{"id":"17990222861","type":"IssuesEvent","actor":{"id":56081724,"login":"AndyChung1997","display_login":"AndyChung1997","gravatar_id":"","url":"https://api.github.com/users/AndyChung1997","avatar_url":"https://avatars.githubusercontent.com/u/56081724?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/332","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/332/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/332/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/332/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/332","id":996646992,"node_id":"I_kwDOA_fpb847Z6BQ","number":332,"title":"Demo of openssl speed test","user":{"login":"AndyChung1997","id":56081724,"node_id":"MDQ6VXNlcjU2MDgxNzI0","avatar_url":"https://avatars.githubusercontent.com/u/56081724?v=4","gravatar_id":"","url":"https://api.github.com/users/AndyChung1997","html_url":"https://github.com/AndyChung1997","followers_url":"https://api.github.com/users/AndyChung1997/followers","following_url":"https://api.github.com/users/AndyChung1997/following{/other_user}","gists_url":"https://api.github.com/users/AndyChung1997/gists{/gist_id}","starred_url":"https://api.github.com/users/AndyChung1997/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndyChung1997/subscriptions","organizations_url":"https://api.github.com/users/AndyChung1997/orgs","repos_url":"https://api.github.com/users/AndyChung1997/repos","events_url":"https://api.github.com/users/AndyChung1997/events{/privacy}","received_events_url":"https://api.github.com/users/AndyChung1997/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-09-15T04:27:54Z","updated_at":"2021-09-15T04:27:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Recently I was testing the *openssl speed* command. I can’t understand why AES128-CBC can set `-bytes +int` option to run benchmarks on custom-sized buffer, but Bikel1 can’t set.\r\n\r\nAES128-CBC:\r\n![image](https://user-images.githubusercontent.com/56081724/133370419-bffa73c5-e095-42be-811b-598cb11e7f4e.png)\r\nBikel1:\r\n![image](https://user-images.githubusercontent.com/56081724/133370540-88da3761-ff22-4902-bbcb-24ce736e373c.png)\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-09-15T04:27:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17990346396","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/332","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/332/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/332/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/332/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/332","id":996646992,"node_id":"I_kwDOA_fpb847Z6BQ","number":332,"title":"Demo of openssl speed test","user":{"login":"AndyChung1997","id":56081724,"node_id":"MDQ6VXNlcjU2MDgxNzI0","avatar_url":"https://avatars.githubusercontent.com/u/56081724?v=4","gravatar_id":"","url":"https://api.github.com/users/AndyChung1997","html_url":"https://github.com/AndyChung1997","followers_url":"https://api.github.com/users/AndyChung1997/followers","following_url":"https://api.github.com/users/AndyChung1997/following{/other_user}","gists_url":"https://api.github.com/users/AndyChung1997/gists{/gist_id}","starred_url":"https://api.github.com/users/AndyChung1997/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndyChung1997/subscriptions","organizations_url":"https://api.github.com/users/AndyChung1997/orgs","repos_url":"https://api.github.com/users/AndyChung1997/repos","events_url":"https://api.github.com/users/AndyChung1997/events{/privacy}","received_events_url":"https://api.github.com/users/AndyChung1997/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-09-15T04:27:54Z","updated_at":"2021-09-15T04:44:51Z","closed_at":"2021-09-15T04:44:51Z","author_association":"NONE","active_lock_reason":null,"body":"Recently I was testing the *openssl speed* command. I can’t understand why AES128-CBC can set `-bytes +int` option to run benchmarks on custom-sized buffer, but Bikel1 can’t set.\r\n\r\nAES128-CBC:\r\n![image](https://user-images.githubusercontent.com/56081724/133370419-bffa73c5-e095-42be-811b-598cb11e7f4e.png)\r\nBikel1:\r\n![image](https://user-images.githubusercontent.com/56081724/133370540-88da3761-ff22-4902-bbcb-24ce736e373c.png)\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-09-15T04:44:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17991805308","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/100/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/100","id":989523192,"node_id":"MDU6SXNzdWU5ODk1MjMxOTI=","number":100,"title":"How to change the default PQ KEX algorithm of OQS-chromium?","user":{"login":"ray19941201","id":85988181,"node_id":"MDQ6VXNlcjg1OTg4MTgx","avatar_url":"https://avatars.githubusercontent.com/u/85988181?v=4","gravatar_id":"","url":"https://api.github.com/users/ray19941201","html_url":"https://github.com/ray19941201","followers_url":"https://api.github.com/users/ray19941201/followers","following_url":"https://api.github.com/users/ray19941201/following{/other_user}","gists_url":"https://api.github.com/users/ray19941201/gists{/gist_id}","starred_url":"https://api.github.com/users/ray19941201/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ray19941201/subscriptions","organizations_url":"https://api.github.com/users/ray19941201/orgs","repos_url":"https://api.github.com/users/ray19941201/repos","events_url":"https://api.github.com/users/ray19941201/events{/privacy}","received_events_url":"https://api.github.com/users/ray19941201/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-09-07T01:55:36Z","updated_at":"2021-09-15T07:14:13Z","closed_at":"2021-09-15T07:14:12Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nI have followed the instructions within the oqs-demos repository to build an OQS-enabled chromium and an OQS-enabled httpd server. \r\n\r\nI found out that due to the chromium currently doesn't support curves option like the command line, it will use the default algorithm when I issue a HTTP request to my httpd server from it. \r\nSo if I configure my server only support algorithm \"kyber512\", the chromium will return the error page as shown below.\r\n![image](https://user-images.githubusercontent.com/85988181/132272365-a0b58946-a1e0-428a-8f99-d1d4bff63cb6.png)\r\n\r\nI have read the implementation notes of the BoringSSL saying that the client can use the `SSL_CTX_set1_curves_list` call to  override this. But I can't find any instructions about how to actually do this.\r\n\r\nIs that possible can anyone provide some information or instructions about how to do this? \r\n\r\nKind regards,\r\n\r\nRay\r\n ","performed_via_github_app":null}},"public":true,"created_at":"2021-09-15T07:14:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"18006083339","type":"IssuesEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1081","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1081/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1081/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1081/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1081","id":982093901,"node_id":"MDU6SXNzdWU5ODIwOTM5MDE=","number":1081,"title":"Shared library versioning scheme (SOVERSION)","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-08-29T13:03:22Z","updated_at":"2021-09-15T23:52:38Z","closed_at":"2021-09-15T23:52:38Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As pointed there https://github.com/open-quantum-safe/openssh/issues/111#issuecomment-907751920 `liboqs` would benefit from proper _library versioning_. (Sometimes called _API version_ or _SOVERSION_). This is different thing than usual project versioning. It's purpose to maintain binary (ABI) compatibility between executable binaries and shared libraries. Currently, liboqs just copy project version into SOVERSION which does not reflect backward incompatible ABI changes (which may cause obscure program errors when binary that is linked to a newer library used on system with older library — current versioning allows this, because major version number (that signifying backward-incompatible ABI change) is not incremented (while library does have backward incompatible ABI changes).\r\n\r\nReferences:\r\n* General explanation https://stackoverflow.com/questions/12637841/what-is-the-soname-option-for-building-shared-libraries-for\r\n* GNU tooling https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html (Note that their `-version-info` arguments order is different from what will actually appear in the library suffix - they say `current:revision:age`, but library will be named like `liboqs.so..current.age.revision`).\r\n* Cmake property https://cmake.org/cmake/help/latest/prop_tgt/SOVERSION.html\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-09-15T23:52:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
