{"id":"17335051035","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/93","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/93/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/93/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/93","id":944265370,"node_id":"MDU6SXNzdWU5NDQyNjUzNzA=","number":93,"title":"Failed to build Chromium","user":{"login":"AndyChung1997","id":56081724,"node_id":"MDQ6VXNlcjU2MDgxNzI0","avatar_url":"https://avatars.githubusercontent.com/u/56081724?v=4","gravatar_id":"","url":"https://api.github.com/users/AndyChung1997","html_url":"https://github.com/AndyChung1997","followers_url":"https://api.github.com/users/AndyChung1997/followers","following_url":"https://api.github.com/users/AndyChung1997/following{/other_user}","gists_url":"https://api.github.com/users/AndyChung1997/gists{/gist_id}","starred_url":"https://api.github.com/users/AndyChung1997/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndyChung1997/subscriptions","organizations_url":"https://api.github.com/users/AndyChung1997/orgs","repos_url":"https://api.github.com/users/AndyChung1997/repos","events_url":"https://api.github.com/users/AndyChung1997/events{/privacy}","received_events_url":"https://api.github.com/users/AndyChung1997/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2021-07-14T10:10:16Z","updated_at":"2021-07-28T09:12:09Z","closed_at":"2021-07-28T09:12:09Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, I'm trying to build Chromium using the [oqs-demos/chromium](https://github.com/open-quantum-safe/oqs-demos/tree/main/chromium).  The first few steps are executed successfully. But when I type `autoninja -C out/Default chrome` to build Chromium, I get an error message.   \r\nJust like:\r\n\r\n```\r\nFAILED: obj/third_party/boringssl/boringssl/p_oqs.o\r\n../../third_party/boringssl/src/crypto/evp/p_oqs.c:19:10: fatal error: 'oqs/oqs.h' file not found\r\n#include <oqs/oqs.h>\r\n         ^~~~~~~~~~~\r\n1 error generated.\r\n...\r\nFAILED: obj/third_party/boringssl/boringssl/p_oqs_asn1.o\r\n...\r\n../../third_party/boringssl/src/crypto/evp/p_oqs_asn1.c:20:10: fatal error: 'oqs/oqs.h' file not found\r\n...\r\nninja: build stopped: subcommand failed.\r\n```\r\nHow can I fix it? Thank you for your help!!\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/888148229","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/93#issuecomment-888148229","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/93","id":888148229,"node_id":"IC_kwDODP--n8408BEF","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T09:12:09Z","updated_at":"2021-07-28T09:12:09Z","author_association":"MEMBER","body":"UW. Closing issue accordingly.","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T09:12:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17335499651","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1052","id":948128835,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkzMDEyODA1","number":1052,"title":"Adding armv8 crypto extensions to SHA256/224","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-07-20T00:17:13Z","updated_at":"2021-07-28T09:44:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1052","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1052","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1052.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1052.patch"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR adds the armv8 crypto extensions accelerated implementation of sha256 hashblocks from supercop. This was tested on a ROCK64, a RASPI 3B+, and on an Intel mac (to ensure I didn't break x86 builds by mistake).\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.) - **NO**\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.) - **NO**\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888168840","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1052#issuecomment-888168840","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052","id":888168840,"node_id":"IC_kwDOA-eq3c408GGI","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T09:44:01Z","updated_at":"2021-07-28T09:44:01Z","author_association":"MEMBER","body":"> Do we want to consider changing the sha2 context structures to contain a uint8_t pointer rather than a void pointer? \r\n\r\nConceptually and personally I'd be all for accuracy wrt data structure types -- however, the `void *` in my eyes is an indication that it's _not_ always a `uint8_t`: In the OSSL case, it's effectively a `EVP_MD_CTX*`. Thus, I'd keep it as is, but defer to @dstebila who put it like it is right now.","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T09:44:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17335911053","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/322","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/322/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/322/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/322/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/322","id":949450900,"node_id":"MDU6SXNzdWU5NDk0NTA5MDA=","number":322,"title":"Errors on running rsa3072_dilithium2's hybrid algo  ","user":{"login":"hengyongming","id":65388283,"node_id":"MDQ6VXNlcjY1Mzg4Mjgz","avatar_url":"https://avatars.githubusercontent.com/u/65388283?v=4","gravatar_id":"","url":"https://api.github.com/users/hengyongming","html_url":"https://github.com/hengyongming","followers_url":"https://api.github.com/users/hengyongming/followers","following_url":"https://api.github.com/users/hengyongming/following{/other_user}","gists_url":"https://api.github.com/users/hengyongming/gists{/gist_id}","starred_url":"https://api.github.com/users/hengyongming/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hengyongming/subscriptions","organizations_url":"https://api.github.com/users/hengyongming/orgs","repos_url":"https://api.github.com/users/hengyongming/repos","events_url":"https://api.github.com/users/hengyongming/events{/privacy}","received_events_url":"https://api.github.com/users/hengyongming/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-21T08:18:22Z","updated_at":"2021-07-28T10:12:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"My intention is to run rsa3072_dilithium2's hybrid algorithm and see the result of the hybrid certificate and understand how it works.\r\n\r\nHowever, I faced some difficulties.\r\n\r\n![image](https://user-images.githubusercontent.com/65388283/126450984-3f19b08c-02bb-4953-8fcb-e5b339c9faa0.png)\r\n\r\n(1) I want to ask if this is the intended result of the certificate?\r\n(2) What is the implication of `unable to upload public key`?\r\n(3) Since it is a hybrid certificate, why can't I see both the RSA and the Dilithium's signature, and instead I am seeing a single long signature?\r\n(4) For the signature Algorithm's identifier, is there a table to translate the identifiers to their corresponding signature names and their corresponding name?\r\n\r\n![image](https://user-images.githubusercontent.com/65388283/126452411-21a71b4b-b83f-4b71-ae47-df0adf205c62.png)\r\n\r\nThanks in advance !","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/888187152","html_url":"https://github.com/open-quantum-safe/openssl/issues/322#issuecomment-888187152","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/322","id":888187152,"node_id":"IC_kwDOA_fpb8408KkQ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T10:12:51Z","updated_at":"2021-07-28T10:12:51Z","author_association":"MEMBER","body":"Sorry for the delay answering - was doing a bit of \"digital detox\"... :-)\r\n\r\nHere's feedback to your questions:\r\n\r\n> I want to ask if this is the intended result of the certificate?\r\n\r\nYes and no: Plain openssl doesn't know about this algorithm, so cannot load it. Try OQS-OSSL (`./apps/openssl`) and you should get an error-free output.\r\n\r\n> What is the implication of unable to upload public key?\r\n\r\nSee above: Most likely you used a stock (non-OQS) openssl in your command.\r\n\r\n> Since it is a hybrid certificate, why can't I see both the RSA and the Dilithium's signature, and instead I am seeing a single long signature?\r\n\r\nBecause such simple \"appending\" is how we presently have it defined. There's a discussions going on how to do it \"right\", e.g., #300. Feel free to chime in if you feel strongly either way.\r\n\r\n> For the signature Algorithm's identifier, is there a table to translate the identifiers to their corresponding signature names and their corresponding name?\r\n\r\nKind-of, yes: The master file for this is [here](https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/oqs-template/generate.yml)","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T10:12:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17336357434","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/323","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/323/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/323/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/323/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/323","id":953681589,"node_id":"MDU6SXNzdWU5NTM2ODE1ODk=","number":323,"title":"Failed to build OQS-OpenSSL_1_1_1-stable","user":{"login":"AndyChung1997","id":56081724,"node_id":"MDQ6VXNlcjU2MDgxNzI0","avatar_url":"https://avatars.githubusercontent.com/u/56081724?v=4","gravatar_id":"","url":"https://api.github.com/users/AndyChung1997","html_url":"https://github.com/AndyChung1997","followers_url":"https://api.github.com/users/AndyChung1997/followers","following_url":"https://api.github.com/users/AndyChung1997/following{/other_user}","gists_url":"https://api.github.com/users/AndyChung1997/gists{/gist_id}","starred_url":"https://api.github.com/users/AndyChung1997/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndyChung1997/subscriptions","organizations_url":"https://api.github.com/users/AndyChung1997/orgs","repos_url":"https://api.github.com/users/AndyChung1997/repos","events_url":"https://api.github.com/users/AndyChung1997/events{/privacy}","received_events_url":"https://api.github.com/users/AndyChung1997/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-27T09:22:01Z","updated_at":"2021-07-28T10:45:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, I followed the Quickstart to build OQS-OpenSSL_1_1_1-stable. When I built the OpenSSL, I got some error messages.\r\nThe following are my instructions:\r\n```\r\nsudo ./Configure shared linux-x86_64 -lm --prefix=/usr/local/ssl --openssldir=/usr/local/ssl -DOQS_DEFAULT_GROUPS=\\\"p256_kyber512:X25519:p256_hqc128\\\"\r\nsudo make -j 4\r\nsudo make test\r\n```\r\nThere is no error in the first two instructions. But when I typed \"sudo make test\", I got some errors.\r\n\r\n<img width=\"507\" alt=\"123\" src=\"https://user-images.githubusercontent.com/56081724/127129250-975b1605-aa84-4883-ad9f-fab74a443dae.PNG\">\r\n<img width=\"593\" alt=\"456\" src=\"https://user-images.githubusercontent.com/56081724/127129270-2be37428-8a3f-413d-8f7c-4012f2dc0e5e.PNG\">\r\n\r\nIs the setting of  `-DOQS_DEFAULT_GROUPS` wrong? Or is the algorithm not supported?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/888210163","html_url":"https://github.com/open-quantum-safe/openssl/issues/323#issuecomment-888210163","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/323","id":888210163,"node_id":"IC_kwDOA_fpb8408QLz","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T10:45:53Z","updated_at":"2021-07-28T10:45:53Z","author_association":"MEMBER","body":"Hmm -- no, the (default) algorithms (names) look OK. Does the same error happen in your environment when you build static? What if you build dynamic without setting `OQS_DEFAULT_GROUPS` (I'm not sure we tested the test suite when setting --other-- default groups)? What exactly _are_ the errors (running `make test V=1`)?","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T10:45:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17337584138","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054","id":954784840,"node_id":"MDU6SXNzdWU5NTQ3ODQ4NDA=","number":1054,"title":"State of platform specific optimizations","user":{"login":"koraa","id":1451261,"node_id":"MDQ6VXNlcjE0NTEyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1451261?v=4","gravatar_id":"","url":"https://api.github.com/users/koraa","html_url":"https://github.com/koraa","followers_url":"https://api.github.com/users/koraa/followers","following_url":"https://api.github.com/users/koraa/following{/other_user}","gists_url":"https://api.github.com/users/koraa/gists{/gist_id}","starred_url":"https://api.github.com/users/koraa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koraa/subscriptions","organizations_url":"https://api.github.com/users/koraa/orgs","repos_url":"https://api.github.com/users/koraa/repos","events_url":"https://api.github.com/users/koraa/events{/privacy}","received_events_url":"https://api.github.com/users/koraa/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-07-28T12:04:24Z","updated_at":"2021-07-28T12:19:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for building liboqs!\r\n\r\nI am targeting an arm platform, it would be nice to be able to use the arm specific optimizations available. Does liboqs include the arm optimized versions from pqm4? I haven't been able to find any mention of pqm4 in this repo so I suppose not?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888263299","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054#issuecomment-888263299","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","id":888263299,"node_id":"IC_kwDOA-eq3c408dKD","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T12:19:31Z","updated_at":"2021-07-28T12:19:31Z","author_association":"MEMBER","body":"Thanks for your interest / use of `liboqs`: We're glad to see it used. Regarding ARM, there's ongoing work (see e.g., #1052). Tagging @Martyrshot (and @dstebila ?) for further insight/feedback on your question.","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T12:19:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17338828597","type":"IssueCommentEvent","actor":{"id":1451261,"login":"koraa","display_login":"koraa","gravatar_id":"","url":"https://api.github.com/users/koraa","avatar_url":"https://avatars.githubusercontent.com/u/1451261?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1035","id":929893467,"node_id":"MDU6SXNzdWU5Mjk4OTM0Njc=","number":1035,"title":"Many schemes fail to compile with GCC 11.1.0","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-06-25T07:02:41Z","updated_at":"2021-07-28T13:40:42Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"After the SIKE issues in #1003 I saw that:\r\n\r\n* [ ] #1036\r\n```\r\nFAILED: src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o\r\n/usr/bin/cc  -Iinclude -I../src/kem/classic_mceliece/pqclean_mceliece348864_avx -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -mpopcnt -Wno-language-extension-token -std=gnu11 -MD -MT src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o -MF src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o.d -o src/kem/classic_mceliece/CMakeFiles/classic_mceliece_348864_avx.dir/pqclean_mceliece348864_avx/fft_tr.c.o -c ../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c\r\n../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c:351:47: error: argument 1 of type ‘vec128[12]’ {aka ‘__m128i[12]’} with mismatched bound [-Werror=array-parameter=]\r\n  351 | void PQCLEAN_MCELIECE348864_AVX_fft_tr(vec128 out[GFBITS], vec256 in[][ GFBITS ]) {\r\n      |                                        ~~~~~~~^~~~~~~~~~~\r\nIn file included from ../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.c:6:\r\n../src/kem/classic_mceliece/pqclean_mceliece348864_avx/fft_tr.h:11:40: note: previously declared as ‘vec128 *’ {aka ‘__m128i *’}\r\n   11 | void PQCLEAN_MCELIECE348864_AVX_fft_tr(vec128 * /*out*/, vec256  /*in*/[][ GFBITS ]);\r\n      |                                        ^~~~~~~~\r\n```\r\n\r\n* [ ] Kyber has problems\r\n\r\n```\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:557:64: error: argument 3 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  557 | void aes256ctr_prf(uint8_t *out, size_t outlen, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                 ~~~~~~~~~~~~~~~^~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:19:34: note: previously declared as an array ‘const uint8_t[32]’ {aka ‘const unsigned char[32]’}\r\n   19 |                    const uint8_t key[32],\r\n      |                    ~~~~~~~~~~~~~~^~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:557:84: error: argument 4 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  557 | void aes256ctr_prf(uint8_t *out, size_t outlen, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                                     ~~~~~~~~~~~~~~~^~~~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:20:34: note: previously declared as an array ‘const uint8_t[12]’ {aka ‘const unsigned char[12]’}\r\n   20 |                    const uint8_t nonce[12]);\r\n      |                    ~~~~~~~~~~~~~~^~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:565:54: error: argument 2 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  565 | void aes256ctr_init(aes256ctr_ctx *s, const uint8_t *key, const uint8_t *nonce)\r\n      |                                       ~~~~~~~~~~~~~~~^~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:24:35: note: previously declared as an array ‘const uint8_t[32]’ {aka ‘const unsigned char[32]’}\r\n   24 |                     const uint8_t key[32],\r\n      |                     ~~~~~~~~~~~~~~^~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:565:74: error: argument 3 of type ‘const uint8_t *’ {aka ‘const unsigned char *’} declared as a pointer [-Werror=array-parameter=]\r\n  565 | void aes256ctr_init(aes256ctr_ctx *s, const uint8_t *key, const uint8_t *nonce)\r\n      |                                                           ~~~~~~~~~~~~~~~^~~~~\r\nIn file included from ../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:27:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.h:25:35: note: previously declared as an array ‘const uint8_t[12]’ {aka ‘const unsigned char[12]’}\r\n   25 |                     const uint8_t nonce[12]);\r\n      |                     ~~~~~~~~~~~~~~^~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c: In function ‘aes_ctr4x’:\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:415:19: error: array subscript 112 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  415 |         q[0] ^= sk[0];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:416:19: error: array subscript 113 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  416 |         q[1] ^= sk[1];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:417:19: error: array subscript 114 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  417 |         q[2] ^= sk[2];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:418:19: error: array subscript 115 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  418 |         q[3] ^= sk[3];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:419:19: error: array subscript 116 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  419 |         q[4] ^= sk[4];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:420:19: error: array subscript 117 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  420 |         q[5] ^= sk[5];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:421:19: error: array subscript 118 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  421 |         q[6] ^= sk[6];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:422:19: error: array subscript 119 is outside array bounds of ‘uint64_t[64]’ {aka ‘long unsigned int[64]’} [-Werror=array-bounds]\r\n  422 |         q[7] ^= sk[7];\r\n      |                 ~~^~~\r\n../src/kem/kyber/pqcrystals-kyber_common_ref/aes256ctr.c:486:67: note: while referencing ‘sk_exp’\r\n  486 | static void aes_ctr4x(uint8_t out[64], uint32_t ivw[16], uint64_t sk_exp[64])\r\n      |                                                          ~~~~~~~~~^~~~~~~~~~\r\n```\r\n\r\n* [ ] NTRU has problems\r\n\r\n```\r\nFAILED: src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o\r\n/usr/bin/cc  -Iinclude -I../src/kem/ntru/pqclean_ntruhps2048677_avx2 -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -mbmi2 -std=gnu11 -MD -MT src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o -MF src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o.d -o src/kem/ntru/CMakeFiles/ntru_hps2048677_avx2.dir/pqclean_ntruhps2048677_avx2/pack3.c.o -c ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:3:64: error: argument 1 of type ‘unsigned char[272]’ with mismatched bound [-Werror=array-parameter=]\r\n    3 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_tobytes(unsigned char msg[NTRU_OWCPA_MSGBYTES], const poly *a) {\r\n      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:1:\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/poly.h:25:64: note: previously declared as ‘unsigned char[136]’\r\n   25 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_tobytes(unsigned char msg[NTRU_PACK_TRINARY_BYTES], const poly *a);\r\n      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:24:81: error: argument 2 of type ‘const unsigned char[272]’ with mismatched bound [-Werror=array-parameter=]\r\n   24 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_frombytes(poly *r, const unsigned char msg[NTRU_OWCPA_MSGBYTES]) {\r\n      |                                                             ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/kem/ntru/pqclean_ntruhps2048677_avx2/pack3.c:1:\r\n../src/kem/ntru/pqclean_ntruhps2048677_avx2/poly.h:26:81: note: previously declared as ‘const unsigned char[136]’\r\n   26 | void PQCLEAN_NTRUHPS2048677_AVX2_poly_S3_frombytes(poly *r, const unsigned char msg[NTRU_PACK_TRINARY_BYTES]);\r\n      |                                                             ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n```\r\n\r\n* [ ] Dilithium has problems\r\n\r\n```\r\nFAILED: src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o\r\n/usr/bin/cc  -Iinclude -I../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2 -I../src/common/pqclean_shims -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -mavx2 -maes -mpopcnt -DDILITHIUM_MODE=2 -DDILITHIUM_USE_AES -DDILITHIUM_RANDOMIZED_SIGNING -std=gnu11 -MD -MT src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o -MF src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o.d -o src/sig/dilithium/CMakeFiles/dilithium_2_aes_avx2.dir/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c.o -c ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c\r\nIn file included from ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/params.h:4,\r\n                 from ../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c:5:\r\n../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/poly.c: In function ‘pqcrystals_dilithium2aes_avx2_poly_uniform_eta_preinit’:\r\n../src/sig/dilithium/pqcrystals-dilithium_dilithium2-aes_avx2/config.h:18:32: error: ‘pqcrystals_dilithium2aes_avx2_rej_eta_avx’ reading 768 bytes from a region of size 192 [-Werror=stringop-overread]\r\n```\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888318297","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1035#issuecomment-888318297","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1035","id":888318297,"node_id":"IC_kwDOA-eq3c408qlZ","user":{"login":"koraa","id":1451261,"node_id":"MDQ6VXNlcjE0NTEyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1451261?v=4","gravatar_id":"","url":"https://api.github.com/users/koraa","html_url":"https://github.com/koraa","followers_url":"https://api.github.com/users/koraa/followers","following_url":"https://api.github.com/users/koraa/following{/other_user}","gists_url":"https://api.github.com/users/koraa/gists{/gist_id}","starred_url":"https://api.github.com/users/koraa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koraa/subscriptions","organizations_url":"https://api.github.com/users/koraa/orgs","repos_url":"https://api.github.com/users/koraa/repos","events_url":"https://api.github.com/users/koraa/events{/privacy}","received_events_url":"https://api.github.com/users/koraa/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T13:40:42Z","updated_at":"2021-07-28T13:40:42Z","author_association":"NONE","body":"For anyone else stumbling on this; compiling with clang works\r\n\r\n    CC=clang cargo build\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T13:40:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17339367605","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054","id":954784840,"node_id":"MDU6SXNzdWU5NTQ3ODQ4NDA=","number":1054,"title":"State of platform specific optimizations","user":{"login":"koraa","id":1451261,"node_id":"MDQ6VXNlcjE0NTEyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1451261?v=4","gravatar_id":"","url":"https://api.github.com/users/koraa","html_url":"https://github.com/koraa","followers_url":"https://api.github.com/users/koraa/followers","following_url":"https://api.github.com/users/koraa/following{/other_user}","gists_url":"https://api.github.com/users/koraa/gists{/gist_id}","starred_url":"https://api.github.com/users/koraa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koraa/subscriptions","organizations_url":"https://api.github.com/users/koraa/orgs","repos_url":"https://api.github.com/users/koraa/repos","events_url":"https://api.github.com/users/koraa/events{/privacy}","received_events_url":"https://api.github.com/users/koraa/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-07-28T12:04:24Z","updated_at":"2021-07-28T14:12:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for building liboqs!\r\n\r\nI am targeting an arm platform, it would be nice to be able to use the arm specific optimizations available. Does liboqs include the arm optimized versions from pqm4? I haven't been able to find any mention of pqm4 in this repo so I suppose not?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888342697","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054#issuecomment-888342697","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","id":888342697,"node_id":"IC_kwDOA-eq3c408wip","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T14:12:12Z","updated_at":"2021-07-28T14:12:12Z","author_association":"MEMBER","body":"We're planning to incorporate optimizations targeting the ARM crypto extensions and ARM Neon over the next few months. But we don't have plans around smaller ARM chips like the M4, in part because we think that applications on smaller chips might want a smaller standalone implementation from pqm4 rather than a larger library like liboqs.","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T14:12:12Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17339520721","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1052","id":948128835,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkzMDEyODA1","number":1052,"title":"Adding armv8 crypto extensions to SHA256/224","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-07-20T00:17:13Z","updated_at":"2021-07-28T14:20:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1052","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1052","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1052.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1052.patch"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR adds the armv8 crypto extensions accelerated implementation of sha256 hashblocks from supercop. This was tested on a ROCK64, a RASPI 3B+, and on an Intel mac (to ensure I didn't break x86 builds by mistake).\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.) - **NO**\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.) - **NO**\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888349741","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1052#issuecomment-888349741","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052","id":888349741,"node_id":"IC_kwDOA-eq3c408yQt","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T14:20:57Z","updated_at":"2021-07-28T14:20:57Z","author_association":"MEMBER","body":"> > Do we want to consider changing the sha2 context structures to contain a uint8_t pointer rather than a void pointer?\r\n> \r\n> Conceptually and personally I'd be all for accuracy wrt data structure types -- however, the `void *` in my eyes is an indication that it's _not_ always a `uint8_t`: In the OSSL case, it's effectively a `EVP_MD_CTX*`. Thus, I'd keep it as is, but defer to @dstebila who put it like it is right now.\r\n\r\nIndeed, the point of containing a `void *` pointer was to permit multiple instantiations which use different types of context structures.","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T14:20:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17340066901","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054","id":954784840,"node_id":"MDU6SXNzdWU5NTQ3ODQ4NDA=","number":1054,"title":"State of platform specific optimizations","user":{"login":"koraa","id":1451261,"node_id":"MDQ6VXNlcjE0NTEyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1451261?v=4","gravatar_id":"","url":"https://api.github.com/users/koraa","html_url":"https://github.com/koraa","followers_url":"https://api.github.com/users/koraa/followers","following_url":"https://api.github.com/users/koraa/following{/other_user}","gists_url":"https://api.github.com/users/koraa/gists{/gist_id}","starred_url":"https://api.github.com/users/koraa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koraa/subscriptions","organizations_url":"https://api.github.com/users/koraa/orgs","repos_url":"https://api.github.com/users/koraa/repos","events_url":"https://api.github.com/users/koraa/events{/privacy}","received_events_url":"https://api.github.com/users/koraa/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-28T12:04:24Z","updated_at":"2021-07-28T14:52:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for building liboqs!\r\n\r\nI am targeting an arm platform, it would be nice to be able to use the arm specific optimizations available. Does liboqs include the arm optimized versions from pqm4? I haven't been able to find any mention of pqm4 in this repo so I suppose not?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888376345","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054#issuecomment-888376345","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","id":888376345,"node_id":"IC_kwDOA-eq3c4084wZ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T14:52:59Z","updated_at":"2021-07-28T14:52:59Z","author_association":"MEMBER","body":"@koraa : Can be go a bit more into detail which platform (sizes) you want to target and which (pre-existing?) applications you want to support?","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T14:52:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17341112850","type":"IssueCommentEvent","actor":{"id":1451261,"login":"koraa","display_login":"koraa","gravatar_id":"","url":"https://api.github.com/users/koraa","avatar_url":"https://avatars.githubusercontent.com/u/1451261?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054","id":954784840,"node_id":"MDU6SXNzdWU5NTQ3ODQ4NDA=","number":1054,"title":"State of platform specific optimizations","user":{"login":"koraa","id":1451261,"node_id":"MDQ6VXNlcjE0NTEyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1451261?v=4","gravatar_id":"","url":"https://api.github.com/users/koraa","html_url":"https://github.com/koraa","followers_url":"https://api.github.com/users/koraa/followers","following_url":"https://api.github.com/users/koraa/following{/other_user}","gists_url":"https://api.github.com/users/koraa/gists{/gist_id}","starred_url":"https://api.github.com/users/koraa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koraa/subscriptions","organizations_url":"https://api.github.com/users/koraa/orgs","repos_url":"https://api.github.com/users/koraa/repos","events_url":"https://api.github.com/users/koraa/events{/privacy}","received_events_url":"https://api.github.com/users/koraa/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-07-28T12:04:24Z","updated_at":"2021-07-28T15:56:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for building liboqs!\r\n\r\nI am targeting an arm platform, it would be nice to be able to use the arm specific optimizations available. Does liboqs include the arm optimized versions from pqm4? I haven't been able to find any mention of pqm4 in this repo so I suppose not?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888425453","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054#issuecomment-888425453","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","id":888425453,"node_id":"IC_kwDOA-eq3c409Evt","user":{"login":"koraa","id":1451261,"node_id":"MDQ6VXNlcjE0NTEyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1451261?v=4","gravatar_id":"","url":"https://api.github.com/users/koraa","html_url":"https://github.com/koraa","followers_url":"https://api.github.com/users/koraa/followers","following_url":"https://api.github.com/users/koraa/following{/other_user}","gists_url":"https://api.github.com/users/koraa/gists{/gist_id}","starred_url":"https://api.github.com/users/koraa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koraa/subscriptions","organizations_url":"https://api.github.com/users/koraa/orgs","repos_url":"https://api.github.com/users/koraa/repos","events_url":"https://api.github.com/users/koraa/events{/privacy}","received_events_url":"https://api.github.com/users/koraa/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T15:56:15Z","updated_at":"2021-07-28T15:56:15Z","author_association":"NONE","body":"@baentsch I am not targeting any platform specifically; I am creating an implementation of a post quantum handshake and wondering which library to embed and whether I need to add ifdefs pulling in optimizations from pqm4.\r\n\r\nI am testing on x86_64 and an rpi4; I've done something similar on an ARM F7 which is one of the largest bare metal arms available. I am not that familiar with the platform specific optimizations available on various arm platforms TBH, but personally I wouldn't take issue with using liboqs on even a tiny platform if resources are not wasted. As far as I can see liboqs makes it possible to disable algorithms and features I don't need (such as openssl support) and doesn't allocate…so perfectly suitable!\r\n\r\nHaving multiple libs to choose from for different environments might mean constructions need to be implemented multiple times too for each target or the constructions need to add support for multiple primitive implementation libraries, neither is desirable…","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T15:56:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17341594524","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054","id":954784840,"node_id":"MDU6SXNzdWU5NTQ3ODQ4NDA=","number":1054,"title":"State of platform specific optimizations","user":{"login":"koraa","id":1451261,"node_id":"MDQ6VXNlcjE0NTEyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1451261?v=4","gravatar_id":"","url":"https://api.github.com/users/koraa","html_url":"https://github.com/koraa","followers_url":"https://api.github.com/users/koraa/followers","following_url":"https://api.github.com/users/koraa/following{/other_user}","gists_url":"https://api.github.com/users/koraa/gists{/gist_id}","starred_url":"https://api.github.com/users/koraa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koraa/subscriptions","organizations_url":"https://api.github.com/users/koraa/orgs","repos_url":"https://api.github.com/users/koraa/repos","events_url":"https://api.github.com/users/koraa/events{/privacy}","received_events_url":"https://api.github.com/users/koraa/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-07-28T12:04:24Z","updated_at":"2021-07-28T16:29:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for building liboqs!\r\n\r\nI am targeting an arm platform, it would be nice to be able to use the arm specific optimizations available. Does liboqs include the arm optimized versions from pqm4? I haven't been able to find any mention of pqm4 in this repo so I suppose not?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888449079","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054#issuecomment-888449079","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","id":888449079,"node_id":"IC_kwDOA-eq3c409Kg3","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T16:28:59Z","updated_at":"2021-07-28T16:28:59Z","author_association":"MEMBER","body":"> might mean constructions need to be implemented multiple times too for each target or the constructions need to add support for multiple primitive implementation libraries, neither is desirable\r\n\r\nCompletely agree. From what you write I think `liboqs` may pretty suitable as it tries to make available as many PQ/QSC algorithms (switchable) on as many platforms as possible over the same interfaces. Also, just to be safe: Did you see the [OQS_MINIMAL_BUILD](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs#OQS_MINIMAL_BUILD) option?","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T16:29:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17342146082","type":"IssueCommentEvent","actor":{"id":1451261,"login":"koraa","display_login":"koraa","gravatar_id":"","url":"https://api.github.com/users/koraa","avatar_url":"https://avatars.githubusercontent.com/u/1451261?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054","id":954784840,"node_id":"MDU6SXNzdWU5NTQ3ODQ4NDA=","number":1054,"title":"State of platform specific optimizations","user":{"login":"koraa","id":1451261,"node_id":"MDQ6VXNlcjE0NTEyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1451261?v=4","gravatar_id":"","url":"https://api.github.com/users/koraa","html_url":"https://github.com/koraa","followers_url":"https://api.github.com/users/koraa/followers","following_url":"https://api.github.com/users/koraa/following{/other_user}","gists_url":"https://api.github.com/users/koraa/gists{/gist_id}","starred_url":"https://api.github.com/users/koraa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koraa/subscriptions","organizations_url":"https://api.github.com/users/koraa/orgs","repos_url":"https://api.github.com/users/koraa/repos","events_url":"https://api.github.com/users/koraa/events{/privacy}","received_events_url":"https://api.github.com/users/koraa/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-07-28T12:04:24Z","updated_at":"2021-07-28T17:10:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Thank you for building liboqs!\r\n\r\nI am targeting an arm platform, it would be nice to be able to use the arm specific optimizations available. Does liboqs include the arm optimized versions from pqm4? I haven't been able to find any mention of pqm4 in this repo so I suppose not?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888477066","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1054#issuecomment-888477066","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1054","id":888477066,"node_id":"IC_kwDOA-eq3c409RWK","user":{"login":"koraa","id":1451261,"node_id":"MDQ6VXNlcjE0NTEyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/1451261?v=4","gravatar_id":"","url":"https://api.github.com/users/koraa","html_url":"https://github.com/koraa","followers_url":"https://api.github.com/users/koraa/followers","following_url":"https://api.github.com/users/koraa/following{/other_user}","gists_url":"https://api.github.com/users/koraa/gists{/gist_id}","starred_url":"https://api.github.com/users/koraa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koraa/subscriptions","organizations_url":"https://api.github.com/users/koraa/orgs","repos_url":"https://api.github.com/users/koraa/repos","events_url":"https://api.github.com/users/koraa/events{/privacy}","received_events_url":"https://api.github.com/users/koraa/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T17:10:45Z","updated_at":"2021-07-28T17:10:45Z","author_association":"NONE","body":"> [OQS_MINIMAL_BUILD](https://github.com/open-quantum-safe/liboqs/wiki/Customizing-liboqs#OQS_MINIMAL_BUILD)\r\n\r\nNo I haven't heard of that, thank you for pointing it out! I am using the rust crate which does not expose the option, but I've manually specified a minimal set of algorithms for the crate…","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T17:10:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"17342160041","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1052","id":948128835,"node_id":"MDExOlB1bGxSZXF1ZXN0NjkzMDEyODA1","number":1052,"title":"Adding armv8 crypto extensions to SHA256/224","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-07-20T00:17:13Z","updated_at":"2021-07-28T17:11:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1052","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1052","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1052.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1052.patch"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThis PR adds the armv8 crypto extensions accelerated implementation of sha256 hashblocks from supercop. This was tested on a ROCK64, a RASPI 3B+, and on an Intel mac (to ensure I didn't break x86 builds by mistake).\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.) - **NO**\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.) - **NO**\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/888477807","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1052#issuecomment-888477807","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1052","id":888477807,"node_id":"IC_kwDOA-eq3c409Rhv","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2021-07-28T17:11:50Z","updated_at":"2021-07-28T17:11:50Z","author_association":"NONE","body":"Makes sense to me!","performed_via_github_app":null}},"public":true,"created_at":"2021-07-28T17:11:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
