{"id":"16381937700","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1001","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1001/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1001/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1001/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1001","id":891625418,"node_id":"MDExOlB1bGxSZXF1ZXN0NjQ0NDY0Njgw","number":1001,"title":"BIKE and Picnic enablement for cygwin","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-05-14T05:40:23Z","updated_at":"2021-05-17T05:07:35Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1001","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1001","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1001.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1001.patch"},"body":"Resolves some issues in #1000 as per input from @jschanck . Will eliminate caveats in https://github.com/open-quantum-safe/liboqs/wiki/Platform-specific-notes-for-building-liboqs#using-cygwin.\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/841988492","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1001#issuecomment-841988492","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1001","id":841988492,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MTk4ODQ5Mg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-05-17T05:07:34Z","updated_at":"2021-05-17T05:07:34Z","author_association":"MEMBER","body":"Please feel free to suggest a shorter matrix of configs to run: [cygwin building seems to be much slower than MSVC](https://ci.appveyor.com/project/dstebila/liboqs/builds/39183926).\r\n\r\nFinal question: Rainbow and Sphincs are completely exempt from CI: Is that really intentional/still OK? Why not at least test them in one configuration under (the faster) MSVC or msys2 environments?","performed_via_github_app":null}},"public":true,"created_at":"2021-05-17T05:07:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16382490090","type":"IssueCommentEvent","actor":{"id":49699333,"login":"dependabot[bot]","display_login":"dependabot","gravatar_id":"","url":"https://api.github.com/users/dependabot[bot]","avatar_url":"https://avatars.githubusercontent.com/u/49699333?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/54","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/54/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/54/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/54/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/54","id":883561720,"node_id":"MDExOlB1bGxSZXF1ZXN0NjM3MDI1NjA2","number":54,"title":"Bump oqs-sys/liboqs from `b1d0727` to `1b25f45`","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2730583541,"node_id":"MDU6TGFiZWwyNzMwNTgzNTQx","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"},{"id":2730584915,"node_id":"MDU6TGFiZWwyNzMwNTg0OTE1","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/submodules","name":"submodules","color":"000000","default":false,"description":"Pull requests that update Submodules code"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-10T07:08:33Z","updated_at":"2021-05-17T06:09:27Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/pulls/54","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/54","diff_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/54.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/54.patch"},"body":"Bumps [oqs-sys/liboqs](https://github.com/Open-Quantum-Safe/liboqs) from `b1d0727` to `1b25f45`.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/1b25f45f352122d4e4c00bddac4ec5f5b649dd2b\"><code>1b25f45</code></a> tests/constant_time: update passes file for AVX2 impl of HQC [skip ci] (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/994\">#994</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/83af71078bae3a6e4ba4a5c3a8ed4f0099faeb21\"><code>83af710</code></a> Add canaries around malloc'd regions in test_sig (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/993\">#993</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/8981b7f33749abb027e9fe907c2f0e811c5c9048\"><code>8981b7f</code></a> tests/constant_time: SIKE issues are resolved (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/987\">#987</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/9e2044ff2da61510f88fff403485b4290e6b458c\"><code>9e2044f</code></a> Pull latest HQC-192 from PQClean (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/992\">#992</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/8ae15e6a88e4d2479f0834ca9e161ad1e68b8f22\"><code>8ae15e6</code></a> astyle is needed to be installed on MacOS for run_tests to succeed (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/991\">#991</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/1923b82a3bee42a72c4fdedf2023896007813c91\"><code>1923b82</code></a> Test without alignment (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/986\">#986</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/8f8bb44c2fb8ce4b65aca2889ca2b8c11861f2cb\"><code>8f8bb44</code></a> output CPU feature CT/RT distinction (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/984\">#984</a>)</li>\n<li>See full diff in <a href=\"https://github.com/Open-Quantum-Safe/liboqs/compare/b1d07278d1b7d6304eb29080729680405b801c67...1b25f45f352122d4e4c00bddac4ec5f5b649dd2b\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/842022796","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/54#issuecomment-842022796","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/54","id":842022796,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MjAyMjc5Ng==","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"created_at":"2021-05-17T06:09:27Z","updated_at":"2021-05-17T06:09:27Z","author_association":"CONTRIBUTOR","body":"Superseded by #61.","performed_via_github_app":null}},"public":true,"created_at":"2021-05-17T06:09:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16387508445","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865","id":760395625,"node_id":"MDU6SXNzdWU3NjAzOTU2MjU=","number":865,"title":"Figure out a way to report unused/uninitialized CMake project variables.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[{"id":1876026231,"node_id":"MDU6TGFiZWwxODc2MDI2MjMx","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/future-work","name":"future-work","color":"cccccc","default":false,"description":"Will not be fixed in current release cycle"},{"id":1168141259,"node_id":"MDU6TGFiZWwxMTY4MTQxMjU5","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":423520883,"node_id":"MDU6TGFiZWw0MjM1MjA4ODM=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/question","name":"question","color":"cc317c","default":true,"description":"Further information is requested"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-12-09T14:50:27Z","updated_at":"2021-05-17T12:27:36Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"To help prevent issues like https://github.com/open-quantum-safe/liboqs/issues/859 in the future, it would be nice if CMake could list all unused/uninitialized variables in the project. \r\n\r\nCMake has the `--warn-uninitialized` and `--warn-unused-vars` flags; the former behaves inconsistently among different CMake versions (and in CMake 3.19 did not catch https://github.com/open-quantum-safe/liboqs/issues/859); the latter is broken and has been removed in CMake 3.19.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/842283916","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865#issuecomment-842283916","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","id":842283916,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MjI4MzkxNg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-05-17T12:27:36Z","updated_at":"2021-05-17T12:27:36Z","author_association":"MEMBER","body":"After some experimentation there is a solution: We'd simply need to diligently reference all variables as such in our cmake files, i.e., in the canonical `cmake` notation \"${VARIABLE_NAME}\". \r\n\r\nIf doing this, `--warn-uninitialized` works correctly (and would have caught #859). If using the \"shortcut notation\" of (a variable as) a constant, e.g., as in `if(VARIABLE_NAME)` the warning is not issued. This arguably is OK, as variables and constants are different and `--warn-uninitialized` is documented to operate only on _variables_.\r\n\r\nThus, I see three alternative ways forward to avoid problems such as #859 in the future and close this issue: \r\n1) We are using \"full\" variable notation everywhere and run cmake with `--warn-uninitialized` in CI to catch future issues such as #859. This means rewriting all cmake-code from e.g., `if(OQS_USE_OPENSSL)` to `if(${OQS_USE_OPENSSL})`.\r\n2) We create an issue [with cmake](https://gitlab.kitware.com/cmake/cmake/-/issues) to get variables and constants treated identically with regard to `--warn-uninitialized` and see whether/if this gets resolved. I wouldn't hold my breath for that, though.\r\n3) We write our own parser (or piggyback on `cmake` output features like `--trace-expand`) to detect incorrectly written variable names ourselves. But I'd consider that a bit of a wasted effort.\r\n\r\n@xvzcf : Do you see other alternatives? OK to go with option 1? Everyone should adhere to that then, though. I volunteer to re-write all cmake code to close this issue following option 1.","performed_via_github_app":null}},"public":true,"created_at":"2021-05-17T12:27:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16388101989","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/61","id":868200056,"node_id":"MDU6SXNzdWU4NjgyMDAwNTY=","number":61,"title":"Hybrid certificate verification ","user":{"login":"prchander","id":54725951,"node_id":"MDQ6VXNlcjU0NzI1OTUx","avatar_url":"https://avatars.githubusercontent.com/u/54725951?v=4","gravatar_id":"","url":"https://api.github.com/users/prchander","html_url":"https://github.com/prchander","followers_url":"https://api.github.com/users/prchander/followers","following_url":"https://api.github.com/users/prchander/following{/other_user}","gists_url":"https://api.github.com/users/prchander/gists{/gist_id}","starred_url":"https://api.github.com/users/prchander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prchander/subscriptions","organizations_url":"https://api.github.com/users/prchander/orgs","repos_url":"https://api.github.com/users/prchander/repos","events_url":"https://api.github.com/users/prchander/events{/privacy}","received_events_url":"https://api.github.com/users/prchander/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-04-26T21:01:56Z","updated_at":"2021-05-17T13:08:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello, this topic was discussed in issue #58 which functions for the the post-quantum certificates but the NID's for the hybrids are still not added. ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/842309863","html_url":"https://github.com/open-quantum-safe/boringssl/issues/61#issuecomment-842309863","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/61","id":842309863,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MjMwOTg2Mw==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-05-17T13:08:00Z","updated_at":"2021-05-17T13:08:00Z","author_association":"MEMBER","body":"I guess there's no reason in particular, just that we haven't had the time to look into it.","performed_via_github_app":null}},"public":true,"created_at":"2021-05-17T13:08:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16388199892","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865","id":760395625,"node_id":"MDU6SXNzdWU3NjAzOTU2MjU=","number":865,"title":"Figure out a way to report unused/uninitialized CMake project variables.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[{"id":1876026231,"node_id":"MDU6TGFiZWwxODc2MDI2MjMx","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/future-work","name":"future-work","color":"cccccc","default":false,"description":"Will not be fixed in current release cycle"},{"id":1168141259,"node_id":"MDU6TGFiZWwxMTY4MTQxMjU5","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":423520883,"node_id":"MDU6TGFiZWw0MjM1MjA4ODM=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/question","name":"question","color":"cc317c","default":true,"description":"Further information is requested"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-12-09T14:50:27Z","updated_at":"2021-05-17T13:14:28Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"To help prevent issues like https://github.com/open-quantum-safe/liboqs/issues/859 in the future, it would be nice if CMake could list all unused/uninitialized variables in the project. \r\n\r\nCMake has the `--warn-uninitialized` and `--warn-unused-vars` flags; the former behaves inconsistently among different CMake versions (and in CMake 3.19 did not catch https://github.com/open-quantum-safe/liboqs/issues/859); the latter is broken and has been removed in CMake 3.19.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/842314478","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865#issuecomment-842314478","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","id":842314478,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MjMxNDQ3OA==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-05-17T13:14:28Z","updated_at":"2021-05-17T13:14:28Z","author_association":"MEMBER","body":"Nice find, and yeah option 1 seems like the best way forward.","performed_via_github_app":null}},"public":true,"created_at":"2021-05-17T13:14:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16389655222","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865","id":760395625,"node_id":"MDU6SXNzdWU3NjAzOTU2MjU=","number":865,"title":"Figure out a way to report unused/uninitialized CMake project variables.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[{"id":1876026231,"node_id":"MDU6TGFiZWwxODc2MDI2MjMx","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/future-work","name":"future-work","color":"cccccc","default":false,"description":"Will not be fixed in current release cycle"},{"id":1168141259,"node_id":"MDU6TGFiZWwxMTY4MTQxMjU5","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":423520883,"node_id":"MDU6TGFiZWw0MjM1MjA4ODM=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/question","name":"question","color":"cc317c","default":true,"description":"Further information is requested"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-12-09T14:50:27Z","updated_at":"2021-05-17T14:39:43Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"To help prevent issues like https://github.com/open-quantum-safe/liboqs/issues/859 in the future, it would be nice if CMake could list all unused/uninitialized variables in the project. \r\n\r\nCMake has the `--warn-uninitialized` and `--warn-unused-vars` flags; the former behaves inconsistently among different CMake versions (and in CMake 3.19 did not catch https://github.com/open-quantum-safe/liboqs/issues/859); the latter is broken and has been removed in CMake 3.19.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/842380328","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865#issuecomment-842380328","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","id":842380328,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MjM4MDMyOA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-05-17T14:39:43Z","updated_at":"2021-05-17T14:39:43Z","author_association":"MEMBER","body":"OK - will implement then. When starting, `copy_from_upstream.py` (generating quite a few of the not-quite-correct cmake instructions) fails, though:\r\n```\r\n>:~/git/oqs/liboqs-copy/scripts/copy_from_upstream$ python3 copy_from_upstream.py copy\r\nTraceback (most recent call last):\r\n  File \"copy_from_upstream.py\", line 580, in <module>\r\n    copy_from_upstream()\r\n  File \"copy_from_upstream.py\", line 491, in copy_from_upstream\r\n    process_families(instructions, os.environ['LIBOQS_DIR'], True, True)\r\n  File \"copy_from_upstream.py\", line 481, in process_families\r\n    extensions={\"tables\"})\r\n  File \"/home/mib/.local/lib/python3.6/site-packages/mdformat/_api.py\", line 57, in file\r\n    codeformatters=codeformatters,\r\n  File \"/home/mib/.local/lib/python3.6/site-packages/mdformat/_api.py\", line 22, in text\r\n    codeformatters=codeformatters,\r\n  File \"/home/mib/.local/lib/python3.6/site-packages/mdformat/_util.py\", line 32, in build_mdit\r\n    plugin = mdformat.plugins.PARSER_EXTENSIONS[name]\r\nKeyError: 'tables'\r\n```\r\n--> Does this ring a bell, @bhess ? Do I miss something? `pip3 install mdformat markdown` run before... ","performed_via_github_app":null}},"public":true,"created_at":"2021-05-17T14:39:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16389977053","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865","id":760395625,"node_id":"MDU6SXNzdWU3NjAzOTU2MjU=","number":865,"title":"Figure out a way to report unused/uninitialized CMake project variables.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[{"id":1876026231,"node_id":"MDU6TGFiZWwxODc2MDI2MjMx","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/future-work","name":"future-work","color":"cccccc","default":false,"description":"Will not be fixed in current release cycle"},{"id":1168141259,"node_id":"MDU6TGFiZWwxMTY4MTQxMjU5","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":423520883,"node_id":"MDU6TGFiZWw0MjM1MjA4ODM=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/question","name":"question","color":"cc317c","default":true,"description":"Further information is requested"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-12-09T14:50:27Z","updated_at":"2021-05-17T14:58:42Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"To help prevent issues like https://github.com/open-quantum-safe/liboqs/issues/859 in the future, it would be nice if CMake could list all unused/uninitialized variables in the project. \r\n\r\nCMake has the `--warn-uninitialized` and `--warn-unused-vars` flags; the former behaves inconsistently among different CMake versions (and in CMake 3.19 did not catch https://github.com/open-quantum-safe/liboqs/issues/859); the latter is broken and has been removed in CMake 3.19.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/842394973","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865#issuecomment-842394973","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","id":842394973,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MjM5NDk3Mw==","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2021-05-17T14:58:42Z","updated_at":"2021-05-17T14:58:42Z","author_association":"CONTRIBUTOR","body":"It looks like `mdformat-tables` is missing.\r\n@baentsch could you try `pip3 install mdformat-tables` or `pip3 install -r requirements.txt`?","performed_via_github_app":null}},"public":true,"created_at":"2021-05-17T14:58:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16390113621","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865","id":760395625,"node_id":"MDU6SXNzdWU3NjAzOTU2MjU=","number":865,"title":"Figure out a way to report unused/uninitialized CMake project variables.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[{"id":1876026231,"node_id":"MDU6TGFiZWwxODc2MDI2MjMx","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/future-work","name":"future-work","color":"cccccc","default":false,"description":"Will not be fixed in current release cycle"},{"id":1168141259,"node_id":"MDU6TGFiZWwxMTY4MTQxMjU5","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":423520883,"node_id":"MDU6TGFiZWw0MjM1MjA4ODM=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/question","name":"question","color":"cc317c","default":true,"description":"Further information is requested"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-12-09T14:50:27Z","updated_at":"2021-05-17T15:06:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"To help prevent issues like https://github.com/open-quantum-safe/liboqs/issues/859 in the future, it would be nice if CMake could list all unused/uninitialized variables in the project. \r\n\r\nCMake has the `--warn-uninitialized` and `--warn-unused-vars` flags; the former behaves inconsistently among different CMake versions (and in CMake 3.19 did not catch https://github.com/open-quantum-safe/liboqs/issues/859); the latter is broken and has been removed in CMake 3.19.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/842401454","html_url":"https://github.com/open-quantum-safe/liboqs/issues/865#issuecomment-842401454","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/865","id":842401454,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MjQwMTQ1NA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-05-17T15:06:45Z","updated_at":"2021-05-17T15:06:45Z","author_association":"MEMBER","body":"> @baentsch could you try pip3 install mdformat-tables or pip3 install -r requirements.txt?\r\n\r\nPerfect&Thanks: Just overlooked the `requirements.txt` :-(\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-05-17T15:06:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
