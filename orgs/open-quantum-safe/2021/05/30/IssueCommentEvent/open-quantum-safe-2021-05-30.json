{"id":"16571750434","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/314","id":906761787,"node_id":"MDU6SXNzdWU5MDY3NjE3ODc=","number":314,"title":"Performance of OQS algorithms in TLS","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-30T13:47:18Z","updated_at":"2021-05-30T14:08:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have setup an Nginx server running OQS-OpenSSL and with a certificate signed with dilithium2. I was running some performance tests to see the difference between a classical TLS sessions and post-quantum TLS session using the built in `s_time` client in the OQS-OpenSSL library. I connected to the server like so:\r\n\r\nfor OQS TLS session:\r\n ` /opt/openssl/apps/openssl s_time -connect host:port1 -curves kyber512`\r\n\r\nfor classical TLS session:\r\n' ` /opt/openssl/apps/openssl s_time -connect host:port2`\r\n\r\nWhere port1 uses the dilithium2 signed certificate and port2 uses a classical RSA signed certificate. \r\n\r\nThese are the results when running `s_time` for 30 seconds per run: \r\n\r\n![{83373F40-C401-4138-8826-FAC10FE668CE}](https://user-images.githubusercontent.com/23386187/120106584-e4d1b500-c15d-11eb-9142-6df6090de45b.png)\r\n\r\n\r\nThese are the results from doing a localhost test where I start an openssl server like so: \r\n\r\n` /opt/openssl/apps/openssl s_server -cert <SIG_ALG>_srv.crt -key <SIG_ALG>_srv.key -www -tls1_3 -groups kyber512`\r\n\r\n![{84F7549B-4298-4C51-A880-841AC51B43A0}](https://user-images.githubusercontent.com/23386187/120106676-4e51c380-c15e-11eb-84cd-9381fdc3700f.png)\r\n\r\nI realize that localhost testing is a little more reliable in terms of network interference and such, but i do not really understand the 50-60% dip in performance seen with the Nginx performance testing vs the 20-25% drop in performance with the localhost testing. \r\n\r\nI am running the Nginx server from within a DigitalOcean droplet. \r\n\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/851006367","html_url":"https://github.com/open-quantum-safe/openssl/issues/314#issuecomment-851006367","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314","id":851006367,"node_id":"MDEyOklzc3VlQ29tbWVudDg1MTAwNjM2Nw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-05-30T14:08:47Z","updated_at":"2021-05-30T14:08:47Z","author_association":"MEMBER","body":"Hmm -- is it really necessary to run this within a VM rather than a local laptop? That already may cause \"unexplicable\" differences. Then, a `localhost` connection obviously optimizes data transport to the max, i.e., protocols with more packets get penalized less (as compared to transporting all packets over the wire): What about determining the amount of data and packets that gets transferred for each setup to better understand the differences? Maybe look at exchanges using [wireshark](https://www.wireshark.org)? That also may provide more insight. Final comment: Did you already check out https://openquantumsafe.org/research/PQCrypto-PaqSteTam20 ?","performed_via_github_app":null}},"public":true,"created_at":"2021-05-30T14:08:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16572327702","type":"IssueCommentEvent","actor":{"id":23386187,"login":"ibmo96","display_login":"ibmo96","gravatar_id":"","url":"https://api.github.com/users/ibmo96","avatar_url":"https://avatars.githubusercontent.com/u/23386187?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/314","id":906761787,"node_id":"MDU6SXNzdWU5MDY3NjE3ODc=","number":314,"title":"Performance of OQS algorithms in TLS","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-05-30T13:47:18Z","updated_at":"2021-05-30T16:06:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have setup an Nginx server running OQS-OpenSSL and with a certificate signed with dilithium2. I was running some performance tests to see the difference between a classical TLS sessions and post-quantum TLS session using the built in `s_time` client in the OQS-OpenSSL library. I connected to the server like so:\r\n\r\nfor OQS TLS session:\r\n ` /opt/openssl/apps/openssl s_time -connect host:port1 -curves kyber512`\r\n\r\nfor classical TLS session:\r\n' ` /opt/openssl/apps/openssl s_time -connect host:port2`\r\n\r\nWhere port1 uses the dilithium2 signed certificate and port2 uses a classical RSA signed certificate. \r\n\r\nThese are the results when running `s_time` for 30 seconds per run: \r\n\r\n![{83373F40-C401-4138-8826-FAC10FE668CE}](https://user-images.githubusercontent.com/23386187/120106584-e4d1b500-c15d-11eb-9142-6df6090de45b.png)\r\n\r\n\r\nThese are the results from doing a localhost test where I start an openssl server like so: \r\n\r\n` /opt/openssl/apps/openssl s_server -cert <SIG_ALG>_srv.crt -key <SIG_ALG>_srv.key -www -tls1_3 -groups kyber512`\r\n\r\n![{84F7549B-4298-4C51-A880-841AC51B43A0}](https://user-images.githubusercontent.com/23386187/120106676-4e51c380-c15e-11eb-84cd-9381fdc3700f.png)\r\n\r\nI realize that localhost testing is a little more reliable in terms of network interference and such, but i do not really understand the 50-60% dip in performance seen with the Nginx performance testing vs the 20-25% drop in performance with the localhost testing. \r\n\r\nI am running the Nginx server from within a DigitalOcean droplet. \r\n\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/851022764","html_url":"https://github.com/open-quantum-safe/openssl/issues/314#issuecomment-851022764","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/314","id":851022764,"node_id":"MDEyOklzc3VlQ29tbWVudDg1MTAyMjc2NA==","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"created_at":"2021-05-30T16:06:05Z","updated_at":"2021-05-30T16:06:05Z","author_association":"NONE","body":"Yea so i ran a `tcpdump` /wireshark on the droplet and turns out it was recieving a lot of packets from my dorms network haha? It was on the network interface eth1, but on eth0 nothing was going on. So wondering if i could make s_time use eth0 when recieving packets from my Nginx server, giving me a less noisy network interface hmm","performed_via_github_app":null}},"public":true,"created_at":"2021-05-30T16:06:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
