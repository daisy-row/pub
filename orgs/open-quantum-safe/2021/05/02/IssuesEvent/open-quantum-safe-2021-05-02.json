{"id":"16172149652","type":"IssuesEvent","actor":{"id":23386187,"login":"ibmo96","display_login":"ibmo96","gravatar_id":"","url":"https://api.github.com/users/ibmo96","avatar_url":"https://avatars.githubusercontent.com/u/23386187?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/80","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/80/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/80/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/80/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/80","id":873994796,"node_id":"MDU6SXNzdWU4NzM5OTQ3OTY=","number":80,"title":"Forwarding to HTTPS requests from clients not supporting post-quantum cipher-suite","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-02T17:14:46Z","updated_at":"2021-05-02T17:14:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have setup a test OQS Nginx server, that integrates your OQS fork of OpenSSL. I was wondering how to route clients to different server ports based on the cipher suites they support. In your test server:  [https://test.openquantumsafe.org/](url) I can see that the site is accessible using clients that do not support post-quantum TLS as well, and that the site then uses a classical certificate. But if I use your OQS curl demo [https://github.com/open-quantum-safe/oqs-demos/tree/main/curl](url), that supports post-quantum TLS, I can get a response from your test serve when curving with a post-quantum key-exchange algorithm such as Kyber512, doing the following: \r\n\r\n`docker run -it oqs-curl curl -k https://test.openquantumsafe.org --curves kyber512`\r\n\r\n So my question is how can you identify clients that do not support post-quantum TLS and then use a classical certificate for those types of clients, if i've understood the setup correctly. ","performed_via_github_app":null}},"public":true,"created_at":"2021-05-02T17:14:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
