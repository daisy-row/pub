{"id":"15158681941","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T01:51:00Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/777915507","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-777915507","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":777915507,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NzkxNTUwNw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T01:51:00Z","updated_at":"2021-02-12T01:51:00Z","author_association":"MEMBER","body":"That sounds like a great plan, John.  I didn't know about the approval jobs feature.  Can you tell who will be able to approve? I.e., do you think it will detect team members from the Github repo configuration and use those?","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T01:51:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15158845984","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/877","id":781524992,"node_id":"MDExOlB1bGxSZXF1ZXN0NTUxMjMzMzAy","number":877,"title":"Add Android CircleCI config","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-01-07T18:40:41Z","updated_at":"2021-02-12T02:20:24Z","closed_at":"2021-02-12T02:20:24Z","author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/877","html_url":"https://github.com/open-quantum-safe/liboqs/pull/877","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/877.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/877.patch"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nReproduces #875 on a branch inside OQS repository to trigger CI.\r\n\r\nAdds Android CI/CD config for the CircleCI pipeline. Tests whether building library is successful.\r\n\r\nPartially addresses Android cross-compilation (#594)\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding or removing?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/777925172","html_url":"https://github.com/open-quantum-safe/liboqs/pull/877#issuecomment-777925172","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877","id":777925172,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NzkyNTE3Mg==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T02:20:24Z","updated_at":"2021-02-12T02:20:24Z","author_association":"MEMBER","body":"Closing for now since it's been open for a while. A revived PR is definitely welcome, and as Michael notes permissions on running CI should no longer be a problem.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T02:20:25Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15159238018","type":"IssueCommentEvent","actor":{"id":28460918,"login":"nicholasfulton","display_login":"nicholasfulton","gravatar_id":"","url":"https://api.github.com/users/nicholasfulton","avatar_url":"https://avatars.githubusercontent.com/u/28460918?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/877","id":781524992,"node_id":"MDExOlB1bGxSZXF1ZXN0NTUxMjMzMzAy","number":877,"title":"Add Android CircleCI config","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-01-07T18:40:41Z","updated_at":"2021-02-12T03:36:49Z","closed_at":"2021-02-12T02:20:24Z","author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/877","html_url":"https://github.com/open-quantum-safe/liboqs/pull/877","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/877.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/877.patch"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nReproduces #875 on a branch inside OQS repository to trigger CI.\r\n\r\nAdds Android CI/CD config for the CircleCI pipeline. Tests whether building library is successful.\r\n\r\nPartially addresses Android cross-compilation (#594)\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding or removing?  (If so, PRs in OQS-OpenSSL, OQS-BoringSSL, and OQS-OpenSSH will also be required by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/777947782","html_url":"https://github.com/open-quantum-safe/liboqs/pull/877#issuecomment-777947782","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/877","id":777947782,"node_id":"MDEyOklzc3VlQ29tbWVudDc3Nzk0Nzc4Mg==","user":{"login":"nicholasfulton","id":28460918,"node_id":"MDQ6VXNlcjI4NDYwOTE4","avatar_url":"https://avatars.githubusercontent.com/u/28460918?v=4","gravatar_id":"","url":"https://api.github.com/users/nicholasfulton","html_url":"https://github.com/nicholasfulton","followers_url":"https://api.github.com/users/nicholasfulton/followers","following_url":"https://api.github.com/users/nicholasfulton/following{/other_user}","gists_url":"https://api.github.com/users/nicholasfulton/gists{/gist_id}","starred_url":"https://api.github.com/users/nicholasfulton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicholasfulton/subscriptions","organizations_url":"https://api.github.com/users/nicholasfulton/orgs","repos_url":"https://api.github.com/users/nicholasfulton/repos","events_url":"https://api.github.com/users/nicholasfulton/events{/privacy}","received_events_url":"https://api.github.com/users/nicholasfulton/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T03:36:49Z","updated_at":"2021-02-12T03:36:49Z","author_association":"CONTRIBUTOR","body":"> Closing for now since it's been open for a while. A revived PR is definitely welcome, and as Michael notes permissions on running CI should no longer be a problem.\r\n\r\nThank you! I should be able to focus more on this in the coming months, at which point I can get a more polished solution set up for CI.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T03:36:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15160066517","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/279","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/279/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/279/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/279/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/279","id":806616346,"node_id":"MDU6SXNzdWU4MDY2MTYzNDY=","number":279,"title":"Cannot run tests?","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-02-11T17:58:02Z","updated_at":"2021-02-12T06:07:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"MacOS 10.15.7, Xcode-12.4 (probably not relevant here, but...).\r\n\r\nInitially, I could not run tests because the make-script could not load dynamic library. *Problem with the upstream, unresolved.*\r\n\r\nChanging the build to producing static library, the tests can run - but some are skipped with this message:\r\n```\r\ntest_tlsextms needs the dynamic engine feature enabled\r\n```\r\n\r\nWhat's this \"dynamic engine feature\"? How do I enable it - just by removing `no-shared` from the `./Configuration ...` command?\r\n\r\nAnd why the README tells to build this fork with `no-shared`? Is this restriction still valid?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/777997304","html_url":"https://github.com/open-quantum-safe/openssl/issues/279#issuecomment-777997304","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/279","id":777997304,"node_id":"MDEyOklzc3VlQ29tbWVudDc3Nzk5NzMwNA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T06:07:07Z","updated_at":"2021-02-12T06:07:07Z","author_association":"MEMBER","body":"> even less compatible with 1.1.1 than the Digest example, and completely out of sync with 3.0\r\n\r\nYes -- for all I know the engine concept is no longer really supported and replaced by the [provider concept](https://www.openssl.org/docs/manmaster/man7/provider.html).\r\n\r\n> May I then suggest that no-shared is removed from the examples?\r\n\r\n> It is deceiving, because the reader would naturally believe that if the author explicitly set an attribute, it's there for a reason.\r\n\r\nRe-reading [the current text](https://github.com/open-quantum-safe/openssl#quickstart) starting with\r\n\r\n> The steps below have been confirmed to work\r\n\r\nhad _me_ personally conclude something else: These steps are _known_ to work OK but there surely are others (simply not documented). Particularly a shared lib build does add further complications (LD_LIBRARY_PATH etc.) that one can consider \"advanced\" and hence not necessary to get into in a \"Quickstart\" section.\r\n\r\nBut then again, we could surely add something explicit like \"All commands below are just examples and might also be used and work differently as per the respective packages' documentations.\"","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T06:07:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15160562088","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T07:18:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778024993","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-778024993","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":778024993,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODAyNDk5Mw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T07:18:49Z","updated_at":"2021-02-12T07:18:49Z","author_association":"MEMBER","body":"Another challenge just observed: We presently trigger all downstream projects' builds on merge, taking all `open-quantum-safe` CI compute resources for quite some time as those builds apparently don't run in parallel. Should we re-consider this automation, too? Particularly `oqs-demos` and `profiling` take _a lot_ of (compute) time (courtesy docker builds of many versions) -- but already oqs-openssl has very extensive tests we may want to whittle down, too, maybe only run on explicit manual approval as per @jschanck's suggestion above. \r\n\r\n`oqs-demos` and `profiling` arguably don't have to be built automatically and could \"make do\" with a \"detached\" or nightly build only. Until we have a better idea I'd suggest  removing them from openssl's downstream trigger (initially reverting https://github.com/open-quantum-safe/openssl/pull/272 -- which might be the culprit of this \"CI squeeze\"). @xvzcf if I recall correct you know of a way to simply remove some access rights and those triggers would not do anything? ","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T07:18:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15160723490","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/909","id":806910013,"node_id":"MDU6SXNzdWU4MDY5MTAwMTM=","number":909,"title":"Kyber (NIST round 3) incompatibility with Circl's Kyber","user":{"login":"david415","id":50611,"node_id":"MDQ6VXNlcjUwNjEx","avatar_url":"https://avatars.githubusercontent.com/u/50611?v=4","gravatar_id":"","url":"https://api.github.com/users/david415","html_url":"https://github.com/david415","followers_url":"https://api.github.com/users/david415/followers","following_url":"https://api.github.com/users/david415/following{/other_user}","gists_url":"https://api.github.com/users/david415/gists{/gist_id}","starred_url":"https://api.github.com/users/david415/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/david415/subscriptions","organizations_url":"https://api.github.com/users/david415/orgs","repos_url":"https://api.github.com/users/david415/repos","events_url":"https://api.github.com/users/david415/events{/privacy}","received_events_url":"https://api.github.com/users/david415/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-12T03:10:36Z","updated_at":"2021-02-12T07:40:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"See https://github.com/cloudflare/circl/issues/213\r\n\r\nAlthough not automated, confirming this incompatibility is simple. First I used Circl's golang kyber in a test to generate a Kyber1024 key pair and printed them as hex:\r\n \r\nhttps://github.com/david415/cryptocomrade/blob/master/go/kyber/kyber_test.go#L34\r\n\r\nNext I used the previously mentioned public key in a test which uses the oqs rust crate to \"encapsulate\" a shared secret. I print the hex of the shared secret as well as it's ciphertext:\r\n\r\nhttps://github.com/david415/cryptocomrade/blob/master/rust/src/kyber.rs#L21\r\n\r\nAfter that I modified the previously mentioned golang test to \"decapsulate\" the ciphertext:\r\n\r\nhttps://github.com/david415/cryptocomrade/blob/master/go/kyber/kyber_test.go#L60\r\n\r\nThis shows that the two implementations generate different \"shared secrets\".\r\n\r\n\r\nPlease do let me know if there is anything else I can do to help. I sincerely wish this incompatibility to be fixed because I am using both the oqs rust crate and the circl go library in my software which will hopefully one day enable people to communicate more freely.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778033749","html_url":"https://github.com/open-quantum-safe/liboqs/issues/909#issuecomment-778033749","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909","id":778033749,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODAzMzc0OQ==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T07:40:32Z","updated_at":"2021-02-12T07:40:32Z","author_association":"MEMBER","body":"The version of `oqs` from crates.io that you're using ships Kyber round 2.\r\n\r\nYou should be testing with the `oqs` Rust crate main branch. The `oqs` rust crate is in a bit of a transitionary phase right now (evidenced by its version numbers not matching with liboqs) — the released version is currently inbetween liboqs version 0.4.0 (NIST round 2 schemes) and to-be-released liboqs 0.5.0 with Round 3 schemes. As soon as `liboqs` releases version `0.5.0` I will bump the crate version and this unfortunate confusion should be much less of a problem.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T07:40:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15160753088","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910","id":806964735,"node_id":"MDU6SXNzdWU4MDY5NjQ3MzU=","number":910,"title":"Establish interop with Circl","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-12T05:45:39Z","updated_at":"2021-02-12T07:44:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"[Circl](https://github.com/cloudflare/circl) implements several algorithms also provided by liboqs. An automated interop test set would be good to avoid issues like #909 in the future. Possibly an application for [liboqs-go](https://github.com/open-quantum-safe/liboqs-go)?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778035279","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910#issuecomment-778035279","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","id":778035279,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODAzNTI3OQ==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T07:44:33Z","updated_at":"2021-02-12T07:44:33Z","author_association":"MEMBER","body":"Both liboqs and circl already do KAT tests though.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T07:44:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15160770968","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/909","id":806910013,"node_id":"MDU6SXNzdWU4MDY5MTAwMTM=","number":909,"title":"Kyber (NIST round 3) incompatibility with Circl's Kyber","user":{"login":"david415","id":50611,"node_id":"MDQ6VXNlcjUwNjEx","avatar_url":"https://avatars.githubusercontent.com/u/50611?v=4","gravatar_id":"","url":"https://api.github.com/users/david415","html_url":"https://github.com/david415","followers_url":"https://api.github.com/users/david415/followers","following_url":"https://api.github.com/users/david415/following{/other_user}","gists_url":"https://api.github.com/users/david415/gists{/gist_id}","starred_url":"https://api.github.com/users/david415/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/david415/subscriptions","organizations_url":"https://api.github.com/users/david415/orgs","repos_url":"https://api.github.com/users/david415/repos","events_url":"https://api.github.com/users/david415/events{/privacy}","received_events_url":"https://api.github.com/users/david415/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-12T03:10:36Z","updated_at":"2021-02-12T07:46:53Z","closed_at":"2021-02-12T07:46:53Z","author_association":"NONE","active_lock_reason":null,"body":"See https://github.com/cloudflare/circl/issues/213\r\n\r\nAlthough not automated, confirming this incompatibility is simple. First I used Circl's golang kyber in a test to generate a Kyber1024 key pair and printed them as hex:\r\n \r\nhttps://github.com/david415/cryptocomrade/blob/master/go/kyber/kyber_test.go#L34\r\n\r\nNext I used the previously mentioned public key in a test which uses the oqs rust crate to \"encapsulate\" a shared secret. I print the hex of the shared secret as well as it's ciphertext:\r\n\r\nhttps://github.com/david415/cryptocomrade/blob/master/rust/src/kyber.rs#L21\r\n\r\nAfter that I modified the previously mentioned golang test to \"decapsulate\" the ciphertext:\r\n\r\nhttps://github.com/david415/cryptocomrade/blob/master/go/kyber/kyber_test.go#L60\r\n\r\nThis shows that the two implementations generate different \"shared secrets\".\r\n\r\n\r\nPlease do let me know if there is anything else I can do to help. I sincerely wish this incompatibility to be fixed because I am using both the oqs rust crate and the circl go library in my software which will hopefully one day enable people to communicate more freely.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778036174","html_url":"https://github.com/open-quantum-safe/liboqs/issues/909#issuecomment-778036174","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909","id":778036174,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODAzNjE3NA==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T07:46:53Z","updated_at":"2021-02-12T07:46:53Z","author_association":"MEMBER","body":"Both liboqs and circl test against NIST's KATs. I don't think this is an issue of `liboqs` but rather the Rust crate on crates.io not being clear about what versions of the cryptography it ships, and it being in a bit of a weird place. If anyone has any suggestions how to better document that, please open an issue in [open-quantum-safe/liboqs-rust](/open-quantum-safe/liboqs-rust).","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T07:46:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15160840776","type":"IssueCommentEvent","actor":{"id":20936452,"login":"BlackHoleFox","display_login":"BlackHoleFox","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","avatar_url":"https://avatars.githubusercontent.com/u/20936452?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T07:55:52Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778039671","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778039671","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778039671,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODAzOTY3MQ==","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T07:55:51Z","updated_at":"2021-02-12T07:55:51Z","author_association":"CONTRIBUTOR","body":"> I need the equivalent of ...\r\n\r\nTo fix the OpenSSL issue on Windows, you can swap https://github.com/open-quantum-safe/liboqs-rust/blob/805ac8e8f36fa8926531ac4732dc99b29cc585e9/oqs-sys/build.rs#L45 out for \r\n\r\n\r\n```rust\r\nif cfg!(all(not(windows), feature = \"openssl\")) {\r\n```\r\n\r\nIs there a reason why static linking is enabled by default? Is it needed for your use case of `liboqs-rust`? I am unable to get this crate to compile on Windows, even with the default features disabled (I have no idea how the Windows CI passes currently). I've also asked others to try and they've also encountered difficulties. Note that `liboqs` itself compiles and the binaries run fine in Visual Studio. I also tested the `liboqs.sln` project that `liboqs-sys` generates as part of the build process in Visual Studio and it compiles fine as well.\r\n\r\nEvery time I compile `liboqs-rust`, even with OpenSSL disabled, I'm met with a linker error:\r\n```\r\nCompiling oqs-sys v0.3.0\r\n   Compiling oqs v0.3.0\r\nerror: could not find native static library `oqs`, perhaps an -L flag is missing?\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `oqs-sys`\r\n\r\nTo learn more, run the command again with --verbose.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\n```\r\n\r\nThe only way the linking bug seems to fix itself is by changing this https://github.com/open-quantum-safe/liboqs-rust/blob/805ac8e8f36fa8926531ac4732dc99b29cc585e9/oqs-sys/build.rs#L56 to not statically link:\r\n```rust\r\nprintln!(\"cargo:rustc-link-lib=oqs\");\r\n```` \r\nTl;dr I'm having a hard time seeing how something with the build script is not wrong currently. If the stuff above is acceptable and desired, I'll open a PR off [my testing branch](https://github.com/BlackHoleFox/liboqs-rust/tree/no-openssl-default).\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T07:55:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15160947221","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T08:08:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778044972","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778044972","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778044972,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA0NDk3Mg==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T08:08:50Z","updated_at":"2021-02-12T08:08:50Z","author_association":"MEMBER","body":"> if cfg!(all(not(windows), feature = \"openssl\")) {\r\n\r\nI don't want to force-disable `openssl` on Windows, because if you _do_ set up everything correctly, it works fine, and gives you access to accelerated versions of a bunch of primitives that make up between 20% to up to 90% of the runtime of some schemes.\r\n\r\n>I have no idea how the Windows CI passes currently\r\n\r\nPresumably it's [set up differently](https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md).\r\n\r\nI'm not sure if `println!(\"cargo:rustc-link-lib=static=oqs\");`  should indeed be static, I've mainly just copied that from some example somewhere initially and as I only run Linux, it's obviously not been a problem for me. I'd merge a PR that removes `static=` assuming it passes CI.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T08:08:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15161034005","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T08:19:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778049216","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778049216","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778049216,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA0OTIxNg==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T08:19:02Z","updated_at":"2021-02-12T08:19:02Z","author_association":"MEMBER","body":"> I don't want to force-disable openssl on Windows\r\n\r\nI should add that if you don't want to have openssl in your subcrate, you can simply specify `no-default-features` and use a `build.rs` that emits the `openssl` feature where it is supported.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T08:19:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15161098232","type":"IssueCommentEvent","actor":{"id":20936452,"login":"BlackHoleFox","display_login":"BlackHoleFox","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","avatar_url":"https://avatars.githubusercontent.com/u/20936452?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T08:26:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778052371","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778052371","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778052371,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA1MjM3MQ==","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T08:26:15Z","updated_at":"2021-02-12T08:26:15Z","author_association":"CONTRIBUTOR","body":"> force disable OpenSSL on Windows\r\n\r\nI don’t think it works at all from my testing. [This line](https://github.com/open-quantum-safe/liboqs/blob/main/src/common/rand/rand_nist.c#L35) in the primary C library explodes MSVC if you try to enable OpenSSL. And as stated originally, liboqs [disables compiling OpenSSL on Windows at all](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). None of its CI jobs even attempt to enable it either.\r\n\r\n> no-default-features\r\n\r\nThat would only be a solution if the static linking bug was fixed. But, due to the liboqs’ behavior with OpenSSL and Windows I think its not very important, at least until the C code is patched to support MSVC.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T08:26:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15161305029","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T08:49:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778062710","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778062710","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778062710,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA2MjcxMA==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T08:49:06Z","updated_at":"2021-02-12T08:49:06Z","author_association":"MEMBER","body":">  This line in the primary C library explodes MSVC if you try to enable OpenSSL.\r\n\r\nThat file should not be compiled though...","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T08:49:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15161519940","type":"IssueCommentEvent","actor":{"id":20936452,"login":"BlackHoleFox","display_login":"BlackHoleFox","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","avatar_url":"https://avatars.githubusercontent.com/u/20936452?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T09:10:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778073254","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778073254","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778073254,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA3MzI1NA==","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T09:10:43Z","updated_at":"2021-02-12T09:10:43Z","author_association":"CONTRIBUTOR","body":"Well, it seems to be anyway. These are the errors that MSVC gives when you try to compile `main` on Windows with OpenSSL, sorry I didn't share these sooner:\r\n```\r\n liboqs-rust\\oqs-sys\\liboqs\\src\\common\\rand\\rand_nist.c(36,15): error C2143: syntax error: missing ')' before '(' [liboqs-rust\\target\\debug\\build\\oqs-sys-45a0b0771bd42382\\out\\build\\src\\common\\common.vcxproj]\r\n  liboqs-rust\\oqs-sys\\liboqs\\src\\common\\rand\\rand_nist.c(36,24): error C2059: syntax error: ')' [liboqs-rust\\target\\debug\\build\\oqs-sys-45a0b0771bd42382\\out\\build\\src\\common\\common.vcxproj]\r\n  liboqs-rust\\oqs-sys\\liboqs\\src\\common\\rand\\rand_nist.c(36,25): error C2059: syntax error: ')' [liboqs-rust\\target\\debug\\build\\oqs-sys-45a0b0771bd42382\\out\\build\\src\\common\\common.vcxproj]\r\n  liboqs-rust\\oqs-sys\\liboqs\\src\\common\\rand\\rand_nist.c(37,13): error C2143: syntax error: missing ')' before 'type' [liboqs-rust\\target\\debug\\build\\oqs-sys-45a0b0771bd42382\\out\\build\\src\\common\\common.vcxproj]\r\n  liboqs-rust\\oqs-sys\\liboqs\\src\\common\\rand\\rand_nist.c(37,13): error C2091: function returns function [liboqs-rust\\target\\debug\\build\\oqs-sys-45a0b0771bd42382\\out\\build\\src\\common\\common.vcxproj]\r\n  liboqs-rust\\oqs-sys\\liboqs\\src\\common\\rand\\rand_nist.c(37,32): error C2085: 'handleErrors': not in formal parameter list [liboqs-rust\\target\\debug\\build\\oqs-sys-45a0b0771bd42382\\out\\build\\src\\common\\common.vcxproj]\r\n  liboqs-rust\\oqs-sys\\liboqs\\src\\common\\rand\\rand_nist.c(37,32): error C2143: syntax error: missing ';' before '{' [liboqs-rust\\target\\debug\\build\\oqs-sys-45a0b0771bd42382\\out\\build\\src\\common\\common.vcxproj]\r\n```\r\nI tried changing the function to decorated like this and it looked to of fixed it.\r\n```c\r\n#ifdef OQS_USE_OPENSSL\r\n# ifdef __GNUC__\r\n__attribute__((noreturn))\r\n# elif defined(_MSC_VER)\r\n__declspec(noreturn)\r\n```\r\n  ```","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T09:10:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15161626302","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910","id":806964735,"node_id":"MDU6SXNzdWU4MDY5NjQ3MzU=","number":910,"title":"Establish interop with Circl","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-12T05:45:39Z","updated_at":"2021-02-12T09:21:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"[Circl](https://github.com/cloudflare/circl) implements several algorithms also provided by liboqs. An automated interop test set would be good to avoid issues like #909 in the future. Possibly an application for [liboqs-go](https://github.com/open-quantum-safe/liboqs-go)?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778078436","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910#issuecomment-778078436","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","id":778078436,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA3ODQzNg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T09:21:17Z","updated_at":"2021-02-12T09:21:17Z","author_association":"MEMBER","body":"> They also do development at different paces\r\n\r\nAnd also seem to have different goals (integrations of more/different PQ algs into different apps, say). But 4 months difference (judging for example for Kyber from https://github.com/cloudflare/circl/commit/6168cdb13aecffecb3962ba88cfab16f29555b09) is a bit steep, indeed. Good we now have more upstream-pull automation. \r\n\r\n--> Would anyone be in favour of setting a date for releasing liboqs 0.5? Would also be good to finally upgrade the pretty dated https://test.openquantumsafe.org to r3 (servers)...","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T09:21:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15161898758","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/25","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/25/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/25/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/25/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/25","id":807059565,"node_id":"MDExOlB1bGxSZXF1ZXN0NTcyMzcxNDg1","number":25,"title":"Don't statically link `liboqs`","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-12T08:54:14Z","updated_at":"2021-02-12T09:47:26Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/pulls/25","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/25","diff_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/25.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/25.patch"},"body":"See #17","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778091144","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/25#issuecomment-778091144","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/25","id":778091144,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA5MTE0NA==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T09:47:26Z","updated_at":"2021-02-12T09:47:26Z","author_association":"MEMBER","body":"I seem to be running into an issue at the intersection of `Cargo` and `Rustdoc` https://github.com/rust-lang/cargo/issues/4044#issuecomment-778087648","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T09:47:26Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15161988687","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T09:55:42Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778095368","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778095368","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778095368,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA5NTM2OA==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T09:55:42Z","updated_at":"2021-02-12T09:55:42Z","author_association":"MEMBER","body":"I'm running into problems if I don't statically link `liboqs` :(","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T09:55:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15162002787","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T09:57:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778095984","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778095984","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778095984,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODA5NTk4NA==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T09:57:00Z","updated_at":"2021-02-12T09:57:00Z","author_association":"MEMBER","body":"How are you building `liboqs`? You should be passing `-DOQS_BUILD_ONLY_LIB=Yes` if you want to match what this crate is doing.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T09:57:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15162209484","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910","id":806964735,"node_id":"MDU6SXNzdWU4MDY5NjQ3MzU=","number":910,"title":"Establish interop with Circl","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-12T05:45:39Z","updated_at":"2021-02-12T10:15:44Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"[Circl](https://github.com/cloudflare/circl) implements several algorithms also provided by liboqs. An automated interop test set would be good to avoid issues like #909 in the future. Possibly an application for [liboqs-go](https://github.com/open-quantum-safe/liboqs-go)?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778105895","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910#issuecomment-778105895","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","id":778105895,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODEwNTg5NQ==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T10:15:44Z","updated_at":"2021-02-12T10:15:44Z","author_association":"MEMBER","body":"I've yolo-opened a discussion here https://github.com/open-quantum-safe/liboqs/discussions/912","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T10:15:44Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15162315304","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/26","id":807117552,"node_id":"MDU6SXNzdWU4MDcxMTc1NTI=","number":26,"title":"Crates.io version is out-of-date","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-12T10:24:24Z","updated_at":"2021-02-12T10:25:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The version currently on crates.io is a bit out-of-date. Notably: it contains a bunch of round-2 implementations still.\r\n\r\nHowever, we can't bump to version 0.4.0 because that would match the round-2 release number of liboqs, which we're ahead of.\r\n\r\nBumping to version 0.5.0 would be confusing, as that's the next liboqs release.\r\n\r\nThe best solution seems to be to just wait for version 0.5.0 of liboqs to be released, after which we'll follow liboqs releases.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778110816","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/26#issuecomment-778110816","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26","id":778110816,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODExMDgxNg==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T10:25:17Z","updated_at":"2021-02-12T10:25:17Z","author_association":"MEMBER","body":"#22 has already bumped the version but won't be released any time soon.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T10:25:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15162388141","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/26","id":807117552,"node_id":"MDU6SXNzdWU4MDcxMTc1NTI=","number":26,"title":"Crates.io version is out-of-date","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-12T10:24:24Z","updated_at":"2021-02-12T10:31:50Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The version currently on crates.io is a bit out-of-date. Notably: it contains a bunch of round-2 implementations still.\r\n\r\nHowever, we can't bump to version 0.4.0 because that would match the round-2 release number of liboqs, which we're ahead of.\r\n\r\nBumping to version 0.5.0 would be confusing, as that's the next liboqs release.\r\n\r\nThe best solution seems to be to just wait for version 0.5.0 of liboqs to be released, after which we'll follow liboqs releases.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778113904","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/26#issuecomment-778113904","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26","id":778113904,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODExMzkwNA==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T10:31:49Z","updated_at":"2021-02-12T10:31:49Z","author_association":"MEMBER","body":"See also https://github.com/open-quantum-safe/liboqs/issues/909 for confusion caused by this.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T10:31:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15163862575","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T12:53:06Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778178082","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-778178082","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":778178082,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODE3ODA4Mg==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T12:53:06Z","updated_at":"2021-02-12T12:53:06Z","author_association":"CONTRIBUTOR","body":"> Can you tell who will be able to approve? I.e., do you think it will detect team members from the Github repo configuration and use those?\r\n\r\nI tacked my proposal onto #903, it looks like any team member can approve, but someone should check.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T12:53:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15163881026","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T12:54:55Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778178889","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-778178889","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":778178889,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODE3ODg4OQ==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T12:54:55Z","updated_at":"2021-02-12T12:54:55Z","author_association":"CONTRIBUTOR","body":"Also: can we whittle down the linux_x64 jobs? What are we testing for on alpine, centos, and debian that isn't covered by ubuntu?","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T12:54:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15164679154","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T14:04:31Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778215029","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-778215029","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":778215029,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODIxNTAyOQ==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T14:04:31Z","updated_at":"2021-02-12T14:04:31Z","author_association":"MEMBER","body":"`alpine` has a different `libc`, namely `musl`, which might make it semi-useful. centos and debian will probably only differ in package versions and compiler versions.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T14:04:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15164800903","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T14:14:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778220453","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-778220453","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":778220453,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODIyMDQ1Mw==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T14:14:33Z","updated_at":"2021-02-12T14:14:33Z","author_association":"MEMBER","body":"At one point I was considering trying to set up an as-minimal-as-possible config to test across different libcs and different architectures in the manner of (Wireguard)[https://www.wireguard.com/build-status/], but didn't have the time to follow-through.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T14:14:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15164858623","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T14:19:12Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778222887","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-778222887","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":778222887,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODIyMjg4Nw==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T14:19:12Z","updated_at":"2021-02-12T14:19:12Z","author_association":"MEMBER","body":"> @xvzcf if I recall correct you know of a way to simply remove some access rights and those triggers would not do anything? Otherwise, please consider [open-quantum-safe/openssl#280](https://github.com/open-quantum-safe/openssl/pull/280)\r\n\r\nI think just removing the triggers in the first place is better. We could also just run these triggers as nightly jobs.\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T14:19:12Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15165177032","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T14:43:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778236587","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-778236587","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":778236587,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODIzNjU4Nw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T14:43:56Z","updated_at":"2021-02-12T14:43:56Z","author_association":"MEMBER","body":">  the best would be if the triggers just scheduled nightly jobs\r\n\r\nhttps://circleci.com/docs/2.0/workflows/#nightly-example\r\n\r\nWe had that at some point in time --even guarded to not run if nothing had been checked in during the past 24h. Who recalls why we stopped using that?","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T14:43:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15165231799","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T14:48:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778238960","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-778238960","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":778238960,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODIzODk2MA==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T14:48:07Z","updated_at":"2021-02-12T14:48:07Z","author_association":"MEMBER","body":"> We had that at some point in time --even guarded to not run if nothing had been checked in during the past 24h. Who recalls why we stopped using that?\r\n\r\nThose nightly jobs in the downstream projects were set up so as to look for new commits in liboqs, but as a consequence, would fail one day and pass after that. There was also the feedback delay: a commit merged into liboqs wouldn't get fully tested until that night.\r\n\r\nWhat I meant was scheduling a nightly job if and only if a `new_commit` API trigger was made.\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T14:48:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15165246976","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-02-12T14:49:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778239646","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-778239646","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":778239646,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODIzOTY0Ng==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T14:49:17Z","updated_at":"2021-02-12T14:49:17Z","author_association":"MEMBER","body":"> alpine has a different libc, namely musl, which might make it semi-useful. centos and debian will probably only differ in package versions and compiler versions.\r\n\r\n+1. In addition alpine is the basis for our docker distributions, so I'd vote for keeping that. With debian I never saw different test results compared to ubuntu, so I'd vote for dropping it. Centos had deviations once or twice. Whether that's enough to keep it within CI? Why not drop it, too?","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T14:49:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15165392374","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/903","id":804787483,"node_id":"MDExOlB1bGxSZXF1ZXN0NTcwNDk3MTk4","number":903,"title":"Add OQS_MINIMAL_BUILD option and redefine CI workflow","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-02-09T18:05:55Z","updated_at":"2021-02-12T15:00:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/903","html_url":"https://github.com/open-quantum-safe/liboqs/pull/903","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/903.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/903.patch"},"body":"This adds an option to build only the default KEM and Signature scheme. For example, with this patch, if you want to build liboqs with only the Kyber512 and Dilithium2 algorithms you can use:\r\n```\r\ncmake -GNinja -DOQS_MINIMAL_BUILD=ON -DOQS_KEM_DEFAULT=OQS_KEM_alg_kyber_512 -DOQS_SIG_DEFAULT=OQS_SIG_alg_dilithium_2 ..\r\n```\r\n\r\nThis will build the exact match for the default kem and sig and also any \"_aesni\" or \"_avx2\" implementations that are supported by the platform.\r\n\r\nOpening this PR, at @baentsch's recommendation, for discussion about whether this is a useful feature / what else we would like it to do.\r\n\r\n\r\n**Edit:** Tacking on proposed CI workflow from https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-777771017","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778246175","html_url":"https://github.com/open-quantum-safe/liboqs/pull/903#issuecomment-778246175","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903","id":778246175,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODI0NjE3NQ==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T15:00:23Z","updated_at":"2021-02-12T15:00:23Z","author_association":"CONTRIBUTOR","body":"> I'm fine with the CI changes/platform removals -- but still don't understand what/who provides `testapproval`/unlocks the next stage(s).\r\n\r\nAnyone on the team can click through to https://app.circleci.com/pipelines/github/open-quantum-safe, click the testapproval job marked in purple, then click \"approve\". That will run the remaining arm jobs and then you should be able to merge the PR.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T15:00:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15165501081","type":"IssueCommentEvent","actor":{"id":20936452,"login":"BlackHoleFox","display_login":"BlackHoleFox","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","avatar_url":"https://avatars.githubusercontent.com/u/20936452?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T15:08:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778250790","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778250790","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778250790,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODI1MDc5MA==","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T15:08:48Z","updated_at":"2021-02-12T15:08:48Z","author_association":"CONTRIBUTOR","body":"I’m not building it directly. I am attempting to compile it through this Rust crate. Every error I’ve posted has come the output of `oqs-sys`‘ build script using `cargo build`.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T15:08:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15165504282","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/903","id":804787483,"node_id":"MDExOlB1bGxSZXF1ZXN0NTcwNDk3MTk4","number":903,"title":"Add OQS_MINIMAL_BUILD option and redefine CI workflow","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-02-09T18:05:55Z","updated_at":"2021-02-12T15:09:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/903","html_url":"https://github.com/open-quantum-safe/liboqs/pull/903","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/903.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/903.patch"},"body":"This adds an option to build only the default KEM and Signature scheme. For example, with this patch, if you want to build liboqs with only the Kyber512 and Dilithium2 algorithms you can use:\r\n```\r\ncmake -GNinja -DOQS_MINIMAL_BUILD=ON -DOQS_KEM_DEFAULT=OQS_KEM_alg_kyber_512 -DOQS_SIG_DEFAULT=OQS_SIG_alg_dilithium_2 ..\r\n```\r\n\r\nThis will build the exact match for the default kem and sig and also any \"_aesni\" or \"_avx2\" implementations that are supported by the platform.\r\n\r\nOpening this PR, at @baentsch's recommendation, for discussion about whether this is a useful feature / what else we would like it to do.\r\n\r\n\r\n**Edit:** Tacking on proposed CI workflow from https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-777771017","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778250932","html_url":"https://github.com/open-quantum-safe/liboqs/pull/903#issuecomment-778250932","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903","id":778250932,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODI1MDkzMg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T15:09:02Z","updated_at":"2021-02-12T15:09:02Z","author_association":"MEMBER","body":"> click the testapproval job marked in purple, then click \"approve\". That will run the remaining arm jobs and then you should be able to merge the PR\r\n\r\nJust to check I finally got it: The idea here is that _anyone_ can do a quick PR CI, but only after a team member approved the long-running (say, arm) tests (and/or request naming the branch \"...audit...\" if such testing seems in order), CI + PR can conclude (?) One more click for team members doing PRs, but a much faster sanity check. OK for me.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T15:09:03Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15165830218","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/903","id":804787483,"node_id":"MDExOlB1bGxSZXF1ZXN0NTcwNDk3MTk4","number":903,"title":"Add OQS_MINIMAL_BUILD option and redefine CI workflow","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-02-09T18:05:55Z","updated_at":"2021-02-12T15:34:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/903","html_url":"https://github.com/open-quantum-safe/liboqs/pull/903","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/903.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/903.patch"},"body":"This adds an option to build only the default KEM and Signature scheme. For example, with this patch, if you want to build liboqs with only the Kyber512 and Dilithium2 algorithms you can use:\r\n```\r\ncmake -GNinja -DOQS_MINIMAL_BUILD=ON -DOQS_KEM_DEFAULT=OQS_KEM_alg_kyber_512 -DOQS_SIG_DEFAULT=OQS_SIG_alg_dilithium_2 ..\r\n```\r\n\r\nThis will build the exact match for the default kem and sig and also any \"_aesni\" or \"_avx2\" implementations that are supported by the platform.\r\n\r\nOpening this PR, at @baentsch's recommendation, for discussion about whether this is a useful feature / what else we would like it to do.\r\n\r\n\r\n**Edit:** Tacking on proposed CI workflow from https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-777771017","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778265589","html_url":"https://github.com/open-quantum-safe/liboqs/pull/903#issuecomment-778265589","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/903","id":778265589,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODI2NTU4OQ==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T15:34:07Z","updated_at":"2021-02-12T15:34:07Z","author_association":"CONTRIBUTOR","body":"> The idea here is that _anyone_ can do a quick PR CI, but only after a team member approved the long-running (say, arm) tests (and/or request naming the branch \"...audit...\" if such testing seems in order)\r\n\r\nExactly.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T15:34:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15166638332","type":"IssueCommentEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17","id":805198434,"node_id":"MDU6SXNzdWU4MDUxOTg0MzQ=","number":17,"title":"OpenSSL linking configuration mismatch between oqs (C) and oqs-sys","user":{"login":"BlackHoleFox","id":20936452,"node_id":"MDQ6VXNlcjIwOTM2NDUy","avatar_url":"https://avatars.githubusercontent.com/u/20936452?v=4","gravatar_id":"","url":"https://api.github.com/users/BlackHoleFox","html_url":"https://github.com/BlackHoleFox","followers_url":"https://api.github.com/users/BlackHoleFox/followers","following_url":"https://api.github.com/users/BlackHoleFox/following{/other_user}","gists_url":"https://api.github.com/users/BlackHoleFox/gists{/gist_id}","starred_url":"https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BlackHoleFox/subscriptions","organizations_url":"https://api.github.com/users/BlackHoleFox/orgs","repos_url":"https://api.github.com/users/BlackHoleFox/repos","events_url":"https://api.github.com/users/BlackHoleFox/events{/privacy}","received_events_url":"https://api.github.com/users/BlackHoleFox/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-02-10T05:55:56Z","updated_at":"2021-02-12T16:38:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In the primary C library, linking to OpenSSL [is disabled on Windows](https://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/.CMake/alg_support.cmake#L13). However, in this crate, it is [enabled by default on all platforms](https://github.com/open-quantum-safe/liboqs-rust/blob/main/oqs-sys/build.rs#L44). Without `--no-default-features`, this causes a number of compilation errors on Windows when trying to build `oqs` in the build script.\r\n\r\nPlease consider not linking to OpenSSL by default, especially on Windows, although it causes installation headaches on all platforms.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/778303085","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/17#issuecomment-778303085","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/17","id":778303085,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODMwMzA4NQ==","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T16:38:34Z","updated_at":"2021-02-12T16:38:34Z","author_association":"MEMBER","body":"That's definitely weird...","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T16:38:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15166665368","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/280","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/280/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/280/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/280/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/280","id":807016117,"node_id":"MDExOlB1bGxSZXF1ZXN0NTcyMzM1OTc5","number":280,"title":"Remove expensive build from CI pipeline","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-12T07:27:36Z","updated_at":"2021-02-12T16:40:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/280","html_url":"https://github.com/open-quantum-safe/openssl/pull/280","diff_url":"https://github.com/open-quantum-safe/openssl/pull/280.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/280.patch"},"body":"\r\n- Don't trigger profiling build automatically\r\n- Be explicit on sample command documentation (fix pertaining to #279)\r\n\r\n- [x] documentation is added or updated\r\n- [ ] tests are added or updated\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/778304396","html_url":"https://github.com/open-quantum-safe/openssl/pull/280#issuecomment-778304396","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/280","id":778304396,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODMwNDM5Ng==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T16:40:49Z","updated_at":"2021-02-12T16:40:49Z","author_association":"MEMBER","body":"Fine by me. I can approve when the last checkbox is checked.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T16:40:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15169305162","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/271","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/271/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/271/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/271/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/271","id":784578153,"node_id":"MDExOlB1bGxSZXF1ZXN0NTUzNzQ4NTY4","number":271,"title":"Rainbow oids","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-01-12T20:41:26Z","updated_at":"2021-02-12T20:54:26Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/271","html_url":"https://github.com/open-quantum-safe/openssl/pull/271","diff_url":"https://github.com/open-quantum-safe/openssl/pull/271.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/271.patch"},"body":"Will update OIDs in BoringSSL once we're set here.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/778449516","html_url":"https://github.com/open-quantum-safe/openssl/pull/271#issuecomment-778449516","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/271","id":778449516,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODQ0OTUxNg==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T20:54:26Z","updated_at":"2021-02-12T20:54:26Z","author_association":"MEMBER","body":"I've added an implementation version column to the markdown files. This is through a new script `generate-oid-nid-table.py` that takes as argument a path to the liboqs `docs` directory. It then goes through all the KEM and signature documentation files and pulls out the version information to add to the table.  \r\n\r\nCan this PR be considered for merging? Once those files are YAMLized I can open another PR to pull more information out.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T20:54:26Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15169879177","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/882","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/882/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/882/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/882/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/882","id":792340302,"node_id":"MDU6SXNzdWU3OTIzNDAzMDI=","number":882,"title":"Outdated SIKE code","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"assignees":[{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2021-01-22T22:16:29Z","updated_at":"2021-02-12T22:00:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The timing side-channel test from #881 flags this as a potential timing leak. It was fixed upstream last June.\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/fb5484cda68dac115dc563593c68388f89444b95/src/kem/sike/external/sike.c#L79-L82","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/778478331","html_url":"https://github.com/open-quantum-safe/liboqs/issues/882#issuecomment-778478331","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/882","id":778478331,"node_id":"MDEyOklzc3VlQ29tbWVudDc3ODQ3ODMzMQ==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2021-02-12T22:00:15Z","updated_at":"2021-02-12T22:00:15Z","author_association":"CONTRIBUTOR","body":"SIKE just tagged [v3.4](https://github.com/microsoft/PQCrypto-SIDH/tree/v3.4); I'll integrate the [diff](https://github.com/microsoft/PQCrypto-SIDH/compare/566630...v3.4) and the missing code in `sike.c`.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T22:00:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
