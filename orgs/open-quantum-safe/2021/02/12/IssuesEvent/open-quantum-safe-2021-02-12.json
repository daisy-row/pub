{"id":"15159099979","type":"IssuesEvent","actor":{"id":50611,"login":"david415","display_login":"david415","gravatar_id":"","url":"https://api.github.com/users/david415","avatar_url":"https://avatars.githubusercontent.com/u/50611?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/909","id":806910013,"node_id":"MDU6SXNzdWU4MDY5MTAwMTM=","number":909,"title":"Kyber (NIST round 3) incompatibility with Circl's Kyber","user":{"login":"david415","id":50611,"node_id":"MDQ6VXNlcjUwNjEx","avatar_url":"https://avatars.githubusercontent.com/u/50611?v=4","gravatar_id":"","url":"https://api.github.com/users/david415","html_url":"https://github.com/david415","followers_url":"https://api.github.com/users/david415/followers","following_url":"https://api.github.com/users/david415/following{/other_user}","gists_url":"https://api.github.com/users/david415/gists{/gist_id}","starred_url":"https://api.github.com/users/david415/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/david415/subscriptions","organizations_url":"https://api.github.com/users/david415/orgs","repos_url":"https://api.github.com/users/david415/repos","events_url":"https://api.github.com/users/david415/events{/privacy}","received_events_url":"https://api.github.com/users/david415/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-12T03:10:36Z","updated_at":"2021-02-12T03:10:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Although not automated, confirming this incompatibility is simple. First I used Circl's golang kyber in a test to generate a Kyber1024 key pair and printed them as hex:\r\n \r\nhttps://github.com/david415/cryptocomrade/blob/master/go/kyber/kyber_test.go#L34\r\n\r\nNext I used the previously mentioned public key in a test which uses the oqs rust crate to \"encapsulate\" a shared secret. I print the hex of the shared secret as well as it's ciphertext:\r\n\r\nhttps://github.com/david415/cryptocomrade/blob/master/rust/src/kyber.rs#L21\r\n\r\nAfter that I modified the previously mentioned golang test to \"decapsulate\" the ciphertext:\r\n\r\nhttps://github.com/david415/cryptocomrade/blob/master/go/kyber/kyber_test.go#L60\r\n\r\nThis shows that the two implementations generate different \"shared secrets\".\r\n\r\n\r\nPlease do let me know if there is anything else I can do to help. I sincerely wish this incompatibility to be fixed because I am using both the oqs rust crate and the circl go library in my software which will hopefully one day enable people to communicate more freely.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T03:10:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15159931270","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910","id":806964735,"node_id":"MDU6SXNzdWU4MDY5NjQ3MzU=","number":910,"title":"Establish interop with Circl","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-12T05:45:39Z","updated_at":"2021-02-12T05:45:39Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"[Circl](https://github.com/cloudflare/circl) implements several algorithms also provided by liboqs. An automated interop test set would be good to avoid issues like #909 in the future. Possibly an application for [liboqs-go](https://github.com/open-quantum-safe/liboqs-go)?","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T05:45:40Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15160770987","type":"IssuesEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/909/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/909","id":806910013,"node_id":"MDU6SXNzdWU4MDY5MTAwMTM=","number":909,"title":"Kyber (NIST round 3) incompatibility with Circl's Kyber","user":{"login":"david415","id":50611,"node_id":"MDQ6VXNlcjUwNjEx","avatar_url":"https://avatars.githubusercontent.com/u/50611?v=4","gravatar_id":"","url":"https://api.github.com/users/david415","html_url":"https://github.com/david415","followers_url":"https://api.github.com/users/david415/followers","following_url":"https://api.github.com/users/david415/following{/other_user}","gists_url":"https://api.github.com/users/david415/gists{/gist_id}","starred_url":"https://api.github.com/users/david415/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/david415/subscriptions","organizations_url":"https://api.github.com/users/david415/orgs","repos_url":"https://api.github.com/users/david415/repos","events_url":"https://api.github.com/users/david415/events{/privacy}","received_events_url":"https://api.github.com/users/david415/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-12T03:10:36Z","updated_at":"2021-02-12T07:46:53Z","closed_at":"2021-02-12T07:46:53Z","author_association":"NONE","active_lock_reason":null,"body":"See https://github.com/cloudflare/circl/issues/213\r\n\r\nAlthough not automated, confirming this incompatibility is simple. First I used Circl's golang kyber in a test to generate a Kyber1024 key pair and printed them as hex:\r\n \r\nhttps://github.com/david415/cryptocomrade/blob/master/go/kyber/kyber_test.go#L34\r\n\r\nNext I used the previously mentioned public key in a test which uses the oqs rust crate to \"encapsulate\" a shared secret. I print the hex of the shared secret as well as it's ciphertext:\r\n\r\nhttps://github.com/david415/cryptocomrade/blob/master/rust/src/kyber.rs#L21\r\n\r\nAfter that I modified the previously mentioned golang test to \"decapsulate\" the ciphertext:\r\n\r\nhttps://github.com/david415/cryptocomrade/blob/master/go/kyber/kyber_test.go#L60\r\n\r\nThis shows that the two implementations generate different \"shared secrets\".\r\n\r\n\r\nPlease do let me know if there is anything else I can do to help. I sincerely wish this incompatibility to be fixed because I am using both the oqs rust crate and the circl go library in my software which will hopefully one day enable people to communicate more freely.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T07:46:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15161670422","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/901","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/901/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/901/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/901/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/901","id":804519386,"node_id":"MDU6SXNzdWU4MDQ1MTkzODY=","number":901,"title":"Portability tests on ubuntu-focal CI","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"assignees":[{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2021-02-09T12:45:35Z","updated_at":"2021-02-12T09:25:32Z","closed_at":"2021-02-12T09:25:32Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Portability tests are skipped on the new ubuntu-focal CI, for example here:\r\n\r\nhttps://app.circleci.com/pipelines/github/open-quantum-safe/liboqs/1218/workflows/50fa1837-6443-4ad6-aac7-fa8fe6d1716f/jobs/12325/parallel-runs/0/steps/0-104\r\n\r\nThe likely cause is\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/1ead54fc9adb441b017d296ec5c01b1cb30dbbfe/tests/test_portability.py#L27\r\n\r\nWith python3 on Focal, the string \"Ubuntu\" is reported with `platform.version()` rather than `platform.platform()`","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T09:25:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15162282236","type":"IssuesEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/21","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/21/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/21/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/21","id":805440764,"node_id":"MDU6SXNzdWU4MDU0NDA3NjQ=","number":21,"title":"Include a way to create a PublicKey (not PublicKeyRef) from bytes.","user":{"login":"marcbrevoort-cyberhive","id":69469731,"node_id":"MDQ6VXNlcjY5NDY5NzMx","avatar_url":"https://avatars.githubusercontent.com/u/69469731?v=4","gravatar_id":"","url":"https://api.github.com/users/marcbrevoort-cyberhive","html_url":"https://github.com/marcbrevoort-cyberhive","followers_url":"https://api.github.com/users/marcbrevoort-cyberhive/followers","following_url":"https://api.github.com/users/marcbrevoort-cyberhive/following{/other_user}","gists_url":"https://api.github.com/users/marcbrevoort-cyberhive/gists{/gist_id}","starred_url":"https://api.github.com/users/marcbrevoort-cyberhive/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marcbrevoort-cyberhive/subscriptions","organizations_url":"https://api.github.com/users/marcbrevoort-cyberhive/orgs","repos_url":"https://api.github.com/users/marcbrevoort-cyberhive/repos","events_url":"https://api.github.com/users/marcbrevoort-cyberhive/events{/privacy}","received_events_url":"https://api.github.com/users/marcbrevoort-cyberhive/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-10T11:46:01Z","updated_at":"2021-02-12T10:22:23Z","closed_at":"2021-02-12T10:22:23Z","author_association":"NONE","active_lock_reason":null,"body":"Currently it is possible to create a PublicKeyRef from bytes using public_key_from_bytes.\r\nIt is also possible to derive a PublicKeyRef from PublicKey.\r\n\r\nHowever there seems to be no mechanism at all to generate a PublicKey struct from bytes.\r\n\r\nThings that *don't* work include\r\n\r\n- public_key_from_bytes (this returns a publickeyref rather than a publickey)\r\n- PublicKey::from(PublicKeyRef) (not implemented)\r\n- just creating the struct, PublicKey { bytes: [u8] } -  bytes is a private field\r\n- PublicKey::new(bytes) - not implemented, PublicKeyRef::new() however does exist\r\n- PublicKeyRef::deref() also does not seem to work to get to the PublicKey instance.\r\n\r\nWould it be possible to include PublicKey struct creation from bytes?","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T10:22:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15162305590","type":"IssuesEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/26/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/26","id":807117552,"node_id":"MDU6SXNzdWU4MDcxMTc1NTI=","number":26,"title":"Crates.io version is out-of-date","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-12T10:24:24Z","updated_at":"2021-02-12T10:24:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The version currently on crates.io is a bit out-of-date. Notably: it contains a bunch of round-2 implementations still.\r\n\r\nHowever, we can't bump to version 0.4.0 because that would match the round-2 release number of liboqs, which we're ahead of.\r\n\r\nBumping to version 0.5.0 would be confusing, as that's the next liboqs release.\r\n\r\nThe best solution seems to be to just wait for version 0.5.0 of liboqs to be released, after which we'll follow liboqs releases.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-12T10:24:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
