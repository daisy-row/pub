{"id":"15327534308","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/71","id":816872164,"node_id":"MDU6SXNzdWU4MTY4NzIxNjQ=","number":71,"title":"Using the oqs curl software to curl an OQS enabled NGINX server","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-25T22:51:03Z","updated_at":"2021-02-26T06:20:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\nI have used the Dockerfile of the nginx oqs-demo [here](https://github.com/open-quantum-safe/oqs-demos/tree/main/nginx) to manually setup an OQC enabled NGINX server without the use of docker. I have generated a dilithium2 signed server certificate and referrenced it in the nginx.conf file. The certificate can be successfully retrieved using the s_client of the OQC fork of OpenSSL, doing the following:\r\n `<OpenSSL DIR>/apps/openssl s_client -connect //https:my-domain.com -curves <ALG>` .\r\n\r\nHowever, when i use the curl program provided in your image, using the command: \r\n `docker run -it openquantumsafe/curl curl -k https://my-domain.com --curves kyber512`\r\nI get the error: `curl: (35) error:101310B0:elliptic curve routines:pkey_oqs_digestverify:verification failed`. \r\nWhy might this be the case?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/786439504","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/71#issuecomment-786439504","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71","id":786439504,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjQzOTUwNA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-26T06:20:10Z","updated_at":"2021-02-26T06:20:10Z","author_association":"MEMBER","body":"> I have used the Dockerfile of the nginx oqs-demo here to manually setup an OQC enabled NGINX server without the use of docker. \r\n\r\nSuch approach makes it hard for us to reproduce the exact configuration settings & code version(s) you have used when building your system. Do things work OK if you generate the dil2 cert using the pre-build (oqs-curl/openssl & nginx) images?\r\n\r\n> The certificate can be successfully retrieved using the s_client of the OQC fork of OpenSSL\r\n\r\nWhat do you mean by \"can be successfully retrieved\"? The provided `s_client` command does not seem to use/reference any certificate (e.g., via the `-CAfile` option)...\r\n\r\n> the error: curl: (35) error:101310B0:elliptic curve routines:pkey_oqs_digestverify:verification failed.\r\nWhy might this be the case?\r\n\r\nThe sole reason for this (in case of a plain, non-hybrid, OQS cert) would be if the OQS signature verification function were failing. But again, I can't see you specify a `--cacert` (but in fact `-k` which should disable all curl cert-checks).\r\n\r\nSo again, to eliminate all code version and configuration mismatches, I'd suggest you first use _only_ the available docker images **or** build all code, incl. curl, from source. ","performed_via_github_app":null}},"public":true,"created_at":"2021-02-26T06:20:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15328060830","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/51","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/51/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/51/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/51","id":815958023,"node_id":"MDU6SXNzdWU4MTU5NTgwMjM=","number":51,"title":"Boringssl install cannot find libssl.so ","user":{"login":"prchander","id":54725951,"node_id":"MDQ6VXNlcjU0NzI1OTUx","avatar_url":"https://avatars.githubusercontent.com/u/54725951?v=4","gravatar_id":"","url":"https://api.github.com/users/prchander","html_url":"https://github.com/prchander","followers_url":"https://api.github.com/users/prchander/followers","following_url":"https://api.github.com/users/prchander/following{/other_user}","gists_url":"https://api.github.com/users/prchander/gists{/gist_id}","starred_url":"https://api.github.com/users/prchander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prchander/subscriptions","organizations_url":"https://api.github.com/users/prchander/orgs","repos_url":"https://api.github.com/users/prchander/repos","events_url":"https://api.github.com/users/prchander/events{/privacy}","received_events_url":"https://api.github.com/users/prchander/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-25T00:28:42Z","updated_at":"2021-02-26T07:22:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello, I have tried a docker container and a new vm and I am facing issues installing liboqs then boringssl. \r\n-- Build files have been written to: /home/pi/oqs/boringssl/build\r\n[393/447] Linking CXX shared library ssl/libssl.so\r\nFAILED: ssl/libssl.so\r\n\r\nSteps I used to install \r\nit clone --branch master https://github.com/open-quantum-safe/boringssl.git\r\n\r\n\r\nBORINGSSL_DIR=$PWD/boringssl\r\n\r\n#Build liboqs\r\n#------------\r\n\r\ngit clone https://github.com/open-quantum-safe/liboqs.git\r\ncd liboqs\r\n\r\nrm -rf build\r\nmkdir build && cd build\r\n\r\ncmake -G\"Ninja\" -DCMAKE_INSTALL_PREFIX=$BORINGSSL_DIR/oqs -DOQS_USE_OPENSSL=OFF ..\r\n\r\nninja\r\nsudo ninja install\r\n\r\n#Build OQS BoringSSL\r\n#-------------------\r\n\r\ncd $BORINGSSL_DIR\r\nrm -rf build\r\nmkdir build && cd build\r\n\r\ncmake -DBUILD_SHARED_LIBS=ON -GNinja ..\r\n\r\nninja\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/786463937","html_url":"https://github.com/open-quantum-safe/boringssl/issues/51#issuecomment-786463937","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/51","id":786463937,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjQ2MzkzNw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-26T07:22:41Z","updated_at":"2021-02-26T07:22:41Z","author_association":"MEMBER","body":"Can you show the output error message, please? I'm not the boringssl expert but why would `libssl` be needed at all if you build without it (-DOQS_USE_OPENSSL=OFF)? In addition, if you build `boringssl` shared, should you not build `liboqs` also shared?","performed_via_github_app":null}},"public":true,"created_at":"2021-02-26T07:22:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15332068062","type":"IssueCommentEvent","actor":{"id":23386187,"login":"ibmo96","display_login":"ibmo96","gravatar_id":"","url":"https://api.github.com/users/ibmo96","avatar_url":"https://avatars.githubusercontent.com/u/23386187?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/71","id":816872164,"node_id":"MDU6SXNzdWU4MTY4NzIxNjQ=","number":71,"title":"Using the oqs curl software to curl an OQS enabled NGINX server","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-25T22:51:03Z","updated_at":"2021-02-26T13:23:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\nI have used the Dockerfile of the nginx oqs-demo [here](https://github.com/open-quantum-safe/oqs-demos/tree/main/nginx) to manually setup an OQC enabled NGINX server without the use of docker. I have generated a dilithium2 signed server certificate and referrenced it in the nginx.conf file. The certificate can be successfully retrieved using the s_client of the OQC fork of OpenSSL, doing the following:\r\n `<OpenSSL DIR>/apps/openssl s_client -connect //https:my-domain.com -curves <ALG>` .\r\n\r\nHowever, when i use the curl program provided in your image, using the command: \r\n `docker run -it openquantumsafe/curl curl -k https://my-domain.com --curves kyber512`\r\nI get the error: `curl: (35) error:101310B0:elliptic curve routines:pkey_oqs_digestverify:verification failed`. \r\nWhy might this be the case?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/786645356","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/71#issuecomment-786645356","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71","id":786645356,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjY0NTM1Ng==","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"created_at":"2021-02-26T13:23:29Z","updated_at":"2021-02-26T13:23:29Z","author_association":"NONE","body":"> > I have used the Dockerfile of the nginx oqs-demo here to manually setup an OQC enabled NGINX server without the use of docker.\r\n> \r\n> Such approach makes it hard for us to reproduce the exact configuration settings & code version(s) you have used when building your system. Do things work OK if you generate the dil2 cert using the pre-build (oqs-curl/openssl & nginx) images?\r\n> test reply\r\n> > The certificate can be successfully retrieved using the s_client of the OQC fork of OpenSSL\r\n> \r\n> What do you mean by \"can be successfully retrieved\"? The provided `s_client` command does not seem to use/reference any certificate (e.g., via the `-CAfile` option)...\r\n> \r\n> > the error: curl: (35) error:101310B0:elliptic curve routines:pkey_oqs_digestverify:verification failed.\r\n> > Why might this be the case?\r\n> \r\n> The sole reason for this (in case of a plain, non-hybrid, OQS cert) would be if the OQS signature verification function were failing. But again, I can't see you specify a `--cacert` (but in fact `-k` which should disable all curl cert-checks).\r\n> \r\n> So again, to eliminate all code version and configuration mismatches, I'd suggest you first use _only_ the available docker images **or** build all code, incl. curl, from source.\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-02-26T13:23:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15332549630","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/71","id":816872164,"node_id":"MDU6SXNzdWU4MTY4NzIxNjQ=","number":71,"title":"Using the oqs curl software to curl an OQS enabled NGINX server","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-25T22:51:03Z","updated_at":"2021-02-26T14:02:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\nI have used the Dockerfile of the nginx oqs-demo [here](https://github.com/open-quantum-safe/oqs-demos/tree/main/nginx) to manually setup an OQC enabled NGINX server without the use of docker. I have generated a dilithium2 signed server certificate and referrenced it in the nginx.conf file. The certificate can be successfully retrieved using the s_client of the OQC fork of OpenSSL, doing the following:\r\n `<OpenSSL DIR>/apps/openssl s_client -connect //https:my-domain.com -curves <ALG>` .\r\n\r\nHowever, when i use the curl program provided in your image, using the command: \r\n `docker run -it openquantumsafe/curl curl -k https://my-domain.com --curves kyber512`\r\nI get the error: `curl: (35) error:101310B0:elliptic curve routines:pkey_oqs_digestverify:verification failed`. \r\nWhy might this be the case?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/786665553","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/71#issuecomment-786665553","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71","id":786665553,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NjY2NTU1Mw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-26T14:02:33Z","updated_at":"2021-02-26T14:02:33Z","author_association":"MEMBER","body":"OK, this makes sense: Your self-built `openssl s_client` works up to the point of seeing a self-signed cert. Now, can you please show the full `curl` call and (error) return? Best with the `--verbose` option?\r\n\r\nAlso, what about creating a CA (chain) to give curl (and openssl s_client) the possibility to run a regular certificate verification? In so doing, we might be discovering what's wrong with the dilithium2 cert `curl` complains about.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-26T14:02:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15334616090","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/53","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/53/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/53/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/53/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/53","id":817473262,"node_id":"MDExOlB1bGxSZXF1ZXN0NTgwOTYwNDU2","number":53,"title":"fixes #52","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-26T16:00:54Z","updated_at":"2021-02-26T16:38:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/53","html_url":"https://github.com/open-quantum-safe/boringssl/pull/53","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/53.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/53.patch"},"body":"Fixes #52 \r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/786757109","html_url":"https://github.com/open-quantum-safe/boringssl/pull/53#issuecomment-786757109","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/53","id":786757109,"node_id":"MDEyOklzc3VlQ29tbWVudDc4Njc1NzEwOQ==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-02-26T16:38:24Z","updated_at":"2021-02-26T16:38:24Z","author_association":"MEMBER","body":"I can merge this in once it's in a non-draft state.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-26T16:38:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15335364296","type":"IssueCommentEvent","actor":{"id":23386187,"login":"ibmo96","display_login":"ibmo96","gravatar_id":"","url":"https://api.github.com/users/ibmo96","avatar_url":"https://avatars.githubusercontent.com/u/23386187?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/71","id":816872164,"node_id":"MDU6SXNzdWU4MTY4NzIxNjQ=","number":71,"title":"Using the oqs curl software to curl an OQS enabled NGINX server","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-02-25T22:51:03Z","updated_at":"2021-02-26T17:40:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\nI have used the Dockerfile of the nginx oqs-demo [here](https://github.com/open-quantum-safe/oqs-demos/tree/main/nginx) to manually setup an OQC enabled NGINX server without the use of docker. I have generated a dilithium2 signed server certificate and referrenced it in the nginx.conf file. The certificate can be successfully retrieved using the s_client of the OQC fork of OpenSSL, doing the following:\r\n `<OpenSSL DIR>/apps/openssl s_client -connect //https:my-domain.com -curves <ALG>` .\r\n\r\nHowever, when i use the curl program provided in your image, using the command: \r\n `docker run -it openquantumsafe/curl curl -k https://my-domain.com --curves kyber512`\r\nI get the error: `curl: (35) error:101310B0:elliptic curve routines:pkey_oqs_digestverify:verification failed`. \r\nWhy might this be the case?","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/786792395","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/71#issuecomment-786792395","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/71","id":786792395,"node_id":"MDEyOklzc3VlQ29tbWVudDc4Njc5MjM5NQ==","user":{"login":"ibmo96","id":23386187,"node_id":"MDQ6VXNlcjIzMzg2MTg3","avatar_url":"https://avatars.githubusercontent.com/u/23386187?v=4","gravatar_id":"","url":"https://api.github.com/users/ibmo96","html_url":"https://github.com/ibmo96","followers_url":"https://api.github.com/users/ibmo96/followers","following_url":"https://api.github.com/users/ibmo96/following{/other_user}","gists_url":"https://api.github.com/users/ibmo96/gists{/gist_id}","starred_url":"https://api.github.com/users/ibmo96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ibmo96/subscriptions","organizations_url":"https://api.github.com/users/ibmo96/orgs","repos_url":"https://api.github.com/users/ibmo96/repos","events_url":"https://api.github.com/users/ibmo96/events{/privacy}","received_events_url":"https://api.github.com/users/ibmo96/received_events","type":"User","site_admin":false},"created_at":"2021-02-26T17:40:46Z","updated_at":"2021-02-26T17:40:46Z","author_association":"NONE","body":"> OK, this makes sense: Your self-built `openssl s_client` works up to the point of seeing a self-signed cert. Now, can you please show the full `curl` call and (error) return? Best with the `--verbose` option?\r\n\r\nSo i built the OQS curl image as instructed [here](https://github.com/open-quantum-safe/oqs-demos/tree/main/curl) and this seems to work and retrieves the page from my OQS-enabled, as shown below:\r\n![image](https://user-images.githubusercontent.com/23386187/109335168-f905cd80-7861-11eb-9c32-479dab271524.png)\r\n\r\nAnd the data from `--verbose` mode: \r\n\r\n`root@ubuntu-s-1vcpu-1gb-fra1-01:/home/ibra/pqs_server_files/oqs-demos/curl# docker run -it oqs-curl curl -k https://oqs-moff.info:443 --verbose --curves kyber512\r\n*   Trying 159.65.123.193:443...\r\n* Connected to oqs-moff.info (159.65.123.193) port 443 (#0)\r\n* ALPN, offering http/1.1\r\n* successfully set certificate verify locations:\r\n*  CAfile: /opt/oqssa/oqs-bundle.pem\r\n*  CApath: none\r\n* TLSv1.3 (OUT), TLS handshake, Client hello (1):\r\n* TLSv1.3 (IN), TLS handshake, Server hello (2):\r\n* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):\r\n* TLSv1.3 (IN), TLS handshake, Certificate (11):\r\n* TLSv1.3 (IN), TLS handshake, CERT verify (15):\r\n* TLSv1.3 (IN), TLS handshake, Finished (20):\r\n* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):\r\n* TLSv1.3 (OUT), TLS handshake, Finished (20):\r\n* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384\r\n* ALPN, server accepted to use http/1.1\r\n* Server certificate:\r\n*  subject: CN=oqs-moff.info\r\n*  start date: Feb 25 21:32:01 2021 GMT\r\n*  expire date: Feb 25 21:32:01 2022 GMT\r\n*  issuer: CN=oqs-moff.info\r\n*  SSL certificate verify result: self signed certificate (18), continuing anyway.\r\n> GET / HTTP/1.1\r\n> Host: oqs-moff.info\r\n> User-Agent: curl/7.73.0\r\n> Accept: */*\r\n>\r\n* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):\r\n* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):\r\n* old SSL session ID is stale, removing\r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 200 OK\r\n< Server: nginx/1.18.0\r\n< Date: Fri, 26 Feb 2021 17:40:00 GMT\r\n< Content-Type: text/html\r\n< Content-Length: 622\r\n* old SSL session ID is stale, removing\r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 200 OK\r\n< Server: nginx/1.18.0\r\n< Date: Fri, 26 Feb 2021 17:40:00 GMT\r\n< Content-Type: text/html\r\n< Content-Length: 622\r\n< Last-Modified: Tue, 23 Feb 2021 11:41:25 GMT\r\n< Connection: keep-alive\r\n< ETag: \"6034e9e5-26e\"\r\n< Accept-Ranges: bytes\r\n< `\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-02-26T17:40:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
