{"id":"15060921380","type":"IssuesEvent","actor":{"id":66254213,"login":"iamsoze","display_login":"iamsoze","gravatar_id":"","url":"https://api.github.com/users/iamsoze","avatar_url":"https://avatars.githubusercontent.com/u/66254213?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/275","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/275/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/275","id":800941831,"node_id":"MDU6SXNzdWU4MDA5NDE4MzE=","number":275,"title":"Unable to find quantum based ciphersuite in openssl","user":{"login":"iamsoze","id":66254213,"node_id":"MDQ6VXNlcjY2MjU0MjEz","avatar_url":"https://avatars.githubusercontent.com/u/66254213?v=4","gravatar_id":"","url":"https://api.github.com/users/iamsoze","html_url":"https://github.com/iamsoze","followers_url":"https://api.github.com/users/iamsoze/followers","following_url":"https://api.github.com/users/iamsoze/following{/other_user}","gists_url":"https://api.github.com/users/iamsoze/gists{/gist_id}","starred_url":"https://api.github.com/users/iamsoze/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iamsoze/subscriptions","organizations_url":"https://api.github.com/users/iamsoze/orgs","repos_url":"https://api.github.com/users/iamsoze/repos","events_url":"https://api.github.com/users/iamsoze/events{/privacy}","received_events_url":"https://api.github.com/users/iamsoze/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-04T05:21:22Z","updated_at":"2021-02-04T05:21:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have compiled [OQS-Openssl_1_1_1](https://github.com/open-quantum-safe/openssl) for Linux x86. I have followed the compilation steps as described (first liboqs and then openssl). The compilation was successful but when I run `apps/openssl ciphers` I can't see any ciphersuite with quantum algorithms. \r\n\r\n`**==> apps/openssl ciphers**\r\nTLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:RSA-PSK-AES256-GCM-SHA384:DHE-PSK-AES256-GCM-SHA384:RSA-PSK-CHACHA20-POLY1305:DHE-PSK-CHACHA20-POLY1305:ECDHE-PSK-CHACHA20-POLY1305:AES256-GCM-SHA384:PSK-AES256-GCM-SHA384:PSK-CHACHA20-POLY1305:RSA-PSK-AES128-GCM-SHA256:DHE-PSK-AES128-GCM-SHA256:AES128-GCM-SHA256:PSK-AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:ECDHE-PSK-AES256-CBC-SHA384:ECDHE-PSK-AES256-CBC-SHA:SRP-RSA-AES-256-CBC-SHA:SRP-AES-256-CBC-SHA:RSA-PSK-AES256-CBC-SHA384:DHE-PSK-AES256-CBC-SHA384:RSA-PSK-AES256-CBC-SHA:DHE-PSK-AES256-CBC-SHA:AES256-SHA:PSK-AES256-CBC-SHA384:PSK-AES256-CBC-SHA:ECDHE-PSK-AES128-CBC-SHA256:ECDHE-PSK-AES128-CBC-SHA:SRP-RSA-AES-128-CBC-SHA:SRP-AES-128-CBC-SHA:RSA-PSK-AES128-CBC-SHA256:DHE-PSK-AES128-CBC-SHA256:RSA-PSK-AES128-CBC-SHA:DHE-PSK-AES128-CBC-SHA:AES128-SHA:PSK-AES128-CBC-SHA256:PSK-AES128-CBC-SHA`\r\n\r\nI am using this openssl to compile a SIP server ([Asterisk](https://www.asterisk.org/)). I would like to add support of quantum based ciphersuites in it. Can you please advice on how to do this?\r\n\r\nThank you.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-04T05:21:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15061677461","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/894","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/894/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/894/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/894/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/894","id":800992852,"node_id":"MDU6SXNzdWU4MDA5OTI4NTI=","number":894,"title":"Optimize and document common code imports","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-04T06:56:36Z","updated_at":"2021-02-04T06:56:36Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As per discussion [here](https://github.com/open-quantum-safe/liboqs/pull/890#issuecomment-772807178) and [here](https://github.com/open-quantum-safe/liboqs/pull/883#issuecomment-770879536) further improve [copy_from_upstream](https://github.com/open-quantum-safe/liboqs/tree/main/scripts/copy_from_upstream) and its documentation [here](https://github.com/open-quantum-safe/liboqs/wiki/Contributing-guide#automated-inclusion)","performed_via_github_app":null}},"public":true,"created_at":"2021-02-04T06:56:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15063905536","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/880","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/880/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/880/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/880/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/880","id":791911850,"node_id":"MDU6SXNzdWU3OTE5MTE4NTA=","number":880,"title":"Update copy_from_pqclean","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"assignees":[{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2021-01-22T11:02:42Z","updated_at":"2021-02-04T10:06:37Z","closed_at":"2021-02-04T10:06:37Z","author_association":"MEMBER","active_lock_reason":null,"body":"I'd support this proposal from Basil Hess and solicit further feedback to the below from @dstebila , @xvzcf : \r\n\r\n> Using kyber-upstream is now indeed a simple task thanks to what you already prepared.\r\n> I really like the copy_from_pqclean mechanism. The META.yml definitions are obviously a pqclean-\"invention\", but they are a nice way to make an easy path for integrating also other implementations/libraries. Perhaps it could be renamed to copy_from_upstream.\r\n> \r\n> I'm slightly updating the script with the following features. Please let me know if anything doesn't make sense here:\r\n>\r\n>- Adding support to checkout the upstream code from a git-repository: copy_from_pqclean.yml will contain a section \"upstreams\" with several git-repos (pqclean, pqcrystals-kyber, pqcrystals-dilithium, etc...), and the git-commit hash that will be used. This will replace the PQCLEAN_DIR env. variable. Instead, the git repo location will be used (this can be a github-url, a local path on the filesystem, etc.).\r\n> - Adding a \"verify\" switch to the script: The goal is to be able to prove that the code used in liboqs origins from an upstream location with a specific commit. This will basically repeat the copy_from_pqclean process, hash of the code that is checked out, and compare it with the code in the liboqs src-directory. For someone using liboqs it should be useful to be able to reproduce and verify from where the crypto code origins.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-04T10:06:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15064557304","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/884","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/884/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/884/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/884/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/884","id":795758217,"node_id":"MDU6SXNzdWU3OTU3NTgyMTc=","number":884,"title":"Contributing guide update","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-01-28T07:45:47Z","updated_at":"2021-02-04T10:54:29Z","closed_at":"2021-02-04T10:54:29Z","author_association":"MEMBER","active_lock_reason":null,"body":"This is to foster a discussion on updates to [Contributing wiki](https://github.com/open-quantum-safe/liboqs/wiki/Contributing-guide)\r\n\r\n> The code must build on Linux, macOS, and Windows.\r\n\r\nThis is not true for all algorithms, right? Suggested rephrase:\r\n\r\n> The code must build at least on Linux (x86_64). Optimizations and other operating systems supported may be supported and must be suitably registered for each algorithm in https://github.com/open-quantum-safe/liboqs/blob/main/.CMake/alg_support.cmake\r\n\r\nAlso this statement isn't quite correct for all algorithms: \r\n\r\n> Source code must be formatted in accordance with our formatting requirements (make prettyprint).\r\n\r\nIssues: a) We're not using `make` any more and b) this only applies to OQS core code, not the actual algorithms. So I suggest to introduce a new section \"Common code\" and move the above statement there changed as follows:\r\n\r\n> Source code contributed to OQS core code must be formatted in accordance with our formatting requirements. Non-OQS core code is any code not originally created in this repository but only imported manually or automatically, such as specific quantum-safe algorithms. Adherence to our formatting requirements is successfully tested by executing `./tests/run_astyle.sh` in the liboqs project root folder without \"Formatting\" statements returned. Passing this test is a prerequisite for successful CI.\r\n\r\nThe `Automated inclusion` section needs to be re-written once #883 is landed.\r\n\r\nRegarding [Testing](https://github.com/open-quantum-safe/liboqs/wiki/Contributing-guide#testing):\r\n\r\nWhat about changing that heading to \"Continuous Integration Testing (CI)\" ?\r\n\r\nIssues: We are not testing Centos 7 any more, so we need to drop the statement. \r\n\r\nRegarding Ubuntu: Would it be time to upgrade to a more recent LTS than 18.04? Canonical main stream is 20.04. -> I'd suggest to agree a time frame for this update.\r\n\r\nDo we further want to posit\r\n\r\n> Normal pull requests (PRs) must have all CI tests pass. Non-standard PRs must explain the reasons for breaking CI as well as a plan how to get CI to work again.\r\n\r\nIf so, we further face the issue that only core team members can actually trigger full CI. So should the further demand passing all CI tests locally be explicitly stated? Not really sure what to recommend here, so leaving a recommendation away at this time.\r\n\r\nNext steps: Please comment below with changes, additions, etc. so we can agree in a next meeting how to close out this issue.\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-02-04T10:54:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15068110405","type":"IssuesEvent","actor":{"id":7422273,"login":"mattcaswell","display_login":"mattcaswell","gravatar_id":"","url":"https://api.github.com/users/mattcaswell","avatar_url":"https://avatars.githubusercontent.com/u/7422273?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/895","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/895/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/895/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/895/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/895","id":801374003,"node_id":"MDU6SXNzdWU4MDEzNzQwMDM=","number":895,"title":"Infinite loop if call to OpenSSL function RAND_bytes() fails","user":{"login":"mattcaswell","id":7422273,"node_id":"MDQ6VXNlcjc0MjIyNzM=","avatar_url":"https://avatars.githubusercontent.com/u/7422273?v=4","gravatar_id":"","url":"https://api.github.com/users/mattcaswell","html_url":"https://github.com/mattcaswell","followers_url":"https://api.github.com/users/mattcaswell/followers","following_url":"https://api.github.com/users/mattcaswell/following{/other_user}","gists_url":"https://api.github.com/users/mattcaswell/gists{/gist_id}","starred_url":"https://api.github.com/users/mattcaswell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattcaswell/subscriptions","organizations_url":"https://api.github.com/users/mattcaswell/orgs","repos_url":"https://api.github.com/users/mattcaswell/repos","events_url":"https://api.github.com/users/mattcaswell/events{/privacy}","received_events_url":"https://api.github.com/users/mattcaswell/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-04T15:11:28Z","updated_at":"2021-02-04T15:11:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The function `OQS_randombytes_openssl` will call RAND_bytes() in an infinite loop if it fails:\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/bd4d09da75e217a439e1f7790d7a064208c39d08/src/common/rand/rand.c#L114-L122\r\n\r\nThis is probably not the right behaviour. In some circumstances (for example if the DRBG has failed to seed) this call will never succeed no matter how many times you call it. This is the cause of the hang found here:\r\n\r\nhttps://github.com/openssl/openssl/issues/14069","performed_via_github_app":null}},"public":true,"created_at":"2021-02-04T15:11:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15068623709","type":"IssuesEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/896","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/896/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/896/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/896/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/896","id":801401722,"node_id":"MDU6SXNzdWU4MDE0MDE3MjI=","number":896,"title":"Missing AVX2 version of Classic McEliece","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-04T15:42:40Z","updated_at":"2021-02-04T15:42:40Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"We only pull in the vec (vectorized plain C) implementation of Classic McEliece from PQClean; we should also pull in the avx2 implementation.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-04T15:42:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
