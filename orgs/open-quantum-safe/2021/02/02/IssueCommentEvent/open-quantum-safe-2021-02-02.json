{"id":"15031434304","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/881","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/881/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/881/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/881/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/881","id":792333487,"node_id":"MDExOlB1bGxSZXF1ZXN0NTYwMjM0NzI4","number":881,"title":"Use valgrind to check for secret-dependent branching","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-01-22T22:01:16Z","updated_at":"2021-02-02T08:56:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/881","html_url":"https://github.com/open-quantum-safe/liboqs/pull/881","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/881.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/881.patch"},"body":"Here's one way to use Valgrind to check for secret-dependent branching (and resolve #812). It's based on  Moritz Neikes [TIMECOP](https://post-apocalyptic-crypto.org/timecop/index.html).\r\n\r\nThe idea behind TIMECOP is that if you tell Valgrind that secret data resides in uninitialized memory, then Valgrind will tell you when your program branches on secret data.\r\n\r\nSUPERCOP's implementation of TIMECOP introduced \"classify\" and \"declassify\" terminology for the operation of telling Valgrind that memory is secret or non-secret. I've replicated that terminology by defining two macros in oqs.h:\r\n\r\n```c\r\n#define OQS_TIMECOP_CLASSIFY(addr, len)  VALGRIND_MAKE_MEM_UNDEFINED(addr, len)\r\n#define OQS_TIMECOP_DECLASSIFY(addr, len)  VALGRIND_MAKE_MEM_DEFINED(addr, len)\r\n```\r\n\r\nEvery secret can ultimately be traced back to a call to randombytes, so we can tell Valgrind that secrets reside in uninitialized memory by defining our own randombytes, e.g.\r\n\r\n```c\r\nvoid TEST_KEM_randombytes(uint8_t *random_array, size_t bytes_to_read) {\r\n  OQS_randombytes_system(random_array, bytes_to_read);\r\n  OQS_TIMECOP_CLASSIFY(random_array, bytes_to_read);\r\n}\r\n```\r\nand making it the default\r\n```c\r\n  OQS_randombytes_custom_algorithm(&TEST_KEM_randombytes);\r\n```\r\n\r\nI've done this in test_kem.c and test_sig.c. If you run the new test_kem or test_sig outside of Valgrind there's no change. But in Valgrind you'll see something like this:\r\n\r\n```sh\r\n$ valgrind ./tests/test_kem sntrup761\r\n[...]\r\n== Thread 2:\r\n== Conditional jump or move depends on uninitialised value(s)\r\n==    at 0x2B4EBF: PQCLEAN_SNTRUP761_CLEAN_crypto_kem_keypair (kem.c:145)\r\n==    by 0x10BCE8: kem_test_correctness (test_kem.c:94)\r\n==    by 0x10C58B: test_wrapper (test_kem.c:177)\r\n==    by 0x4CDAFA2: start_thread (pthread_create.c:486)\r\n==    by 0x4DED4CE: clone (clone.S:95) \r\n[...]\r\n```\r\n(I've compiled with CMAKE_BUILD_TYPE=debug to get the line numbers were secret branching occurs.)\r\n\r\nOf course, some non-secret data is derived from calls to randombytes, and examining pqclean_sntrup761_clean/kem.c we see that line 145 is part of a rejection sampling loop and the branch is not secret. We can remove the false positive by calling OQS_TIMECOP_DECLASSIFY on the offending memory.\r\n\r\nThere's a different example of declassifying memory in Kyber512 in the first commit linked to this PR.\r\n\r\n--- \r\n\r\nNone of changes to oqs.h, test_kem.c, or test_sig.c introduce a dependency on Valgrind. Users can still compile test_kem and test_sig and run them outside of Valgrind. All we need are some header files that the Valgrind project provides, for this purpose, under a BSD license. I've added those to src/common/valgrind.\r\n\r\n**TODO:**\r\n- [x] Configure CMake to include the local valgrind/memcheck.h and valgrind/valgrind.h.\r\n- [x] Add a compilation flag to completely remove calls to VALGRIND_MAKE_MEM_DEFINED. Compiling the schemes with \"-DNVALGRIND\" will do the trick. Alternatively we can change the definitions of OQS_TIMECOP_(DE)CLASSIFY in oqs.h with an ifdef.\r\n- [ ] Flag false positives with OQS_TIMECOP_DECLASSIFY.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/771476973","html_url":"https://github.com/open-quantum-safe/liboqs/pull/881#issuecomment-771476973","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/881","id":771476973,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTQ3Njk3Mw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-02T08:56:07Z","updated_at":"2021-02-02T08:56:07Z","author_association":"MEMBER","body":"> I still need to add a CI job. I could use some help with that.\r\n\r\nJust looked into that: Just from reading, one first question regarding the skip logic: It seems this test is always run, even if  `OQS_ENABLE_TEST_CONSTANT_TIME` is not set. I guess that doesn't make sense/is not intended? Second issue: Requirement for valgrind > 3.14.0: This is not part of `apt` in ubuntu 18/bionic, so we'd need to build that into the CI image from source. Alternative: Upgrade CI to 20/focal (also as discussed in #884: When to upgrade ubuntu): 20.04 readily apt-packages valgrind 13.15.0. \r\n\r\nFor now, proposed solutions: \r\nOn 1) You may want to add this code to `test_constant_time.py`:\r\n```\r\ndef is_constant_time_enabled():\r\n    with open(os.path.join('build', 'include', 'oqs', 'oqsconfig.h')) as fh:\r\n        for line in fh:\r\n            if line.startswith(\"#define OQS_ENABLE_TEST_CONSTANT_TIME\"):\r\n                return True\r\n    return False\r\n```\r\n\r\nand then guard test execution(s) with it, e.g., \r\n```\r\n@pytest.mark.skipif(not is_constant_time_enabled(), reason=\"OQS_ENABLE_TEST_CONSTANT_TIME not enabled\")\r\n```\r\n\r\nFor 2), there's now https://github.com/open-quantum-safe/ci-containers/pull/47 adding valgrind 3.16.1 to our current CI image.\r\n\r\nOnce both things are done, this test can be easily activated for CI in `.circleci/config.yml` by adding this new job (also doing some more tests with a gcc-debug build while we're at it):\r\n```\r\n      - linux_x64:\r\n          <<: *require_stylecheck\r\n          name: constant-time\r\n          context: openquantumsafe\r\n          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest\r\n          CMAKE_ARGS: -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON\r\n          PYTEST_ARGS: --ignore=tests/test_portability.py --numprocesses=auto\r\n```\r\n\r\nFinal comment: stylecheck test fails. You may want to run `./tests/run_astyle.sh` to see where reformatting needs to be done. You may want to do a local test run as per [the wiki](https://github.com/open-quantum-safe/liboqs/wiki/Contributing-guide#continuous-integration-ci-testing), e.g. with jobname set to \"constant-time\" (CI job added above).","performed_via_github_app":null}},"public":true,"created_at":"2021-02-02T08:56:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15038009147","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/4","id":798751248,"node_id":"MDU6SXNzdWU3OTg3NTEyNDg=","number":4,"title":"OpenSSL copyright?","user":{"login":"levitte","id":698918,"node_id":"MDQ6VXNlcjY5ODkxOA==","avatar_url":"https://avatars.githubusercontent.com/u/698918?v=4","gravatar_id":"","url":"https://api.github.com/users/levitte","html_url":"https://github.com/levitte","followers_url":"https://api.github.com/users/levitte/followers","following_url":"https://api.github.com/users/levitte/following{/other_user}","gists_url":"https://api.github.com/users/levitte/gists{/gist_id}","starred_url":"https://api.github.com/users/levitte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levitte/subscriptions","organizations_url":"https://api.github.com/users/levitte/orgs","repos_url":"https://api.github.com/users/levitte/repos","events_url":"https://api.github.com/users/levitte/events{/privacy}","received_events_url":"https://api.github.com/users/levitte/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-01T22:14:23Z","updated_at":"2021-02-02T16:58:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"There are a number of files in [oqsprov/](https://github.com/open-quantum-safe/oqs-provider/tree/main/oqsprov) that have the OpenSSL copyright boilerplate, which gives copyright to the OpenSSL Authors, which I understand is historical, since this was previously a patchset for OpenSSL proper.\r\n\r\nI don't think that's something you want at this point, and I can't see anything wrong with simply removing that boilerplate.  What you still have in there that could remind anyone of the built-in OpenSSL providers, it's mostly bread-and-butter lines that are only vaguely similar.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/771788013","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/4#issuecomment-771788013","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4","id":771788013,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTc4ODAxMw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-02-02T16:58:07Z","updated_at":"2021-02-02T16:58:07Z","author_association":"MEMBER","body":"ACK. We'd probably take the (lib)OQS marking route. Looking at that again, though, `// SPDX-License-Identifier: Apache-2.0 AND MIT` is a \"bit terse\".... @dstebila Suggestions?","performed_via_github_app":null}},"public":true,"created_at":"2021-02-02T16:58:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15038099461","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/4","id":798751248,"node_id":"MDU6SXNzdWU3OTg3NTEyNDg=","number":4,"title":"OpenSSL copyright?","user":{"login":"levitte","id":698918,"node_id":"MDQ6VXNlcjY5ODkxOA==","avatar_url":"https://avatars.githubusercontent.com/u/698918?v=4","gravatar_id":"","url":"https://api.github.com/users/levitte","html_url":"https://github.com/levitte","followers_url":"https://api.github.com/users/levitte/followers","following_url":"https://api.github.com/users/levitte/following{/other_user}","gists_url":"https://api.github.com/users/levitte/gists{/gist_id}","starred_url":"https://api.github.com/users/levitte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levitte/subscriptions","organizations_url":"https://api.github.com/users/levitte/orgs","repos_url":"https://api.github.com/users/levitte/repos","events_url":"https://api.github.com/users/levitte/events{/privacy}","received_events_url":"https://api.github.com/users/levitte/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-02-01T22:14:23Z","updated_at":"2021-02-02T17:04:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"There are a number of files in [oqsprov/](https://github.com/open-quantum-safe/oqs-provider/tree/main/oqsprov) that have the OpenSSL copyright boilerplate, which gives copyright to the OpenSSL Authors, which I understand is historical, since this was previously a patchset for OpenSSL proper.\r\n\r\nI don't think that's something you want at this point, and I can't see anything wrong with simply removing that boilerplate.  What you still have in there that could remind anyone of the built-in OpenSSL providers, it's mostly bread-and-butter lines that are only vaguely similar.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/771793865","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/4#issuecomment-771793865","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/4","id":771793865,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTc5Mzg2NQ==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-02-02T17:04:00Z","updated_at":"2021-02-02T17:04:00Z","author_association":"MEMBER","body":"In liboqs for files we created, we did not put individual license information in each file beyond the SPDX-License-Identifier header, but there was a LICENSE.txt at the root which contained that information.  I think that would be okay here.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-02T17:04:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15041649105","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/886","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/886/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/886/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/886/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/886","id":797506574,"node_id":"MDU6SXNzdWU3OTc1MDY1NzQ=","number":886,"title":"liboqs split key pair ","user":{"login":"prchander","id":54725951,"node_id":"MDQ6VXNlcjU0NzI1OTUx","avatar_url":"https://avatars.githubusercontent.com/u/54725951?v=4","gravatar_id":"","url":"https://api.github.com/users/prchander","html_url":"https://github.com/prchander","followers_url":"https://api.github.com/users/prchander/followers","following_url":"https://api.github.com/users/prchander/following{/other_user}","gists_url":"https://api.github.com/users/prchander/gists{/gist_id}","starred_url":"https://api.github.com/users/prchander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prchander/subscriptions","organizations_url":"https://api.github.com/users/prchander/orgs","repos_url":"https://api.github.com/users/prchander/repos","events_url":"https://api.github.com/users/prchander/events{/privacy}","received_events_url":"https://api.github.com/users/prchander/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-01-30T19:05:35Z","updated_at":"2021-02-02T21:38:13Z","closed_at":"2021-02-02T21:38:13Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, this is just a question. With liboqs python, I was able to generate both the public and private key with the following script \t \r\n        algorithm = oqs.Signature(algorithm)\r\n\tpublic_key = algorithm.generate_keypair()\r\n\tprivate_key = algorithm.export_secret_key()\r\nHow would I be able to do this in C++? I have been able to generate the private key but confused about the public key. ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/772008434","html_url":"https://github.com/open-quantum-safe/liboqs/issues/886#issuecomment-772008434","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/886","id":772008434,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MjAwODQzNA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-02-02T21:38:13Z","updated_at":"2021-02-02T21:38:13Z","author_association":"MEMBER","body":"Closing, please make future questions on the discussions board rather than as an issue.","performed_via_github_app":null}},"public":true,"created_at":"2021-02-02T21:38:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15041656622","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/889","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/889/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/889/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/889/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/889","id":798735891,"node_id":"MDU6SXNzdWU3OTg3MzU4OTE=","number":889,"title":"Expert review needed for Picnic constant time warning","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-01T21:48:54Z","updated_at":"2021-02-02T21:38:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In picnic3_simulate.c.i a return code is set by branching on the output of \"timingsafe_bcmp\".\r\n```c\r\n  if (timingsafe_bcmp(output, pubKey, params->output_size) != 0) {\r\n    ret = -1;\r\n  }\r\n  return ret;\r\n```\r\nThe name \"timingsafe_bcmp\" suggests to me that `ret` should be set using a constant time arithmetic expression instead, but I'd appreciate a review from someone familiar with the Picnic code.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/772008852","html_url":"https://github.com/open-quantum-safe/liboqs/issues/889#issuecomment-772008852","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/889","id":772008852,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MjAwODg1Mg==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-02-02T21:38:53Z","updated_at":"2021-02-02T21:38:53Z","author_association":"MEMBER","body":"Tagging @bhess and @christianpaquin ","performed_via_github_app":null}},"public":true,"created_at":"2021-02-02T21:38:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15041661095","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/888","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/888/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/888/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/888/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/888","id":798705397,"node_id":"MDU6SXNzdWU3OTg3MDUzOTc=","number":888,"title":"Expert review needed for SIKE constant time warnings","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-01T21:02:58Z","updated_at":"2021-02-02T21:39:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Automated tests have identified a few instances of potentially non-constant time behaviour in SIKE. The tests produce a lot of false positives, so there's a good chance that these are benign, but I'm not expert enough to evaluate them. Help appreciated!\r\n\r\n- Lines 590 and 993 of sidh_compressed.c invert an element of Fp^2 using a non-constant time binary gcd (fp2inv_mont_bingcd).\r\n- Line 654 of ec_isogeny.c leaks the number of leading zeros in the \"m\" input to Ladder. This function is called from validate_ciphertext on line 1434 of sidh_compressed.c.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/772009080","html_url":"https://github.com/open-quantum-safe/liboqs/issues/888#issuecomment-772009080","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/888","id":772009080,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MjAwOTA4MA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-02-02T21:39:19Z","updated_at":"2021-02-02T21:39:19Z","author_association":"MEMBER","body":"Tagging @bhess and @christianpaquin ","performed_via_github_app":null}},"public":true,"created_at":"2021-02-02T21:39:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15041664714","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/887","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/887/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/887/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/887/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/887","id":798691769,"node_id":"MDU6SXNzdWU3OTg2OTE3Njk=","number":887,"title":"Update BIKE code","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-02-01T20:41:12Z","updated_at":"2021-02-02T21:39:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We're currently shipping BIKE 3.2, the latest version is 4.1 (10/08/2020). https://bikesuite.org/\r\n\r\nThis is a good target for copy_from_upstream #883, since BIKE is not in PQClean.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/772009303","html_url":"https://github.com/open-quantum-safe/liboqs/issues/887#issuecomment-772009303","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/887","id":772009303,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MjAwOTMwMw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-02-02T21:39:38Z","updated_at":"2021-02-02T21:39:38Z","author_association":"MEMBER","body":"Tagging @drucker-nir and @crockeea ","performed_via_github_app":null}},"public":true,"created_at":"2021-02-02T21:39:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
