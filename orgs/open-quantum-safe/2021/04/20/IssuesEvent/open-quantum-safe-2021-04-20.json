{"id":"16006821246","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/295/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/295","id":837206565,"node_id":"MDU6SXNzdWU4MzcyMDY1NjU=","number":295,"title":"Issue when signing with new algorithms","user":{"login":"opencrypto","id":7943812,"node_id":"MDQ6VXNlcjc5NDM4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7943812?v=4","gravatar_id":"","url":"https://api.github.com/users/opencrypto","html_url":"https://github.com/opencrypto","followers_url":"https://api.github.com/users/opencrypto/followers","following_url":"https://api.github.com/users/opencrypto/following{/other_user}","gists_url":"https://api.github.com/users/opencrypto/gists{/gist_id}","starred_url":"https://api.github.com/users/opencrypto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opencrypto/subscriptions","organizations_url":"https://api.github.com/users/opencrypto/orgs","repos_url":"https://api.github.com/users/opencrypto/repos","events_url":"https://api.github.com/users/opencrypto/events{/privacy}","received_events_url":"https://api.github.com/users/opencrypto/received_events","type":"User","site_admin":false},"labels":[{"id":431027941,"node_id":"MDU6TGFiZWw0MzEwMjc5NDE=","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2021-03-21T23:08:27Z","updated_at":"2021-04-20T04:43:19Z","closed_at":"2021-04-20T04:43:19Z","author_association":"NONE","active_lock_reason":null,"body":"Hello Everybody. I am trying to use the new algorithms in our wrapper library (LibPKI) that builds on top of OpenSSL. One thing I am having difficulties is to understand how to properly use the signing functions. \r\n\r\nSpecifically, I am trying to implement a generic signing function for DER encoded data (PKI_X509_sign(der (data), md (digest algor), evp_pkey) -> signature), and although the same functions work with RSA or ECDSA, they fail when I try with falcon, dilithium, or sphincs+.\r\n\r\nHere's the first code I tried:\r\n\r\n```\r\n// Creates the context\r\nif ((ctx = EVP_MD_CTX_create()) == NULL) {\r\n\tPKI_ERROR(PKI_ERR_MEMORY_ALLOC, NULL);\r\n\tif (out_mem) PKI_MEM_free(out_mem);\r\n\treturn NULL;\r\n}\r\n\r\n// Initializes the Context\r\nEVP_MD_CTX_init(ctx);\r\n\r\n// Initializes the Signature\r\nEVP_SignInit_ex(ctx, md, NULL);\r\nEVP_SignUpdate (ctx, der->data, der->size);\r\n\r\n// Finalizes the signature\r\nif (!EVP_SignFinal(ctx, out_mem->data, (unsigned int *) &ossl_ret, pkey))\r\n{\r\n\tPKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot finalize signature (%s)\", \r\n\t\tHSM_OPENSSL_get_errdesc(HSM_OPENSSL_get_errno(), NULL, 0));\r\n\r\n\tPKI_MEM_free(out_mem);\r\n\tout_mem = NULL;\r\n}\r\nelse out_mem->size = (size_t) ossl_ret;\r\n```\r\nI also tried the DigestSign version:\r\n```\r\n// Creates the context\r\nif ((ctx = EVP_MD_CTX_create()) == NULL) {\r\n\tPKI_ERROR(PKI_ERR_MEMORY_ALLOC, NULL);\r\n\tif (out_mem) PKI_MEM_free(out_mem);\r\n\treturn NULL;\r\n}\r\n\r\n// Initializes the Context\r\nEVP_MD_CTX_init(ctx);\r\n\r\nif (!EVP_DigestSignInit(ctx, &pCtx, md, NULL, pkey)) {\r\n    PKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot Initialize EVP_DigestSignInit()\");\r\n    goto err;\r\n}\r\n\r\nif (EVP_DigestSignUpdate(ctx, \r\n                                            der->data,\r\n   \t                                    der->size) <= 0) {\r\n   PKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot Update EVP_DigestSignUpdate()\");\r\n   goto err;\r\n}\r\n\r\nif (EVP_DigestSignFinal(ctx,\r\n                                        out_mem->data,\r\n                                        &ossl_ret) <= 0) {\r\n    PKI_ERROR(PKI_ERR_SIGNATURE_CREATE, \"Cannot Finalize EVP_DigestSignFinal()\");\r\n    goto err;\r\n}\r\nelse out_mem->size = (size_t) ossl_ret;\r\n```\r\nThe error seems to be related to the digest used (\"md\"). Specifically, if the md is not NULL, the EVP_SignFinal()/EVP_DigestSignFinal() fail with the following error trace:\r\n\r\n```\r\nMar 21 22:48:28 2021 GMT [91455] ERROR: [openssl_hsm.c:349] Can not create signature (117): Cannot finalize signature (  H??)\r\nMar 21 22:48:28 2021 GMT [91455] ERROR: [openssl_hsm.c:392] [HSM_OPENSSL_sign()] [ERROR] PKEY Type => 1294, falcon512\r\nMar 21 22:48:28 2021 GMT [91455] INFO: [openssl_hsm.c:395] [HSM_OPENSSL_sign()] [DEBUG]: [Signature Generated: 0 bytes (estimated: 690 bytes)]\r\nMar 21 22:48:28 2021 GMT [91455] INFO: [hsm_main.c:614] [PKI_sign()] [DEBUG]: Can not generate signature (returned from sign cb)\r\nMar 21 22:48:28 2021 GMT [91455] ERROR: [hsm_main.c:541] Can not create signature (117):\r\nMar 21 22:48:28 2021 GMT [91455] INFO: [pki_x509_req.c:222] [PKI_X509_REQ_new()] [DEBUG] REQ::ERROR 0 signing the Request [error:1012F0B1:elliptic curve routines:pkey_oqs_ctrl:wrong digest]\r\n```\r\nI know I am doing something wrong here, but I am not sure what... \r\n\r\nTo probe a bit further, I forced the use of a specific hashing algorithm - since the error was related to that, somehow: md = EVP_sha512(). If I do that, I get a success return code but the signature in the data is all zeroes.\r\n\r\n```\r\nMar 21 22:54:41 2021 GMT [97064] INFO: [pki_x509_req.c:61] [PKI_X509_REQ_new()] [DEBUG]: No Digest Associated with used algorithm\r\nMar 21 22:54:41 2021 GMT [97064] ERROR: [openssl_hsm.c:392] [HSM_OPENSSL_sign()] [ERROR] PKEY Type => 1294, falcon512\r\nMar 21 22:54:41 2021 GMT [97064] INFO: [openssl_hsm.c:395] [HSM_OPENSSL_sign()] [DEBUG]: [Signature Generated: 690 bytes (estimated: 690 bytes)]\r\n```\r\n\r\nJust to be very precise, when I use the standard apps/ tools (i.e., openssl req -new ...) I am able to generate things correctly.\r\n\r\nAnybody experiencing similar issues and/or know what I might be doing wrong?\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-04-20T04:43:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16019778329","type":"IssuesEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/51","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/51/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/51/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/51","id":863237352,"node_id":"MDU6SXNzdWU4NjMyMzczNTI=","number":51,"title":"OpenSSL reference tests are linked against the wrong library","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-20T20:59:45Z","updated_at":"2021-04-20T20:59:45Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The oqs-ref shared library is copied to liboqs.so.LIBOQS_VERSION instead of liboqs.so.$LIBOQS_VERSION:\r\nhttps://github.com/open-quantum-safe/profiling/blob/9ff4911c5169196eae3e6f3947e79003b0ed02d4/perf/scripts/run-tests.sh#L33\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-04-20T20:59:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
