{"id":"15899652999","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/47","id":855524491,"node_id":"MDU6SXNzdWU4NTU1MjQ0OTE=","number":47,"title":"Investigate changes","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-12T04:13:44Z","updated_at":"2021-04-12T04:28:59Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As per April 3, the new \"portability\" build flags became active in the profiling docker image and per April 8 an update to this image did (incorporating https://github.com/open-quantum-safe/liboqs/pull/957). Both events are visible in the snapshots below, but performance in general never quite went back to previous levels (all x86_64): Would it be reasonable to investigated/improve this? Are build flags set incorrectly for [creating the profiling Docker image](https://github.com/open-quantum-safe/profiling/blob/main/perf/Dockerfile)? Is something else going wrong in [building things](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/61/workflows/fa6e2fb0-d8be-4eb7-8165-e40bb8816e49/jobs/64)? Is there a more general issue? Were things incorrect before?\r\n\r\nSIKE&SIDH (performance) lost drastically with the last update:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294212-4d28e200-9a9d-11eb-83d7-157ae99dd4c5.png)\r\n\r\nKyber (plain, non AES-version) distributable lost somewhat with the first change, but never recovered:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294256-9b3de580-9a9d-11eb-860a-b5e5b3ca664d.png)\r\n\r\nFrodo distributable, also lost:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294277-c4f70c80-9a9d-11eb-8f1d-935384cc8ecb.png)\r\n\r\nHQC (performance and distributable) in turn benefited from both changes:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294292-e3f59e80-9a9d-11eb-930b-a0d4c1c204df.png)\r\n\r\nDilithium AES benefitted while plain Dilithium dropped (performance and distributable)\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294329-2028ff00-9a9e-11eb-81d0-91c6c88cfe6b.png)\r\n\r\nTagging @jschanck for thoughts\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/817469585","html_url":"https://github.com/open-quantum-safe/profiling/issues/47#issuecomment-817469585","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","id":817469585,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzQ2OTU4NQ==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-04-12T04:28:59Z","updated_at":"2021-04-12T04:28:59Z","author_association":"MEMBER","body":"Put up a [25 days time series](https://test.openquantumsafe.org/25days/index.html) for additional digging...","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T04:28:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15900479025","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/46","id":855520583,"node_id":"MDU6SXNzdWU4NTU1MjA1ODM=","number":46,"title":"multiarch docker image","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-04-12T04:03:18Z","updated_at":"2021-04-12T06:13:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Currently, separate architectures are build/pushed to dockerhub differently: x86_64 is done automatically via CI, arm64 is built&pushed manually from an ARM64 VM. A true [multiarch docker image](https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way) would be ideal.\r\nFirst tests to do both from within CCI failed: \r\n1) An ARM64 machine is [not supported out of the box](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/63/workflows/69ddb2cb-f60a-476a-86f2-3428dc369c23/jobs/66) ([request to CCI for enabling this beta facility](https://www2.circleci.com/arm-signup-customers.html) is pending)\r\n2) A qemu-based `docker buildx` [branch](https://github.com/open-quantum-safe/profiling/tree/mb-xbuild) takes _way_ to long [(and then times out)](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/65/workflows/bfe545d0-a7db-4e2a-a6df-c35fb6bc39a3).\r\n\r\nAnother approach now would be to cross-build everything and only then insert the resultant binaries to the respective architecture base docker images. This apparently only works for `liboqs` in Debian (not alpine as currently used for profiling) and requires additional investigation as to how to cross-build S3 access (for storing test run results) and OpenSSL.\r\n\r\nSuggestions/alternative ideas solicited how to achieve this goal (@jschanck ?)","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/817515584","html_url":"https://github.com/open-quantum-safe/profiling/issues/46#issuecomment-817515584","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46","id":817515584,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzUxNTU4NA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-04-12T06:13:49Z","updated_at":"2021-04-12T06:13:49Z","author_association":"MEMBER","body":"A related(?) issue: When building `liboqs` cross for ARM64 in `openquantumsafe/ci-debian-buster-amd64:latest` (command `cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../.CMake/toolchain_arm64.cmake .. && cmake`) the resultant executables are running OK in the docker image. But when transferred to a \"real ARM64\" (AWS VM), execution starts OK but then this happens:\r\n```\r\n[ec2-user@ip-10-0-1-206 ~]$ ./speed_kem \r\nConfiguration info\r\n==================\r\nTarget platform:  arm64v8-Linux-5.4.0-70-generic\r\nCompiler:         gcc (8.3.0)\r\nCompile options:  [-mcpu=cortex-a53;-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prototypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-ffunction-sections;-Wl,--gc-sections;-Wbad-function-cast]\r\nOQS version:      0.6.0-dev\r\nGit commit:       efd7b1926ac485bd2c284986cb94e51f4d50450c\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1d  10 Sep 2019)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            C\r\nCPU exts active:  NEON\r\n\r\nSpeed test\r\n==========\r\nStarted at 2021-04-12 06:08:34\r\nOperation                      | Iterations | Total time (s) | Time (us): mean | pop. stdev | High-prec time (ns): mean | pop. stdev\r\n------------------------------ | ----------:| --------------:| ---------------:| ----------:| -------------------------:| ----------:\r\nFrodoKEM-640-AES               |            |                |                 |            |                           |           \r\nkeygen                         |       3478 |          3.000 |         862.684 |     12.108 |                    862605 |      12092\r\nencaps                         |       3019 |          3.000 |         993.872 |      4.065 |                    993796 |       4043\r\ndecaps                         |       3110 |          3.001 |         964.931 |      3.379 |                    964851 |       3349\r\nBIKE1-L1-CPA                   |            |                |                 |            |                           |           \r\n./speed_kem: relocation error: ./speed_kem: symbol BN_GF2m_mod_mul, version OPENSSL_1_1_0 not defined in file libcrypto.so.1.1 with link time reference\r\n\r\n```\r\n\r\n--> Would it be necessary to statically link (at least the benchmarking) executables we build cross to avoid dependencies to platform shared libs (that may not be at the same level wrt symbols)? This calls the approach into question to build cross and then deploy into docker images of the same architecture (or require also building openssl cross and then also copying that over). Am I  off here?","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T06:13:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15901103424","type":"IssueCommentEvent","actor":{"id":49699333,"login":"dependabot[bot]","display_login":"dependabot","gravatar_id":"","url":"https://api.github.com/users/dependabot[bot]","avatar_url":"https://avatars.githubusercontent.com/u/49699333?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/45","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/45/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/45/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/45/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/45","id":850141696,"node_id":"MDExOlB1bGxSZXF1ZXN0NjA4NzU5Mjkz","number":45,"title":"Bump oqs-sys/liboqs from `3f2da47` to `3364880`","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2730583541,"node_id":"MDU6TGFiZWwyNzMwNTgzNTQx","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"},{"id":2730584915,"node_id":"MDU6TGFiZWwyNzMwNTg0OTE1","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/submodules","name":"submodules","color":"000000","default":false,"description":"Pull requests that update Submodules code"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-04-05T07:08:16Z","updated_at":"2021-04-12T07:11:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/pulls/45","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/45","diff_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/45.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/45.patch"},"body":"Bumps [oqs-sys/liboqs](https://github.com/Open-Quantum-Safe/liboqs) from `3f2da47` to `3364880`.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/336488085c31d5a3b15d14e862b17afa38b391cb\"><code>3364880</code></a> Update windows cross-compiling toolchain and documentation [skip ci] (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/959\">#959</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/7f3088232ac94c1b3018def665ff662b6e3a1838\"><code>7f30882</code></a> Manually remove fips202 files left by copy_from_upstream (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/958\">#958</a>)</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/7a5001fe12ce7b4c1bf0592634a0cb11f7d94f17\"><code>7a5001f</code></a> Fix compilation of KeccakP-1600-AVX2.s on macOS</li>\n<li><a href=\"https://github.com/open-quantum-safe/liboqs/commit/b36ff9f17c0239f3c0121d9eeaf9ac053df85467\"><code>b36ff9f</code></a> Replace OQS_PORTABLE_BUILD and OQS_USE_CPU_EXTENSIONS (<a href=\"https://github-redirect.dependabot.com/Open-Quantum-Safe/liboqs/issues/951\">#951</a>)</li>\n<li>See full diff in <a href=\"https://github.com/Open-Quantum-Safe/liboqs/compare/3f2da47b366e241641ac2a08c85543200a6302ff...336488085c31d5a3b15d14e862b17afa38b391cb\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/817548794","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/45#issuecomment-817548794","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/45","id":817548794,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzU0ODc5NA==","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"created_at":"2021-04-12T07:11:16Z","updated_at":"2021-04-12T07:11:16Z","author_association":"CONTRIBUTOR","body":"A newer version of oqs-sys/liboqs exists, but since this PR has been edited by someone other than Dependabot I haven't updated it. You'll get a PR for the updated version as normal once this PR is merged.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T07:11:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15908161602","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/47","id":855524491,"node_id":"MDU6SXNzdWU4NTU1MjQ0OTE=","number":47,"title":"Investigate changes","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-04-12T04:13:44Z","updated_at":"2021-04-12T15:15:38Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As per April 3, the new \"portability\" build flags became active in the profiling docker image and per April 8 an update to this image did (incorporating https://github.com/open-quantum-safe/liboqs/pull/957). Both events are visible in the snapshots below, but performance in general never quite went back to previous levels (all x86_64): Would it be reasonable to investigated/improve this? Are build flags set incorrectly for [creating the profiling Docker image](https://github.com/open-quantum-safe/profiling/blob/main/perf/Dockerfile)? Is something else going wrong in [building things](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/61/workflows/fa6e2fb0-d8be-4eb7-8165-e40bb8816e49/jobs/64)? Is there a more general issue? Were things incorrect before?\r\n\r\nSIKE&SIDH (performance) lost drastically with the last update:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294212-4d28e200-9a9d-11eb-83d7-157ae99dd4c5.png)\r\n\r\nKyber (plain, non AES-version) distributable lost somewhat with the first change, but never recovered:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294256-9b3de580-9a9d-11eb-860a-b5e5b3ca664d.png)\r\n\r\nFrodo distributable, also lost:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294277-c4f70c80-9a9d-11eb-8f1d-935384cc8ecb.png)\r\n\r\nHQC (performance and distributable) in turn benefited from both changes:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294292-e3f59e80-9a9d-11eb-930b-a0d4c1c204df.png)\r\n\r\nDilithium AES benefitted while plain Dilithium dropped (performance and distributable)\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294329-2028ff00-9a9e-11eb-81d0-91c6c88cfe6b.png)\r\n\r\nTagging @jschanck for thoughts\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/817896797","html_url":"https://github.com/open-quantum-safe/profiling/issues/47#issuecomment-817896797","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","id":817896797,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzg5Njc5Nw==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-04-12T15:15:38Z","updated_at":"2021-04-12T15:15:38Z","author_association":"NONE","body":"Is there any guarantee that the machine on which you build the docker image is the same as the machine on which you test?\r\n\r\nIf you don't make this guarantee then you cannot rely on OQS_OPT_TARGET=auto.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T15:15:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15908249847","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/47","id":855524491,"node_id":"MDU6SXNzdWU4NTU1MjQ0OTE=","number":47,"title":"Investigate changes","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-04-12T04:13:44Z","updated_at":"2021-04-12T15:21:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As per April 3, the new \"portability\" build flags became active in the profiling docker image and per April 8 an update to this image did (incorporating https://github.com/open-quantum-safe/liboqs/pull/957). Both events are visible in the snapshots below, but performance in general never quite went back to previous levels (all x86_64): Would it be reasonable to investigated/improve this? Are build flags set incorrectly for [creating the profiling Docker image](https://github.com/open-quantum-safe/profiling/blob/main/perf/Dockerfile)? Is something else going wrong in [building things](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/61/workflows/fa6e2fb0-d8be-4eb7-8165-e40bb8816e49/jobs/64)? Is there a more general issue? Were things incorrect before?\r\n\r\nSIKE&SIDH (performance) lost drastically with the last update:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294212-4d28e200-9a9d-11eb-83d7-157ae99dd4c5.png)\r\n\r\nKyber (plain, non AES-version) distributable lost somewhat with the first change, but never recovered:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294256-9b3de580-9a9d-11eb-860a-b5e5b3ca664d.png)\r\n\r\nFrodo distributable, also lost:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294277-c4f70c80-9a9d-11eb-8f1d-935384cc8ecb.png)\r\n\r\nHQC (performance and distributable) in turn benefited from both changes:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294292-e3f59e80-9a9d-11eb-930b-a0d4c1c204df.png)\r\n\r\nDilithium AES benefitted while plain Dilithium dropped (performance and distributable)\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294329-2028ff00-9a9e-11eb-81d0-91c6c88cfe6b.png)\r\n\r\nTagging @jschanck for thoughts\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/817900920","html_url":"https://github.com/open-quantum-safe/profiling/issues/47#issuecomment-817900920","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","id":817900920,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzkwMDkyMA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-04-12T15:21:07Z","updated_at":"2021-04-12T15:21:07Z","author_association":"MEMBER","body":"> Is there any guarantee that the machine on which you build the docker image is the same as the machine on which you test?\r\n\r\nDefinitely no: The docker images are built at CCI, execution is somewhere at AWS.\r\n\r\n> If you don't make this guarantee then you cannot rely on OQS_OPT_TARGET=auto.\r\n\r\nOuch. Given the above, what options should then be set here https://github.com/open-quantum-safe/profiling/blob/f66ccc182f49d8e941faf36bba293989a5242ce9/perf/Dockerfile#L63-L64 and here https://github.com/open-quantum-safe/profiling/blob/f66ccc182f49d8e941faf36bba293989a5242ce9/perf/Dockerfile#L103-L108 ?","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T15:21:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15908424496","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/894","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/894/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/894/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/894/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/894","id":800992852,"node_id":"MDU6SXNzdWU4MDA5OTI4NTI=","number":894,"title":"Optimize and document common code imports","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/13","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13/labels","id":6475880,"node_id":"MDk6TWlsZXN0b25lNjQ3NTg4MA==","number":13,"title":"0.6.0 RC1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":9,"state":"open","created_at":"2021-02-24T18:42:42Z","updated_at":"2021-04-12T15:31:57Z","due_on":"2021-04-07T07:00:00Z","closed_at":null},"comments":0,"created_at":"2021-02-04T06:56:36Z","updated_at":"2021-04-12T15:31:57Z","closed_at":"2021-04-12T15:31:57Z","author_association":"MEMBER","active_lock_reason":null,"body":"As per discussion [here](https://github.com/open-quantum-safe/liboqs/pull/890#issuecomment-772807178) and [here](https://github.com/open-quantum-safe/liboqs/pull/883#issuecomment-770879536) further improve [copy_from_upstream](https://github.com/open-quantum-safe/liboqs/tree/main/scripts/copy_from_upstream) and its documentation [here](https://github.com/open-quantum-safe/liboqs/wiki/Contributing-guide#automated-inclusion)","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/817909378","html_url":"https://github.com/open-quantum-safe/liboqs/issues/894#issuecomment-817909378","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/894","id":817909378,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzkwOTM3OA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-04-12T15:31:57Z","updated_at":"2021-04-12T15:31:57Z","author_association":"MEMBER","body":"This issue can be closed after the merges of #891, #944 and the documentation update.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T15:31:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15908686453","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/47","id":855524491,"node_id":"MDU6SXNzdWU4NTU1MjQ0OTE=","number":47,"title":"Investigate changes","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-04-12T04:13:44Z","updated_at":"2021-04-12T15:48:54Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As per April 3, the new \"portability\" build flags became active in the profiling docker image and per April 8 an update to this image did (incorporating https://github.com/open-quantum-safe/liboqs/pull/957). Both events are visible in the snapshots below, but performance in general never quite went back to previous levels (all x86_64): Would it be reasonable to investigated/improve this? Are build flags set incorrectly for [creating the profiling Docker image](https://github.com/open-quantum-safe/profiling/blob/main/perf/Dockerfile)? Is something else going wrong in [building things](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/61/workflows/fa6e2fb0-d8be-4eb7-8165-e40bb8816e49/jobs/64)? Is there a more general issue? Were things incorrect before?\r\n\r\nSIKE&SIDH (performance) lost drastically with the last update:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294212-4d28e200-9a9d-11eb-83d7-157ae99dd4c5.png)\r\n\r\nKyber (plain, non AES-version) distributable lost somewhat with the first change, but never recovered:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294256-9b3de580-9a9d-11eb-860a-b5e5b3ca664d.png)\r\n\r\nFrodo distributable, also lost:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294277-c4f70c80-9a9d-11eb-8f1d-935384cc8ecb.png)\r\n\r\nHQC (performance and distributable) in turn benefited from both changes:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294292-e3f59e80-9a9d-11eb-930b-a0d4c1c204df.png)\r\n\r\nDilithium AES benefitted while plain Dilithium dropped (performance and distributable)\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294329-2028ff00-9a9e-11eb-81d0-91c6c88cfe6b.png)\r\n\r\nTagging @jschanck for thoughts\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/817921828","html_url":"https://github.com/open-quantum-safe/profiling/issues/47#issuecomment-817921828","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","id":817921828,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzkyMTgyOA==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-04-12T15:48:54Z","updated_at":"2021-04-12T15:48:54Z","author_association":"NONE","body":"OK then what's happening is pretty clear. The CCI builds are on machines w/o ADX instructions. #965 will improve SIKE performance.\r\n\r\nThe dist build options are fine. The x86_64 generic build options are fine. The only issue is the high performance build (lines 107 and 108).\r\n\r\nWithout dedicated benchmarking machines (or without a guarantee on what kind of CPU you'll be benchmarking on) it simply does not make sense to pre-compile \"high performance\" builds.\r\n\r\nThe best option is to compile the high performance build on the benchmarking machine.\r\n\r\nAlternatives:\r\n- AWS currently gives you a Cascade Lake machine. One option is to set OQS_OPT_TARGET=cascadelake  (this requires a fairly recent gcc/clang). This will break if AWS gives you a significantly different machine (and it still might not give you the best code possible).\r\n\r\n- Pre-compile a few \"high performance\" builds for a few architectures and select one once you're on the benchmarking machine. E.g. compile with OQS_OPT_TARGET=X for X in {broadwell, skylake, cascadelake}. \r\nIt would take some effort to figure out the \"right\" set of microarchitectures.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T15:48:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15908776520","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/949","id":840484450,"node_id":"MDU6SXNzdWU4NDA0ODQ0NTA=","number":949,"title":"Add constant-time plain C AES implementation when building without AES-NI","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/13","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13/labels","id":6475880,"node_id":"MDk6TWlsZXN0b25lNjQ3NTg4MA==","number":13,"title":"0.6.0 RC1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":9,"state":"open","created_at":"2021-02-24T18:42:42Z","updated_at":"2021-04-12T15:31:57Z","due_on":"2021-04-07T07:00:00Z","closed_at":null},"comments":5,"created_at":"2021-03-25T01:54:34Z","updated_at":"2021-04-12T15:54:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"There's such an implementation available in PQClean that we could use.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/817926096","html_url":"https://github.com/open-quantum-safe/liboqs/issues/949#issuecomment-817926096","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949","id":817926096,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzkyNjA5Ng==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-04-12T15:54:49Z","updated_at":"2021-04-12T15:54:49Z","author_association":"CONTRIBUTOR","body":"> Wouldn't that necessitate changes to all algorithms/many \"upstream API integration discussions\"?\r\n\r\nI wouldn't want it to hold up the work of getting a constant time plain C AES. But it's not so bad.\r\n\r\nFrodo and Bike use our AES API directly. Those would need (small) patches.\r\n\r\nEverything else that uses our API uses shims. Shims are an easy change.\r\n\r\nKyber and Dilithium have redundant AES implementations. We want to remove those. Replicating their API would make it easy to do w/ shims.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T15:54:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15910923928","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/47","id":855524491,"node_id":"MDU6SXNzdWU4NTU1MjQ0OTE=","number":47,"title":"Investigate changes","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2021-04-12T04:13:44Z","updated_at":"2021-04-12T18:37:28Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As per April 3, the new \"portability\" build flags became active in the profiling docker image and per April 8 an update to this image did (incorporating https://github.com/open-quantum-safe/liboqs/pull/957). Both events are visible in the snapshots below, but performance in general never quite went back to previous levels (all x86_64): Would it be reasonable to investigated/improve this? Are build flags set incorrectly for [creating the profiling Docker image](https://github.com/open-quantum-safe/profiling/blob/main/perf/Dockerfile)? Is something else going wrong in [building things](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/61/workflows/fa6e2fb0-d8be-4eb7-8165-e40bb8816e49/jobs/64)? Is there a more general issue? Were things incorrect before?\r\n\r\nSIKE&SIDH (performance) lost drastically with the last update:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294212-4d28e200-9a9d-11eb-83d7-157ae99dd4c5.png)\r\n\r\nKyber (plain, non AES-version) distributable lost somewhat with the first change, but never recovered:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294256-9b3de580-9a9d-11eb-860a-b5e5b3ca664d.png)\r\n\r\nFrodo distributable, also lost:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294277-c4f70c80-9a9d-11eb-8f1d-935384cc8ecb.png)\r\n\r\nHQC (performance and distributable) in turn benefited from both changes:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294292-e3f59e80-9a9d-11eb-930b-a0d4c1c204df.png)\r\n\r\nDilithium AES benefitted while plain Dilithium dropped (performance and distributable)\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294329-2028ff00-9a9e-11eb-81d0-91c6c88cfe6b.png)\r\n\r\nTagging @jschanck for thoughts\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/818038814","html_url":"https://github.com/open-quantum-safe/profiling/issues/47#issuecomment-818038814","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","id":818038814,"node_id":"MDEyOklzc3VlQ29tbWVudDgxODAzODgxNA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-04-12T18:37:28Z","updated_at":"2021-04-12T18:37:28Z","author_association":"MEMBER","body":"> The dist build options are fine. The x86_64 generic build options are fine.\r\n\r\nWell, if dist options are OK, then why did performance drop for quite a few algorithms in this config? The docker images using that option are now slower than before. What's the \"return value\" for this performance reduction?\r\n\r\nRef/generic is agreed OK: The numbers didn't really change. \r\n\r\n> The only issue is the high performance build (lines 107 and 108). [...] One option is to set OQS_OPT_TARGET=cascadelake\r\n\r\nThanks for the \"cascadelake\" suggestion: I'll surely try that -- but I still don't quite understand why we can't get to the same level of performance as with the previous set of build flags. \"cascadelake\" will hopefully give us as many CPU features as possible (as the code permits I assume) and if the execution VM doesn't have them, that shouldn't be a problem. Compiling everything at test time goes against the goal of having fixed/reproducible/comparable executables. Compiling a set of different configurations is prohibitively expensive: Just AMD/Intel & ARM with the current 3 configs is already taking a few hours to build (feel free to chime in on https://github.com/open-quantum-safe/profiling/issues/46 to improve that).","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T18:37:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15912065865","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/46","id":855520583,"node_id":"MDU6SXNzdWU4NTU1MjA1ODM=","number":46,"title":"multiarch docker image","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-04-12T04:03:18Z","updated_at":"2021-04-12T20:12:36Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Currently, separate architectures are build/pushed to dockerhub differently: x86_64 is done automatically via CI, arm64 is built&pushed manually from an ARM64 VM. A true [multiarch docker image](https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way) would be ideal.\r\nFirst tests to do both from within CCI failed: \r\n1) An ARM64 machine is [not supported out of the box](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/63/workflows/69ddb2cb-f60a-476a-86f2-3428dc369c23/jobs/66) ([request to CCI for enabling this beta facility](https://www2.circleci.com/arm-signup-customers.html) is pending)\r\n2) A qemu-based `docker buildx` [branch](https://github.com/open-quantum-safe/profiling/tree/mb-xbuild) takes _way_ to long [(and then times out)](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/65/workflows/bfe545d0-a7db-4e2a-a6df-c35fb6bc39a3).\r\n\r\nAnother approach now would be to cross-build everything and only then insert the resultant binaries to the respective architecture base docker images. This apparently only works for `liboqs` in Debian (not alpine as currently used for profiling) and requires additional investigation as to how to cross-build S3 access (for storing test run results) and OpenSSL.\r\n\r\nSuggestions/alternative ideas solicited how to achieve this goal (@jschanck ?)","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/818145259","html_url":"https://github.com/open-quantum-safe/profiling/issues/46#issuecomment-818145259","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46","id":818145259,"node_id":"MDEyOklzc3VlQ29tbWVudDgxODE0NTI1OQ==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-04-12T20:12:36Z","updated_at":"2021-04-12T20:12:36Z","author_association":"NONE","body":"What version of OpenSSL do you have on the AWS VM?","performed_via_github_app":null}},"public":true,"created_at":"2021-04-12T20:12:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
