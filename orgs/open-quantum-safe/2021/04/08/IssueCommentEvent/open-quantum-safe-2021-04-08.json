{"id":"15860228277","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/949","id":840484450,"node_id":"MDU6SXNzdWU4NDA0ODQ0NTA=","number":949,"title":"Add constant-time plain C AES implementation when building without AES-NI","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/13","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/13/labels","id":6475880,"node_id":"MDk6TWlsZXN0b25lNjQ3NTg4MA==","number":13,"title":"0.6.0 RC1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":5,"closed_issues":8,"state":"open","created_at":"2021-02-24T18:42:42Z","updated_at":"2021-04-05T19:40:08Z","due_on":"2021-04-07T07:00:00Z","closed_at":null},"comments":2,"created_at":"2021-03-25T01:54:34Z","updated_at":"2021-04-08T08:55:37Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"There's such an implementation available in PQClean that we could use.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/815584134","html_url":"https://github.com/open-quantum-safe/liboqs/issues/949#issuecomment-815584134","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/949","id":815584134,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNTU4NDEzNA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-04-08T08:55:37Z","updated_at":"2021-04-08T08:55:37Z","author_association":"MEMBER","body":"FWIW: Sounds reasonable to me: If no algorithm uses that function by now I cannot really imagine that that will happen in the future. I just validated \"practically\" the former by checking that `ninja run_tests` passes after quickly removing `OQS_AES128_ECB_dec[_sch]`, making `OQS_AES128_ECB_load_schedule` fail with param `for_encryption=0` and also ifdef'ing away the `*_dec` functionality and performance tests in `tests/aes.c`. If you want to keep aes_dec support as an option (e.g., in testing), I put this into the branch [no-aesdec](https://github.com/open-quantum-safe/liboqs/tree/no-aesdec) where you can toggle it (presently disabled): https://github.com/open-quantum-safe/liboqs/blob/4e3e5419a08b1f81eaf1672e7fc05af908f58c01/src/common/aes/aes.h#L12 ","performed_via_github_app":null}},"public":true,"created_at":"2021-04-08T08:55:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15862960123","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/964","id":851745651,"node_id":"MDExOlB1bGxSZXF1ZXN0NjEwMTE2Mjc4","number":964,"title":"Speed up ARM jobs in CI","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-04-06T19:27:47Z","updated_at":"2021-04-08T12:16:08Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/964","html_url":"https://github.com/open-quantum-safe/liboqs/pull/964","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/964.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/964.patch"},"body":"Our ARM jobs currently compile liboqs in an emulated environment. With this PR they will cross compile from the x86_64 host and only use emulation to run the tests. This should speed up the ARM jobs significantly. It might take some trial and error to get it working well.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/815742394","html_url":"https://github.com/open-quantum-safe/liboqs/pull/964#issuecomment-815742394","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964","id":815742394,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNTc0MjM5NA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-04-08T12:16:08Z","updated_at":"2021-04-08T12:16:08Z","author_association":"MEMBER","body":"> I'm not sure the armel test tells us much. I'm in favor of dropping it unless someone has a particular CPU that they'd like us to support.\r\n\r\nI personally also wouldn't mind dropping it. @xvzcf @dstebila : Do you know whether anyone needs `armel`?","performed_via_github_app":null}},"public":true,"created_at":"2021-04-08T12:16:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15863713255","type":"IssueCommentEvent","actor":{"id":37668804,"login":"taimoorgit","display_login":"taimoorgit","gravatar_id":"","url":"https://api.github.com/users/taimoorgit","avatar_url":"https://avatars.githubusercontent.com/u/37668804?"},"repo":{"id":247826799,"name":"open-quantum-safe/liboqs-java","url":"https://api.github.com/repos/open-quantum-safe/liboqs-java"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11/events","html_url":"https://github.com/open-quantum-safe/liboqs-java/issues/11","id":778307621,"node_id":"MDU6SXNzdWU3NzgzMDc2MjE=","number":11,"title":"Enable Build for other Platforms like ARM (Android)","user":{"login":"Hatzen","id":21283655,"node_id":"MDQ6VXNlcjIxMjgzNjU1","avatar_url":"https://avatars.githubusercontent.com/u/21283655?v=4","gravatar_id":"","url":"https://api.github.com/users/Hatzen","html_url":"https://github.com/Hatzen","followers_url":"https://api.github.com/users/Hatzen/followers","following_url":"https://api.github.com/users/Hatzen/following{/other_user}","gists_url":"https://api.github.com/users/Hatzen/gists{/gist_id}","starred_url":"https://api.github.com/users/Hatzen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hatzen/subscriptions","organizations_url":"https://api.github.com/users/Hatzen/orgs","repos_url":"https://api.github.com/users/Hatzen/repos","events_url":"https://api.github.com/users/Hatzen/events{/privacy}","received_events_url":"https://api.github.com/users/Hatzen/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2021-01-04T19:23:54Z","updated_at":"2021-04-08T13:05:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"First of all thanks for your good work :)  \r\nI am trying to get the lib working for android.  Regarding https://github.com/open-quantum-safe/liboqs/issues/594 i am able to get a working .so file for android and the passed abi.  \r\nBut i am struggeling to get it working with this repository and jni.  \r\nWhen i just compile the library for armv8a and then using this repo to get the jni wrapper it fails as the target system (x86) differs at compile time.     \r\n\r\n<details>    \r\n<summary>Excerpt of the error message</summary>   \r\n\r\n```\r\n[INFO] /bin/sh -c cd '/home/hatzen/liboqs-java' && 'gcc' '-shared' '-L/home/hatzen/liboqs/build/lib' '-o/home/hatzen/liboqs-java/target/liboqs-java.jar' 'target/objs/handle.o' 'target/objs/KEMs.o' 'target/objs/KeyEncapsulation.o' 'target/objs/Rand.o' 'target/objs/Signature.o' 'target/objs/Sigs.o' '-o' '/home/hatzen/liboqs-java/src/main/resources/liboqs-jni.so' '-loqs'\r\n/usr/bin/ld: skipping incompatible /home/hatzen/liboqs/build/lib/liboqs.so when searching for -loqs\r\n/usr/bin/ld: cannot find -loqs\r\ncollect2: error: ld returned 1 exit status\r\n```\r\n</details>  \r\n  \r\nSo i tried to copy the necessary files and build jni and liboqs at a single time with the given cmake files.  \r\nI copied all c sources and tried to add them to the cmakefile. Buti get errors when running the java test.    \r\n  \r\n<details>\r\n<summary>Excerpts of changed files</summary>  \r\n  \r\nsrc/CMakeList.txt\r\n```cmake  \r\n...\r\ninclude_directories(jni)\r\nlink_directories(jni oqs)\r\n\r\nadd_library(jni SHARED\r\njni/handle.c\r\njni/KEMs.c\r\njni/KeyEncapsulation.c\r\njni/Rand.c\r\njni/Signature.c\r\njni/Sigs.c)\r\n\r\nset_target_properties(\r\n    jni\r\n    PROPERTIES\r\n    COMPILE_FLAGS \"-w\"\r\n    #COMPILE_WARNING_DISABLED high\r\n)\r\ntarget_link_libraries(jni oqs)\r\n\r\nset_target_properties(jni PROPERTIES PUBLIC_HEADER \"jni/handle.h;jni/KEMs.h;jni/KeyEncapsulation.h;jni/Rand.h;jni/Signature.h;jni/Sigs.h\")\r\n\r\nINSTALL(TARGETS jni\r\n        LIBRARY DESTINATION lib\r\n        PUBLIC_HEADER DESTINATION lib\r\n)\r\n...\r\n```   \r\nAnd i have overriden the Common Class of this Repo: \r\n\r\n```java\r\npublic class Common {\r\n    ...\r\n    public static void loadNativeLibrary() {\r\n        // overrides all changes from this repo method.\r\n        System.loadLibrary(\"oqs\");\r\n        System.loadLibrary(\"jni\");\r\n   }\r\n   ...\r\n}\r\n```\r\nI did override all packages and paths like:  \r\n```\r\nJava_org_openquantumsafe => Java_de_hartz_software_parannoying_helper_security_liboqs_java\r\norg/openquantumsafe => de/hartz/software/parannoying/helper/security/liboqs/java\r\n```\r\n\r\nThe crash occours probably on the equivalent of:  \r\nhttps://github.com/open-quantum-safe/liboqs-java/blob/109534741ace8442129b20dce9cfce62aa54048a/src/test/java/org/openquantumsafe/KEMTest.java#L37  \r\nwhich is calling JNI  \r\nhttps://github.com/open-quantum-safe/liboqs-java/blob/109534741ace8442129b20dce9cfce62aa54048a/src/main/c/KeyEncapsulation.c#L41  \r\n\r\n```\r\n2021-01-02 20:21:08.357 7642-7697/de.hartz.software.parannoying E/zygote64: JNI ERROR (app bug): accessed stale Local 0x76e6ea9241  (index 1852746020 in a table of size 2)\r\n2021-01-02 20:21:08.388 7642-7697/de.hartz.software.parannoying A/zygote64: java_vm_ext.cc:534] JNI DETECTED ERROR IN APPLICATION: use of deleted local reference 0x76e6ea9241\r\n2021-01-02 20:21:08.389 7642-7697/de.hartz.software.parannoying A/zygote64: java_vm_ext.cc:534]     from de.hartz.software.parannoying.helper.security.liboqs.java.KeyEncapsulation$KeyEncapsulationDetails de.hartz.software.parannoying.helper.security.liboqs.java.KeyEncapsulation.get_KEM_details()\r\n2021-01-02 20:21:08.389 7642-7697/de.hartz.software.parannoying A/zygote64: java_vm_ext.cc:534] \"Instr: androidx.test.runner.AndroidJUnitRunner\" prio=5 tid=22 Runnable\r\n```\r\n  \r\n</details>\r\n  \r\nI am not very familiar with writing c and never had contact with JNI before.   \r\nSo i am not sure whether it could be simple to solve. So my question is will you consider to make this repo be able to build for different abis at a time?  ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/comments/815808070","html_url":"https://github.com/open-quantum-safe/liboqs-java/issues/11#issuecomment-815808070","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11","id":815808070,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNTgwODA3MA==","user":{"login":"taimoorgit","id":37668804,"node_id":"MDQ6VXNlcjM3NjY4ODA0","avatar_url":"https://avatars.githubusercontent.com/u/37668804?v=4","gravatar_id":"","url":"https://api.github.com/users/taimoorgit","html_url":"https://github.com/taimoorgit","followers_url":"https://api.github.com/users/taimoorgit/followers","following_url":"https://api.github.com/users/taimoorgit/following{/other_user}","gists_url":"https://api.github.com/users/taimoorgit/gists{/gist_id}","starred_url":"https://api.github.com/users/taimoorgit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taimoorgit/subscriptions","organizations_url":"https://api.github.com/users/taimoorgit/orgs","repos_url":"https://api.github.com/users/taimoorgit/repos","events_url":"https://api.github.com/users/taimoorgit/events{/privacy}","received_events_url":"https://api.github.com/users/taimoorgit/received_events","type":"User","site_admin":false},"created_at":"2021-04-08T13:05:28Z","updated_at":"2021-04-08T13:05:28Z","author_association":"NONE","body":"I see you also added changes here as well: https://github.com/open-quantum-safe/liboqs-java/pull/15/commits/78e7719874829e09733a2cc909e3b953be0247cc did that fix the library completely on Android? (At least for arm64-v8a and x86_64)","performed_via_github_app":null}},"public":true,"created_at":"2021-04-08T13:05:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15863861429","type":"IssueCommentEvent","actor":{"id":21283655,"login":"Hatzen","display_login":"Hatzen","gravatar_id":"","url":"https://api.github.com/users/Hatzen","avatar_url":"https://avatars.githubusercontent.com/u/21283655?"},"repo":{"id":247826799,"name":"open-quantum-safe/liboqs-java","url":"https://api.github.com/repos/open-quantum-safe/liboqs-java"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11/events","html_url":"https://github.com/open-quantum-safe/liboqs-java/issues/11","id":778307621,"node_id":"MDU6SXNzdWU3NzgzMDc2MjE=","number":11,"title":"Enable Build for other Platforms like ARM (Android)","user":{"login":"Hatzen","id":21283655,"node_id":"MDQ6VXNlcjIxMjgzNjU1","avatar_url":"https://avatars.githubusercontent.com/u/21283655?v=4","gravatar_id":"","url":"https://api.github.com/users/Hatzen","html_url":"https://github.com/Hatzen","followers_url":"https://api.github.com/users/Hatzen/followers","following_url":"https://api.github.com/users/Hatzen/following{/other_user}","gists_url":"https://api.github.com/users/Hatzen/gists{/gist_id}","starred_url":"https://api.github.com/users/Hatzen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hatzen/subscriptions","organizations_url":"https://api.github.com/users/Hatzen/orgs","repos_url":"https://api.github.com/users/Hatzen/repos","events_url":"https://api.github.com/users/Hatzen/events{/privacy}","received_events_url":"https://api.github.com/users/Hatzen/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2021-01-04T19:23:54Z","updated_at":"2021-04-08T13:15:01Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"First of all thanks for your good work :)  \r\nI am trying to get the lib working for android.  Regarding https://github.com/open-quantum-safe/liboqs/issues/594 i am able to get a working .so file for android and the passed abi.  \r\nBut i am struggeling to get it working with this repository and jni.  \r\nWhen i just compile the library for armv8a and then using this repo to get the jni wrapper it fails as the target system (x86) differs at compile time.     \r\n\r\n<details>    \r\n<summary>Excerpt of the error message</summary>   \r\n\r\n```\r\n[INFO] /bin/sh -c cd '/home/hatzen/liboqs-java' && 'gcc' '-shared' '-L/home/hatzen/liboqs/build/lib' '-o/home/hatzen/liboqs-java/target/liboqs-java.jar' 'target/objs/handle.o' 'target/objs/KEMs.o' 'target/objs/KeyEncapsulation.o' 'target/objs/Rand.o' 'target/objs/Signature.o' 'target/objs/Sigs.o' '-o' '/home/hatzen/liboqs-java/src/main/resources/liboqs-jni.so' '-loqs'\r\n/usr/bin/ld: skipping incompatible /home/hatzen/liboqs/build/lib/liboqs.so when searching for -loqs\r\n/usr/bin/ld: cannot find -loqs\r\ncollect2: error: ld returned 1 exit status\r\n```\r\n</details>  \r\n  \r\nSo i tried to copy the necessary files and build jni and liboqs at a single time with the given cmake files.  \r\nI copied all c sources and tried to add them to the cmakefile. Buti get errors when running the java test.    \r\n  \r\n<details>\r\n<summary>Excerpts of changed files</summary>  \r\n  \r\nsrc/CMakeList.txt\r\n```cmake  \r\n...\r\ninclude_directories(jni)\r\nlink_directories(jni oqs)\r\n\r\nadd_library(jni SHARED\r\njni/handle.c\r\njni/KEMs.c\r\njni/KeyEncapsulation.c\r\njni/Rand.c\r\njni/Signature.c\r\njni/Sigs.c)\r\n\r\nset_target_properties(\r\n    jni\r\n    PROPERTIES\r\n    COMPILE_FLAGS \"-w\"\r\n    #COMPILE_WARNING_DISABLED high\r\n)\r\ntarget_link_libraries(jni oqs)\r\n\r\nset_target_properties(jni PROPERTIES PUBLIC_HEADER \"jni/handle.h;jni/KEMs.h;jni/KeyEncapsulation.h;jni/Rand.h;jni/Signature.h;jni/Sigs.h\")\r\n\r\nINSTALL(TARGETS jni\r\n        LIBRARY DESTINATION lib\r\n        PUBLIC_HEADER DESTINATION lib\r\n)\r\n...\r\n```   \r\nAnd i have overriden the Common Class of this Repo: \r\n\r\n```java\r\npublic class Common {\r\n    ...\r\n    public static void loadNativeLibrary() {\r\n        // overrides all changes from this repo method.\r\n        System.loadLibrary(\"oqs\");\r\n        System.loadLibrary(\"jni\");\r\n   }\r\n   ...\r\n}\r\n```\r\nI did override all packages and paths like:  \r\n```\r\nJava_org_openquantumsafe => Java_de_hartz_software_parannoying_helper_security_liboqs_java\r\norg/openquantumsafe => de/hartz/software/parannoying/helper/security/liboqs/java\r\n```\r\n\r\nThe crash occours probably on the equivalent of:  \r\nhttps://github.com/open-quantum-safe/liboqs-java/blob/109534741ace8442129b20dce9cfce62aa54048a/src/test/java/org/openquantumsafe/KEMTest.java#L37  \r\nwhich is calling JNI  \r\nhttps://github.com/open-quantum-safe/liboqs-java/blob/109534741ace8442129b20dce9cfce62aa54048a/src/main/c/KeyEncapsulation.c#L41  \r\n\r\n```\r\n2021-01-02 20:21:08.357 7642-7697/de.hartz.software.parannoying E/zygote64: JNI ERROR (app bug): accessed stale Local 0x76e6ea9241  (index 1852746020 in a table of size 2)\r\n2021-01-02 20:21:08.388 7642-7697/de.hartz.software.parannoying A/zygote64: java_vm_ext.cc:534] JNI DETECTED ERROR IN APPLICATION: use of deleted local reference 0x76e6ea9241\r\n2021-01-02 20:21:08.389 7642-7697/de.hartz.software.parannoying A/zygote64: java_vm_ext.cc:534]     from de.hartz.software.parannoying.helper.security.liboqs.java.KeyEncapsulation$KeyEncapsulationDetails de.hartz.software.parannoying.helper.security.liboqs.java.KeyEncapsulation.get_KEM_details()\r\n2021-01-02 20:21:08.389 7642-7697/de.hartz.software.parannoying A/zygote64: java_vm_ext.cc:534] \"Instr: androidx.test.runner.AndroidJUnitRunner\" prio=5 tid=22 Runnable\r\n```\r\n  \r\n</details>\r\n  \r\nI am not very familiar with writing c and never had contact with JNI before.   \r\nSo i am not sure whether it could be simple to solve. So my question is will you consider to make this repo be able to build for different abis at a time?  ","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/comments/815814727","html_url":"https://github.com/open-quantum-safe/liboqs-java/issues/11#issuecomment-815814727","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-java/issues/11","id":815814727,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNTgxNDcyNw==","user":{"login":"Hatzen","id":21283655,"node_id":"MDQ6VXNlcjIxMjgzNjU1","avatar_url":"https://avatars.githubusercontent.com/u/21283655?v=4","gravatar_id":"","url":"https://api.github.com/users/Hatzen","html_url":"https://github.com/Hatzen","followers_url":"https://api.github.com/users/Hatzen/followers","following_url":"https://api.github.com/users/Hatzen/following{/other_user}","gists_url":"https://api.github.com/users/Hatzen/gists{/gist_id}","starred_url":"https://api.github.com/users/Hatzen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hatzen/subscriptions","organizations_url":"https://api.github.com/users/Hatzen/orgs","repos_url":"https://api.github.com/users/Hatzen/repos","events_url":"https://api.github.com/users/Hatzen/events{/privacy}","received_events_url":"https://api.github.com/users/Hatzen/received_events","type":"User","site_admin":false},"created_at":"2021-04-08T13:15:01Z","updated_at":"2021-04-08T13:15:01Z","author_association":"CONTRIBUTOR","body":"More or less. I guess the whole jni part is working with Android.  \r\nIn My testapp you can See the sigtest and kemtest run with some algorithms ignored. But this is probably a Problem to the prebuilt liboqs Version (outdated, incompatible, i didnt checked so far).  \r\nThe GitHub repo is running the Test on emulated device as you can See within the actions.  \r\nYou can simply Checkout the repo and import it into Android Studio. Everything should run Out of the box","performed_via_github_app":null}},"public":true,"created_at":"2021-04-08T13:15:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15865065207","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-04-08T14:22:34Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/815866179","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-815866179","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":815866179,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNTg2NjE3OQ==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-04-08T14:22:34Z","updated_at":"2021-04-08T14:22:34Z","author_association":"CONTRIBUTOR","body":"A couple of suggestions:\r\n1) Disable [armel](https://wiki.debian.org/ArmEabiPort) tests. Right now we interpret \"armel\" as ARM32v7 without hardware floating point. As far as I can tell this is a rare configuration. It would make sense to keep armel if we wanted to cover some older (pre v7) processors. If we want to keep armel we should choose a particular processor to target.\r\n2) Disable test_mem. It's useful for profiling, but we don't collect any of the information that it produces in CI. It tests the same code paths as test_cmdline.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-08T14:22:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15866014851","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/964","id":851745651,"node_id":"MDExOlB1bGxSZXF1ZXN0NjEwMTE2Mjc4","number":964,"title":"Speed up ARM jobs in CI","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-04-06T19:27:47Z","updated_at":"2021-04-08T15:18:20Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/964","html_url":"https://github.com/open-quantum-safe/liboqs/pull/964","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/964.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/964.patch"},"body":"Our ARM jobs currently compile liboqs in an emulated environment. With this PR they will cross compile from the x86_64 host and only use emulation to run the tests. This should speed up the ARM jobs significantly. It might take some trial and error to get it working well.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/815909112","html_url":"https://github.com/open-quantum-safe/liboqs/pull/964#issuecomment-815909112","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964","id":815909112,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNTkwOTExMg==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-04-08T15:18:20Z","updated_at":"2021-04-08T15:18:20Z","author_association":"MEMBER","body":"> > I'm not sure the armel test tells us much. I'm in favor of dropping it unless someone has a particular CPU that they'd like us to support.\r\n> \r\n> I personally also wouldn't mind dropping it. @xvzcf @dstebila : Do you know whether anyone needs `armel`?\r\n\r\nI don't know much about various ARM architectures and how widely they're used. Looking at Debian's [supported hardware page](https://www.debian.org/releases/stretch/armel/ch02s01.html.en) I don't see anything in their armel category that is relevant to any uses of liboqs I know about, so I'm fine with dropping it.\r\n\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-04-08T15:18:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15866071576","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907","id":806144183,"node_id":"MDU6SXNzdWU4MDYxNDQxODM=","number":907,"title":"(Re-)define CI process flow","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2021-02-11T07:23:01Z","updated_at":"2021-04-08T15:21:53Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to discuss, formulate and agree, initially the need for and eventually the CI strategy going forward (and then implement it).\r\n\r\nAs already discussed, there are different types of (CI) tests:\r\n- quick sanity checks (such as styletest)\r\n- baseline build tests (with different build-options)\r\n- quick cross platform tests\r\n- deeper tests validating all algorithms are operating OK\r\n- long-running tests like address-sanitizer or timecop\r\n\r\nBased on this a strawman proposal:\r\n- Classify all tests we have into one of these categories: must pass 1) during PR, 2) for audit, 3) for main merge, 4) for release\r\n- Build out the pipeline accordingly, maybe using github actions using dedicated compute resources for 2+4 \r\n- Tests passing for 3 should also trigger downstream integration tests\r\n- 1,2,3 would be prerequisite for 4 but 4 could mandate additional tests (we may not even have yet).\r\n- 1 should have a (normal average) time-to-completion target time of 15 minutes; 2 can be arbitrary long if it's gating nothing but 4; 3 should deliver pass/fail within 1 hour. \r\n- Tests for 2 surely would not have to run cross-platform (though it might be nice)\r\n\r\nRationale: We should be able to make progress resolving issues (at their respective level of complexity: Simple ones should be CI'd&closed fast; downstream problems detected within reasonable time (but automatically); \"deep\" algorithm problems should be unearthed and resolved in a separate time frame).\r\n\r\nAlternative proposals welcome. Proposals for classifying the tests as well as how to implement them, too.\r\n\r\n@dstebila @xvzcf @jschanck @christianpaquin (any one else not party to the conversation up to now as well, of course) please click \"+1\" if you agree we should tackle this problem and if you have more time, additional feedback/suggestions would be great.\r\n\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/815911763","html_url":"https://github.com/open-quantum-safe/liboqs/issues/907#issuecomment-815911763","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/907","id":815911763,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNTkxMTc2Mw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2021-04-08T15:21:53Z","updated_at":"2021-04-08T15:21:53Z","author_association":"MEMBER","body":"> 1. Disable [armel](https://wiki.debian.org/ArmEabiPort) tests. Right now we interpret \"armel\" as ARM32v7 without hardware floating point. As far as I can tell this is a rare configuration. It would make sense to keep armel if we wanted to cover some older (pre v7) processors. If we want to keep armel we should choose a particular processor to target.\r\n\r\nFine with me.\r\n\r\n> 2. Disable test_mem. It's useful for profiling, but we don't collect any of the information that it produces in CI. It tests the same code paths as test_cmdline.\r\n\r\nI'd like to have at least one test path that exercises test\\_mem for the purposes of making sure that the test\\_mem code itself continues to work, but am fine with removing the bulk of its usage if it slows things down substantially.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-08T15:21:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15868533841","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/964","id":851745651,"node_id":"MDExOlB1bGxSZXF1ZXN0NjEwMTE2Mjc4","number":964,"title":"Speed up ARM jobs in CI","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-04-06T19:27:47Z","updated_at":"2021-04-08T18:21:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/964","html_url":"https://github.com/open-quantum-safe/liboqs/pull/964","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/964.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/964.patch"},"body":"Our ARM jobs currently compile liboqs in an emulated environment. With this PR they will cross compile from the x86_64 host and only use emulation to run the tests. This should speed up the ARM jobs significantly. It might take some trial and error to get it working well.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/816038754","html_url":"https://github.com/open-quantum-safe/liboqs/pull/964#issuecomment-816038754","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/964","id":816038754,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNjAzODc1NA==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-04-08T18:21:07Z","updated_at":"2021-04-08T18:21:07Z","author_association":"CONTRIBUTOR","body":"Latest run skips armel completely and also skips test_mem for armhf and arm64. Full CircleCI workflow completes in 18 minutes. The two ARM jobs take about 16 minutes each. I'm done fiddling with it now.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-08T18:21:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15870556546","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/78","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/78/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/78/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/78/events","html_url":"https://github.com/open-quantum-safe/openssh/pull/78","id":761328516,"node_id":"MDExOlB1bGxSZXF1ZXN0NTM2MDEwMjMx","number":78,"title":"PQC integration into the 8.x branch.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-12-10T15:16:27Z","updated_at":"2021-04-08T20:42:57Z","closed_at":"2021-04-08T20:42:57Z","author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/pulls/78","html_url":"https://github.com/open-quantum-safe/openssh/pull/78","diff_url":"https://github.com/open-quantum-safe/openssh/pull/78.diff","patch_url":"https://github.com/open-quantum-safe/openssh/pull/78.patch"},"body":"Integrate PQ-only and hybrid key exchange and authentication from OQS into the 8.x branch. Implements the [draft-kampanakis-curdle-pq-ssh-00](https://datatracker.ietf.org/doc/draft-kampanakis-curdle-pq-ssh/) spec. For hybrid KEX, we follow the design of the [ntru-x25519](https://github.com/openssh/openssh-portable/blob/master/kexsntrup4591761x25519.c) integration currently in OpenSSH.\r\n\r\nHere are the steps to complete the work (might result in multiple PRs).\r\n\r\nKEX tasks:\r\n- [x] Implement PQ-only KEX with one alg\r\n- [x] Implement hybrid KEX with one alg\r\n- [x] Extend support to all security levels (enabled frodo L1/3/5 + ecdh hybrid)\r\n- [ ] Use templates to support all OQS KEM algs (grep for `FIXMEOQS: TEMPLATE`)\r\n- [ ] Add CI testing\r\n- [ ] Update docs (README, etc.)\r\n\r\nAuth tasks\r\n- [x] Implement PQ-only auth with one alg\r\n- [x] Implement hybrid auth with one alg\r\n- [x] Extend support to all security levels (enabled dilithium L1/L3/L5, +L1 rsa hybrid, +L1/3/5 ecdsa hybrid)\r\n- [ ] Use templates to support all OQS sig algs (grep for `FIXMEOQS: TEMPLATE`)\r\n- [ ] Add CI testing\r\n- [ ] Update docs (README, etc.)","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/816175231","html_url":"https://github.com/open-quantum-safe/openssh/pull/78#issuecomment-816175231","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/78","id":816175231,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNjE3NTIzMQ==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2021-04-08T20:42:57Z","updated_at":"2021-04-08T20:42:57Z","author_association":"MEMBER","body":"This should be superseded by https://github.com/open-quantum-safe/openssh/pull/88","performed_via_github_app":null}},"public":true,"created_at":"2021-04-08T20:42:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
