{"id":"15977588319","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/76","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/76/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/76/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/76/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/76","id":848120533,"node_id":"MDU6SXNzdWU4NDgxMjA1MzM=","number":76,"title":"Detach openssh from liboqs-0.4.0","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-01T07:25:29Z","updated_at":"2021-04-17T05:51:53Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Move to more current openssh when https://github.com/open-quantum-safe/openssh/pull/78 is landed","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/821772380","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/76#issuecomment-821772380","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/76","id":821772380,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMTc3MjM4MA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2021-04-17T05:51:53Z","updated_at":"2021-04-17T05:51:53Z","author_association":"MEMBER","body":"As oqs-openssh-8.4 has a much smaller subset of algorithms than the current demo version, wait with updating this demo/resolving this issue until https://github.com/open-quantum-safe/openssh/issues/91 gets implemented and closes.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-17T05:51:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"15980097866","type":"IssueCommentEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/47","id":855524491,"node_id":"MDU6SXNzdWU4NTU1MjQ0OTE=","number":47,"title":"Investigate changes","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2021-04-12T04:13:44Z","updated_at":"2021-04-17T16:33:21Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"As per April 3, the new \"portability\" build flags became active in the profiling docker image and per April 8 an update to this image did (incorporating https://github.com/open-quantum-safe/liboqs/pull/957). Both events are visible in the snapshots below, but performance in general never quite went back to previous levels (all x86_64): Would it be reasonable to investigated/improve this? Are build flags set incorrectly for [creating the profiling Docker image](https://github.com/open-quantum-safe/profiling/blob/main/perf/Dockerfile)? Is something else going wrong in [building things](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/61/workflows/fa6e2fb0-d8be-4eb7-8165-e40bb8816e49/jobs/64)? Is there a more general issue? Were things incorrect before?\r\n\r\nSIKE&SIDH (performance) lost drastically with the last update:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294212-4d28e200-9a9d-11eb-83d7-157ae99dd4c5.png)\r\n\r\nKyber (plain, non AES-version) distributable lost somewhat with the first change, but never recovered:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294256-9b3de580-9a9d-11eb-860a-b5e5b3ca664d.png)\r\n\r\nFrodo distributable, also lost:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294277-c4f70c80-9a9d-11eb-8f1d-935384cc8ecb.png)\r\n\r\nHQC (performance and distributable) in turn benefited from both changes:\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294292-e3f59e80-9a9d-11eb-930b-a0d4c1c204df.png)\r\n\r\nDilithium AES benefitted while plain Dilithium dropped (performance and distributable)\r\n![grafik](https://user-images.githubusercontent.com/57787676/114294329-2028ff00-9a9e-11eb-81d0-91c6c88cfe6b.png)\r\n\r\nTagging @jschanck for thoughts\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/821850211","html_url":"https://github.com/open-quantum-safe/profiling/issues/47#issuecomment-821850211","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/47","id":821850211,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMTg1MDIxMQ==","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"created_at":"2021-04-17T16:33:21Z","updated_at":"2021-04-17T16:33:21Z","author_association":"NONE","body":"Logged on to make sure that this worked, and I was disappointed to see that it didn't.\r\n\r\nFirst thought: it really should be cascadelake, not skylake. But that doesn't sit right. The relevant code is AVX2 optimized and shouldn't benefit much from compiler-generated AVX512 instructions.\r\n\r\nThen I remembered that you're doing this all in Alpine. My attempts to reproduce the results were all done in Debian. So I built the oqs-perf container. Bingo. There's the performance loss.\r\n\r\nThen I did an `apk add clang clang-dev`, rebuilt liboqs with clang, and I got performance that matches my Debian results.\r\n\r\nA bit more digging and I've convinced myself that musl-gcc-9 does a poor job of optimizing `xkcp_low/KeccakP-1600times4/avx2/KeccakP-1600-times4-SIMD256.c`. Upgrading to alpine edge / musl-gcc-10 did not help.\r\n\r\nThat explains all of the remaining performance questions. Switching to clang is an easy \"fix\" (if we care). I suggest we close this issue now.\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-04-17T16:33:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
