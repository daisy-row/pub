{"id":"16115454039","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/46/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/46","id":855520583,"node_id":"MDU6SXNzdWU4NTU1MjA1ODM=","number":46,"title":"multiarch docker image","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2021-04-12T04:03:18Z","updated_at":"2021-04-28T06:45:00Z","closed_at":"2021-04-28T06:45:00Z","author_association":"MEMBER","active_lock_reason":null,"body":"Currently, separate architectures are build/pushed to dockerhub differently: x86_64 is done automatically via CI, arm64 is built&pushed manually from an ARM64 VM. A true [multiarch docker image](https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way) would be ideal.\r\nFirst tests to do both from within CCI failed: \r\n1) An ARM64 machine is [not supported out of the box](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/63/workflows/69ddb2cb-f60a-476a-86f2-3428dc369c23/jobs/66) ([request to CCI for enabling this beta facility](https://www2.circleci.com/arm-signup-customers.html) is pending)\r\n2) A qemu-based `docker buildx` [branch](https://github.com/open-quantum-safe/profiling/tree/mb-xbuild) takes _way_ to long [(and then times out)](https://app.circleci.com/pipelines/github/open-quantum-safe/profiling/65/workflows/bfe545d0-a7db-4e2a-a6df-c35fb6bc39a3).\r\n\r\nAnother approach now would be to cross-build everything and only then insert the resultant binaries to the respective architecture base docker images. This apparently only works for `liboqs` in Debian (not alpine as currently used for profiling) and requires additional investigation as to how to cross-build S3 access (for storing test run results) and OpenSSL.\r\n\r\nSuggestions/alternative ideas solicited how to achieve this goal (@jschanck ?)","performed_via_github_app":null}},"public":true,"created_at":"2021-04-28T06:45:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16119518793","type":"IssuesEvent","actor":{"id":6706342,"login":"zerjioang","display_login":"zerjioang","gravatar_id":"","url":"https://api.github.com/users/zerjioang","avatar_url":"https://avatars.githubusercontent.com/u/6706342?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/978","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/978/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/978/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/978/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/978","id":869850288,"node_id":"MDU6SXNzdWU4Njk4NTAyODg=","number":978,"title":"No documentation available to easily cross compile a library for Windows","user":{"login":"zerjioang","id":6706342,"node_id":"MDQ6VXNlcjY3MDYzNDI=","avatar_url":"https://avatars.githubusercontent.com/u/6706342?v=4","gravatar_id":"","url":"https://api.github.com/users/zerjioang","html_url":"https://github.com/zerjioang","followers_url":"https://api.github.com/users/zerjioang/followers","following_url":"https://api.github.com/users/zerjioang/following{/other_user}","gists_url":"https://api.github.com/users/zerjioang/gists{/gist_id}","starred_url":"https://api.github.com/users/zerjioang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zerjioang/subscriptions","organizations_url":"https://api.github.com/users/zerjioang/orgs","repos_url":"https://api.github.com/users/zerjioang/repos","events_url":"https://api.github.com/users/zerjioang/events{/privacy}","received_events_url":"https://api.github.com/users/zerjioang/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-28T11:40:00Z","updated_at":"2021-04-28T11:40:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I wanted to compile a liboqs library for windows using linux and I was unable to find a way to do it just following the documentation. We should have a section in readme specifying how to properly cross compile. For example\r\n\r\n## Cross compiling LIBOQS from Ubuntu to Windows\r\nTo build a `.dll` file\r\n\r\n```bash\r\nsudo apt install cmake gcc gcc-mingw-w64 ninja-install\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build && cd build\r\ncmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../.CMake/toolchain_windows-amd64.cmake -DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON ..\r\nninja\r\n```\r\n\r\nThe result of ninja process, will generate a `bin/liboqs.dll` file on project root directory","performed_via_github_app":null}},"public":true,"created_at":"2021-04-28T11:40:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16120557190","type":"IssuesEvent","actor":{"id":6706342,"login":"zerjioang","display_login":"zerjioang","gravatar_id":"","url":"https://api.github.com/users/zerjioang","avatar_url":"https://avatars.githubusercontent.com/u/6706342?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/36","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/36/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/36/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/36/events","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/36","id":869914938,"node_id":"MDU6SXNzdWU4Njk5MTQ5Mzg=","number":36,"title":"Invalid configuration on Windows 10 by default","user":{"login":"zerjioang","id":6706342,"node_id":"MDQ6VXNlcjY3MDYzNDI=","avatar_url":"https://avatars.githubusercontent.com/u/6706342?v=4","gravatar_id":"","url":"https://api.github.com/users/zerjioang","html_url":"https://github.com/zerjioang","followers_url":"https://api.github.com/users/zerjioang/followers","following_url":"https://api.github.com/users/zerjioang/following{/other_user}","gists_url":"https://api.github.com/users/zerjioang/gists{/gist_id}","starred_url":"https://api.github.com/users/zerjioang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zerjioang/subscriptions","organizations_url":"https://api.github.com/users/zerjioang/orgs","repos_url":"https://api.github.com/users/zerjioang/repos","events_url":"https://api.github.com/users/zerjioang/events{/privacy}","received_events_url":"https://api.github.com/users/zerjioang/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-28T12:53:16Z","updated_at":"2021-04-28T12:53:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have compile liboqs to work in Windows via liboqs.dll. I correctly setup the PATH pointing to my bin folder that contains this DLL in order to be recognized by the system. However, when I run `python examples/kem.py` the error **No liboqs shared libraries found** is raised.\r\n\r\nI found that a solution to fix this issue on Windows platform is to replace the constant \"oqs\" by \"liboqs\" in\r\n\r\nhttps://github.com/open-quantum-safe/liboqs-python/blob/8bf81666cf992e1ba73c6dee339eca4c3797af82/oqs/oqs.py#L25\r\n\r\nIn this way, the Windows setup will be able to solve the shared library lookup. Should we consider this alternative call configuration for Windows based python interactions?\r\n","performed_via_github_app":null}},"public":true,"created_at":"2021-04-28T12:53:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16121998078","type":"IssuesEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/979","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/979/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/979/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/979/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/979","id":870001422,"node_id":"MDU6SXNzdWU4NzAwMDE0MjI=","number":979,"title":"Update SIKE (March 5th bug fix)","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"assignees":[{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-04-28T14:18:21Z","updated_at":"2021-04-28T14:18:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Integrate commit [679814](https://github.com/microsoft/PQCrypto-SIDH/commit/67981447d36dfdcfc849d8d88963f727a31ba772).\r\n\r\n([Diff since v3.4](https://github.com/microsoft/PQCrypto-SIDH/compare/v3.4...679814))","performed_via_github_app":null}},"public":true,"created_at":"2021-04-28T14:18:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"16123917295","type":"IssuesEvent","actor":{"id":25615540,"login":"jschanck","display_login":"jschanck","gravatar_id":"","url":"https://api.github.com/users/jschanck","avatar_url":"https://avatars.githubusercontent.com/u/25615540?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/980","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/980/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/980/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/980/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/980","id":870118280,"node_id":"MDU6SXNzdWU4NzAxMTgyODA=","number":980,"title":"Namespacing of SIKE constants","user":{"login":"jschanck","id":25615540,"node_id":"MDQ6VXNlcjI1NjE1NTQw","avatar_url":"https://avatars.githubusercontent.com/u/25615540?v=4","gravatar_id":"","url":"https://api.github.com/users/jschanck","html_url":"https://github.com/jschanck","followers_url":"https://api.github.com/users/jschanck/followers","following_url":"https://api.github.com/users/jschanck/following{/other_user}","gists_url":"https://api.github.com/users/jschanck/gists{/gist_id}","starred_url":"https://api.github.com/users/jschanck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschanck/subscriptions","organizations_url":"https://api.github.com/users/jschanck/orgs","repos_url":"https://api.github.com/users/jschanck/repos","events_url":"https://api.github.com/users/jschanck/events{/privacy}","received_events_url":"https://api.github.com/users/jschanck/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-04-28T16:12:29Z","updated_at":"2021-04-28T16:12:29Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Compiling liboqs with SIKEp503-compressed enabled and SIKEp503 disabled (e.g. by compiling with `-DOQS_MINIMAL_BUILD=ON -DOQS_KEM_DEFAULT=OQS_KEM_alg_sike_p503_compressed`) results in undefined symbols at link time:\r\n```\r\n/usr/bin/ld: src/kem/sike/CMakeFiles/sike.dir/external/P503/AMD64/fp_x64_asm.S.o: relocation R_X86_64_PC32 against undefined symbol `oqs_kem_sike_p503x2' can not be used when making a shared object; recompile with -fPIC\r\n```\r\n\r\nThis is because of some namespacing that we add to the upstream code.\r\n\r\nBoth P503.c and P503_compressed.c define a symbol called `p503x2`. To avoid redefinition errors when building both parameter sets, we have some #defines that turn `p503x2` into `oqs_kem_sike_p503x2` and `oqs_kem_sike_compressed_p503x2`.\r\n\r\nThe problem is that `fp_x64_asm.S` only ever looks for `oqs_kem_sike_p503x2`: \r\n```asm\r\n    #define fmt(f)    oqs_kem_sike_##f\r\n    [...]\r\n    mov    rcx, [rip+fmt(p503x2)]\r\n```\r\n\r\nI suggest moving the constants from P503.c and P503_compressed.c to a new compilation unit. This will avoid the redefinition problem and reduce code size.","performed_via_github_app":null}},"public":true,"created_at":"2021-04-28T16:12:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
