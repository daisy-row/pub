{"id":"14036478068","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/250","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/250/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/250/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/250/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/250","id":733523547,"node_id":"MDU6SXNzdWU3MzM1MjM1NDc=","number":250,"title":"Integrating with MQTT mosquitto","user":{"login":"Septien","id":21247550,"node_id":"MDQ6VXNlcjIxMjQ3NTUw","avatar_url":"https://avatars3.githubusercontent.com/u/21247550?v=4","gravatar_id":"","url":"https://api.github.com/users/Septien","html_url":"https://github.com/Septien","followers_url":"https://api.github.com/users/Septien/followers","following_url":"https://api.github.com/users/Septien/following{/other_user}","gists_url":"https://api.github.com/users/Septien/gists{/gist_id}","starred_url":"https://api.github.com/users/Septien/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Septien/subscriptions","organizations_url":"https://api.github.com/users/Septien/orgs","repos_url":"https://api.github.com/users/Septien/repos","events_url":"https://api.github.com/users/Septien/events{/privacy}","received_events_url":"https://api.github.com/users/Septien/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-30T21:19:44Z","updated_at":"2020-10-31T06:23:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\nI want to integrate this fork of OpenSSL into the MQTT broker mosquitto. I already compiled both, and it works fine with the classical ciphers, as expected. Now I would like to use one of the PQ KEM in the handshake process. The MQTT client APIs that use OpenSSL (Paho, mosquitto) only allow to specified the ciphers to use (e.g., ECDHE-ECDSA-AES128-SHA), but give no option for _groups_ or _curves_, used in the example _opnessl s_client_ given, and in other integrations (Chromium). Any suggestions of what can I do?\r\n\r\nThanks in advance.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/719892006","html_url":"https://github.com/open-quantum-safe/openssl/issues/250#issuecomment-719892006","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/250","id":719892006,"node_id":"MDEyOklzc3VlQ29tbWVudDcxOTg5MjAwNg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-10-31T06:23:05Z","updated_at":"2020-10-31T06:23:05Z","author_association":"MEMBER","body":"@Septien Thanks for your interest to use our work to enhance mosquitto with PQ-TLS support. If mosquitto does not provide a mechanism to configure curves it probably has not been developed with TLS 1.3 mechanisms in mind which is the basis for OQS-openssl. Most notably, the [groups/curves](https://www.openssl.org/docs/manmaster/man3/SSL_CTX_set1_curves.html) mechanism is used by our implementation to set the (PQ) KEM as you noted. So this may be a possible way forward: Enhance mosquitto to support TLS 1.3 (at least configuration/selection of key exchange mechanisms via the API linked above) before integrating OQS-openssl.","performed_via_github_app":null}},"public":true,"created_at":"2020-10-31T06:23:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
