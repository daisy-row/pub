{"id":"13767331625","type":"PushEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"push_id":5814695706,"size":1,"distinct_size":1,"ref":"refs/heads/OQS-OpenSSL_1_1_1-stable","head":"b7e7111fdd56bddc620096c663cfc03b10f3f417","before":"b761b767d1832e42defad581ab243df333daf10f","commits":[{"sha":"b7e7111fdd56bddc620096c663cfc03b10f3f417","author":{"name":"Christian Paquin","email":"5e354fbc60a50a4914bb55be34107b73e39fe98c@microsoft.com"},"message":"Merged upstream 1.1.1h tag (#242)\n\n* Fix aesni_cbc_sha256_enc_avx2 backtrace info\r\n\r\nWe store a secondary frame pointer info for the debugger\r\nin the red zone.  This fixes a crash in the unwinder when\r\nthis function is interrupted.\r\n\r\nAdditionally the missing cfi function annotation is added\r\nto aesni_cbc_sha256_enc_shaext.\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10674)\r\n\r\n(cherry picked from commit 665de4d48aef2507022a7d74f5c7f6e339d5e6bc)\r\n\r\n* Add some missing cfi frame info in x25519-x86_64.pl\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\n(Merged from https://github.com/openssl/openssl/pull/10676)\r\n\r\n(cherry picked from commit 9d079f2744b9b624c6fe75f95fc0f766ef88ffcf)\r\n\r\n* Add some missing cfi frame info in aesni-gcm-x86_64.pl\r\n\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\n(Merged from https://github.com/openssl/openssl/pull/10677)\r\n\r\n(cherry picked from commit 275a048ffc1585a731e39d7e8e3f53766e8f48d7)\r\n\r\n* Add some missing cfi frame info in poly1305-x86_64.pl\r\n\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\n(Merged from https://github.com/openssl/openssl/pull/10678)\r\n\r\n(cherry picked from commit 048fa13e5ef4ccd730561f79a6c91f38365994d1)\r\n\r\n* Add some missing cfi frame info in rc4-md5-x86_64.pl\r\n\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\n(Merged from https://github.com/openssl/openssl/pull/10679)\r\n\r\n(cherry picked from commit b2a00f62209add348deb8283c588ddbd572dc216)\r\n\r\n* Fix a race condition in the speed command\r\n\r\nThe timer alarm sets run = 0, while the benchmark\r\ndoes run = 1 in the initialization code.  That is\r\na race condition, if the timer goes off too early\r\nthe benchmark runs forever.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10680)\r\n\r\n(cherry picked from commit f3fdfbf78c6bfc97abf9c70b03859a28ebf6b66d)\r\n\r\n* Update the krb5 submodule\r\n\r\nBring us up to date with upstream's 1.17.1 release.  Among other\r\nthings, it includes commit c2497d46b4bad473e164943d67b58cd1ae261c3a\r\nwhich fixes several issues that affect running the test suite under\r\nTravis CI.  Hopefully those will work transitively for us as well.\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n\r\n(cherry picked from commit 3e73f558af600ea068bb2132988c31ddb444e13e)\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10690)\r\n\r\n* Temporarily disable external pyca tests\r\n\r\nThe pyca-cryptography external test has been failing for a long time.\r\nIt looks like upstream needs to make some changes to adapt to 1.1.1.\r\n\r\nBackported from #10689\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10722)\r\n\r\n* Update tls13_enc.c\r\n\r\nFix double + in hkdflabel declaration (FIXES #10675)\r\nCLA: trivial\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10700)\r\n\r\n(cherry picked from commit 2de5a5fbdd14f514e962cccfe90482c37786c183)\r\n\r\n* Run make update\r\n\r\nThe New Year has caused various files to appear out of date to \"make\r\nupdate\". This causes Travis to fail. Therefore we update those files.\r\n\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10739)\r\n\r\n* Fix potential SCA vulnerability in some EC_METHODs\r\n\r\nThis commit addresses a potential side-channel vulnerability in the\r\ninternals of some elliptic curve low level operations.\r\nThe side-channel leakage appears to be tiny, so the severity of this\r\nissue is rather low.\r\n\r\nThe issue was reported by David Schrammel and Samuel Weiser.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\n(Merged from https://github.com/openssl/openssl/pull/9239)\r\n\r\n(cherry picked from commit 3cb914c463ed1c9e32cfb773d816139a61b6ad5f)\r\n\r\n* Avoid leaking intermediate states in point doubling special case.\r\n\r\nCherry picked from\r\nhttps://github.com/google/boringssl/commit/12d9ed670da3edd64ce8175cfe0e091982989c18\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\n(Merged from https://github.com/openssl/openssl/pull/9239)\r\n\r\n(cherry picked from commit 2baea7c7e0896658b74956cac6084dd7e82e8c1b)\r\n\r\n* Fix side channel in ecp_nistz256-x86.pl\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/9239)\r\n\r\n(cherry picked from commit 0de3399b691f025153c8001045d5eeb0909dfd7a)\r\n\r\n* Fix side channel in ecp_nistz256-armv4.pl\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/9239)\r\n\r\n(cherry picked from commit 3d139746ca72f0906c036d0a4a3e176c7b61ed1b)\r\n\r\n* Improve side channel fix in ecp_nistz256-x86_64.pl\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/9239)\r\n\r\n(cherry picked from commit e9fe87950db2e6169029b2ecf3ed09d64265bc9c)\r\n\r\n* Fix side channel in the ecp_nistz256.c reference implementation\r\n\r\nThis is only used if configured with\r\n./config -DECP_NISTZ256_REFERENCE_IMPLEMENTATION\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/9239)\r\n\r\n(cherry picked from commit 7d4716648e8348dea862e198b9395478fae01907)\r\n\r\n* Fix side channel in ecp_nistz256-armv8.pl\r\n\r\nThis change addresses a potential side-channel vulnerability in\r\nthe internals of nistz256 low level operations for armv8.\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\n(Merged from https://github.com/openssl/openssl/pull/9239)\r\n\r\n(cherry picked from commit f5a659b6dfcc735a62c712dcca64d116d2289b97)\r\n\r\n* Fix disabled ecdsa in apps/speed\r\n\r\nThis came from f3fdfbf78c6b. run = 1 should be done in pkey_print_message\r\nas well, otherwise other tests printed with pkey_print_message won't run.\r\n\r\nChange-Id: I0ba0b05256ad6509ada4735b26d10f8a73fd89ec\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\n(Merged from https://github.com/openssl/openssl/pull/10710)\r\n\r\n(cherry picked from commit 6e49b514067a2b6a30d064d2ae1fdfd8050c184b)\r\n\r\n* Fix incorrect return code on ECDSA key verification\r\n\r\nECDSA_do_verify() is a function that verifies a ECDSA signature given a hash and a public EC key. The function is supposed to return 1 on valid signature, 0 on invalid signature and -1 on error. Previously, we returned 0 if the key did not have a verify_sig method. This is actually an error case and not an invalid signature. Consequently, this patch updates the return code to -1.\r\n\r\nFixes #8766\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10693)\r\n\r\n(cherry picked from commit 26583f6aa8dc28e3598e61db66e54e2fdf8b195f)\r\n\r\n* Don't store an HMAC key for longer than we need\r\n\r\nThe HMAC_CTX structure stores the original key in case the ctx is reused\r\nwithout changing the key.\r\n\r\nHowever, HMAC_Init_ex() checks its parameters such that the only code path\r\nwhere the stored key is ever used is in the case where HMAC_Init_ex is\r\ncalled with a NULL key and an explicit md is provided which is the same as\r\nthe md that was provided previously. But in that case we can actually reuse\r\nthe pre-digested key that we calculated last time, so we can refactor the\r\ncode not to use the stored key at all.\r\n\r\nWith that refactor done it is no longer necessary to store the key in the\r\nctx at all. This means that long running ctx's will not keep the key in\r\nmemory for any longer than required. Note though that the digested key\r\n*is* still kept in memory for the duration of the life of the ctx.\r\n\r\nFixes #10743\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10763)\r\n\r\n* Revert \"Move random-related defines from e_os.h to rand_unix.c\"\r\n\r\nThis reverts commit 7b18d1a53f932391bbc599a4717d6f98a597849c, which moved the\r\nDEVRANDOM and DEVRANDOM_EGD defines into rand_unix.c. That change introduced\r\nthe regression that the compiler complains about missing declarations in\r\napps/version.c when OpenSSL is configured using `--with-rand-seed=devrandom`\r\n(resp. `--with-rand-seed=egd`):\r\n\r\napps/version.c:173:42: error: 'DEVRANDOM' undeclared\r\n             static const char *dev[] = { DEVRANDOM, NULL };\r\n                                          ^~~~~~~~~\r\n\r\nFixes #10759\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10764)\r\n\r\n* Fix pkeyutl -verifyrecover\r\n\r\nWhen performing a pkeyutl -verifyrecover operation the input file is not\r\na hash - it is the signature itself. Therefore don't do the check to make\r\nsure it looks like a hash.\r\n\r\nFixes #9658\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/9731)\r\n\r\n(cherry picked from commit 5ffc33244cd4d66e47dfa66ce89cb38d0f3074cc)\r\n\r\n* fix a glitch in the documentation of OCSP_sendreq_bio()\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10713)\r\n\r\n* Configure: use $list_separator_re only for defines and includes\r\n\r\nThis regexp was used a bit too uncontrolled, which had it split flag\r\nvalues where it should not have.\r\n\r\nFixes #10792\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10793)\r\n\r\n(cherry picked from commit bbe486cf6154df3d3aaedbae6c5b82d4ed31a5f8)\r\n\r\n* Avoid leak in error path of asn1_parse2\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10794)\r\n\r\n(cherry picked from commit 6a165fab239ec5b00b3cd68169a63b509207177d)\r\n\r\n* Fix documentation of return value for EVP_Digest{Sign,Verify}Init()\r\n\r\nThey never returned the negative values that the documentation stated.\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10847)\r\n\r\n* Update SSL_CTX_sess_set_new_cb(3) docs for refcounts\r\n\r\nThe existing documentation for the new-session callback was unclear\r\nabout the requirements on the callback with respect to reference-handling\r\nof the session object being created.  Be more explicit about the\r\n(non-)requirements on the callback code for \"success\" (1) and \"ignore\"\r\n(0) return values.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10848)\r\n\r\n(cherry picked from commit 188d4ec82a9b0085ac5841cce3eda95efb94f2b4)\r\n\r\n* For all assembler scripts where it matters, recognise clang > 9.x\r\n\r\nFixes #10853\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10857)\r\n\r\n* Fix unwind info in crypto/rc4/asm/rc4-x86_64.pl\r\n\r\nMove .cfi_startproc to the right place for RC4.  Add missing\r\n.cfi_startproc and .cfi_endproc to RC4_options.\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\n(Merged from https://github.com/openssl/openssl/pull/10872)\r\n\r\n(cherry picked from commit 967ef73013becef2aec3439f8c45204b24121018)\r\n\r\n* Fix TLS not using aes_cbc_hmac_sha ciphers\r\n\r\nAES_ASM was repaced by AESNI_ASM, so use that.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10892)\r\n\r\n* Remove remaining references to crypto/include\r\n\r\nConfigure creates an empty crypto/include which\r\ngets not cleaned up with make distclean.\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10893)\r\n\r\n* openssl-config: add example libssl system-defaults\r\n\r\nProvide a \"simple\" example for affecting the systemwide default behavior\r\nof libssl.  The large number of mandatory nested sections makes this\r\nless simple than the main description might suggest.\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10937)\r\n\r\n(cherry picked from commit 3472082b4b6d73e0803a7c47f03e96ec0a69f77b)\r\n\r\n* Replace apps/server.pem with certificate with a sha256 signature.\r\n\r\nIt replaces apps/server.pem that used a sha1 signature with a copy of\r\ntest/certs/servercert.pem that is uses sha256.\r\n\r\nThis caused the dtlstest to start failing. It's testing connection\r\nsbetween a dtls client and server. In particular it was checking that if\r\nwe drop a record that the handshake recovers and still completes\r\nsuccessfully. The test iterates a number of times. The first time\r\nthrough it drops the first record. The second time it drops the second\r\none, and so on. In order to do this it has a hard-coded value for the\r\nexpected number of records it should see in a handshake. That's ok\r\nbecause we completely control both sides of the handshake and know what\r\nrecords we expect to see. Small changes in message size would be\r\ntolerated because that is unlikely to have an impact on the number of\r\nrecords. Larger changes in message size however could increase or\r\ndecrease the number of records and hence cause the test to fail.\r\n\r\nThis particular test uses a mem bio which doesn't have all the CTRLs\r\nthat the dgram BIO has. When we are using a dgram BIO we query that BIO\r\nto determine the MTU size. The smaller the MTU the more fragmented\r\nhandshakes become. Since the mem BIO doesn't report an MTU we use a\r\nrather small default value and get quite a lot of records in our\r\nhandshake. This has the tendency to increase the likelihood of the\r\nnumber of records changing in the test if the message size changes.\r\n\r\nIt so happens that the new server certificate is smaller than the old\r\none. AFAICT this is probably because the DNs for the Subject and Issuer\r\nare significantly shorter than previously. The result is that the number\r\nof records used to transmit the Certificate message is one less than it\r\nwas before. This actually has a knock on impact for subsequent messages\r\nand how we fragment them resulting in one less ServerKeyExchange record\r\ntoo (the actual size of the ServerKeyExchange message hasn't changed,\r\nbut where in that message it gets fragmented has). In total the number\r\nof records used in the handshake has decreased by 2 with the new\r\nserver.pem file.\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nGH: #10784\r\n(cherry picked from commit 5fd72d96a592c3c4ef28ff11c6ef334a856b0cd1)\r\n\r\n* Check that the default signature type is allowed\r\n\r\nTLS < 1.2 has fixed signature algorithms: MD5+SHA1 for RSA and SHA1 for the\r\nothers. TLS 1.2 sends a list of supported ciphers, but allows not sending\r\nit in which case SHA1 is used. TLS 1.3 makes sending the list mandatory.\r\n\r\nWhen we didn't receive a list from the client, we always used the\r\ndefaults without checking that they are allowed by the configuration.\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nGH: #10784\r\n(cherry picked from commit b0031e5dc2c8c99a6c04bc7625aa00d3d20a59a5)\r\n\r\n* OpenSSL::Test: bring back the relative paths\r\n\r\nBecause there was a bug in File::Spec::Unix' abs2rel when it was given\r\nrelative paths as both PATH and BASE arguments, the directories we\r\ndeal with were made to be all absolute.  Unfortunately, this meant\r\ngetting paths in our verbose test output which are difficult to use\r\nanywhere else (such as a separate test build made for comparison), due\r\nto the constant need to edit all the paths all the time.\r\n\r\nWe're therefore getting back the relative paths, by doing an extra\r\nabs2rel() in __srctop_file, __srctop_dir, __bldtop_file and\r\n__bldtop_dir, with a 'Cwd::getcwd' call as BASE argument.\r\n\r\nFixes #10628\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10913)\r\n\r\n(cherry picked from commit 612539e8a678c6099131dfd0e5e4b85fa774eb1a)\r\n\r\n* Fix type name typo in d2i/i2d documentation.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10933)\r\n\r\n(cherry picked from commit 68229aebce159ecea7b887d6a0edd47d881a659b)\r\n\r\n* Fix SSL_get_servername() and SNI behaviour\r\n\r\nThe SNI behaviour for TLSv1.3 and the behaviour of SSL_get_servername()\r\nwas not quite right, and not entirely consistent with the RFC.\r\n\r\nThe TLSv1.3 RFC explicitly says that SNI is negotiated on each handshake\r\nand the server is not required to associate it with the session. This was\r\nnot quite reflected in the code so we fix that.\r\n\r\nAdditionally there were some additional checks around early_data checking\r\nthat the SNI between the original session and this session were\r\nconsistent. In fact the RFC does not require any such checks, so they are\r\nremoved.\r\n\r\nFinally the behaviour of SSL_get_servername() was not quite right. The\r\nbehaviour was not consistent between resumption and normal handshakes,\r\nand also not quite consistent with historical behaviour. We clarify the\r\nbehaviour in various scenarios and also attempt to make it match historical\r\nbehaviour as closely as possible.\r\n\r\nFixes #8822\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/10018)\r\n\r\n(cherry picked from commit 7955c1f16e72dc944677fd1dbf4b1300e75f1c84)\r\n\r\n* Test that SSL_get_servername returns what we expect\r\n\r\nTest this on both the client and the server after a normal handshake,\r\nand after a resumption handshake. We also test what happens if an\r\ninconsistent SNI is set between the original handshake and the resumption\r\nhandshake. Finally all of this is also tested in TLSv1.2 and TLSv1.3.\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/10018)\r\n\r\n(cherry picked from commit 49ef3d0719f132629ab76d4bcb4ab0c1e016277a)\r\n\r\n* Provide better documentation for SSL_get_servername()\r\n\r\nThe behaviour of SSL_get_servername() is quite complicated and depends on\r\nnumerous factors such as whether it is called on the client or the server,\r\nwhether it is called before or after the handshake, what protocol version\r\nwas negotiated, and whether a resumption was attempted or was successful.\r\n\r\nWe attempt to document the behavior more clearly.\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/10018)\r\n\r\n(cherry picked from commit 0dc7c8e8314f27ac093b2d7bc8f13d0dfd302bdb)\r\n\r\n* Don't acknowledge a servername following warning alert in servername cb\r\n\r\nIf the servername cb decides to send back a warning alert then the\r\nhandshake continues, but we should not signal to the client that the\r\nservername has been accepted.\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/10018)\r\n\r\n(cherry picked from commit cd624ccd41ac3ac779c1c7a7a1e63427ce9588dd)\r\n\r\n* config: ensure the perl Configure run is the last statement\r\n\r\nRunning any statement after Configure means we lose its exit code\r\n\r\nFixes #10951\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/10953)\r\n\r\n(cherry picked from commit 4bf3e989fef9268507ba02744e7f71ee5637681c)\r\n\r\n* Create a new embeddedSCTs1 that's signed using SHA256\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nGH: #10786\r\n(cherry picked from commit 4d9e8c95544d7a86765e6a46951dbe17b801875a)\r\n\r\n* Stop accepting certificates signed using SHA1 at security level 1\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nGH: #10786\r\n(cherry picked from commit b744f915ca8bb37631909728dd2529289bda8438)\r\n\r\n* Fix small misspelling in doc for OCSP_response_status\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Paul Yang <kaishen.yy@antfin.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10810)\r\n\r\n(cherry picked from commit 924d041fe0c650a79449217f81880a6384ff06b2)\r\n\r\n* doc: Fix typo in EVP_DigestSignInit manpage\r\n\r\nCLA: trivial\r\n\r\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10841)\r\n\r\n(cherry picked from commit 099a398268a298557be784528ac1d94f0f44c97c)\r\n\r\n* Prevent compiler warning for unused static function.\r\n\r\nPrepend missing ossl_unused in front of lh_type_new to make the compiler\r\nhappy.\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10946)\r\n\r\n(cherry picked from commit 7b6a746721170a21519c38798041be8101e7361f)\r\n\r\n* Fix misspelling errors and typos reported by codespell\r\n\r\nFixes #10998\r\n\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11000)\r\n\r\n* Coverity CID 1444960: Error handling issues\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/8888)\r\n\r\n(cherry picked from commit a05bf83c7964bb3928b323fe356b9f70f105036d)\r\n\r\n* Avoid leak in error path of PKCS5_PBE_keyivgen\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10816)\r\n\r\n(cherry picked from commit adc9086beb21a91ca59aaf0c619b38b82c223f9b)\r\n\r\n* Appveyor: update to Visual Studio 2017.\r\n\r\nDefault image was currently \"Visual Studio 2015\"\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10327)\r\n\r\n(cherry picked from commit b03de7a9207645c72e22627b10709f15eed211bf)\r\n\r\n* Fix no-tls1_3\r\n\r\nThe hostname_cb in sslapitest.c was originally only defined if TLSv1.3\r\nwas enabled. A recently added test now uses this unconditionally, so we\r\nmove the function implementation earlier in the file, and always compile\r\nit in.\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11014)\r\n\r\n(cherry picked from commit 104a733df65dfd8c3dd110de9bd56f6ebfc8f2f6)\r\n\r\n* Forgotten GOST2012 support in non-vital places\r\n\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11072)\r\n\r\n* Adjust minimal build config in 1.1.1 branch\r\n\r\nBackport of improvements from #9982 to 1.1.1 branch.\r\nAdds some more exclusions which were previously missed.\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11059)\r\n\r\n* VMS: Adapt descrip.mms template to the changed inclustion dirs\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11088)\r\n\r\n* VMS: Correct error reporting in crypto/rand/rand_vms.c\r\n\r\nThe future style that's coming with OpenSSL 3.0 was used, we need to\r\nrevert that back to \"traditional\" style.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11088)\r\n\r\n* DOC: document in more detail what a BIO_read_ex() via BIO_f_buffer() does\r\n\r\nThe BIO_f_buffer() documentation tells in enough detail how it affects\r\nBIO_gets(), but not how it affects BIO_read_ex().  This change\r\nremedies that.\r\n\r\nFixes #10859\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10890)\r\n\r\n(cherry picked from commit 9a4fd80ee0ad1833879b6a55c9c4673eeb8446a3)\r\n\r\n* Generate new Ed488 certificates\r\n\r\nCreate a whole chain of Ed488 certificates so that we can use it at security\r\nlevel 4 (192 bit). We had an 2048 bit RSA (112 bit, level 2) root sign the\r\nEd488 certificate using SHA256 (128 bit, level 3).\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nGH: #10785\r\n(cherry picked from commit 77c4d3972400adf1bcb76ceea359f5453cc3e8e4)\r\n\r\n* Check that ed25519 and ed448 are allowed by the security level\r\n\r\nSignature algorithms not using an MD weren't checked that they're\r\nallowed by the security level.\r\n\r\nReviewed-by: Tomáš Mráz <tmraz@fedoraproject.org>\r\nGH: #11062\r\n\r\n* Do not silently truncate files on perlasm errors\r\n\r\nIf one of the perlasm xlate drivers crashes, OpenSSL's build will\r\ncurrently swallow the error and silently truncate the output to however\r\nfar the driver got. This will hopefully fail to build, but better to\r\ncheck such things.\r\n\r\nHandle this by checking for errors when closing STDOUT (which is a pipe\r\nto the xlate driver).\r\n\r\nThis is the OpenSSL 1.1.1 version of\r\nhttps://github.com/openssl/openssl/pull/10883 and\r\nhttps://github.com/openssl/openssl/pull/10930.\r\n\r\nReviewed-by: Mark J. Cox <mark@awe.com>\r\nReviewed-by: Paul Dale David Benjamin <davidben@google.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10931)\r\n\r\n* Handle max_fragment_length overflow for DTLS\r\n\r\nAllow for encryption overhead in early DTLS size check\r\nand send overflow if validated record is too long\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11096)\r\n\r\n(cherry picked from commit cc0663f697b05ed121a728241f0502250429802d)\r\n\r\n* Add *.d.tmp files to .gitignore\r\n\r\nThese are temporary files generated by the build process that should not\r\nbe checked in.\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11122)\r\n\r\n(cherry picked from commit 7b5108dff4cfde059ca278147a188fb6254603d1)\r\n\r\n* Detect EOF while reading in libssl\r\n\r\nIf we hit an EOF while reading in libssl then we will report an error\r\nback to the application (SSL_ERROR_SYSCALL) but errno will be 0. We add\r\nan error to the stack (which means we instead return SSL_ERROR_SSL) and\r\ntherefore give a hint as to what went wrong.\r\n\r\nContains a partial fix for #10880\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10882)\r\n\r\n* Teach more BIOs how to handle BIO_CTRL_EOF\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/10882)\r\n\r\n* config: Drop linux-alpha-gcc+bwx\r\n\r\nIts entry in Configuration/10-main.conf was dropped in commit\r\n7ead0c89185c (\"Configure: fold related configurations more aggressively\r\nand clean-up.\") probably because all but one of its bn_ops were removed\r\n(RC4_CHAR remained). Benchmarks on an Alpha EV7 indicate that RC4_INT is\r\nbetter than RC4_CHAR so rather than restoring the configuation, remove\r\nit from config.\r\n\r\nCLA: trivial\r\nBug: https://bugs.gentoo.org/697840\r\n\r\n\r\n(cherry picked from commit 19ded1a717b6c72c3db241f06787a353f1190755)\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11130)\r\n\r\n* VMS: mitigate for the C++ compiler that doesn't understand certain pragmas\r\n\r\nThis only affects __DECC_INCLUDE_EPILOGUE.H and __DECC_INCLUDE_PROLOGUE.H,\r\nwhich are used automatically by HP and VSI C/C++ compilers.\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11159)\r\n\r\n* apps x509: restrict CAkeyform option to OPT_FMT_PDE\r\n\r\nCAkeyform may be set to PEM, DER or ENGINE, but the current options\r\nare not using the proper optionformat 'E' (OPT_FMT_PDE) for this.\r\n\r\nSet the valtype for CAkeyform to 'E' and use OPT_FMT_PDE when extracting\r\nthe option value.\r\n\r\nThis amends bf4006a6f9 (\"Fix regression on x509 keyform argument\") which\r\ndid the same thing for keyform and changed the manpage synopsis entries\r\nfor both keyform and CAkeyform but did not change the option section.\r\nHence, change the option section.\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11172)\r\n\r\n* Fix comment placement in ecp_nistp256.ci\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11175)\r\n\r\n(cherry picked from commit c590be6f12d0b725863961e41bc64a81c8cf30d6)\r\n\r\n* This works around a gcc-9 crash\r\n\r\nIt happens when configured with ./config -ftest-coverage\r\n\r\nsee: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=94029\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11246)\r\n\r\n* aes-s390x.pl: fix stg offset caused by typo in perlasm\r\n\r\nSigned-off-by: Patrick Steuer <patrick.steuer@de.ibm.com>\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11234)\r\n\r\n(cherry picked from commit 7b2ce4a6e817e4385ff77fea0c6e349294c7b756)\r\n\r\n* crypto/ec/curve448/eddsa.c: fix EBCDIC platforms\r\n\r\nSigned-off-by: Patrick Steuer <patrick.steuer@de.ibm.com>\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11229)\r\n\r\n(cherry picked from commit af7f656cd91d99d62567e2b20c61f07cb4d81d0b)\r\n\r\n* DOC: Add documentation related to X509_LOOKUPs\r\n\r\nMost of all, the base X509_LOOKUP functionality is now documented.\r\nFurthermore, the names X509_LOOKUP_METHOD and X509_STORE are added for\r\nreference.\r\n\r\nSome functions were moved from X509_LOOKUP_meth_new.pod\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11120)\r\n\r\n* DOC: Fixups of X509_LOOKUP.pod\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11120)\r\n\r\n* Clarify the usage of EVP_PKEY_get_raw_[private|public]_key()\r\n\r\nEVP_PKEY_get_raw_private_key() and EVP_PKEY_get_raw_public_key() expect\r\nthe size of the key buffer to be populated in the |*len| parameter on\r\nentry - but the docs made no mention of this.\r\n\r\nFixes #11245\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11254)\r\n\r\n(cherry picked from commit f529fc7d53bf4228fae61cb1efe73d97fe3eb35f)\r\n\r\n* apps x509: passing PKCS#11 URL as -signkey\r\n\r\nOpenSSL 1.1.0 has extended option checking, and rejects passing a PKCS#11\r\nengine URL to \"-signkey\" option. The actual code is ready to take it.\r\n\r\nChange the option parsing to allow an engine URL to be passed and modify\r\nthe manpage accordingly.\r\n\r\nCLA: trivial\r\n\r\n(cherry picked from commit 16d560439d8b1be5082228a87576a8f79b3525ac)\r\n\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11173)\r\n\r\n* DOC: New file for EVP_PKEY_size(), EVP_PKEY_bits() and EVP_PKEY_security_bits()\r\n\r\nWe change the description to be about the key rather than the\r\nsignature.  How the key size is related to the signature is explained\r\nin the description of EVP_SignFinal() anyway.\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n\r\n(cherry picked from commit 6942a0d6feb8d3dcbbc6a1ec6be9de7ab2df1530)\r\n\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11232)\r\n\r\n* DOC: Make EVP_SignInit.pod conform with man-pages(7)\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n\r\n(cherry picked from commit 03d65ca2095777cf6314ad813eb7de5779c9b93d)\r\n\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11232)\r\n\r\n* docs: fix typo in SSL functions\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Matthias St. Pierre <Matthias.St.Pierre@ncp-e.com>\r\nReviewed-by: Paul Yang <kaishen.yy@antfin.com>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11253)\r\n\r\n(cherry picked from commit 9f44e96e245993c8e7aaa9fadf1d6713c9c60915)\r\n\r\n* Revert \"Stop accepting certificates signed using SHA1 at security level 1\"\r\n\r\nThis reverts commit 68436f0a8964e911eb4f864bc8b31d7ca4d29585.\r\n\r\nThe OMC did not vote in favour of backporting this to 1.1.1, so this\r\nchange should be reverted.\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11282)\r\n\r\n* Revert \"Create a new embeddedSCTs1 that's signed using SHA256\"\r\n\r\nThis reverts commit b98efebeb2d4265bd6638d5947fe365500121e03.\r\n\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11282)\r\n\r\n* doc: document that 'openssl rand' is cryptographically secure\r\n\r\n(cherry picked from commit 88398d2a358f)\r\n\r\nAdditionally, remove an outdated paragraph mentioning the .rnd\r\nfile, which is obsolete in 1.1.1 since the RANDFILE entry was\r\nremoved from openssl.cnf in commit 1fd6afb571e8.\r\n\r\nAlso borrow some text from 'openssl(1)/Random State Options'\r\non master (commit a397aca43598) to emphasize that it is not\r\nnecessary anymore to restore and save the RNG state using the\r\n'-rand' and '-writerand' options.\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11251)\r\n\r\n* doc: Update the reference from draft to RFC\r\n\r\nCLA: trivial\r\n\r\nSigned-off-by: Jakub Jelen <jjelen@redhat.com>\r\n\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11299)\r\n\r\n(cherry picked from commit c08dea30d4d127412097b39d9974ba6090041a7c)\r\n\r\n* Additional updates to SSL_CTX_sess_set_get_cb.pod\r\n\r\nGenerally modernize the language.\r\n\r\nRefer to TLS instead of SSL/TLS, and try to have more consistent\r\nusage of commas and that/which.\r\n\r\nReword some descriptions to avoid implying that a list of potential\r\nreasons for behavior is an exhaustive list.\r\n\r\nClarify how get_session_cb() is only called on servers (i.e., in general,\r\nand that it's given the session ID proposed by the client).\r\n\r\nClarify the semantics of the get_cb()'s \"copy\" argument.\r\nThe behavior seems to have changed in commit\r\n8876bc054802b043a3ec95554b6c5873291770be, though the behavior prior\r\nto that commit was not to leave the reference-count unchanged if\r\n*copy was not written to -- instead, libssl seemed to assume that the\r\ncallback already had incremented the reference count.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10943)\r\n\r\n(cherry picked from commit 06f876837a8ec76b28c42953731a156c0c3700e2)\r\n\r\n* doc: fix spelling of TYPE_get_ex_new_index\r\n\r\nThe generated macros are TYPE_get_ex_new_index() (to match\r\nCRYPTO_get_ex_new_index()), not TYPE_get_new_ex_index(), even though\r\nthe latter spelling seems more natural.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10943)\r\n\r\n(cherry picked from commit fe41c06e69613b1a4814b3e3cdbf460f2678ec99)\r\n\r\n* Fix whitespace nit in ssl_generate_master_secret()\r\n\r\nUse a space after a comma.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10943)\r\n\r\n(cherry picked from commit 1866a0d380fc361d9be2ca0509de0f2281505db5)\r\n\r\n* Don't write to the session when computing TLS 1.3 keys\r\n\r\nTLS 1.3 maintains a separate keys chedule in the SSL object, but\r\nwas writing to the 'master_key_length' field in the SSL_SESSION\r\nwhen generating the per-SSL master_secret.  (The generate_master_secret\r\nSSL3_ENC_METHOD function needs an output variable for the master secret\r\nlength, but the TLS 1.3 implementation just uses the output size of\r\nthe handshake hash function to get the lengths, so the only natural-looking\r\nthing to use as the output length was the field in the session.\r\nThis would potentially involve writing to a SSL_SESSION object that was\r\nin the cache (i.e., resumed) and shared with other threads, though.\r\n\r\nThe thread-safety impact should be minimal, since TLS 1.3 requires the\r\nhash from the original handshake to be associated with the resumption\r\nPSK and used for the subsequent connection.  This means that (in the\r\nresumption case) the value being written would be the same value that was\r\npreviously there, so the only risk would be on architectures that can\r\nproduce torn writes/reads for aligned size_t values.\r\n\r\nSince the value is essentially ignored anyway, just provide the\r\naddress of a local dummy variable to generate_master_secret() instead.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10943)\r\n\r\n(cherry picked from commit d74014c4b8740f28a54b562f799ad1e754b517b9)\r\n\r\n* Code to thread-safety in ChangeCipherState\r\n\r\nThe server-side ChangeCipherState processing stores the new cipher\r\nin the SSL_SESSION object, so that the new state can be used if\r\nthis session gets resumed.  However, writing to the session is only\r\nthread-safe for initial handshakes, as at other times the session\r\nobject may be in a shared cache and in use by another thread at the\r\nsame time.  Reflect this invariant in the code by only writing to\r\ns->session->cipher when it is currently NULL (we do not cache sessions\r\nwith no cipher).  The code prior to this change would never actually\r\nchange the (non-NULL) cipher value in a session object, since our\r\nserver enforces that (pre-TLS-1.3) resumptions use the exact same\r\ncipher as the initial connection, and non-abbreviated renegotiations\r\nhave produced a new session object before we get to this point.\r\nRegardless, include logic to detect such a condition and abort the\r\nhandshake if it occurs, to avoid any risk of inadvertently using\r\nthe wrong cipher on a connection.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10943)\r\n\r\n(cherry picked from commit 2e3ec2e1578977fca830a47fd7f521e290540e6d)\r\n\r\n* Add test that changes ciphers on CCS\r\n\r\nThe TLS (pre-1.3) ChangeCipherState message is usually used to indicate\r\nthe switch from the unencrypted to encrypted part of the handshake.\r\nHowever, it can also be used in cases where there is an existing\r\nsession (such as during resumption handshakes) or when changing from\r\none cipher to a different one (such as during renegotiation when the\r\ncipher list offered by the client has changed).  This test serves\r\nto exercise such situations, allowing us to detect whether session\r\nobjects are being modified in cases when they must remain immutable\r\nfor thread-safety purposes.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10943)\r\n\r\n(cherry picked from commit 3cd14e5e65011660ad8e3603cf871c8366b565fd)\r\n\r\n* sslapitest: don't leak the SSL_CTX pair\r\n\r\nWe have no need for a new set of SSL_CTXs in test_ccs_change_cipher(), so\r\njust keep using the original ones.  Also, fix a typo in a comment.\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11336)\r\n\r\n(cherry picked from commit b3e6d666e351d45e93d29fe3813245b92a0f5815)\r\n\r\n* Update NEWS for the new release\r\n\r\nReviewed-by: Mark J. Cox <mark@awe.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11342)\r\n\r\n* Update CHANGES for the new release\r\n\r\nReviewed-by: Mark J. Cox <mark@awe.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11342)\r\n\r\n* Update copyright year\r\n\r\nReviewed-by: Paul Yang <kaishen.yy@antfin.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11344)\r\n\r\n* Prepare for 1.1.1e release\r\n\r\nReviewed-by: Paul Yang <kaishen.yy@antfin.com>\r\n\r\n* Prepare for 1.1.1f-dev\r\n\r\nReviewed-by: Paul Yang <kaishen.yy@antfin.com>\r\n\r\n* Add a parameter to probable_prime if we look for a safe prime\r\n\r\nCurrently probable_prime makes sure that p-1 does not have\r\nany prime factors from 3..17863, which is useful for safe primes,\r\nbut not necessarily for the general case.\r\n\r\nIssue was initially reported here:\r\nMIRONOV, I. Factoring RSA Moduli II.\r\nhttps://windowsontheory.org/2012/05/17/factoring-rsa-moduli-part-ii/\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/9387)\r\n\r\n* Merge probable_prime_dh_safe with bn_probable_prime_dh\r\n\r\nThis should avoid half of the trial divisions in probable_prime_dh_safe\r\nand avoid bn_probable_prime_dh generating primes with special properties.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/9387)\r\n\r\n* Update documentation of BN_generate_prime_ex\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/9387)\r\n\r\n* Add a CHANGES entry for BN_generate_prime_ex\r\n\r\nBN_generate_prime_ex no longer avoids factors 3..17863 in p-1\r\nwhen not computing safe primes.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/9387)\r\n\r\n* Coverity: fix two minor NPD issues.\r\nFound by Coverity.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tim Hudson <tjh@openssl.org>\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/8274)\r\n\r\n(cherry picked from commit 23dc8feba817560485da00d690d7b7b9e5b15682)\r\n\r\n* Fix error handling in x509v3_cache_extensions and related functions\r\n\r\nBasically we use EXFLAG_INVALID for all kinds of out of memory and\r\nall kinds of parse errors in x509v3_cache_extensions.\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10756)\r\n\r\n* Use ctx2 instead ctx.\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/11372)\r\n\r\n(cherry picked from commit 402b00d57921a0c8cd641b190d36bf39ea5fb592)\r\n\r\n* Partially revert \"Detect EOF while reading in libssl\"\r\n\r\nThis partially reverts commit db943f43a60d1b5b1277e4b5317e8f288e7a0a3a.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11400)\r\n\r\n* Document the revert of the proper reporting of an unexpected EOF\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11400)\r\n\r\n* fix generated Makefile for Windows builds made on *nix (1.1.1d)\r\n\r\nThe fix consists of putting all destination directories\r\nbetween double-quotes to make the default (and any custom)\r\nprefixes containing spaces to work when doing 'make install'.\r\n\r\nAlso enable CI test with x86 mingw cross-build.\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\n(Merged from https://github.com/openssl/openssl/pull/11434)\r\n\r\n* Update copyright year\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11445)\r\n\r\n* Prepare for 1.1.1f release\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Prepare for 1.1.1g-dev\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* [test] Make sm2_internal_test less fragile to changes in the ec module\r\n\r\nSince these are KATs, the trailing randomness consumed by the ec module\r\ndoes not really matter. So make the fake random buffer circular.\r\n\r\n(cherry picked from commit 09736245b174a37abb87fb7ceb55462d940ff2bb)\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\n(Merged from https://github.com/openssl/openssl/pull/11435)\r\n\r\n* [crypto/ec] Ladder tweaks\r\n\r\n- Convert to affine coords on ladder entry. This lets us use more efficient\r\n  ladder step formulae.\r\n\r\n- Convert to affine coords on ladder exit. This prevents the current code\r\n  awkwardness where conversion happens twice during serialization: first to\r\n  fetch the buffer size, then again to fetch the coords.\r\n\r\n- Instead of projectively blinding the input point, blind both accumulators\r\n  independently.\r\n\r\n(cherry picked from commit a4a93bbfb0e679eaa249f77c7c4e7e823ca870ef)\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\n(Merged from https://github.com/openssl/openssl/pull/11435)\r\n\r\n* Expand the XTS documentation\r\n\r\nExplain that XTS does not support streaming, and that the IV value is the\r\ntweak.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11461)\r\n\r\n(cherry picked from commit 70d80ef9898ddbe03841efd2df2f526b71829d7f)\r\n\r\n* Allow certificates with Basic Constraints CA:false, pathlen:0\r\n\r\nDo not mark such certificates with EXFLAG_INVALID although they\r\nviolate the RFC 5280, they are syntactically correct and\r\nopenssl itself can produce such certificates without any errors\r\nwith command such as:\r\n\r\nopenssl x509 -req -signkey private.pem -in csr.pem -out cert.pem \\\r\n  -extfile <(echo \"basicConstraints=CA:FALSE,pathlen:0\")\r\n\r\nWith the commit ba4356ae4002a04e28642da60c551877eea804f7 the\r\nEXFLAG_INVALID causes openssl to not consider such certificate\r\neven as leaf self-signed certificate which is breaking existing\r\ninstallations.\r\n\r\nFixes: #11456\r\n\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11463)\r\n\r\n(cherry picked from commit 428cf5ff83a48d0b51c97476586b2cbd053b6302)\r\n\r\n* Set X509_V_ERR_INVALID_EXTENSION error for invalid basic constraints\r\n\r\nIf we encounter certificate with basic constraints CA:false,\r\npathlen present and X509_V_FLAG_X509_STRICT is set we set\r\nX509_V_ERR_INVALID_EXTENSION error.\r\n\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11463)\r\n\r\n(cherry picked from commit fa86e2ee3533bb7fa9f3c62c38920cf960e9fec0)\r\n\r\n* Add test cases for the non CA certificate with pathlen:0\r\n\r\nAccept verification without -x509_strict and reject it with it.\r\n\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11463)\r\n\r\n(cherry picked from commit 3cb55fe47c3398b81956e4fe20c4004524d47519)\r\n\r\n* Ensure ECDSA_size always returns >= 0\r\n\r\nFixes #10484\r\n\r\nSigned-off-by: William Brawner <me@wbrawner.com>\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11472)\r\n\r\n* Fix the error handling in EC_POINTs_mul\r\n\r\nThis was pointed out by a false-positive\r\n-fsanitizer warning ;-)\r\n\r\nHowever from the cryptographical POV the\r\ncode is wrong:\r\nA point R^0 on the wrong curve\r\nis infinity on the wrong curve.\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11475)\r\n\r\n(cherry picked from commit 1eb9b54af7e00fa12196411964ce742ea8677766)\r\n\r\n* [crypto/ec] blind coordinates in ec_wNAF_mul for robustness\r\n\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\nReviewed-by: Nicola Tuveri <nicola.tuveri@ibm.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11439)\r\n\r\n(cherry picked from commit c61ced5ec50fc68707c7cea79f7df1d170f03f13)\r\n\r\n* Integer overflow in ASN1_STRING_set.\r\n\r\nAddressing a potential integer overflow condition.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11473)\r\n\r\n(cherry picked from commit 96218269f4c2da82f143727fb7697d572c190bc5)\r\n\r\n* AES CTR-DRGB: do not leak timing information\r\n\r\nSigned-off-by: Patrick Steuer <patrick.steuer@de.ibm.com>\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11147)\r\n\r\n(cherry picked from commit 069165d10646a22000c596095cc04d43bbf1f807)\r\n\r\n* Fix AES-CTR_DRBG on 1.1.1.\r\n\r\nThe backport of the timing information leak fix uses u32 which is defined\r\nin crypto/modes/modes_local.h in 1.1.1 and include/crypto/modes.h for 3.0.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11489)\r\n\r\n* Update RAND_METHOD definition in man page\r\n\r\nThe `add` and `seed` callbacks were changed to return `int` instead of\r\n`void` in b6dcdbfc94c482f6c15ba725754fc9e827e41851 (first included in\r\ntag OpenSSL_1_1_0-pre1).\r\n\r\nThe `add` callback was changed to take a `double` instead of an `int`\r\nin 853f757ecea74a271a7c5cdee3f3b5fe0d3ae863.\r\n\r\nCLA: trivial\r\nFixes: #10199\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11486)\r\n\r\n(cherry picked from commit ae3254287ff87e484c7fd8f757cad1440ee8f5ff)\r\n\r\n* Add manpage entry for X509_check_purpose()\r\n\r\nFixes #10263\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10301)\r\n\r\n(cherry picked from commit eacd30a703b52f5b3e8e70b58f99bd1128458c7c)\r\n\r\n* Don't compile commands if disabled\r\n\r\nRather than wrapping whole files in \"ifndef OPENSSL_NO_xxx\" we handle\r\nthe changes in build.info\r\n\r\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\n(Merged from https://github.com/openssl/openssl/pull/11518)\r\n\r\n* BIO_do_accept: correct error return value\r\n\r\n`BIO_do_accept` was returning incorrect values when unable to bind to a port.\r\n\r\nFixes #7717\r\nCLA: trivial\r\n\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11505)\r\n\r\n(cherry picked from commit 0437435a960123be1ced766d18d715f939698345)\r\n\r\n* Windows: Add type casting in CRYPTO_atomic_add to remove warning\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11337)\r\n\r\n(cherry picked from commit 7da7b27eec58d1efc7012f002c45ddbdd61a5e79)\r\n\r\n* INSTALL: document 'no-ui-console' rather than 'no-ui'\r\n\r\nThe UI interface itself is never disabled, but the console backend may\r\nbe. 'no-ui' is a deprecated backward compatibility alias for\r\n'no-ui-console'.\r\n\r\nFixes #11551\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11554)\r\n\r\n* s_time: Allow using -CAfile option as in other commands\r\n\r\nThe s_time command in difference from all the other similar\r\ncommands supported -cafile option instead of -CAfile.\r\nAdd the -CAfile option and keep -cafile only for backwards\r\ncompatibility.\r\n\r\nFixes #11552\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11555)\r\n\r\n* Add AES consttime code for no-asm configurations\r\n\r\nThis adds optional constant time support for AES\r\nwhen building openssl for no-asm.\r\n\r\nEnable with: ./config no-asm -DOPENSSL_AES_CONST_TIME\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11411)\r\n\r\n* Add a CHANGES entry for AES constant time\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11411)\r\n\r\n* Update CHANGES and NEWS for release of 1.1.1g\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Add test for CVE-2020-1967\r\n\r\nAdd to test_sslsigalgs a TLSProxy test that injects a\r\n\"signature_algorithms_cert\" extension that contains an unallocated\r\ncodepoint.\r\n\r\nThe test currently fails, since s_server segfaults instead of\r\nignoring the unrecognized value.\r\n\r\nSince \"signature_algorithms\" and \"signature_algorithms_cert\" are very\r\nsimilar, also add the analogous test for \"signature_algorithms\".\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n\r\n* Fix NULL dereference in SSL_check_chain() for TLS 1.3\r\n\r\nIn the tls1_check_sig_alg() helper function, we loop through the list of\r\n\"signature_algorithms_cert\" values received from the client and attempt\r\nto look up each one in turn in our internal table that maps wire\r\ncodepoint to string-form name, digest and/or signature NID, etc., in\r\norder to compare the signature scheme from the peer's list against what\r\nis used to sign the certificates in the certificate chain we're\r\nchecking.  Unfortunately, when the peer sends a value that we don't\r\nsupport, the lookup returns NULL, but we unconditionally dereference the\r\nlookup result for the comparison, leading to an application crash\r\ntriggerable by an unauthenticated client.\r\n\r\nSince we will not be able to say anything about algorithms we don't\r\nrecognize, treat NULL return from lookup as \"does not match\".\r\n\r\nWe currently only apply the \"signature_algorithm_cert\" checks on TLS 1.3\r\nconnections, so previous TLS versions are unaffected.  SSL_check_chain()\r\nis not called directly from libssl, but may be used by the application\r\ninside a callback (e.g., client_hello or cert callback) to verify that a\r\ncandidate certificate chain will be acceptable to the client.\r\n\r\nCVE-2020-1967\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n\r\n* Update copyright year\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Prepare for 1.1.1g release\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Prepare for 1.1.1h-dev\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\n\r\n* Add setter equivalents to X509_REQ_get0_signature\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/10563)\r\n\r\n(cherry picked from commit c72e59349f50ee00a1bf8605ada17dfccb8b3b1a)\r\n\r\n* [EC] Constify internal EC_KEY pointer usage\r\n\r\nA pair of internal functions related to EC_KEY handling could benefit\r\nfrom declaring `EC_KEY *` variables as `const`, providing clarity for\r\ncallers and readers of the code, in addition to enlisting the compiler\r\nin preventing some mistakes.\r\n\r\n(cherry picked from commit cd701de96a147260c2290d85af8a0656120a8ff8)\r\n\r\nIn master `id2_ECParameters` and most of the ASN1 public functions have\r\nbeen properly constified in their signature.\r\n\r\nUnfortunately this has been deemed not doable in a patch release for\r\n1.1.1 as, in subtle ways, this would break API compatibility.\r\nSee the discussion at https://github.com/openssl/openssl/pull/9347 for\r\nmore details about this.\r\n\r\nThis constification commit should still be portable w.r.t. our criteria,\r\nas the constification happens only on internal functions.\r\n\r\nThe fix here is to explicitly discard the const qualifier before the\r\ncall to `i2d_ECParameters`, which should be safe anyway because we can\r\nexpect `i2d_ECParameters()` to treat the first argument as if it was\r\nconst.\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11127)\r\n\r\n* [EC] harden EC_KEY against leaks from memory accesses\r\n\r\nWe should never leak the bit length of the secret scalar in the key,\r\nso we always set the `BN_FLG_CONSTTIME` flag on the internal `BIGNUM`\r\nholding the secret scalar.\r\n\r\nThis is important also because `BN_dup()` (and `BN_copy()`) do not\r\npropagate the `BN_FLG_CONSTTIME` flag from the source `BIGNUM`, and\r\nthis brings an extra risk of inadvertently losing the flag, even when\r\nthe called specifically set it.\r\n\r\nThe propagation has been turned on and off a few times in the past\r\nyears because in some conditions has shown unintended consequences in\r\nsome code paths, so at the moment we can't fix this in the BN layer.\r\n\r\nIn `EC_KEY_set_private_key()` we can work around the propagation by\r\nmanually setting the flag after `BN_dup()` as we know for sure that\r\ninside the EC module the `BN_FLG_CONSTTIME` is always treated\r\ncorrectly and should not generate unintended consequences.\r\n\r\nSetting the `BN_FLG_CONSTTIME` flag alone is never enough, we also have\r\nto preallocate the `BIGNUM` internal buffer to a fixed public size big\r\nenough that operations performed during the processing never trigger\r\na realloc which would leak the size of the scalar through memory\r\naccesses.\r\n\r\nFixed Length\r\n------------\r\n\r\nThe order of the large prime subgroup of the curve is our choice for\r\na fixed public size, as that is generally the upper bound for\r\ngenerating a private key in EC cryptosystems and should fit all valid\r\nsecret scalars.\r\n\r\nFor preallocating the `BIGNUM` storage we look at the number of \"words\"\r\nrequired for the internal representation of the order, and we\r\npreallocate 2 extra \"words\" in case any of the subsequent processing\r\nmight temporarily overflow the order length.\r\n\r\nFuture work\r\n-----------\r\n\r\nA separate commit addresses further hardening of `BN_copy()` (and\r\nindirectly `BN_dup()`).\r\n\r\n(cherry picked from commit 0401d766afcd022748763f5614188301c9856c6e)\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11127)\r\n\r\n* [BN] harden `BN_copy()` against leaks from memory accesses\r\n\r\n`BN_copy()` (and indirectly `BN_dup()`) do not propagate the\r\n`BN_FLG_CONSTTIME` flag: the propagation has been turned on and off a\r\nfew times in the past years, because in some conditions it has shown\r\nunintended consequences in some code paths.\r\n\r\nWithout turning the propagation on once more, we can still improve\r\n`BN_copy()` by avoiding to leak `src->top` in case `src` is flagged with\r\n`BN_FLG_CONSTTIME`.\r\nIn this case we can instead use `src->dmax` as the number of words\r\nallocated for `dst` and for the `memcpy` operation.\r\n\r\nBarring compiler or runtime optimizations, if the caller provides `src`\r\nflagged as const time and preallocated to a public size, no leak should\r\nhappen due to the copy operation.\r\n\r\n(cherry picked from commit 2d9167ed0b588dacbdd0303fb6041ffe1d8b3a92)\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11127)\r\n\r\n* Fix typo from #10631\r\n\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\nReviewed-by: Shane Lontis <shane.lontis@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11595)\r\n\r\n(cherry picked from commit 4692e98bdbaebb6f078e89a75c54395839e68b24)\r\n\r\n* Fix type cast in SSL_CTX_set1_groups macro\r\n\r\nThe macro casts the glist parameter to char*\r\ninstead of (int *) like the documentation of the function suggest.\r\n\r\nAlso the function tls1_set_groups that is called from SSL_CTX_ctrl\r\ntakes an int * argument. This looks like a copy&paste error from\r\nSSL_CTX_set1_groups_list function.\r\n\r\nCLA: trivial\r\nSigned-off-by: Arne Schwabe <arne@rfc2549.org>\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11614)\r\n\r\n(cherry picked from commit 7ffce852372799b6cd856b711db21332f0048314)\r\n\r\n* i2b_PVK_bio: don't set PEM_R_BIO_WRITE_FAILURE in case of success\r\n\r\nbut in case of an error\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11380)\r\n\r\n(cherry picked from commit 80b94a5adb461f94629d36db351a051b0a890856)\r\n\r\n* fuzz/asn1.c: Add missing #include\r\n\r\n<openssl/dsa.h> gets included via ts.h...  except when 'no-ts' has been\r\nconfigured.\r\n\r\nFixes #11597\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11640)\r\n\r\n(cherry picked from commit 60ebc0ca5a829e2ae939a9ab13658af202b6dfc7)\r\n\r\n* sslapitest: only compile test when it will be used\r\n\r\nThe test_ccs_change_cipher() test routine is used only when TLS 1.2\r\nis enabled; to fix the strict-warnings build we should not try to\r\ncompile it when TLS 1.2 is disabled, either.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11458)\r\n\r\n(cherry picked from commit fb121631e702352d47049ac8e2e709b11c3318e4)\r\n\r\n* Update dgst.pod\r\n\r\nRemoved \"Use the B<pkeyutl> command instead for this.\" from lines 97-98\r\nFixes #11633\r\n\r\nCLA: trivial\r\n\r\nReviewed-by: Nicola Tuveri <nic.tuv@gmail.com>\r\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\n(Merged from https://github.com/openssl/openssl/pull/11636)\r\n\r\n* rand_unix.c: Include correct headers for sysctl() on NetBSD\r\n\r\nThis allows sysctl(KERN_ARND) to be detected properly.\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11689)\r\n\r\n(cherry picked from commit e2e4b784e65eaafb133a7db3d344446c43112d41)\r\n\r\n* rand_unix.c: Only enable hack for old FreeBSD versions on FreeBSD\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11689)\r\n\r\n(cherry picked from commit 0c27ce7322e15a7e0733d48aaf9c8e1d1249541f)\r\n\r\n* rand_unix.c: Ensure requests to KERN_ARND don't exceed 256 bytes.\r\n\r\nRequests for more than 256 bytes will fail.\r\n\r\nReviewed-by: Paul Dale <paul.dale@oracle.com>\r\nReviewed-by: Matt Caswell <matt@openssl.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11689)\r\n\r\n(cherry picked from commit 7421f085005e0d7a1dd2fe61b991ff23cef91c22)\r\n\r\n* Improve SSL_shutdown documentation.\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11531)\r\n\r\n(cherry picked from commit e307e616f25a6b7b0f343fc1e62a35b2cba888f3)\r\n\r\n* Fix use-after-free in BIO_C_SET_SSL callback\r\n\r\nSince the BIO_SSL structure was renewed by `ssl_free(b)/ssl_new(b)`,\r\nthe `bs` pointer needs to be updated before assigning to `bs->ssl`.\r\n\r\nThanks to @suishixingkong for reporting the issue and providing a fix.\r\n\r\nCloses #10539\r\n\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11746)\r\n\r\n(cherry picked from commit 73d6b4efe6835a6c97ce61df6bf339b0903e5b7a)\r\n\r\n* Remove AES bitsliced S-box implementation from Boyar and Peralta\r\n\r\n[extended tests]\r\n\r\nReviewed-by: Richard Levitte <levitte@openssl.org>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\n(Merged from https://github.com/openssl/openssl/pull/11626)\r\n\r\n* Fix PEM certificate loading that sometimes fails\r\n\r\nAs described in https://github.com/openssl/openssl/issues/9187, the\r\nloading of PEM certificates sometimes fails if a line of base64\r\ncontent has the length of a multiple of 254.\r\nThe problem is in get_header_and_data(). When such a line with a\r\nlength of 254 (or a multiple) has been read, the next read will\r\nonly read a newline. Due to this get_header_and_data() expects to be\r\nin the header not in the data area. This commit fixes that by checking\r\nif lines have been read completely or only partially. In case of a\r\nprevious partial read, a newline will be ignored.\r\n\r\nReviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>\r\nReviewed-by: Tomas Mraz <tmraz@fedoraproject.org>\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/11741)\r\n\r\n(cherry picked from commit 0324ffc5d5d393111288eca2c9d67f2141ed65f5)\r\n\r\n* Replace misleading error message when loading PEM\r\n\r\nThe error message \"short header\" when the end line\r\nof PEM data cannot be identified is misleading.\r\nReplace it with already existing \"bad end line\" error.\r\n\r\nFixes #8815\r\n\r\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\r\n(Merged from https://github.com/openssl/openssl/pull/11793)\r\n\r\n(cherry picked from commit f523ca66612e6712f287aa4b4ed722a5f2d4d960)\r\n\r\n* Fix rsa8192.pem\r\n\r\nQ: How did I do that?\r\n\r\nA: That's a long story.\r\n\r\nPrecondition: I used sage 8.1 for the math, it could probably\r\ndone with simple python as well but I did not try.\r\n\r\nFirst I extract numbers from rsa8192.pem:\r\n\r\nopenssl rsa -in rsa8192.pem -noout -t…","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssl/commits/b7e7111fdd56bddc620096c663cfc03b10f3f417"}]},"public":true,"created_at":"2020-10-07T15:36:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"13767400200","type":"PushEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"push_id":5814728552,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"6edb0fea7d2ce414e66af0f32b310fec487b61b4","before":"d15e72545e5a7398007161385b64249b6500d53f","commits":[{"sha":"6edb0fea7d2ce414e66af0f32b310fec487b61b4","author":{"name":"Goutam Tamvada","email":"0d09a926d00eb6e4de1be873a121117412a307d0@users.noreply.github.com"},"message":"Overhauled OQS test suite. (#32)","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/boringssl/commits/6edb0fea7d2ce414e66af0f32b310fec487b61b4"}]},"public":true,"created_at":"2020-10-07T15:41:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"13767437822","type":"PushEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":288761656,"name":"open-quantum-safe/speed","url":"https://api.github.com/repos/open-quantum-safe/speed"},"payload":{"push_id":5814746177,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"be56046c4048a5d3ff0e4e862b4d79501a9550c9","before":"909dafb30d817cdb9f0521e2bb64d4a00b19e612","commits":[{"sha":"be56046c4048a5d3ff0e4e862b4d79501a9550c9","author":{"name":"Michael Baentsch","email":"89a7750c63a2a70a7f0f74740e03cfc4501a2bdb@users.noreply.github.com"},"message":"visualization v0.1 (#7)\n\n* visualization v0.1\r\n\r\n* all improvements of for issue #5 in speed_kem","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/speed/commits/be56046c4048a5d3ff0e4e862b4d79501a9550c9"}]},"public":true,"created_at":"2020-10-07T15:44:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
