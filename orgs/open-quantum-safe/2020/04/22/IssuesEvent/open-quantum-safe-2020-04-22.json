{"id":"12126231098","type":"IssuesEvent","actor":{"id":35571346,"login":"martinschmatz","display_login":"martinschmatz","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","avatar_url":"https://avatars.githubusercontent.com/u/35571346?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/172","id":604902175,"node_id":"MDU6SXNzdWU2MDQ5MDIxNzU=","number":172,"title":"Re-enable KEMs","user":{"login":"martinschmatz","id":35571346,"node_id":"MDQ6VXNlcjM1NTcxMzQ2","avatar_url":"https://avatars2.githubusercontent.com/u/35571346?v=4","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","html_url":"https://github.com/martinschmatz","followers_url":"https://api.github.com/users/martinschmatz/followers","following_url":"https://api.github.com/users/martinschmatz/following{/other_user}","gists_url":"https://api.github.com/users/martinschmatz/gists{/gist_id}","starred_url":"https://api.github.com/users/martinschmatz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinschmatz/subscriptions","organizations_url":"https://api.github.com/users/martinschmatz/orgs","repos_url":"https://api.github.com/users/martinschmatz/repos","events_url":"https://api.github.com/users/martinschmatz/events{/privacy}","received_events_url":"https://api.github.com/users/martinschmatz/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-22T16:41:37Z","updated_at":"2020-04-22T16:41:37Z","closed_at":null,"author_association":"NONE","body":"With one of the recent merges, the list of default KEMs was significantly reduced (commit ddc21b0e18cf0f0662be0ec8a3bee2df26e49ab8). \r\n\r\nWhile there are ways to specify non-default KEM for openssl s_client/server, this causes issues for situations where the curve can not be explicitly specified (e.g. cURL) but has to rely on whatever OpenSSL API exposes as defaults.\r\n\r\nMay I therefore suggest to use a slightly different approach than just brute-force disabling: I'd like to propose the use of build defines to allow a fine grain selection of which KEM alg is enabled and which is not. \r\n\r\nIn ` ssl/t1_lib.c`:\r\n(A) For each KEM which should be enabled by default, use:\r\n```\r\n#ifndef no_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n(B) For all other KEMs, use\r\n```\r\n#ifdef with_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n`<KEX>` obviously would be a KEM name, like `kyber1024` or `p256_newhope512cca`. `0xabcd` is the placeholder for the related KEM 16-bit code. \r\n\r\nTo keep the code readable, a further layer of define wrappings is proposed to be used to wrap the two defines above into a one-liner each, like so: \r\n```\r\n#define check_disable_KEM(code, name) ... /* for the KEMs enabled by default */\r\n#define check_enable_KEM(code, name) ... /* for the KEMs disabled by default */\r\n```\r\nDuring build, one can simply add (just as examples) `-Dno_p256_kyber512` and/or `-Dwith_kyber1024`.\r\n\r\nAnything that speaks against such an approach? \r\n\r\nI'm fully aware of the desire of the OQS team to have control over available KEMs and that long default lists can lead to ussues. \r\nOn the other hand, OpenSSL also allows enabling/disabling algos during build time - and I do have an issue now being unable to use kyber1024 in my test environment. \r\n\r\n"}},"public":true,"created_at":"2020-04-22T16:41:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
