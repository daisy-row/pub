{"id":"12099815152","type":"IssueCommentEvent","actor":{"id":62378642,"login":"bpriya8711","display_login":"bpriya8711","gravatar_id":"","url":"https://api.github.com/users/bpriya8711","avatar_url":"https://avatars.githubusercontent.com/u/62378642?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/13","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/13/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/13/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/13/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/13","id":584183142,"node_id":"MDU6SXNzdWU1ODQxODMxNDI=","number":13,"title":"Re-activate OSX docker building when supported by CircleCI","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-19T06:02:18Z","updated_at":"2020-04-20T12:50:52Z","closed_at":null,"author_association":"MEMBER","body":"As of now (Mar 2020) CircleCI does not support building current OSX docker images, so CCI config needs to be updated if that capability is available again."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/616531778","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/13#issuecomment-616531778","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/13","id":616531778,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjUzMTc3OA==","user":{"login":"bpriya8711","id":62378642,"node_id":"MDQ6VXNlcjYyMzc4NjQy","avatar_url":"https://avatars2.githubusercontent.com/u/62378642?v=4","gravatar_id":"","url":"https://api.github.com/users/bpriya8711","html_url":"https://github.com/bpriya8711","followers_url":"https://api.github.com/users/bpriya8711/followers","following_url":"https://api.github.com/users/bpriya8711/following{/other_user}","gists_url":"https://api.github.com/users/bpriya8711/gists{/gist_id}","starred_url":"https://api.github.com/users/bpriya8711/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpriya8711/subscriptions","organizations_url":"https://api.github.com/users/bpriya8711/orgs","repos_url":"https://api.github.com/users/bpriya8711/repos","events_url":"https://api.github.com/users/bpriya8711/events{/privacy}","received_events_url":"https://api.github.com/users/bpriya8711/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T12:50:52Z","updated_at":"2020-04-20T12:50:52Z","author_association":"NONE","body":"Hi \r\nI am new to this. I am working with curl. I want to know after executing \"curl https://localhost:4433\" command, will I be able to see data in browser or the data will be shown in cmd only. Please guide me"}},"public":true,"created_at":"2020-04-20T12:50:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12099938510","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/594","id":555115211,"node_id":"MDU6SXNzdWU1NTUxMTUyMTE=","number":594,"title":"Add options for iOS and Android cross-compilation","user":{"login":"nicholasfulton","id":28460918,"node_id":"MDQ6VXNlcjI4NDYwOTE4","avatar_url":"https://avatars1.githubusercontent.com/u/28460918?v=4","gravatar_id":"","url":"https://api.github.com/users/nicholasfulton","html_url":"https://github.com/nicholasfulton","followers_url":"https://api.github.com/users/nicholasfulton/followers","following_url":"https://api.github.com/users/nicholasfulton/following{/other_user}","gists_url":"https://api.github.com/users/nicholasfulton/gists{/gist_id}","starred_url":"https://api.github.com/users/nicholasfulton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicholasfulton/subscriptions","organizations_url":"https://api.github.com/users/nicholasfulton/orgs","repos_url":"https://api.github.com/users/nicholasfulton/repos","events_url":"https://api.github.com/users/nicholasfulton/events{/privacy}","received_events_url":"https://api.github.com/users/nicholasfulton/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2020-01-25T17:54:31Z","updated_at":"2020-04-20T13:02:53Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"I'm attempting to build liboqs for both iOS and Android for a Xamarin.Forms project, and haven't been able to manipulate the included build and configuration files to make that work. If it would be possible, add configuration or documentation to help with cross-compiling the library for iOS and Android, ideally targeting multiple processor configurations. Thanks!"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/616538300","html_url":"https://github.com/open-quantum-safe/liboqs/issues/594#issuecomment-616538300","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594","id":616538300,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjUzODMwMA==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T13:02:53Z","updated_at":"2020-04-20T13:02:53Z","author_association":"MEMBER","body":"The error is due to [this commit](https://github.com/open-quantum-safe/liboqs/commit/8950275409f163f50af46b882c2f950674f2d0ac) introduced by me. I can fix it in an upcoming PR, or @nicholasfulton perhaps you could fix it as part of your work on setting up a CI workflow for Android?"}},"public":true,"created_at":"2020-04-20T13:02:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12102380278","type":"IssueCommentEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727","id":602112008,"node_id":"MDU6SXNzdWU2MDIxMTIwMDg=","number":727,"title":"Cross-compiling for Windows on Linux broken by search for pthreads","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-04-17T16:59:52Z","updated_at":"2020-04-20T16:36:14Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"The CMake configuration process now appears to look for pthreads, and cross-compiling a test application for Windows that attempts to call `pthread_create` fails, and rightly so, since pthreads isn't native on Windows. Here's the output of running CMake:\r\n\r\n```\r\nkkane@kkane-linux:/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win$ cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../.CMake/toolchain_windows-amd64.cmake -DCMAKE_INSTALL_PREFIX=/tmp/openssl/oqs ..\r\n-- The C compiler identification is GNU 7.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\nCMake Error: TRY_RUN() invoked in cross-compiling mode, please set the following cache variables appropriately:\r\n   RUN_RESULT (advanced)\r\n   RUN_RESULT__TRYRUN_OUTPUT (advanced)\r\nFor details see /tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/TryRunResults.cmake\r\nCMake Error at .CMake/gcc_clang_intrinsics.cmake:6 (message):\r\n  .CMake/detect_gcc_clang_intrinsics.c returned exit code:\r\n  PLEASE_FILL_OUT-FAILED_TO_RUN\r\nCall Stack (most recent call first):\r\n  .CMake/compiler_opts.cmake:65 (include)\r\n  CMakeLists.txt:40 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeError.log\".\r\n```\r\n\r\nTip of master branch is 8950275409f163f50af46b882c2f950674f2d0ac.\r\n\r\nAnd here are the two output logs:\r\n[CMakeOutput.log](https://github.com/open-quantum-safe/liboqs/files/4494233/CMakeOutput.log)\r\n[CMakeError.log](https://github.com/open-quantum-safe/liboqs/files/4494234/CMakeError.log)\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/616669869","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727#issuecomment-616669869","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","id":616669869,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjY2OTg2OQ==","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T16:36:14Z","updated_at":"2020-04-20T16:36:14Z","author_association":"CONTRIBUTOR","body":"In cross-compilation scenarios, there's no expectation the build host would be able to run any executables built for the target. Going down this path implies no longer supporting any cross-compilation scenarios. Is that acceptable?\r\n\r\nTurning off `OQS_USE_CPU_EXTENSIONS` might be acceptable, depending on what if any performance penalty is incurred by doing so."}},"public":true,"created_at":"2020-04-20T16:36:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12102510142","type":"IssueCommentEvent","actor":{"id":58735248,"login":"gadoofou87","display_login":"gadoofou87","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","avatar_url":"https://avatars.githubusercontent.com/u/58735248?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727","id":602112008,"node_id":"MDU6SXNzdWU2MDIxMTIwMDg=","number":727,"title":"Cross-compiling for Windows on Linux broken by search for pthreads","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-04-17T16:59:52Z","updated_at":"2020-04-20T16:48:52Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"The CMake configuration process now appears to look for pthreads, and cross-compiling a test application for Windows that attempts to call `pthread_create` fails, and rightly so, since pthreads isn't native on Windows. Here's the output of running CMake:\r\n\r\n```\r\nkkane@kkane-linux:/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win$ cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../.CMake/toolchain_windows-amd64.cmake -DCMAKE_INSTALL_PREFIX=/tmp/openssl/oqs ..\r\n-- The C compiler identification is GNU 7.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\nCMake Error: TRY_RUN() invoked in cross-compiling mode, please set the following cache variables appropriately:\r\n   RUN_RESULT (advanced)\r\n   RUN_RESULT__TRYRUN_OUTPUT (advanced)\r\nFor details see /tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/TryRunResults.cmake\r\nCMake Error at .CMake/gcc_clang_intrinsics.cmake:6 (message):\r\n  .CMake/detect_gcc_clang_intrinsics.c returned exit code:\r\n  PLEASE_FILL_OUT-FAILED_TO_RUN\r\nCall Stack (most recent call first):\r\n  .CMake/compiler_opts.cmake:65 (include)\r\n  CMakeLists.txt:40 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeError.log\".\r\n```\r\n\r\nTip of master branch is 8950275409f163f50af46b882c2f950674f2d0ac.\r\n\r\nAnd here are the two output logs:\r\n[CMakeOutput.log](https://github.com/open-quantum-safe/liboqs/files/4494233/CMakeOutput.log)\r\n[CMakeError.log](https://github.com/open-quantum-safe/liboqs/files/4494234/CMakeError.log)\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/616677575","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727#issuecomment-616677575","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","id":616677575,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjY3NzU3NQ==","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T16:48:52Z","updated_at":"2020-04-20T16:48:52Z","author_association":"CONTRIBUTOR","body":"> Going down this path implies no longer supporting any cross-compilation scenarios.\r\nWhat makes you think that? See point 1 in my previous message, it solves the problem completely. "}},"public":true,"created_at":"2020-04-20T16:48:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12102618372","type":"IssueCommentEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727","id":602112008,"node_id":"MDU6SXNzdWU2MDIxMTIwMDg=","number":727,"title":"Cross-compiling for Windows on Linux broken by search for pthreads","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-04-17T16:59:52Z","updated_at":"2020-04-20T16:59:34Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"The CMake configuration process now appears to look for pthreads, and cross-compiling a test application for Windows that attempts to call `pthread_create` fails, and rightly so, since pthreads isn't native on Windows. Here's the output of running CMake:\r\n\r\n```\r\nkkane@kkane-linux:/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win$ cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../.CMake/toolchain_windows-amd64.cmake -DCMAKE_INSTALL_PREFIX=/tmp/openssl/oqs ..\r\n-- The C compiler identification is GNU 7.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\nCMake Error: TRY_RUN() invoked in cross-compiling mode, please set the following cache variables appropriately:\r\n   RUN_RESULT (advanced)\r\n   RUN_RESULT__TRYRUN_OUTPUT (advanced)\r\nFor details see /tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/TryRunResults.cmake\r\nCMake Error at .CMake/gcc_clang_intrinsics.cmake:6 (message):\r\n  .CMake/detect_gcc_clang_intrinsics.c returned exit code:\r\n  PLEASE_FILL_OUT-FAILED_TO_RUN\r\nCall Stack (most recent call first):\r\n  .CMake/compiler_opts.cmake:65 (include)\r\n  CMakeLists.txt:40 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeError.log\".\r\n```\r\n\r\nTip of master branch is 8950275409f163f50af46b882c2f950674f2d0ac.\r\n\r\nAnd here are the two output logs:\r\n[CMakeOutput.log](https://github.com/open-quantum-safe/liboqs/files/4494233/CMakeOutput.log)\r\n[CMakeError.log](https://github.com/open-quantum-safe/liboqs/files/4494234/CMakeError.log)\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/616684154","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727#issuecomment-616684154","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","id":616684154,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjY4NDE1NA==","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T16:59:34Z","updated_at":"2020-04-20T16:59:34Z","author_association":"CONTRIBUTOR","body":"I think installing wine is a heavyweight requirement to introduce to do a build, but regardless, that only solves the problem for Windows. If I try to run cmake with the Raspberry Pi toolchain, I get a similar error with it failing to build an executable looking for `pthread_create`. If the problem is that cmake isn't able to run executables, isn't this potentially a problem for cross-compiling to ARM as well?"}},"public":true,"created_at":"2020-04-20T16:59:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12102764256","type":"IssueCommentEvent","actor":{"id":58735248,"login":"gadoofou87","display_login":"gadoofou87","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","avatar_url":"https://avatars.githubusercontent.com/u/58735248?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727","id":602112008,"node_id":"MDU6SXNzdWU2MDIxMTIwMDg=","number":727,"title":"Cross-compiling for Windows on Linux broken by search for pthreads","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-04-17T16:59:52Z","updated_at":"2020-04-20T17:14:06Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"The CMake configuration process now appears to look for pthreads, and cross-compiling a test application for Windows that attempts to call `pthread_create` fails, and rightly so, since pthreads isn't native on Windows. Here's the output of running CMake:\r\n\r\n```\r\nkkane@kkane-linux:/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win$ cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../.CMake/toolchain_windows-amd64.cmake -DCMAKE_INSTALL_PREFIX=/tmp/openssl/oqs ..\r\n-- The C compiler identification is GNU 7.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\nCMake Error: TRY_RUN() invoked in cross-compiling mode, please set the following cache variables appropriately:\r\n   RUN_RESULT (advanced)\r\n   RUN_RESULT__TRYRUN_OUTPUT (advanced)\r\nFor details see /tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/TryRunResults.cmake\r\nCMake Error at .CMake/gcc_clang_intrinsics.cmake:6 (message):\r\n  .CMake/detect_gcc_clang_intrinsics.c returned exit code:\r\n  PLEASE_FILL_OUT-FAILED_TO_RUN\r\nCall Stack (most recent call first):\r\n  .CMake/compiler_opts.cmake:65 (include)\r\n  CMakeLists.txt:40 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeError.log\".\r\n```\r\n\r\nTip of master branch is 8950275409f163f50af46b882c2f950674f2d0ac.\r\n\r\nAnd here are the two output logs:\r\n[CMakeOutput.log](https://github.com/open-quantum-safe/liboqs/files/4494233/CMakeOutput.log)\r\n[CMakeError.log](https://github.com/open-quantum-safe/liboqs/files/4494234/CMakeError.log)\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/616692987","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727#issuecomment-616692987","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","id":616692987,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjY5Mjk4Nw==","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T17:14:06Z","updated_at":"2020-04-20T17:14:06Z","author_association":"CONTRIBUTOR","body":"> If the problem is that cmake isn't able to run executables, isn't this potentially a problem for cross-compiling to ARM as well?\r\n\r\nCross-compiling an optimized version of a library for a non-host architecture is not possible. Detecting CPU features in runtime should solve this problem, but it has not yet been implemented (https://github.com/open-quantum-safe/liboqs/issues/624). At this moment, I recommend disabling the optimized build when using cross-compiling.\r\n"}},"public":true,"created_at":"2020-04-20T17:14:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12103419864","type":"IssueCommentEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727","id":602112008,"node_id":"MDU6SXNzdWU2MDIxMTIwMDg=","number":727,"title":"Cross-compiling for Windows on Linux broken by search for pthreads","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-04-17T16:59:52Z","updated_at":"2020-04-20T18:21:56Z","closed_at":"2020-04-20T18:21:57Z","author_association":"CONTRIBUTOR","body":"The CMake configuration process now appears to look for pthreads, and cross-compiling a test application for Windows that attempts to call `pthread_create` fails, and rightly so, since pthreads isn't native on Windows. Here's the output of running CMake:\r\n\r\n```\r\nkkane@kkane-linux:/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win$ cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../.CMake/toolchain_windows-amd64.cmake -DCMAKE_INSTALL_PREFIX=/tmp/openssl/oqs ..\r\n-- The C compiler identification is GNU 7.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\nCMake Error: TRY_RUN() invoked in cross-compiling mode, please set the following cache variables appropriately:\r\n   RUN_RESULT (advanced)\r\n   RUN_RESULT__TRYRUN_OUTPUT (advanced)\r\nFor details see /tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/TryRunResults.cmake\r\nCMake Error at .CMake/gcc_clang_intrinsics.cmake:6 (message):\r\n  .CMake/detect_gcc_clang_intrinsics.c returned exit code:\r\n  PLEASE_FILL_OUT-FAILED_TO_RUN\r\nCall Stack (most recent call first):\r\n  .CMake/compiler_opts.cmake:65 (include)\r\n  CMakeLists.txt:40 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeError.log\".\r\n```\r\n\r\nTip of master branch is 8950275409f163f50af46b882c2f950674f2d0ac.\r\n\r\nAnd here are the two output logs:\r\n[CMakeOutput.log](https://github.com/open-quantum-safe/liboqs/files/4494233/CMakeOutput.log)\r\n[CMakeError.log](https://github.com/open-quantum-safe/liboqs/files/4494234/CMakeError.log)\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/616728813","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727#issuecomment-616728813","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","id":616728813,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNjcyODgxMw==","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"created_at":"2020-04-20T18:21:56Z","updated_at":"2020-04-20T18:21:56Z","author_association":"CONTRIBUTOR","body":"Alright, that's fair. I'll disable the CPU_FEATURES in the cross-compile build. Thanks!"}},"public":true,"created_at":"2020-04-20T18:21:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
