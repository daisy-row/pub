{"id":"12164343136","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/17","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/17/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/17/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/17","id":605376786,"node_id":"MDU6SXNzdWU2MDUzNzY3ODY=","number":17,"title":"Create curl patch to explicitly enable 'curves'","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"assignees":[{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-04-23T09:21:41Z","updated_at":"2020-04-27T04:46:26Z","closed_at":"2020-04-27T04:46:26Z","author_association":"MEMBER","body":"Working around default algorithm list reduction & enabling same capabilities as in nginx and apache httpd."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/619714442","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/17#issuecomment-619714442","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/17","id":619714442,"node_id":"MDEyOklzc3VlQ29tbWVudDYxOTcxNDQ0Mg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T04:46:26Z","updated_at":"2020-04-27T04:46:26Z","author_association":"MEMBER","body":"Implemented with PR #18 "}},"public":true,"created_at":"2020-04-27T04:46:26Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12166645084","type":"IssueCommentEvent","actor":{"id":35571346,"login":"martinschmatz","display_login":"martinschmatz","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","avatar_url":"https://avatars.githubusercontent.com/u/35571346?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/172","id":604902175,"node_id":"MDU6SXNzdWU2MDQ5MDIxNzU=","number":172,"title":"Re-enable KEMs","user":{"login":"martinschmatz","id":35571346,"node_id":"MDQ6VXNlcjM1NTcxMzQ2","avatar_url":"https://avatars2.githubusercontent.com/u/35571346?v=4","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","html_url":"https://github.com/martinschmatz","followers_url":"https://api.github.com/users/martinschmatz/followers","following_url":"https://api.github.com/users/martinschmatz/following{/other_user}","gists_url":"https://api.github.com/users/martinschmatz/gists{/gist_id}","starred_url":"https://api.github.com/users/martinschmatz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinschmatz/subscriptions","organizations_url":"https://api.github.com/users/martinschmatz/orgs","repos_url":"https://api.github.com/users/martinschmatz/repos","events_url":"https://api.github.com/users/martinschmatz/events{/privacy}","received_events_url":"https://api.github.com/users/martinschmatz/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-04-22T16:41:37Z","updated_at":"2020-04-27T09:34:49Z","closed_at":null,"author_association":"NONE","body":"With one of the recent merges, the list of default KEMs was significantly reduced (commit ddc21b0e18cf0f0662be0ec8a3bee2df26e49ab8). \r\n\r\nWhile there are ways to specify non-default KEM for openssl s_client/server, this causes issues for situations where the curve can not be explicitly specified (e.g. cURL) but has to rely on whatever OpenSSL API exposes as defaults.\r\n\r\nMay I therefore suggest to use a slightly different approach than just brute-force disabling: I'd like to propose the use of build defines to allow a fine grain selection of which KEM alg is enabled and which is not. \r\n\r\nIn ` ssl/t1_lib.c`:\r\n(A) For each KEM which should be enabled by default, use:\r\n```\r\n#ifndef no_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n(B) For all other KEMs, use\r\n```\r\n#ifdef with_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n`<KEX>` obviously would be a KEM name, like `kyber1024` or `p256_newhope512cca`. `0xabcd` is the placeholder for the related KEM 16-bit code. \r\n\r\nTo keep the code readable, a further layer of define wrappings is proposed to be used to wrap the two defines above into a one-liner each, like so: \r\n```\r\n#define check_disable_KEM(code, name) ... /* for the KEMs enabled by default */\r\n#define check_enable_KEM(code, name) ... /* for the KEMs disabled by default */\r\n```\r\nDuring build, one can simply add (just as examples) `-Dno_p256_kyber512` and/or `-Dwith_kyber1024`.\r\n\r\nAnything that speaks against such an approach? \r\n\r\nI'm fully aware of the desire of the OQS team to have control over available KEMs and that long default lists can lead to ussues. \r\nOn the other hand, OpenSSL also allows enabling/disabling algos during build time - and I do have an issue now being unable to use kyber1024 in my test environment. \r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/619859079","html_url":"https://github.com/open-quantum-safe/openssl/issues/172#issuecomment-619859079","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172","id":619859079,"node_id":"MDEyOklzc3VlQ29tbWVudDYxOTg1OTA3OQ==","user":{"login":"martinschmatz","id":35571346,"node_id":"MDQ6VXNlcjM1NTcxMzQ2","avatar_url":"https://avatars2.githubusercontent.com/u/35571346?v=4","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","html_url":"https://github.com/martinschmatz","followers_url":"https://api.github.com/users/martinschmatz/followers","following_url":"https://api.github.com/users/martinschmatz/following{/other_user}","gists_url":"https://api.github.com/users/martinschmatz/gists{/gist_id}","starred_url":"https://api.github.com/users/martinschmatz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinschmatz/subscriptions","organizations_url":"https://api.github.com/users/martinschmatz/orgs","repos_url":"https://api.github.com/users/martinschmatz/repos","events_url":"https://api.github.com/users/martinschmatz/events{/privacy}","received_events_url":"https://api.github.com/users/martinschmatz/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T09:34:49Z","updated_at":"2020-04-27T09:34:49Z","author_association":"NONE","body":"Just FYI (read: adding it here in case somebody else could benefit): \r\nThe default list of curves seems to be generated using scripting. Therefore, rather than using the above described approach using defines, I'm using for the time being...\r\n\r\n`sed -i  '/static const uint16_t eccurves_default/ a 0x0211, /* OQS kyber1024 */' ssl/t1_lib.c`\r\n\r\n... right before `make`-ing OQS OpenSSL to re-add `kyber1024` to the (very top of the) list of default curves. \r\n\r\n`kyber1024` is just used as an example above - one can obviously add any other curve(s) to the default list of curves as well, hybrid or not, oqs or not, by just adding the corresponding 16-bit curveID(s) plus a comma. Hence ...\r\n`sed -i  '/static const uint16_t eccurves_default/ a 0x020F, 0x0210, 0x0211, 0x0310, 0x0311, ' ssl/t1_lib.c`\r\n... will add the whole range of kyber curves, hybrid and non-hybrid, back to the default list (Note: 0x30F for p256_kyber512 is already in the default list, hence is missing in the above).\r\n\r\nNote: Use `sed -i  '/OQS_TEMPLATE_FRAGMENT_ECCURVES_DEFAULT_HYBRID_END/ a 0x0211, /* OQS kyber1024 */' ssl/t1_lib.c` to add the curve at the very end of the list of default curves, and `sed -i  '/OQS_TEMPLATE_FRAGMENT_ECCURVES_DEFAULT_HYBRID_START/ a 0x0211, /* OQS kyber1024 */' ssl/t1_lib.c` to insert it right before any oqs 'standard' defaults."}},"public":true,"created_at":"2020-04-27T09:34:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12166832732","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/172","id":604902175,"node_id":"MDU6SXNzdWU2MDQ5MDIxNzU=","number":172,"title":"Re-enable KEMs","user":{"login":"martinschmatz","id":35571346,"node_id":"MDQ6VXNlcjM1NTcxMzQ2","avatar_url":"https://avatars2.githubusercontent.com/u/35571346?v=4","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","html_url":"https://github.com/martinschmatz","followers_url":"https://api.github.com/users/martinschmatz/followers","following_url":"https://api.github.com/users/martinschmatz/following{/other_user}","gists_url":"https://api.github.com/users/martinschmatz/gists{/gist_id}","starred_url":"https://api.github.com/users/martinschmatz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinschmatz/subscriptions","organizations_url":"https://api.github.com/users/martinschmatz/orgs","repos_url":"https://api.github.com/users/martinschmatz/repos","events_url":"https://api.github.com/users/martinschmatz/events{/privacy}","received_events_url":"https://api.github.com/users/martinschmatz/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-04-22T16:41:37Z","updated_at":"2020-04-27T09:53:11Z","closed_at":null,"author_association":"NONE","body":"With one of the recent merges, the list of default KEMs was significantly reduced (commit ddc21b0e18cf0f0662be0ec8a3bee2df26e49ab8). \r\n\r\nWhile there are ways to specify non-default KEM for openssl s_client/server, this causes issues for situations where the curve can not be explicitly specified (e.g. cURL) but has to rely on whatever OpenSSL API exposes as defaults.\r\n\r\nMay I therefore suggest to use a slightly different approach than just brute-force disabling: I'd like to propose the use of build defines to allow a fine grain selection of which KEM alg is enabled and which is not. \r\n\r\nIn ` ssl/t1_lib.c`:\r\n(A) For each KEM which should be enabled by default, use:\r\n```\r\n#ifndef no_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n(B) For all other KEMs, use\r\n```\r\n#ifdef with_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n`<KEX>` obviously would be a KEM name, like `kyber1024` or `p256_newhope512cca`. `0xabcd` is the placeholder for the related KEM 16-bit code. \r\n\r\nTo keep the code readable, a further layer of define wrappings is proposed to be used to wrap the two defines above into a one-liner each, like so: \r\n```\r\n#define check_disable_KEM(code, name) ... /* for the KEMs enabled by default */\r\n#define check_enable_KEM(code, name) ... /* for the KEMs disabled by default */\r\n```\r\nDuring build, one can simply add (just as examples) `-Dno_p256_kyber512` and/or `-Dwith_kyber1024`.\r\n\r\nAnything that speaks against such an approach? \r\n\r\nI'm fully aware of the desire of the OQS team to have control over available KEMs and that long default lists can lead to ussues. \r\nOn the other hand, OpenSSL also allows enabling/disabling algos during build time - and I do have an issue now being unable to use kyber1024 in my test environment. \r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/619869684","html_url":"https://github.com/open-quantum-safe/openssl/issues/172#issuecomment-619869684","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172","id":619869684,"node_id":"MDEyOklzc3VlQ29tbWVudDYxOTg2OTY4NA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T09:53:11Z","updated_at":"2020-04-27T09:53:11Z","author_association":"MEMBER","body":"I'd strongly suggest refraining from tweaking NIDs directly as those are a) generated and b) subject to change (e.g., https://github.com/open-quantum-safe/openssl/issues/168). I  already provided one alternative for you above and now did a PR (#175 ) with another, syntactically identical one for build-time config. As this is a long-standing discussion topic, I'd prefer to have wider agreement before publishing this (or another compromise)."}},"public":true,"created_at":"2020-04-27T09:53:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12167002146","type":"IssueCommentEvent","actor":{"id":35571346,"login":"martinschmatz","display_login":"martinschmatz","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","avatar_url":"https://avatars.githubusercontent.com/u/35571346?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/172","id":604902175,"node_id":"MDU6SXNzdWU2MDQ5MDIxNzU=","number":172,"title":"Re-enable KEMs","user":{"login":"martinschmatz","id":35571346,"node_id":"MDQ6VXNlcjM1NTcxMzQ2","avatar_url":"https://avatars2.githubusercontent.com/u/35571346?v=4","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","html_url":"https://github.com/martinschmatz","followers_url":"https://api.github.com/users/martinschmatz/followers","following_url":"https://api.github.com/users/martinschmatz/following{/other_user}","gists_url":"https://api.github.com/users/martinschmatz/gists{/gist_id}","starred_url":"https://api.github.com/users/martinschmatz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinschmatz/subscriptions","organizations_url":"https://api.github.com/users/martinschmatz/orgs","repos_url":"https://api.github.com/users/martinschmatz/repos","events_url":"https://api.github.com/users/martinschmatz/events{/privacy}","received_events_url":"https://api.github.com/users/martinschmatz/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-04-22T16:41:37Z","updated_at":"2020-04-27T10:09:43Z","closed_at":null,"author_association":"NONE","body":"With one of the recent merges, the list of default KEMs was significantly reduced (commit ddc21b0e18cf0f0662be0ec8a3bee2df26e49ab8). \r\n\r\nWhile there are ways to specify non-default KEM for openssl s_client/server, this causes issues for situations where the curve can not be explicitly specified (e.g. cURL) but has to rely on whatever OpenSSL API exposes as defaults.\r\n\r\nMay I therefore suggest to use a slightly different approach than just brute-force disabling: I'd like to propose the use of build defines to allow a fine grain selection of which KEM alg is enabled and which is not. \r\n\r\nIn ` ssl/t1_lib.c`:\r\n(A) For each KEM which should be enabled by default, use:\r\n```\r\n#ifndef no_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n(B) For all other KEMs, use\r\n```\r\n#ifdef with_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n`<KEX>` obviously would be a KEM name, like `kyber1024` or `p256_newhope512cca`. `0xabcd` is the placeholder for the related KEM 16-bit code. \r\n\r\nTo keep the code readable, a further layer of define wrappings is proposed to be used to wrap the two defines above into a one-liner each, like so: \r\n```\r\n#define check_disable_KEM(code, name) ... /* for the KEMs enabled by default */\r\n#define check_enable_KEM(code, name) ... /* for the KEMs disabled by default */\r\n```\r\nDuring build, one can simply add (just as examples) `-Dno_p256_kyber512` and/or `-Dwith_kyber1024`.\r\n\r\nAnything that speaks against such an approach? \r\n\r\nI'm fully aware of the desire of the OQS team to have control over available KEMs and that long default lists can lead to ussues. \r\nOn the other hand, OpenSSL also allows enabling/disabling algos during build time - and I do have an issue now being unable to use kyber1024 in my test environment. \r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/619879323","html_url":"https://github.com/open-quantum-safe/openssl/issues/172#issuecomment-619879323","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172","id":619879323,"node_id":"MDEyOklzc3VlQ29tbWVudDYxOTg3OTMyMw==","user":{"login":"martinschmatz","id":35571346,"node_id":"MDQ6VXNlcjM1NTcxMzQ2","avatar_url":"https://avatars2.githubusercontent.com/u/35571346?v=4","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","html_url":"https://github.com/martinschmatz","followers_url":"https://api.github.com/users/martinschmatz/followers","following_url":"https://api.github.com/users/martinschmatz/following{/other_user}","gists_url":"https://api.github.com/users/martinschmatz/gists{/gist_id}","starred_url":"https://api.github.com/users/martinschmatz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinschmatz/subscriptions","organizations_url":"https://api.github.com/users/martinschmatz/orgs","repos_url":"https://api.github.com/users/martinschmatz/repos","events_url":"https://api.github.com/users/martinschmatz/events{/privacy}","received_events_url":"https://api.github.com/users/martinschmatz/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T10:09:43Z","updated_at":"2020-04-27T10:09:43Z","author_association":"NONE","body":"@baentsch Totally agree that using curveIDs is far from what is wanted for long-term (and might need adaptations if the underlying definitions changes), hence my comment '...for the time being...'. It is what it is: A poor man's solution to avoid patching third party code, but nevertheless enabling flexible testing. \r\n\r\nYour PR #175 seems to be right on the spot of what I'd prefer to have, many thanks for providing it! Will happily test it once merged. "}},"public":true,"created_at":"2020-04-27T10:09:44Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12168696195","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/175","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/175/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/175/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/175/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/175","id":607249702,"node_id":"MDExOlB1bGxSZXF1ZXN0NDA5MjYyNTk4","number":175,"title":"Option to explicitly configure default algorithms","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-27T05:36:54Z","updated_at":"2020-04-27T13:06:07Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/175","html_url":"https://github.com/open-quantum-safe/openssl/pull/175","diff_url":"https://github.com/open-quantum-safe/openssl/pull/175.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/175.patch"},"body":"This allows reducing/setting the list of default announced KEMs to something other than 128-bit hybrid algs. This is more flexible, short to specify (only one new #define) and in line with standard openssl syntax (`-curves` parameter).\r\n\r\nTests have not been added as this is a non-default, Configure-time option which would demand a full new test matrix if thoroughly tested.\r\n\r\nTherefore only a Draft-PR until review feedback is received.\r\n\r\n##### Checklist\r\n- [x] documentation is added or updated\r\n- [ ] tests are added or updated\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/619973470","html_url":"https://github.com/open-quantum-safe/openssl/pull/175#issuecomment-619973470","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/175","id":619973470,"node_id":"MDEyOklzc3VlQ29tbWVudDYxOTk3MzQ3MA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T13:06:07Z","updated_at":"2020-04-27T13:06:07Z","author_association":"MEMBER","body":"A simple and effective solution."}},"public":true,"created_at":"2020-04-27T13:06:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12169029553","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734","id":606971688,"node_id":"MDExOlB1bGxSZXF1ZXN0NDA5MDU0Mzk0","number":734,"title":"SIDH build fix","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-26T09:58:57Z","updated_at":"2020-04-27T13:35:36Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/734","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/734.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/734.patch"},"body":"Building the library ends with an error when `OQS_ENABLE_KEM_SIKE` is disabled.\r\n```\r\n[archie@archlinux build]$ cmake -GNinja -DOQS_ENABLE_KEM_SIKE=OFF ..\r\n-- The C compiler identification is GNU 9.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc - works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /usr/lib/libcrypto.so (found suitable version \"1.1.1g\", minimum required is \"1.1.1\")  \r\n-- Found Doxygen: /usr/bin/doxygen (found version \"1.8.17\") found components: doxygen dot \r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/archie/Documents/liboqs/build\r\n[archie@archlinux build]$ ninja\r\n[15/956] Building C object src/CMakeFiles/oqs.dir/kem/kem.c.o\r\nFAILED: src/CMakeFiles/oqs.dir/kem/kem.c.o \r\n/usr/bin/cc  -Iinclude -fPIC -fvisibility=hidden   -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -std=gnu11 -MD -MT src/CMakeFiles/oqs.dir/kem/kem.c.o -MF src/CMakeFiles/oqs.dir/kem/kem.c.o.d -o src/CMakeFiles/oqs.dir/kem/kem.c.o   -c ../src/kem/kem.c\r\n../src/kem/kem.c: In function ‘OQS_KEM_new’:\r\n../src/kem/kem.c:738:10: error: implicit declaration of function ‘OQS_KEM_sidh_p434_new’ [-Werror=implicit-function-declaration]\r\n  738 |   return OQS_KEM_sidh_p434_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:738:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  738 |   return OQS_KEM_sidh_p434_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:744:10: error: implicit declaration of function ‘OQS_KEM_sidh_p503_new’ [-Werror=implicit-function-declaration]\r\n  744 |   return OQS_KEM_sidh_p503_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:744:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  744 |   return OQS_KEM_sidh_p503_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:750:10: error: implicit declaration of function ‘OQS_KEM_sidh_p610_new’ [-Werror=implicit-function-declaration]\r\n  750 |   return OQS_KEM_sidh_p610_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:750:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  750 |   return OQS_KEM_sidh_p610_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:756:10: error: implicit declaration of function ‘OQS_KEM_sidh_p751_new’ [-Werror=implicit-function-declaration]\r\n  756 |   return OQS_KEM_sidh_p751_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:756:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  756 |   return OQS_KEM_sidh_p751_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:786:10: error: implicit declaration of function ‘OQS_KEM_sidh_p434_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p434_compressed’? [-Werror=implicit-function-declaration]\r\n  786 |   return OQS_KEM_sidh_p434_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p434_compressed\r\n../src/kem/kem.c:786:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  786 |   return OQS_KEM_sidh_p434_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:792:10: error: implicit declaration of function ‘OQS_KEM_sidh_p503_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p503_compressed’? [-Werror=implicit-function-declaration]\r\n  792 |   return OQS_KEM_sidh_p503_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p503_compressed\r\n../src/kem/kem.c:792:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  792 |   return OQS_KEM_sidh_p503_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:798:10: error: implicit declaration of function ‘OQS_KEM_sidh_p610_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p610_compressed’? [-Werror=implicit-function-declaration]\r\n  798 |   return OQS_KEM_sidh_p610_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p610_compressed\r\n../src/kem/kem.c:798:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  798 |   return OQS_KEM_sidh_p610_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:804:10: error: implicit declaration of function ‘OQS_KEM_sidh_p751_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p751_compressed’? [-Werror=implicit-function-declaration]\r\n  804 |   return OQS_KEM_sidh_p751_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p751_compressed\r\n../src/kem/kem.c:804:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  804 |   return OQS_KEM_sidh_p751_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[24/956] Building C object src/kem/frodoke...les/frodokem.dir/external/frodo1344aes.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\nThis PR fixes the bug"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/619989995","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734#issuecomment-619989995","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734","id":619989995,"node_id":"MDEyOklzc3VlQ29tbWVudDYxOTk4OTk5NQ==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T13:35:36Z","updated_at":"2020-04-27T13:35:36Z","author_association":"MEMBER","body":"Since there's no distinction between `ENABLE_KEM_SIKE` and `ENABLE_KEM_SIDH` in the code, I would rather we just remove the latter and rename the former to `ENABLE_KEM_SI`, which would control access to both SIKE and SIDH variants."}},"public":true,"created_at":"2020-04-27T13:35:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12169033182","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/644","id":575782181,"node_id":"MDU6SXNzdWU1NzU3ODIxODE=","number":644,"title":"Clear compiler warnings on Windows","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"assignees":[{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":17,"created_at":"2020-03-04T21:18:13Z","updated_at":"2020-04-27T13:35:56Z","closed_at":null,"author_association":"MEMBER","body":"As noted in https://github.com/open-quantum-safe/liboqs/pull/633#issuecomment-594024236"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/619990189","html_url":"https://github.com/open-quantum-safe/liboqs/issues/644#issuecomment-619990189","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644","id":619990189,"node_id":"MDEyOklzc3VlQ29tbWVudDYxOTk5MDE4OQ==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T13:35:56Z","updated_at":"2020-04-27T13:35:56Z","author_association":"MEMBER","body":"Yup."}},"public":true,"created_at":"2020-04-27T13:35:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12169071108","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734","id":606971688,"node_id":"MDExOlB1bGxSZXF1ZXN0NDA5MDU0Mzk0","number":734,"title":"SIDH build fix","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-04-26T09:58:57Z","updated_at":"2020-04-27T13:39:21Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/734","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/734.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/734.patch"},"body":"Building the library ends with an error when `OQS_ENABLE_KEM_SIKE` is disabled.\r\n```\r\n[archie@archlinux build]$ cmake -GNinja -DOQS_ENABLE_KEM_SIKE=OFF ..\r\n-- The C compiler identification is GNU 9.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc - works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /usr/lib/libcrypto.so (found suitable version \"1.1.1g\", minimum required is \"1.1.1\")  \r\n-- Found Doxygen: /usr/bin/doxygen (found version \"1.8.17\") found components: doxygen dot \r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/archie/Documents/liboqs/build\r\n[archie@archlinux build]$ ninja\r\n[15/956] Building C object src/CMakeFiles/oqs.dir/kem/kem.c.o\r\nFAILED: src/CMakeFiles/oqs.dir/kem/kem.c.o \r\n/usr/bin/cc  -Iinclude -fPIC -fvisibility=hidden   -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -std=gnu11 -MD -MT src/CMakeFiles/oqs.dir/kem/kem.c.o -MF src/CMakeFiles/oqs.dir/kem/kem.c.o.d -o src/CMakeFiles/oqs.dir/kem/kem.c.o   -c ../src/kem/kem.c\r\n../src/kem/kem.c: In function ‘OQS_KEM_new’:\r\n../src/kem/kem.c:738:10: error: implicit declaration of function ‘OQS_KEM_sidh_p434_new’ [-Werror=implicit-function-declaration]\r\n  738 |   return OQS_KEM_sidh_p434_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:738:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  738 |   return OQS_KEM_sidh_p434_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:744:10: error: implicit declaration of function ‘OQS_KEM_sidh_p503_new’ [-Werror=implicit-function-declaration]\r\n  744 |   return OQS_KEM_sidh_p503_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:744:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  744 |   return OQS_KEM_sidh_p503_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:750:10: error: implicit declaration of function ‘OQS_KEM_sidh_p610_new’ [-Werror=implicit-function-declaration]\r\n  750 |   return OQS_KEM_sidh_p610_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:750:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  750 |   return OQS_KEM_sidh_p610_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:756:10: error: implicit declaration of function ‘OQS_KEM_sidh_p751_new’ [-Werror=implicit-function-declaration]\r\n  756 |   return OQS_KEM_sidh_p751_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:756:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  756 |   return OQS_KEM_sidh_p751_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:786:10: error: implicit declaration of function ‘OQS_KEM_sidh_p434_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p434_compressed’? [-Werror=implicit-function-declaration]\r\n  786 |   return OQS_KEM_sidh_p434_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p434_compressed\r\n../src/kem/kem.c:786:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  786 |   return OQS_KEM_sidh_p434_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:792:10: error: implicit declaration of function ‘OQS_KEM_sidh_p503_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p503_compressed’? [-Werror=implicit-function-declaration]\r\n  792 |   return OQS_KEM_sidh_p503_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p503_compressed\r\n../src/kem/kem.c:792:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  792 |   return OQS_KEM_sidh_p503_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:798:10: error: implicit declaration of function ‘OQS_KEM_sidh_p610_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p610_compressed’? [-Werror=implicit-function-declaration]\r\n  798 |   return OQS_KEM_sidh_p610_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p610_compressed\r\n../src/kem/kem.c:798:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  798 |   return OQS_KEM_sidh_p610_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:804:10: error: implicit declaration of function ‘OQS_KEM_sidh_p751_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p751_compressed’? [-Werror=implicit-function-declaration]\r\n  804 |   return OQS_KEM_sidh_p751_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p751_compressed\r\n../src/kem/kem.c:804:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  804 |   return OQS_KEM_sidh_p751_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[24/956] Building C object src/kem/frodoke...les/frodokem.dir/external/frodo1344aes.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\nThis PR fixes the bug"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/619992190","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734#issuecomment-619992190","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734","id":619992190,"node_id":"MDEyOklzc3VlQ29tbWVudDYxOTk5MjE5MA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T13:39:21Z","updated_at":"2020-04-27T13:39:21Z","author_association":"MEMBER","body":"> Since there's no distinction between `ENABLE_KEM_SIKE` and `ENABLE_KEM_SIDH` in the code, I would rather we just remove the latter and rename the former to `ENABLE_KEM_SI`, which would control access to both SIKE and SIDH variants.\r\n\r\nWhat do you mean there's no difference between `ENABLE_KEM_SIKE` and `ENABLE_KEM_SIDH`?  We should be able to turn these off independently of one another, especially since SIDH is not IND-CCA I'd like to be able to keep the option to turn it off."}},"public":true,"created_at":"2020-04-27T13:39:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12169763177","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/172","id":604902175,"node_id":"MDU6SXNzdWU2MDQ5MDIxNzU=","number":172,"title":"Re-enable KEMs","user":{"login":"martinschmatz","id":35571346,"node_id":"MDQ6VXNlcjM1NTcxMzQ2","avatar_url":"https://avatars2.githubusercontent.com/u/35571346?v=4","gravatar_id":"","url":"https://api.github.com/users/martinschmatz","html_url":"https://github.com/martinschmatz","followers_url":"https://api.github.com/users/martinschmatz/followers","following_url":"https://api.github.com/users/martinschmatz/following{/other_user}","gists_url":"https://api.github.com/users/martinschmatz/gists{/gist_id}","starred_url":"https://api.github.com/users/martinschmatz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinschmatz/subscriptions","organizations_url":"https://api.github.com/users/martinschmatz/orgs","repos_url":"https://api.github.com/users/martinschmatz/repos","events_url":"https://api.github.com/users/martinschmatz/events{/privacy}","received_events_url":"https://api.github.com/users/martinschmatz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-04-22T16:41:37Z","updated_at":"2020-04-27T14:37:21Z","closed_at":"2020-04-27T14:37:21Z","author_association":"NONE","body":"With one of the recent merges, the list of default KEMs was significantly reduced (commit ddc21b0e18cf0f0662be0ec8a3bee2df26e49ab8). \r\n\r\nWhile there are ways to specify non-default KEM for openssl s_client/server, this causes issues for situations where the curve can not be explicitly specified (e.g. cURL) but has to rely on whatever OpenSSL API exposes as defaults.\r\n\r\nMay I therefore suggest to use a slightly different approach than just brute-force disabling: I'd like to propose the use of build defines to allow a fine grain selection of which KEM alg is enabled and which is not. \r\n\r\nIn ` ssl/t1_lib.c`:\r\n(A) For each KEM which should be enabled by default, use:\r\n```\r\n#ifndef no_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n(B) For all other KEMs, use\r\n```\r\n#ifdef with_<KEX>\r\n0xabcd, /* description*/\r\n#endif\r\n```\r\n`<KEX>` obviously would be a KEM name, like `kyber1024` or `p256_newhope512cca`. `0xabcd` is the placeholder for the related KEM 16-bit code. \r\n\r\nTo keep the code readable, a further layer of define wrappings is proposed to be used to wrap the two defines above into a one-liner each, like so: \r\n```\r\n#define check_disable_KEM(code, name) ... /* for the KEMs enabled by default */\r\n#define check_enable_KEM(code, name) ... /* for the KEMs disabled by default */\r\n```\r\nDuring build, one can simply add (just as examples) `-Dno_p256_kyber512` and/or `-Dwith_kyber1024`.\r\n\r\nAnything that speaks against such an approach? \r\n\r\nI'm fully aware of the desire of the OQS team to have control over available KEMs and that long default lists can lead to ussues. \r\nOn the other hand, OpenSSL also allows enabling/disabling algos during build time - and I do have an issue now being unable to use kyber1024 in my test environment. \r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/620027940","html_url":"https://github.com/open-quantum-safe/openssl/issues/172#issuecomment-620027940","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/172","id":620027940,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDAyNzk0MA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T14:37:21Z","updated_at":"2020-04-27T14:37:21Z","author_association":"MEMBER","body":"Closed by PR #175  "}},"public":true,"created_at":"2020-04-27T14:37:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12169911483","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/717","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/717/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/717/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/717/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/717","id":599955324,"node_id":"MDExOlB1bGxSZXF1ZXN0NDAzNDkxOTc3","number":717,"title":"Frodo runtime detection","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2020-04-15T01:26:03Z","updated_at":"2020-04-27T14:49:26Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/717","html_url":"https://github.com/open-quantum-safe/liboqs/pull/717","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/717.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/717.patch"},"body":""},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620034994","html_url":"https://github.com/open-quantum-safe/liboqs/pull/717#issuecomment-620034994","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/717","id":620034994,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDAzNDk5NA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T14:49:26Z","updated_at":"2020-04-27T14:49:26Z","author_association":"MEMBER","body":"@xvzcf Should I close this PR?"}},"public":true,"created_at":"2020-04-27T14:49:26Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12170013499","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/722","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/722/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/722/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/722/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/722","id":600181935,"node_id":"MDExOlB1bGxSZXF1ZXN0NDAzNjY2NTMz","number":722,"title":"Add AVX2 and AESNI versions of SPHINCS+","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-04-15T10:11:21Z","updated_at":"2020-04-27T14:57:34Z","closed_at":"2020-04-27T14:57:34Z","author_association":"COLLABORATOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/722","html_url":"https://github.com/open-quantum-safe/liboqs/pull/722","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/722.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/722.patch"},"body":"Also remove all of the dead code that was included (probably due to a name format change sometime).\r\n\r\nCloses #721 \r\n\r\nI'm not entirely sure how `copy_from_pqclean.py` works, so I could probably use some direction there. Specifically, the use of `sources` is unclear to me."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620039858","html_url":"https://github.com/open-quantum-safe/liboqs/pull/722#issuecomment-620039858","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/722","id":620039858,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDAzOTg1OA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T14:57:34Z","updated_at":"2020-04-27T14:57:34Z","author_association":"MEMBER","body":"Replaced by #736 since I couldn't push my rebase to Thom's repo."}},"public":true,"created_at":"2020-04-27T14:57:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12170067105","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734","id":606971688,"node_id":"MDExOlB1bGxSZXF1ZXN0NDA5MDU0Mzk0","number":734,"title":"SIDH build fix","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-04-26T09:58:57Z","updated_at":"2020-04-27T15:01:50Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/734","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/734.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/734.patch"},"body":"Building the library ends with an error when `OQS_ENABLE_KEM_SIKE` is disabled.\r\n```\r\n[archie@archlinux build]$ cmake -GNinja -DOQS_ENABLE_KEM_SIKE=OFF ..\r\n-- The C compiler identification is GNU 9.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc - works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /usr/lib/libcrypto.so (found suitable version \"1.1.1g\", minimum required is \"1.1.1\")  \r\n-- Found Doxygen: /usr/bin/doxygen (found version \"1.8.17\") found components: doxygen dot \r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/archie/Documents/liboqs/build\r\n[archie@archlinux build]$ ninja\r\n[15/956] Building C object src/CMakeFiles/oqs.dir/kem/kem.c.o\r\nFAILED: src/CMakeFiles/oqs.dir/kem/kem.c.o \r\n/usr/bin/cc  -Iinclude -fPIC -fvisibility=hidden   -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -std=gnu11 -MD -MT src/CMakeFiles/oqs.dir/kem/kem.c.o -MF src/CMakeFiles/oqs.dir/kem/kem.c.o.d -o src/CMakeFiles/oqs.dir/kem/kem.c.o   -c ../src/kem/kem.c\r\n../src/kem/kem.c: In function ‘OQS_KEM_new’:\r\n../src/kem/kem.c:738:10: error: implicit declaration of function ‘OQS_KEM_sidh_p434_new’ [-Werror=implicit-function-declaration]\r\n  738 |   return OQS_KEM_sidh_p434_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:738:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  738 |   return OQS_KEM_sidh_p434_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:744:10: error: implicit declaration of function ‘OQS_KEM_sidh_p503_new’ [-Werror=implicit-function-declaration]\r\n  744 |   return OQS_KEM_sidh_p503_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:744:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  744 |   return OQS_KEM_sidh_p503_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:750:10: error: implicit declaration of function ‘OQS_KEM_sidh_p610_new’ [-Werror=implicit-function-declaration]\r\n  750 |   return OQS_KEM_sidh_p610_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:750:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  750 |   return OQS_KEM_sidh_p610_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:756:10: error: implicit declaration of function ‘OQS_KEM_sidh_p751_new’ [-Werror=implicit-function-declaration]\r\n  756 |   return OQS_KEM_sidh_p751_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:756:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  756 |   return OQS_KEM_sidh_p751_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:786:10: error: implicit declaration of function ‘OQS_KEM_sidh_p434_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p434_compressed’? [-Werror=implicit-function-declaration]\r\n  786 |   return OQS_KEM_sidh_p434_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p434_compressed\r\n../src/kem/kem.c:786:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  786 |   return OQS_KEM_sidh_p434_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:792:10: error: implicit declaration of function ‘OQS_KEM_sidh_p503_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p503_compressed’? [-Werror=implicit-function-declaration]\r\n  792 |   return OQS_KEM_sidh_p503_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p503_compressed\r\n../src/kem/kem.c:792:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  792 |   return OQS_KEM_sidh_p503_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:798:10: error: implicit declaration of function ‘OQS_KEM_sidh_p610_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p610_compressed’? [-Werror=implicit-function-declaration]\r\n  798 |   return OQS_KEM_sidh_p610_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p610_compressed\r\n../src/kem/kem.c:798:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  798 |   return OQS_KEM_sidh_p610_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:804:10: error: implicit declaration of function ‘OQS_KEM_sidh_p751_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p751_compressed’? [-Werror=implicit-function-declaration]\r\n  804 |   return OQS_KEM_sidh_p751_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p751_compressed\r\n../src/kem/kem.c:804:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  804 |   return OQS_KEM_sidh_p751_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[24/956] Building C object src/kem/frodoke...les/frodokem.dir/external/frodo1344aes.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\nThis PR fixes the bug"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620042337","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734#issuecomment-620042337","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734","id":620042337,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDA0MjMzNw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T15:01:50Z","updated_at":"2020-04-27T15:01:50Z","author_association":"MEMBER","body":"So should we merge this now and then worry about the larger SIDH/SIKE macro situation later?"}},"public":true,"created_at":"2020-04-27T15:01:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12170263529","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/644","id":575782181,"node_id":"MDU6SXNzdWU1NzU3ODIxODE=","number":644,"title":"Clear compiler warnings on Windows","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"assignees":[{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":18,"created_at":"2020-03-04T21:18:13Z","updated_at":"2020-04-27T15:18:00Z","closed_at":null,"author_association":"MEMBER","body":"As noted in https://github.com/open-quantum-safe/liboqs/pull/633#issuecomment-594024236"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620051739","html_url":"https://github.com/open-quantum-safe/liboqs/issues/644#issuecomment-620051739","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644","id":620051739,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDA1MTczOQ==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T15:18:00Z","updated_at":"2020-04-27T15:18:00Z","author_association":"MEMBER","body":"Did #730 resolve this?"}},"public":true,"created_at":"2020-04-27T15:18:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12170271356","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734","id":606971688,"node_id":"MDExOlB1bGxSZXF1ZXN0NDA5MDU0Mzk0","number":734,"title":"SIDH build fix","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-04-26T09:58:57Z","updated_at":"2020-04-27T15:18:40Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/734","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/734.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/734.patch"},"body":"Building the library ends with an error when `OQS_ENABLE_KEM_SIKE` is disabled.\r\n```\r\n[archie@archlinux build]$ cmake -GNinja -DOQS_ENABLE_KEM_SIKE=OFF ..\r\n-- The C compiler identification is GNU 9.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc - works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /usr/lib/libcrypto.so (found suitable version \"1.1.1g\", minimum required is \"1.1.1\")  \r\n-- Found Doxygen: /usr/bin/doxygen (found version \"1.8.17\") found components: doxygen dot \r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/archie/Documents/liboqs/build\r\n[archie@archlinux build]$ ninja\r\n[15/956] Building C object src/CMakeFiles/oqs.dir/kem/kem.c.o\r\nFAILED: src/CMakeFiles/oqs.dir/kem/kem.c.o \r\n/usr/bin/cc  -Iinclude -fPIC -fvisibility=hidden   -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -std=gnu11 -MD -MT src/CMakeFiles/oqs.dir/kem/kem.c.o -MF src/CMakeFiles/oqs.dir/kem/kem.c.o.d -o src/CMakeFiles/oqs.dir/kem/kem.c.o   -c ../src/kem/kem.c\r\n../src/kem/kem.c: In function ‘OQS_KEM_new’:\r\n../src/kem/kem.c:738:10: error: implicit declaration of function ‘OQS_KEM_sidh_p434_new’ [-Werror=implicit-function-declaration]\r\n  738 |   return OQS_KEM_sidh_p434_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:738:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  738 |   return OQS_KEM_sidh_p434_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:744:10: error: implicit declaration of function ‘OQS_KEM_sidh_p503_new’ [-Werror=implicit-function-declaration]\r\n  744 |   return OQS_KEM_sidh_p503_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:744:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  744 |   return OQS_KEM_sidh_p503_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:750:10: error: implicit declaration of function ‘OQS_KEM_sidh_p610_new’ [-Werror=implicit-function-declaration]\r\n  750 |   return OQS_KEM_sidh_p610_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:750:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  750 |   return OQS_KEM_sidh_p610_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:756:10: error: implicit declaration of function ‘OQS_KEM_sidh_p751_new’ [-Werror=implicit-function-declaration]\r\n  756 |   return OQS_KEM_sidh_p751_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:756:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  756 |   return OQS_KEM_sidh_p751_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:786:10: error: implicit declaration of function ‘OQS_KEM_sidh_p434_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p434_compressed’? [-Werror=implicit-function-declaration]\r\n  786 |   return OQS_KEM_sidh_p434_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p434_compressed\r\n../src/kem/kem.c:786:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  786 |   return OQS_KEM_sidh_p434_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:792:10: error: implicit declaration of function ‘OQS_KEM_sidh_p503_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p503_compressed’? [-Werror=implicit-function-declaration]\r\n  792 |   return OQS_KEM_sidh_p503_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p503_compressed\r\n../src/kem/kem.c:792:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  792 |   return OQS_KEM_sidh_p503_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:798:10: error: implicit declaration of function ‘OQS_KEM_sidh_p610_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p610_compressed’? [-Werror=implicit-function-declaration]\r\n  798 |   return OQS_KEM_sidh_p610_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p610_compressed\r\n../src/kem/kem.c:798:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  798 |   return OQS_KEM_sidh_p610_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../src/kem/kem.c:804:10: error: implicit declaration of function ‘OQS_KEM_sidh_p751_compressed_new’; did you mean ‘OQS_KEM_alg_sidh_p751_compressed’? [-Werror=implicit-function-declaration]\r\n  804 |   return OQS_KEM_sidh_p751_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |          OQS_KEM_alg_sidh_p751_compressed\r\n../src/kem/kem.c:804:10: error: returning ‘int’ from a function with return type ‘OQS_KEM *’ {aka ‘struct OQS_KEM *’} makes pointer from integer without a cast [-Werror=int-conversion]\r\n  804 |   return OQS_KEM_sidh_p751_compressed_new();\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[24/956] Building C object src/kem/frodoke...les/frodokem.dir/external/frodo1344aes.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\nThis PR fixes the bug"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620052143","html_url":"https://github.com/open-quantum-safe/liboqs/pull/734#issuecomment-620052143","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/734","id":620052143,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDA1MjE0Mw==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T15:18:40Z","updated_at":"2020-04-27T15:18:40Z","author_association":"MEMBER","body":"Sure."}},"public":true,"created_at":"2020-04-27T15:18:40Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12170282455","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/728","id":603525800,"node_id":"MDU6SXNzdWU2MDM1MjU4MDA=","number":728,"title":"Can't build DLL output on Windows with Visual Studio","user":{"login":"ChristianOConnor","id":47836708,"node_id":"MDQ6VXNlcjQ3ODM2NzA4","avatar_url":"https://avatars1.githubusercontent.com/u/47836708?v=4","gravatar_id":"","url":"https://api.github.com/users/ChristianOConnor","html_url":"https://github.com/ChristianOConnor","followers_url":"https://api.github.com/users/ChristianOConnor/followers","following_url":"https://api.github.com/users/ChristianOConnor/following{/other_user}","gists_url":"https://api.github.com/users/ChristianOConnor/gists{/gist_id}","starred_url":"https://api.github.com/users/ChristianOConnor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChristianOConnor/subscriptions","organizations_url":"https://api.github.com/users/ChristianOConnor/orgs","repos_url":"https://api.github.com/users/ChristianOConnor/repos","events_url":"https://api.github.com/users/ChristianOConnor/events{/privacy}","received_events_url":"https://api.github.com/users/ChristianOConnor/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-04-20T20:48:58Z","updated_at":"2020-04-27T15:19:38Z","closed_at":null,"author_association":"NONE","body":"In Visual Studio I can only get `oqs.lib` and `oqs.exp,` even when I add `-DBUILD_SHARED_LIBS=ON` to the build args. How do I get Visual Studio to output a DLL file?"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620052700","html_url":"https://github.com/open-quantum-safe/liboqs/issues/728#issuecomment-620052700","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728","id":620052700,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDA1MjcwMA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T15:19:38Z","updated_at":"2020-04-27T15:19:38Z","author_association":"MEMBER","body":"@ChristianOConnor Can we close this issue?"}},"public":true,"created_at":"2020-04-27T15:19:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12170744423","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/644","id":575782181,"node_id":"MDU6SXNzdWU1NzU3ODIxODE=","number":644,"title":"Clear compiler warnings on Windows","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"assignees":[{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":19,"created_at":"2020-03-04T21:18:13Z","updated_at":"2020-04-27T15:59:12Z","closed_at":null,"author_association":"MEMBER","body":"As noted in https://github.com/open-quantum-safe/liboqs/pull/633#issuecomment-594024236"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620076812","html_url":"https://github.com/open-quantum-safe/liboqs/issues/644#issuecomment-620076812","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/644","id":620076812,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDA3NjgxMg==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T15:59:12Z","updated_at":"2020-04-27T15:59:12Z","author_association":"CONTRIBUTOR","body":"I think so. Appveyor now builds in Release mode, and the right DLL is used at linking. I don't see the warning locally, nor in the nightly build, so I think this is done. "}},"public":true,"created_at":"2020-04-27T15:59:12Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12170842432","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/738","id":607649129,"node_id":"MDU6SXNzdWU2MDc2NDkxMjk=","number":738,"title":"AddressSanitizer failing in nightly builds","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":423520874,"node_id":"MDU6TGFiZWw0MjM1MjA4NzQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-27T15:39:15Z","updated_at":"2020-04-27T16:07:48Z","closed_at":null,"author_association":"MEMBER","body":"https://app.circleci.com/pipelines/github/open-quantum-safe/liboqs/685/workflows/2712b1d5-7cfa-4e07-8a26-9eee909afee5/jobs/7147\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620081774","html_url":"https://github.com/open-quantum-safe/liboqs/issues/738#issuecomment-620081774","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738","id":620081774,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDA4MTc3NA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T16:07:48Z","updated_at":"2020-04-27T16:07:48Z","author_association":"MEMBER","body":"I'm unable to reproduce this locally with circleci local on either of my two machines. Is anyone else able to? @baentsch @xvzcf \r\n\r\n```\r\ncircleci config process .circleci/config.yml > .circleci/config.yml.expanded\r\ncircleci local execute --config=.circleci/config.yml.expanded --job ubuntu-bionic-x86_64-asan\r\n```"}},"public":true,"created_at":"2020-04-27T16:07:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12171140638","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/738","id":607649129,"node_id":"MDU6SXNzdWU2MDc2NDkxMjk=","number":738,"title":"AddressSanitizer failing in nightly builds","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":423520874,"node_id":"MDU6TGFiZWw0MjM1MjA4NzQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Something isn't working"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-04-27T15:39:15Z","updated_at":"2020-04-27T16:35:31Z","closed_at":null,"author_association":"MEMBER","body":"https://app.circleci.com/pipelines/github/open-quantum-safe/liboqs/685/workflows/2712b1d5-7cfa-4e07-8a26-9eee909afee5/jobs/7147\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620097033","html_url":"https://github.com/open-quantum-safe/liboqs/issues/738#issuecomment-620097033","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/738","id":620097033,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDA5NzAzMw==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T16:35:31Z","updated_at":"2020-04-27T16:35:31Z","author_association":"MEMBER","body":"I am unable to do so."}},"public":true,"created_at":"2020-04-27T16:35:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12173100356","type":"IssueCommentEvent","actor":{"id":47836708,"login":"ChristianOConnor","display_login":"ChristianOConnor","gravatar_id":"","url":"https://api.github.com/users/ChristianOConnor","avatar_url":"https://avatars.githubusercontent.com/u/47836708?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/728","id":603525800,"node_id":"MDU6SXNzdWU2MDM1MjU4MDA=","number":728,"title":"Can't build DLL output on Windows with Visual Studio","user":{"login":"ChristianOConnor","id":47836708,"node_id":"MDQ6VXNlcjQ3ODM2NzA4","avatar_url":"https://avatars1.githubusercontent.com/u/47836708?v=4","gravatar_id":"","url":"https://api.github.com/users/ChristianOConnor","html_url":"https://github.com/ChristianOConnor","followers_url":"https://api.github.com/users/ChristianOConnor/followers","following_url":"https://api.github.com/users/ChristianOConnor/following{/other_user}","gists_url":"https://api.github.com/users/ChristianOConnor/gists{/gist_id}","starred_url":"https://api.github.com/users/ChristianOConnor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChristianOConnor/subscriptions","organizations_url":"https://api.github.com/users/ChristianOConnor/orgs","repos_url":"https://api.github.com/users/ChristianOConnor/repos","events_url":"https://api.github.com/users/ChristianOConnor/events{/privacy}","received_events_url":"https://api.github.com/users/ChristianOConnor/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-04-20T20:48:58Z","updated_at":"2020-04-27T19:57:38Z","closed_at":null,"author_association":"NONE","body":"In Visual Studio I can only get `oqs.lib` and `oqs.exp,` even when I add `-DBUILD_SHARED_LIBS=ON` to the build args. How do I get Visual Studio to output a DLL file?"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/620200618","html_url":"https://github.com/open-quantum-safe/liboqs/issues/728#issuecomment-620200618","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/728","id":620200618,"node_id":"MDEyOklzc3VlQ29tbWVudDYyMDIwMDYxOA==","user":{"login":"ChristianOConnor","id":47836708,"node_id":"MDQ6VXNlcjQ3ODM2NzA4","avatar_url":"https://avatars1.githubusercontent.com/u/47836708?v=4","gravatar_id":"","url":"https://api.github.com/users/ChristianOConnor","html_url":"https://github.com/ChristianOConnor","followers_url":"https://api.github.com/users/ChristianOConnor/followers","following_url":"https://api.github.com/users/ChristianOConnor/following{/other_user}","gists_url":"https://api.github.com/users/ChristianOConnor/gists{/gist_id}","starred_url":"https://api.github.com/users/ChristianOConnor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChristianOConnor/subscriptions","organizations_url":"https://api.github.com/users/ChristianOConnor/orgs","repos_url":"https://api.github.com/users/ChristianOConnor/repos","events_url":"https://api.github.com/users/ChristianOConnor/events{/privacy}","received_events_url":"https://api.github.com/users/ChristianOConnor/received_events","type":"User","site_admin":false},"created_at":"2020-04-27T19:57:38Z","updated_at":"2020-04-27T19:57:38Z","author_association":"NONE","body":"Oh yeah sorry about that I forgot to respond to the last comment. Yeah @xvzcf you're right the dll file is in the bin folder Thank you!! You can close this issue now @dstebila . Thank you for the help you guys!"}},"public":true,"created_at":"2020-04-27T19:57:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
