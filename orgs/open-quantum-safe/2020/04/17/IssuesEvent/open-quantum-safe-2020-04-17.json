{"id":"12076198745","type":"IssuesEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/695","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/695/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/695/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/695/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/695","id":591787526,"node_id":"MDU6SXNzdWU1OTE3ODc1MjY=","number":695,"title":"\"Optimized\" CMAKE_BUILD_TYPE should possibly be renamed to Release","user":{"login":"thomwiggers","id":974662,"node_id":"MDQ6VXNlcjk3NDY2Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/974662?v=4","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","html_url":"https://github.com/thomwiggers","followers_url":"https://api.github.com/users/thomwiggers/followers","following_url":"https://api.github.com/users/thomwiggers/following{/other_user}","gists_url":"https://api.github.com/users/thomwiggers/gists{/gist_id}","starred_url":"https://api.github.com/users/thomwiggers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomwiggers/subscriptions","organizations_url":"https://api.github.com/users/thomwiggers/orgs","repos_url":"https://api.github.com/users/thomwiggers/repos","events_url":"https://api.github.com/users/thomwiggers/events{/privacy}","received_events_url":"https://api.github.com/users/thomwiggers/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"assignees":[{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2020-04-01T09:57:58Z","updated_at":"2020-04-17T07:06:05Z","closed_at":"2020-04-17T07:06:05Z","author_association":"COLLABORATOR","body":"The cmake profile `Optimized` to build with `-O2` etc, seems to break CMake convention. The Rust ``cmake`` crate has a [automatic profile selection](https://docs.rs/cmake/0.1.42/cmake/struct.Config.html#method.profile) that expects ``Release`` instead of ``Optimized``.\r\n\r\nThis seems to match https://cmake.org/cmake/help/v3.0/variable/CMAKE_BUILD_TYPE.html, which also suggests that #652 was abusing ``CMAKE_BUILD_TYPE`` a little bit..."}},"public":true,"created_at":"2020-04-17T07:06:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12079228045","type":"IssuesEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/698","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/698/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/698/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/698/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/698","id":592364182,"node_id":"MDU6SXNzdWU1OTIzNjQxODI=","number":698,"title":"Reduce check-in testing on AppVeyor","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-04-02T05:16:58Z","updated_at":"2020-04-17T12:56:30Z","closed_at":"2020-04-17T12:56:30Z","author_association":"MEMBER","body":"As it might be so \r\n- that we cannot use CircleCI for Windows testing (see [PR #690](https://github.com/open-quantum-safe/liboqs/pull/690)), and \r\n- the AppVeyor account is rather slow regarding Windows testing (@vsoftco and @baentsch at least were waiting for hours to see whether some trivial changes were OK), and\r\n- we decided yesterday to curtail support for \"problematic\" algorithms on Windows\r\ncan I suggest we reduce Windows/AppVeyor-based checkin testing considerably, e.g., with a blacklist of algorithms we don't want to run --at least on Windows--at every check-in?\r\n\r\nCan I ask for your comments on this proposal, @dstebila @xvzcf @christianpaquin ? Anyone else?"}},"public":true,"created_at":"2020-04-17T12:56:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12081685084","type":"IssuesEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727","id":602112008,"node_id":"MDU6SXNzdWU2MDIxMTIwMDg=","number":727,"title":"Cross-compiling for Windows on Linux broken by search for pthreads","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-04-17T16:59:52Z","updated_at":"2020-04-17T16:59:52Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"The CMake configuration process now appears to look for pthreads, and cross-compiling a test application for Windows that attempts to call `pthread_create` fails, and rightly so, since pthreads isn't native on Windows. Here's the output of running CMake:\r\n\r\n```\r\nkkane@kkane-linux:/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win$ cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../.CMake/toolchain_windows-amd64.cmake -DCMAKE_INSTALL_PREFIX=/tmp/openssl/oqs ..\r\n-- The C compiler identification is GNU 7.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\nCMake Error: TRY_RUN() invoked in cross-compiling mode, please set the following cache variables appropriately:\r\n   RUN_RESULT (advanced)\r\n   RUN_RESULT__TRYRUN_OUTPUT (advanced)\r\nFor details see /tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/TryRunResults.cmake\r\nCMake Error at .CMake/gcc_clang_intrinsics.cmake:6 (message):\r\n  .CMake/detect_gcc_clang_intrinsics.c returned exit code:\r\n  PLEASE_FILL_OUT-FAILED_TO_RUN\r\nCall Stack (most recent call first):\r\n  .CMake/compiler_opts.cmake:65 (include)\r\n  CMakeLists.txt:40 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeError.log\".\r\n```\r\n\r\nTip of master branch is 8950275409f163f50af46b882c2f950674f2d0ac.\r\n\r\nAnd here are the two output logs:\r\n[CMakeOutput.log](https://github.com/open-quantum-safe/liboqs/files/4494233/CMakeOutput.log)\r\n[CMakeError.log](https://github.com/open-quantum-safe/liboqs/files/4494234/CMakeError.log)\r\n\r\n"}},"public":true,"created_at":"2020-04-17T16:59:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
