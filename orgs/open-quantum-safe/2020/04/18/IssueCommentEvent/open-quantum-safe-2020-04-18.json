{"id":"12085899877","type":"IssueCommentEvent","actor":{"id":58735248,"login":"gadoofou87","display_login":"gadoofou87","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","avatar_url":"https://avatars.githubusercontent.com/u/58735248?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727","id":602112008,"node_id":"MDU6SXNzdWU2MDIxMTIwMDg=","number":727,"title":"Cross-compiling for Windows on Linux broken by search for pthreads","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-04-17T16:59:52Z","updated_at":"2020-04-18T07:03:03Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"The CMake configuration process now appears to look for pthreads, and cross-compiling a test application for Windows that attempts to call `pthread_create` fails, and rightly so, since pthreads isn't native on Windows. Here's the output of running CMake:\r\n\r\n```\r\nkkane@kkane-linux:/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win$ cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=../.CMake/toolchain_windows-amd64.cmake -DCMAKE_INSTALL_PREFIX=/tmp/openssl/oqs ..\r\n-- The C compiler identification is GNU 7.3.0\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc\r\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\nCMake Error: TRY_RUN() invoked in cross-compiling mode, please set the following cache variables appropriately:\r\n   RUN_RESULT (advanced)\r\n   RUN_RESULT__TRYRUN_OUTPUT (advanced)\r\nFor details see /tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/TryRunResults.cmake\r\nCMake Error at .CMake/gcc_clang_intrinsics.cmake:6 (message):\r\n  .CMake/detect_gcc_clang_intrinsics.c returned exit code:\r\n  PLEASE_FILL_OUT-FAILED_TO_RUN\r\nCall Stack (most recent call first):\r\n  .CMake/compiler_opts.cmake:65 (include)\r\n  CMakeLists.txt:40 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/tmp/PQCrypto-VPN/openvpn/build/repos/liboqs/build-win/CMakeFiles/CMakeError.log\".\r\n```\r\n\r\nTip of master branch is 8950275409f163f50af46b882c2f950674f2d0ac.\r\n\r\nAnd here are the two output logs:\r\n[CMakeOutput.log](https://github.com/open-quantum-safe/liboqs/files/4494233/CMakeOutput.log)\r\n[CMakeError.log](https://github.com/open-quantum-safe/liboqs/files/4494234/CMakeError.log)\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/615640174","html_url":"https://github.com/open-quantum-safe/liboqs/issues/727#issuecomment-615640174","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/727","id":615640174,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTY0MDE3NA==","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"created_at":"2020-04-18T07:03:03Z","updated_at":"2020-04-18T07:03:03Z","author_association":"CONTRIBUTOR","body":"@kevinmkane I'm apologize for this patch, I didn't have the opportunity to test it. First of all, I want to say that `pthread` is not a problem. The problem is that `try_run` can't find any way to run executable files. I have found two ways to fix it.\r\n1. Install `wine` and apply this [patch](https://github.com/open-quantum-safe/liboqs/files/4496211/patch.txt).\r\n2. Set `OQS_USE_CPU_EXTENSIONS` to `OFF`."}},"public":true,"created_at":"2020-04-18T07:03:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"12088810465","type":"IssueCommentEvent","actor":{"id":21283655,"login":"Hatzen","display_login":"Hatzen","gravatar_id":"","url":"https://api.github.com/users/Hatzen","avatar_url":"https://avatars.githubusercontent.com/u/21283655?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/594","id":555115211,"node_id":"MDU6SXNzdWU1NTUxMTUyMTE=","number":594,"title":"Add options for iOS and Android cross-compilation","user":{"login":"nicholasfulton","id":28460918,"node_id":"MDQ6VXNlcjI4NDYwOTE4","avatar_url":"https://avatars1.githubusercontent.com/u/28460918?v=4","gravatar_id":"","url":"https://api.github.com/users/nicholasfulton","html_url":"https://github.com/nicholasfulton","followers_url":"https://api.github.com/users/nicholasfulton/followers","following_url":"https://api.github.com/users/nicholasfulton/following{/other_user}","gists_url":"https://api.github.com/users/nicholasfulton/gists{/gist_id}","starred_url":"https://api.github.com/users/nicholasfulton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicholasfulton/subscriptions","organizations_url":"https://api.github.com/users/nicholasfulton/orgs","repos_url":"https://api.github.com/users/nicholasfulton/repos","events_url":"https://api.github.com/users/nicholasfulton/events{/privacy}","received_events_url":"https://api.github.com/users/nicholasfulton/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2020-01-25T17:54:31Z","updated_at":"2020-04-18T20:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"I'm attempting to build liboqs for both iOS and Android for a Xamarin.Forms project, and haven't been able to manipulate the included build and configuration files to make that work. If it would be possible, add configuration or documentation to help with cross-compiling the library for iOS and Android, ideally targeting multiple processor configurations. Thanks!"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/615943017","html_url":"https://github.com/open-quantum-safe/liboqs/issues/594#issuecomment-615943017","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/594","id":615943017,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNTk0MzAxNw==","user":{"login":"Hatzen","id":21283655,"node_id":"MDQ6VXNlcjIxMjgzNjU1","avatar_url":"https://avatars0.githubusercontent.com/u/21283655?v=4","gravatar_id":"","url":"https://api.github.com/users/Hatzen","html_url":"https://github.com/Hatzen","followers_url":"https://api.github.com/users/Hatzen/followers","following_url":"https://api.github.com/users/Hatzen/following{/other_user}","gists_url":"https://api.github.com/users/Hatzen/gists{/gist_id}","starred_url":"https://api.github.com/users/Hatzen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hatzen/subscriptions","organizations_url":"https://api.github.com/users/Hatzen/orgs","repos_url":"https://api.github.com/users/Hatzen/repos","events_url":"https://api.github.com/users/Hatzen/events{/privacy}","received_events_url":"https://api.github.com/users/Hatzen/received_events","type":"User","site_admin":false},"created_at":"2020-04-18T20:34:25Z","updated_at":"2020-04-18T20:34:25Z","author_association":"NONE","body":"@nicholasfulton thanks for your fast response. The last days i tried it a few times but could not get it working. Probably it is my bad but i cant get any useful informations from the logs or readme files. I tried around using different versions and installing different packages without any effect. Do you have any thoughts what i am doing wrong?\r\n\r\n<details>\r\n  <summary>Detailed setup of ubuntu subsystem and error logs</summary>\r\n  \r\n  Using a clean installed ubuntu 18.04 LTS on Windows subsystem\r\n   ```shell\r\n   pwd\r\n   >/home/hatzen\r\n   sudo su\r\n   apt-get update   \r\n   mkdir liboqs    \r\n   cd liboqs\r\n   git clone https://github.com/open-quantum-safe/liboqs.git   \r\n   mkdir ndk      \r\n   cd ndk\r\n   wget https://dl.google.com/android/repository/android-ndk-r21-linux-x86_64.zip \r\n   apt-get install unzip  \r\n   unzip android-ndk-r21-linux-x86_64.zip\r\n   apt-get install -y build-essential cmake libssl-dev    \r\n   cd /home/hatzen/liboqs/liboqs/scripts     \r\n   bash build-android.sh /home/hatzen/liboqs/ndk/android-ndk-r21\r\n       Valid directory for NDK at /home/hatzen/liboqs/ndk/android-ndk-r21\r\n       Compiling for ABI armeabi-v7a\r\n       Compiling for SDK 21\r\n       Cleaning up previous build\r\n       Building in directory build\r\n       -- The ASM compiler identification is Clang\r\n       -- Found assembler: /home/hatzen/liboqs/ndk/android-ndk-r21/toolchains/llvm/prebuilt/linux-x86_64/bin/clang\r\n       -- Check for working C compiler: /home/hatzen/liboqs/ndk/android-ndk-r21/toolchains/llvm/prebuilt/linux-x86_64/bin/clang\r\n       -- Check for working C compiler: /home/hatzen/liboqs/ndk/android-ndk-r21/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -- works\r\n       -- Detecting C compiler ABI info\r\n       -- Detecting C compiler ABI info - done\r\n       -- Detecting C compile features\r\n       -- Detecting C compile features - done\r\n       -- Looking for pthread.h\r\n       -- Looking for pthread.h - found\r\n       -- Looking for pthread_create\r\n       -- Looking for pthread_create - found\r\n       -- Found Threads: TRUE\r\n       CMake Error at .CMake/gcc_clang_intrinsics.cmake:6 (message):\r\n         .CMake/detect_gcc_clang_intrinsics.c returned exit code:\r\n       Call Stack (most recent call first):\r\n         .CMake/compiler_opts.cmake:13 (include)\r\n         CMakeLists.txt:40 (include)\r\n       \r\n       \r\n       -- Configuring incomplete, errors occurred!\r\n       See also \"/home/hatzen/liboqs/liboqs/build/CMakeFiles/CMakeOutput.log\".\r\n   ```\r\nA Copy of /home/hatzen/liboqs/liboqs/build/CMakeFiles/CMakeOutput.log\r\n\r\n\r\nMaybe other useful version informations\r\n```\r\ncmake --version\r\ncmake version 3.10.2\r\nopenssl version\r\nOpenSSL 1.1.1  11 Sep 2018\r\ngcc --version\r\ngcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\r\n```\r\n\r\n</details>\r\n\r\n\r\n "}},"public":true,"created_at":"2020-04-18T20:34:25Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
