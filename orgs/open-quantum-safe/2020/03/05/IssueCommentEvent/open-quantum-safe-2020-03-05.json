{"id":"11682646789","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/645","id":575913766,"node_id":"MDU6SXNzdWU1NzU5MTM3NjY=","number":645,"title":"Allow shared secret to be supplied to methods","user":{"login":"nicholasfulton","id":28460918,"node_id":"MDQ6VXNlcjI4NDYwOTE4","avatar_url":"https://avatars1.githubusercontent.com/u/28460918?v=4","gravatar_id":"","url":"https://api.github.com/users/nicholasfulton","html_url":"https://github.com/nicholasfulton","followers_url":"https://api.github.com/users/nicholasfulton/followers","following_url":"https://api.github.com/users/nicholasfulton/following{/other_user}","gists_url":"https://api.github.com/users/nicholasfulton/gists{/gist_id}","starred_url":"https://api.github.com/users/nicholasfulton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicholasfulton/subscriptions","organizations_url":"https://api.github.com/users/nicholasfulton/orgs","repos_url":"https://api.github.com/users/nicholasfulton/repos","events_url":"https://api.github.com/users/nicholasfulton/events{/privacy}","received_events_url":"https://api.github.com/users/nicholasfulton/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-05T00:32:44Z","updated_at":"2020-03-05T00:47:46Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"I'm not sure how difficult this would be. After looking through the code it seems that the shared secret generation is happening at a somewhat high level, so the ability to pass a shared secret into the methods would be helpful."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/594968913","html_url":"https://github.com/open-quantum-safe/liboqs/issues/645#issuecomment-594968913","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645","id":594968913,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDk2ODkxMw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T00:47:46Z","updated_at":"2020-03-05T00:47:46Z","author_association":"MEMBER","body":"I don't really understand what you're requesting here.  The structure of KEMs is that they *generate* a shared secret, not that they receive a shared secret."}},"public":true,"created_at":"2020-03-05T00:47:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11682717784","type":"IssueCommentEvent","actor":{"id":28460918,"login":"nicholasfulton","display_login":"nicholasfulton","gravatar_id":"","url":"https://api.github.com/users/nicholasfulton","avatar_url":"https://avatars.githubusercontent.com/u/28460918?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/645","id":575913766,"node_id":"MDU6SXNzdWU1NzU5MTM3NjY=","number":645,"title":"Allow shared secret to be supplied to methods","user":{"login":"nicholasfulton","id":28460918,"node_id":"MDQ6VXNlcjI4NDYwOTE4","avatar_url":"https://avatars1.githubusercontent.com/u/28460918?v=4","gravatar_id":"","url":"https://api.github.com/users/nicholasfulton","html_url":"https://github.com/nicholasfulton","followers_url":"https://api.github.com/users/nicholasfulton/followers","following_url":"https://api.github.com/users/nicholasfulton/following{/other_user}","gists_url":"https://api.github.com/users/nicholasfulton/gists{/gist_id}","starred_url":"https://api.github.com/users/nicholasfulton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicholasfulton/subscriptions","organizations_url":"https://api.github.com/users/nicholasfulton/orgs","repos_url":"https://api.github.com/users/nicholasfulton/repos","events_url":"https://api.github.com/users/nicholasfulton/events{/privacy}","received_events_url":"https://api.github.com/users/nicholasfulton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-05T00:32:44Z","updated_at":"2020-03-05T01:01:52Z","closed_at":"2020-03-05T01:01:52Z","author_association":"CONTRIBUTOR","body":"I'm not sure how difficult this would be. After looking through the code it seems that the shared secret generation is happening at a somewhat high level, so the ability to pass a shared secret into the methods would be helpful."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/594972587","html_url":"https://github.com/open-quantum-safe/liboqs/issues/645#issuecomment-594972587","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/645","id":594972587,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDk3MjU4Nw==","user":{"login":"nicholasfulton","id":28460918,"node_id":"MDQ6VXNlcjI4NDYwOTE4","avatar_url":"https://avatars1.githubusercontent.com/u/28460918?v=4","gravatar_id":"","url":"https://api.github.com/users/nicholasfulton","html_url":"https://github.com/nicholasfulton","followers_url":"https://api.github.com/users/nicholasfulton/followers","following_url":"https://api.github.com/users/nicholasfulton/following{/other_user}","gists_url":"https://api.github.com/users/nicholasfulton/gists{/gist_id}","starred_url":"https://api.github.com/users/nicholasfulton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicholasfulton/subscriptions","organizations_url":"https://api.github.com/users/nicholasfulton/orgs","repos_url":"https://api.github.com/users/nicholasfulton/repos","events_url":"https://api.github.com/users/nicholasfulton/events{/privacy}","received_events_url":"https://api.github.com/users/nicholasfulton/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T01:01:51Z","updated_at":"2020-03-05T01:01:51Z","author_association":"CONTRIBUTOR","body":"I see. I misunderstood exactly how they worked. With RSA, there seems to be more flexibility as to the key length, data format, etc., but also RSA is completely different in many respects. Thanks!"}},"public":true,"created_at":"2020-03-05T01:01:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11688794537","type":"IssueCommentEvent","actor":{"id":29727445,"login":"zrlmib","display_login":"zrlmib","gravatar_id":"","url":"https://api.github.com/users/zrlmib","avatar_url":"https://avatars.githubusercontent.com/u/29727445?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/35","id":364087979,"node_id":"MDU6SXNzdWUzNjQwODc5Nzk=","number":35,"title":"Add OQS KEM and SIG algorithms to openssl speed on OQS-OpenSSL_1_1_1-stable branch","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":1135734043,"node_id":"MDU6TGFiZWwxMTM1NzM0MDQz","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/OpenSSL-111","name":"OpenSSL-111","color":"c918c0","default":false,"description":"Changes specific to OQS-OpenSSL_1_1_1-stable branch"},{"id":431027941,"node_id":"MDU6TGFiZWw0MzEwMjc5NDE=","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-09-26T15:26:16Z","updated_at":"2020-03-05T15:05:04Z","closed_at":null,"author_association":"MEMBER","body":""},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/595276550","html_url":"https://github.com/open-quantum-safe/openssl/issues/35#issuecomment-595276550","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35","id":595276550,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTI3NjU1MA==","user":{"login":"zrlmib","id":29727445,"node_id":"MDQ6VXNlcjI5NzI3NDQ1","avatar_url":"https://avatars1.githubusercontent.com/u/29727445?v=4","gravatar_id":"","url":"https://api.github.com/users/zrlmib","html_url":"https://github.com/zrlmib","followers_url":"https://api.github.com/users/zrlmib/followers","following_url":"https://api.github.com/users/zrlmib/following{/other_user}","gists_url":"https://api.github.com/users/zrlmib/gists{/gist_id}","starred_url":"https://api.github.com/users/zrlmib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zrlmib/subscriptions","organizations_url":"https://api.github.com/users/zrlmib/orgs","repos_url":"https://api.github.com/users/zrlmib/repos","events_url":"https://api.github.com/users/zrlmib/events{/privacy}","received_events_url":"https://api.github.com/users/zrlmib/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T15:05:04Z","updated_at":"2020-03-05T15:05:04Z","author_association":"NONE","body":"OK, I upgraded the `speed` code from 1.0.2 to 1.1.1 (https://github.com/baentsch/openssl/blob/speed/apps/speed.c) but I’m not sure it’s exactly what we want:\n\n \n\nThis delivers nicely _all_ KEMs’ speed test results (via the OpenSSL speed mechanism) but it has no relationship as to the KEMs we _actually_ support in OpenSSL, incl. the hybrid ones…\n\n \n\n What’s your take: Shall we reduce the numbers or KEMs/SIGs available to `openssl speed` testing to those that are also supported in `crypto/ec/oqs_meth` OR do we want to keep running all? For the latter I could issue a PR right away but I’d argue for the former as the latter is basically already provided by liboqs-provided test apps (speed_kem, speed_sig).\n\n \n\nFrom: Douglas Stebila <notifications@github.com>\nReply to: open-quantum-safe/openssl <reply@reply.github.com>\nDate: Wednesday, 4 March 2020 at 18:38\nTo: open-quantum-safe/openssl <openssl@noreply.github.com>\nCc: Subscribed <subscribed@noreply.github.com>\nSubject: [EXTERNAL] Re: [open-quantum-safe/openssl] Add OQS KEM and SIG algorithms to openssl speed on OQS-OpenSSL_1_1_1-stable branch (#35)\n\n \n\nFor SIGs hopefully we could indeed loop over the EVP methods as you suggest.\n\nFor the KEMs, I think we would add these by paralleling what's there for one of the ECDH curves (e.g., nistp256). Looking at what we did for openssl speed in OpenSSL 1.0.2, we were able to iterate over the list of OQS KEM algorithms at run time. Seems we should be able to replicate that in 1.1.1.\n\n—\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or unsubscribe.\n\n"}},"public":true,"created_at":"2020-03-05T15:05:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11688845626","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/35","id":364087979,"node_id":"MDU6SXNzdWUzNjQwODc5Nzk=","number":35,"title":"Add OQS KEM and SIG algorithms to openssl speed on OQS-OpenSSL_1_1_1-stable branch","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":1135734043,"node_id":"MDU6TGFiZWwxMTM1NzM0MDQz","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/OpenSSL-111","name":"OpenSSL-111","color":"c918c0","default":false,"description":"Changes specific to OQS-OpenSSL_1_1_1-stable branch"},{"id":431027941,"node_id":"MDU6TGFiZWw0MzEwMjc5NDE=","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-09-26T15:26:16Z","updated_at":"2020-03-05T15:09:43Z","closed_at":null,"author_association":"MEMBER","body":""},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/595279057","html_url":"https://github.com/open-quantum-safe/openssl/issues/35#issuecomment-595279057","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/35","id":595279057,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTI3OTA1Nw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T15:09:42Z","updated_at":"2020-03-05T15:09:42Z","author_association":"MEMBER","body":"OK, I upgraded the `speed` code from 1.0.2 to 1.1.1 (https://github.com/baentsch/openssl/blob/speed/apps/speed.c) but I’m not sure it’s exactly what we want:\r\n\r\nThis delivers nicely _all_ KEMs’ speed test results (via the OpenSSL speed mechanism) but it has no relationship as to the KEMs we _actually_ support in OpenSSL, incl. the hybrid ones…\r\n\r\n\r\n\r\n--> What’s your take: Shall we reduce the numbers or KEMs/SIGs available to `openssl speed` testing to those that are also supported in `crypto/ec/oqs_meth` OR do we want to keep running all? For the latter I could issue a PR right away but I’d argue for the former as the latter is basically already provided by liboqs-provided test apps (speed_kem, speed_sig)."}},"public":true,"created_at":"2020-03-05T15:09:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11689392391","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/633","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/633/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/633/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/633/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/633","id":572508818,"node_id":"MDExOlB1bGxSZXF1ZXN0MzgxMTkzMDUy","number":633,"title":"Clear compiler warnings","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2020-02-28T04:16:12Z","updated_at":"2020-03-05T16:00:00Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/633","html_url":"https://github.com/open-quantum-safe/liboqs/pull/633","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/633.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/633.patch"},"body":"Fixes #564.  Turns `-Werror` back on.\r\n\r\nI discovered three different types of warnings:\r\n\r\n1. Warnings that we should actually fixed.  These have been fixed.\r\n2. Warnings that are technically things that should be fixed if we're being really pedantic, but aren't worth changing.  (For example, an issue with how const is interpreted on typedef'd typedef'd datatypes in SIKE, or unused functions in the way SIKE includes files.)  These have been worked around by disabling those warnings in the relevant subdirectory (e.g., in SIKE's CMakeLists.txt, but not in the top-level CMakeLists.txt).\r\n3. Warnings that are bugs in the compiler.  (For example, how `{0}` is interpreted by gcc-4.9.)  These have been worked around by disabling those warnings in the relevant subdirectory.  For gcc-4.9, in fact one type of warning can't be disabled, so I have disabled `-Werror` on that subdirectory when running gcc-4.9.\r\n\r\nThe summary is that a small number of warnings on some versions of gcc have been disabled or do not trigger errors in a limited number of directories.  All warnings on clang should trigger build failures."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/595305472","html_url":"https://github.com/open-quantum-safe/liboqs/pull/633#issuecomment-595305472","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/633","id":595305472,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTMwNTQ3Mg==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T16:00:00Z","updated_at":"2020-03-05T16:00:00Z","author_association":"MEMBER","body":"> Looking into, the Picnic code is already checking if aligned_alloc is properly available on the platform, so think we can ignore this. I've disabled this particular compiler warning for Picnic in commit [3ec60af](https://github.com/open-quantum-safe/liboqs/commit/3ec60af7202f9147a7b0e2cc8f9902419492e83a), can you see if that clears it, @xvzcf?\r\n\r\nIt did.\r\n\r\n"}},"public":true,"created_at":"2020-03-05T16:00:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11689739806","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/646","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/646/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/646/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/646/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/646","id":576089457,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzg0MTQ0MTcy","number":646,"title":"Fix BIKE code to not depend on char","user":{"login":"drucker-nir","id":34063241,"node_id":"MDQ6VXNlcjM0MDYzMjQx","avatar_url":"https://avatars0.githubusercontent.com/u/34063241?v=4","gravatar_id":"","url":"https://api.github.com/users/drucker-nir","html_url":"https://github.com/drucker-nir","followers_url":"https://api.github.com/users/drucker-nir/followers","following_url":"https://api.github.com/users/drucker-nir/following{/other_user}","gists_url":"https://api.github.com/users/drucker-nir/gists{/gist_id}","starred_url":"https://api.github.com/users/drucker-nir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drucker-nir/subscriptions","organizations_url":"https://api.github.com/users/drucker-nir/orgs","repos_url":"https://api.github.com/users/drucker-nir/repos","events_url":"https://api.github.com/users/drucker-nir/events{/privacy}","received_events_url":"https://api.github.com/users/drucker-nir/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-05T08:53:51Z","updated_at":"2020-03-05T16:32:35Z","closed_at":null,"author_association":"COLLABORATOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/646","html_url":"https://github.com/open-quantum-safe/liboqs/pull/646","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/646.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/646.patch"},"body":"This PR partially resolves https://github.com/open-quantum-safe/liboqs/pull/633 and also merges BIKE's latest code. \r\n\r\nBIKE code package is compiled with \"-funsigned-char\". The reason is (according to [gcc C-Dialect-Options](https://gcc.gnu.org/onlinedocs/gcc/C-Dialect-Options.html)) that:\r\n> Each kind of machine has a default for what char should be. It is either like unsigned char by default or like signed char by default. [...]\r\nThe type char is always a distinct type from each of signed char or unsigned char, even though its behavior is always just like one of those two.\r\n\r\nWhen this flag is set `char` is always treated as `unsigned char`. \r\n\r\nIn order to allow the code to be compiled as part of other libraries (e.g., LibOQS) we removed this flag from BIKE code package and updated the code accordingly.\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/595322189","html_url":"https://github.com/open-quantum-safe/liboqs/pull/646#issuecomment-595322189","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/646","id":595322189,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTMyMjE4OQ==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T16:32:35Z","updated_at":"2020-03-05T16:32:35Z","author_association":"CONTRIBUTOR","body":"This works on my Ubuntu on WSL."}},"public":true,"created_at":"2020-03-05T16:32:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11690279898","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/647","id":576188279,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzg0MjIzNTcw","number":647,"title":"Added option to make the library portable","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-05T11:33:56Z","updated_at":"2020-03-05T17:27:46Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/647","html_url":"https://github.com/open-quantum-safe/liboqs/pull/647","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/647.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/647.patch"},"body":""},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/595350438","html_url":"https://github.com/open-quantum-safe/liboqs/pull/647#issuecomment-595350438","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647","id":595350438,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM1MDQzOA==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T17:27:45Z","updated_at":"2020-03-05T17:27:45Z","author_association":"MEMBER","body":"Hi @gadoofou87, I don't think this option is necessary. \r\n\r\nCode that makes use of CPU extensions can be introduced into the build process only when the `USE_*_INSTRUCTIONS` options are set, which happens when the `.CMake/cpu-extensions.cmake` file is included, which is only when `CMAKE_BUILD_TYPE` is not `Debug` or `Generic` (and when CMAKE_SYSTEM_NAME is not `Android`).\r\n\r\nWe can compile portable (and optimized) code by running `cmake .. -DCMAKE_BUILD_TYPE=Generic`.\r\n\r\n"}},"public":true,"created_at":"2020-03-05T17:27:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11690398440","type":"IssueCommentEvent","actor":{"id":58735248,"login":"gadoofou87","display_login":"gadoofou87","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","avatar_url":"https://avatars.githubusercontent.com/u/58735248?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/647","id":576188279,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzg0MjIzNTcw","number":647,"title":"Added option to make the library portable","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-05T11:33:56Z","updated_at":"2020-03-05T17:41:03Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/647","html_url":"https://github.com/open-quantum-safe/liboqs/pull/647","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/647.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/647.patch"},"body":""},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/595356524","html_url":"https://github.com/open-quantum-safe/liboqs/pull/647#issuecomment-595356524","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647","id":595356524,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM1NjUyNA==","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T17:41:03Z","updated_at":"2020-03-05T17:41:03Z","author_association":"CONTRIBUTOR","body":"Hi @xvzcf, sorry for my inattention, I'll close the PR. "}},"public":true,"created_at":"2020-03-05T17:41:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11690428376","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/647","id":576188279,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzg0MjIzNTcw","number":647,"title":"Added option to make the library portable","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-03-05T11:33:56Z","updated_at":"2020-03-05T17:44:32Z","closed_at":"2020-03-05T17:41:13Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/647","html_url":"https://github.com/open-quantum-safe/liboqs/pull/647","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/647.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/647.patch"},"body":""},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/595358067","html_url":"https://github.com/open-quantum-safe/liboqs/pull/647#issuecomment-595358067","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/647","id":595358067,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM1ODA2Nw==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T17:44:32Z","updated_at":"2020-03-05T17:44:32Z","author_association":"MEMBER","body":"No problem. "}},"public":true,"created_at":"2020-03-05T17:44:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11691278465","type":"IssueCommentEvent","actor":{"id":47870738,"login":"RLuuPOC","display_login":"RLuuPOC","gravatar_id":"","url":"https://api.github.com/users/RLuuPOC","avatar_url":"https://avatars.githubusercontent.com/u/47870738?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/153","id":574912133,"node_id":"MDU6SXNzdWU1NzQ5MTIxMzM=","number":153,"title":"Kyber algorithms not found","user":{"login":"RLuuPOC","id":47870738,"node_id":"MDQ6VXNlcjQ3ODcwNzM4","avatar_url":"https://avatars0.githubusercontent.com/u/47870738?v=4","gravatar_id":"","url":"https://api.github.com/users/RLuuPOC","html_url":"https://github.com/RLuuPOC","followers_url":"https://api.github.com/users/RLuuPOC/followers","following_url":"https://api.github.com/users/RLuuPOC/following{/other_user}","gists_url":"https://api.github.com/users/RLuuPOC/gists{/gist_id}","starred_url":"https://api.github.com/users/RLuuPOC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RLuuPOC/subscriptions","organizations_url":"https://api.github.com/users/RLuuPOC/orgs","repos_url":"https://api.github.com/users/RLuuPOC/repos","events_url":"https://api.github.com/users/RLuuPOC/events{/privacy}","received_events_url":"https://api.github.com/users/RLuuPOC/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-03T20:11:04Z","updated_at":"2020-03-05T19:25:08Z","closed_at":"2020-03-03T21:03:57Z","author_association":"NONE","body":"Hi,\r\nI am new to OQS Openssl but I did use Openssl (release ver. 1.1.1d) to generate out public and private keys with RSA and encrypt/decrypt file with AES-CBC. I tried to use quantum resistance key encapsulation mechanism through Kyber and signature schemes with Dilithium for my project. \r\nI followed instruction to build openssl with libops and the build seemed OK (version 1.1.1d with many warning in libops library). I got \"Algorithm kyber512 not found\" error message when generated private key using \"genpkey\" command.  See attached screen capture.  \r\nBelow is the steps I used on my computer, ubuntu 18.04.\r\n1. sudo apt install cmake gcc libtool libssl-dev make ninja-build unzip xsltproc\r\n2.  git clone --branch OQS-OpenSSL_1_1_1-stable https://github.com/open-quantum-safe/openssl.git Qopenssl\r\n3. git clone --branch master https://github.com/open-quantum-safe/liboqs.git\r\ncd liboqs\r\nmkdir build && cd build\r\ncmake -GNinja -DCMAKE_INSTALL_PREFIX=/home/test/Qopenssl/oqs ..\r\nninja\r\nninja install\r\n4.  ./Configure no-shared linux-x86_64 -lm\r\nmake -j\r\n\r\nPlease assist.\r\nThanks,\r\nRaymond \r\n![Kyber512-not-found](https://user-images.githubusercontent.com/47870738/75815219-dffa3780-5d47-11ea-8542-49a003b2644f.png)\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/595403102","html_url":"https://github.com/open-quantum-safe/openssl/issues/153#issuecomment-595403102","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153","id":595403102,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQwMzEwMg==","user":{"login":"RLuuPOC","id":47870738,"node_id":"MDQ6VXNlcjQ3ODcwNzM4","avatar_url":"https://avatars0.githubusercontent.com/u/47870738?v=4","gravatar_id":"","url":"https://api.github.com/users/RLuuPOC","html_url":"https://github.com/RLuuPOC","followers_url":"https://api.github.com/users/RLuuPOC/followers","following_url":"https://api.github.com/users/RLuuPOC/following{/other_user}","gists_url":"https://api.github.com/users/RLuuPOC/gists{/gist_id}","starred_url":"https://api.github.com/users/RLuuPOC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RLuuPOC/subscriptions","organizations_url":"https://api.github.com/users/RLuuPOC/orgs","repos_url":"https://api.github.com/users/RLuuPOC/repos","events_url":"https://api.github.com/users/RLuuPOC/events{/privacy}","received_events_url":"https://api.github.com/users/RLuuPOC/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T19:25:08Z","updated_at":"2020-03-05T19:25:08Z","author_association":"NONE","body":"Hi Douglas,\r\nI even tried simple commands from TLS demo section (Readme.md) but they did not even recognize Kyber512 algo.\r\n\r\n1.  ./apps/openssl req -x509 -new -newkey kyber512 -keyout kyber512_CA.key -out kyber512_CA.crt \r\n2.  ./apps/openssl genpkey -algorithm kyber512 -out kyber512_srv.key\r\n\r\nYour response stated that kyber algo is not available through command-line tool such as openssl.  So, the above two command lines will NOT work.  Please confirm/clarify.\r\n\r\nMy objective is to demonstrate that I can generate out public and private keys from quantum resistance algorithm such as Kyber for my project.  This seems like not feasible through OQS using openssl.\r\n\r\nPlease response.\r\nThanks,\r\nRaymond \r\n"}},"public":true,"created_at":"2020-03-05T19:25:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11691492215","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/156","id":576461675,"node_id":"MDU6SXNzdWU1NzY0NjE2NzU=","number":156,"title":"How to choose algortihm for KEX/GEM of my choice?","user":{"login":"ReverseControl","id":6852543,"node_id":"MDQ6VXNlcjY4NTI1NDM=","avatar_url":"https://avatars3.githubusercontent.com/u/6852543?v=4","gravatar_id":"","url":"https://api.github.com/users/ReverseControl","html_url":"https://github.com/ReverseControl","followers_url":"https://api.github.com/users/ReverseControl/followers","following_url":"https://api.github.com/users/ReverseControl/following{/other_user}","gists_url":"https://api.github.com/users/ReverseControl/gists{/gist_id}","starred_url":"https://api.github.com/users/ReverseControl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ReverseControl/subscriptions","organizations_url":"https://api.github.com/users/ReverseControl/orgs","repos_url":"https://api.github.com/users/ReverseControl/repos","events_url":"https://api.github.com/users/ReverseControl/events{/privacy}","received_events_url":"https://api.github.com/users/ReverseControl/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-05T18:52:36Z","updated_at":"2020-03-05T19:50:16Z","closed_at":null,"author_association":"NONE","body":"It is unclear, and seemingly impossible after trying hard, to select a quantum algorithm for KEM/KEX of my choice, or at all for that matter. The example given with the internal TLS server/client designed for testing works like a charm, but if I wanted to choose a quantum algorithm for KEM/KEX say for a vpn, or generate the parameters to use one for a configuration file, there seems to be no way of doing this. With the OQS-Openssl_1.0.2 one can specify the ciphersuite and that takes care of it because in that version the ciphersuite definition includes the KEM/KEX, but in OpenSSL 1.1.1 KEM/KEX is no longer in the ciphersuite, and creating \"curves\" for the Qalgorithms using the OpenSSL API for EC is no go. \r\n\r\nEven the demos for nginx/curl/httpd do not mention how to choose one over the others. Could you please advice on how to do this?\r\n\r\nThank you.\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/595414785","html_url":"https://github.com/open-quantum-safe/openssl/issues/156#issuecomment-595414785","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156","id":595414785,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQxNDc4NQ==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T19:50:16Z","updated_at":"2020-03-05T19:50:16Z","author_association":"MEMBER","body":"For TLS 1.3, the OQS key-exchange algorithms only pretend to be elliptic curves in the `ssl` layer, so that an algorithm can be negotiated using the `supported_groups` and `key_share` TLS 1.3 extensions. They haven't been added to the EC API since they aren't really elliptic curves, and cannot be manipulated as such.\r\n\r\nThus, you should be able to specify a PQ key-exchange by passing an OQS algorithm name to an option/directive through which an EC curve/group can be named. This option name will vary based on the application, but, for example, to use `frodo640aes`:\r\n\r\n1) In OpenSSL `s_client`, you can pass the `-curves frodo640aes` option. This will instruct `s_client` to allow only `frodo640aes` for key-exchange.\r\n2) In OpenSSL `s_server`: You can again pass the `-curves frodo640aes` option. Again, this means `s_server` will allow only `frodo640aes` for key-exchange.\r\n3) In `nginx`: You can specify `ssl_ecdh_curve frodo640aes` in the `nginx.conf` file (as seen [here]( https://github.com/open-quantum-safe/oqs-demos/blob/master/nginx/nginx.conf#L107)). `nginx` will then allow only `frodo640aes` for key-exchange. \r\n4) In `httpd`: You can specify `SSLOpenSSLConfCmd Curves frodo640aes` in the `httpd-ssl.conf` file (as seen [here](https://github.com/open-quantum-safe/oqs-demos/blob/master/httpd/httpd-ssl.conf#L54))\r\n4) In OpenVPN, after consulting [this page](https://github.com/OpenVPN/openvpn/blob/master/README.ec#L18), I believe the `ecdh-curve frodo640aes` option should do the trick. I have not tried it however.\r\n\r\nNow, if, for example, you want to support both `frodo640aes` and `kyber512`, and no more, you can replace `frodo640aes` above with `frodo640aes:kyber512`. The \"Key Exchange\" section [here](https://github.com/open-quantum-safe/openssl#supported-algorithms) gives a full list of the key-exchange algorithm names you can specify.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}},"public":true,"created_at":"2020-03-05T19:50:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11691758890","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/153","id":574912133,"node_id":"MDU6SXNzdWU1NzQ5MTIxMzM=","number":153,"title":"Kyber algorithms not found","user":{"login":"RLuuPOC","id":47870738,"node_id":"MDQ6VXNlcjQ3ODcwNzM4","avatar_url":"https://avatars0.githubusercontent.com/u/47870738?v=4","gravatar_id":"","url":"https://api.github.com/users/RLuuPOC","html_url":"https://github.com/RLuuPOC","followers_url":"https://api.github.com/users/RLuuPOC/followers","following_url":"https://api.github.com/users/RLuuPOC/following{/other_user}","gists_url":"https://api.github.com/users/RLuuPOC/gists{/gist_id}","starred_url":"https://api.github.com/users/RLuuPOC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RLuuPOC/subscriptions","organizations_url":"https://api.github.com/users/RLuuPOC/orgs","repos_url":"https://api.github.com/users/RLuuPOC/repos","events_url":"https://api.github.com/users/RLuuPOC/events{/privacy}","received_events_url":"https://api.github.com/users/RLuuPOC/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-03T20:11:04Z","updated_at":"2020-03-05T20:22:32Z","closed_at":"2020-03-03T21:03:57Z","author_association":"NONE","body":"Hi,\r\nI am new to OQS Openssl but I did use Openssl (release ver. 1.1.1d) to generate out public and private keys with RSA and encrypt/decrypt file with AES-CBC. I tried to use quantum resistance key encapsulation mechanism through Kyber and signature schemes with Dilithium for my project. \r\nI followed instruction to build openssl with libops and the build seemed OK (version 1.1.1d with many warning in libops library). I got \"Algorithm kyber512 not found\" error message when generated private key using \"genpkey\" command.  See attached screen capture.  \r\nBelow is the steps I used on my computer, ubuntu 18.04.\r\n1. sudo apt install cmake gcc libtool libssl-dev make ninja-build unzip xsltproc\r\n2.  git clone --branch OQS-OpenSSL_1_1_1-stable https://github.com/open-quantum-safe/openssl.git Qopenssl\r\n3. git clone --branch master https://github.com/open-quantum-safe/liboqs.git\r\ncd liboqs\r\nmkdir build && cd build\r\ncmake -GNinja -DCMAKE_INSTALL_PREFIX=/home/test/Qopenssl/oqs ..\r\nninja\r\nninja install\r\n4.  ./Configure no-shared linux-x86_64 -lm\r\nmake -j\r\n\r\nPlease assist.\r\nThanks,\r\nRaymond \r\n![Kyber512-not-found](https://user-images.githubusercontent.com/47870738/75815219-dffa3780-5d47-11ea-8542-49a003b2644f.png)\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/595428757","html_url":"https://github.com/open-quantum-safe/openssl/issues/153#issuecomment-595428757","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/153","id":595428757,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQyODc1Nw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T20:22:32Z","updated_at":"2020-03-05T20:22:32Z","author_association":"MEMBER","body":"You are confusing KEMs and signature schemes.  X509 certificates are about signature schemes.  Kyber is a KEM."}},"public":true,"created_at":"2020-03-05T20:22:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11692959842","type":"IssueCommentEvent","actor":{"id":6852543,"login":"ReverseControl","display_login":"ReverseControl","gravatar_id":"","url":"https://api.github.com/users/ReverseControl","avatar_url":"https://avatars.githubusercontent.com/u/6852543?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/156","id":576461675,"node_id":"MDU6SXNzdWU1NzY0NjE2NzU=","number":156,"title":"How to choose algortihm for KEX/GEM of my choice?","user":{"login":"ReverseControl","id":6852543,"node_id":"MDQ6VXNlcjY4NTI1NDM=","avatar_url":"https://avatars3.githubusercontent.com/u/6852543?v=4","gravatar_id":"","url":"https://api.github.com/users/ReverseControl","html_url":"https://github.com/ReverseControl","followers_url":"https://api.github.com/users/ReverseControl/followers","following_url":"https://api.github.com/users/ReverseControl/following{/other_user}","gists_url":"https://api.github.com/users/ReverseControl/gists{/gist_id}","starred_url":"https://api.github.com/users/ReverseControl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ReverseControl/subscriptions","organizations_url":"https://api.github.com/users/ReverseControl/orgs","repos_url":"https://api.github.com/users/ReverseControl/repos","events_url":"https://api.github.com/users/ReverseControl/events{/privacy}","received_events_url":"https://api.github.com/users/ReverseControl/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-05T18:52:36Z","updated_at":"2020-03-05T23:10:21Z","closed_at":null,"author_association":"NONE","body":"It is unclear, and seemingly impossible after trying hard, to select a quantum algorithm for KEM/KEX of my choice, or at all for that matter. The example given with the internal TLS server/client designed for testing works like a charm, but if I wanted to choose a quantum algorithm for KEM/KEX say for a vpn, or generate the parameters to use one for a configuration file, there seems to be no way of doing this. With the OQS-Openssl_1.0.2 one can specify the ciphersuite and that takes care of it because in that version the ciphersuite definition includes the KEM/KEX, but in OpenSSL 1.1.1 KEM/KEX is no longer in the ciphersuite, and creating \"curves\" for the Qalgorithms using the OpenSSL API for EC is no go. \r\n\r\nEven the demos for nginx/curl/httpd do not mention how to choose one over the others. Could you please advice on how to do this?\r\n\r\nThank you.\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/595491926","html_url":"https://github.com/open-quantum-safe/openssl/issues/156#issuecomment-595491926","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/156","id":595491926,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQ5MTkyNg==","user":{"login":"ReverseControl","id":6852543,"node_id":"MDQ6VXNlcjY4NTI1NDM=","avatar_url":"https://avatars3.githubusercontent.com/u/6852543?v=4","gravatar_id":"","url":"https://api.github.com/users/ReverseControl","html_url":"https://github.com/ReverseControl","followers_url":"https://api.github.com/users/ReverseControl/followers","following_url":"https://api.github.com/users/ReverseControl/following{/other_user}","gists_url":"https://api.github.com/users/ReverseControl/gists{/gist_id}","starred_url":"https://api.github.com/users/ReverseControl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ReverseControl/subscriptions","organizations_url":"https://api.github.com/users/ReverseControl/orgs","repos_url":"https://api.github.com/users/ReverseControl/repos","events_url":"https://api.github.com/users/ReverseControl/events{/privacy}","received_events_url":"https://api.github.com/users/ReverseControl/received_events","type":"User","site_admin":false},"created_at":"2020-03-05T23:10:21Z","updated_at":"2020-03-05T23:10:21Z","author_association":"NONE","body":"I tested with OpenVPN, it does not work. No Quantum KEMs/KEXs \"curves\" are recognized. The server uses the below curves as expected, I tested, but with \"kyber512\" and \"frodo640aes\" as per your example I get:\r\n\r\n```\r\nopenvpn   --ecdh-curve kyber512 --config openvpn.conf \r\nThu Mar  5 22:54:42 2020 OpenVPN 2.4.8 x86_64-pc-linux-musl [SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] [MH/PKTINFO] [AEAD] built on Mar  4 2020\r\nThu Mar  5 22:54:42 2020 library versions: OpenSSL 1.1.1d  10 Sep 2019, LZO 2.10\r\nThu Mar  5 22:54:42 2020 Failed to use supplied curve (kyber512), using secp384r1 instead.\r\nThu Mar  5 22:54:42 2020 ECDH curve secp384r1 added\r\n\r\n``` \r\n\r\nThe function that get's called in OpenVPN to handle the ecdh-curve parameter uses OpenSSL code, but apparently is not able to find the curves nid by name .  See below:\r\n\r\n```\r\nvoid\r\ntls_ctx_load_ecdh_params(struct tls_root_ctx *ctx, const char *curve_name\r\n                         )\r\n{\r\n#ifndef OPENSSL_NO_EC\r\n    int nid = NID_undef;\r\n    EC_KEY *ecdh = NULL;\r\n    const char *sname = NULL;\r\n\r\n    /* Generate a new ECDH key for each SSL session (for non-ephemeral ECDH) */\r\n    SSL_CTX_set_options(ctx->ctx, SSL_OP_SINGLE_ECDH_USE);\r\n\r\n    if (curve_name != NULL)\r\n    {\r\n        /* Use user supplied curve if given */\r\n        msg(D_TLS_DEBUG, \"Using user specified ECDH curve (%s)\", curve_name);\r\n        nid = OBJ_sn2nid(curve_name);\r\n    }\r\n    else\r\n    {\r\n#if OPENSSL_VERSION_NUMBER >= 0x10002000L\r\n#if (OPENSSL_VERSION_NUMBER < 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER))\r\n\r\n        /* OpenSSL 1.0.2 and newer can automatically handle ECDH parameter\r\n         * loading */\r\n        SSL_CTX_set_ecdh_auto(ctx->ctx, 1);\r\n        return;\r\n#endif\r\n#else\r\n        /* For older OpenSSL we have to extract the curve from key on our own */\r\n        EC_KEY *eckey = NULL;\r\n        const EC_GROUP *ecgrp = NULL;\r\n        EVP_PKEY *pkey = NULL;\r\n\r\n        /* Little hack to get private key ref from SSL_CTX, yay OpenSSL... */\r\n        SSL *ssl = SSL_new(ctx->ctx);\r\n        if (!ssl)\r\n        {\r\n            crypto_msg(M_FATAL, \"SSL_new failed\");\r\n        }\r\n        pkey = SSL_get_privatekey(ssl);\r\n        SSL_free(ssl);\r\n\r\n        msg(D_TLS_DEBUG, \"Extracting ECDH curve from private key\");\r\n\r\n        if (pkey != NULL && (eckey = EVP_PKEY_get1_EC_KEY(pkey)) != NULL\r\n            && (ecgrp = EC_KEY_get0_group(eckey)) != NULL)\r\n        {\r\n            nid = EC_GROUP_get_curve_name(ecgrp);\r\n        }\r\n#endif\r\n    }\r\n\r\n    /* Translate NID back to name , just for kicks */\r\n    sname = OBJ_nid2sn(nid);\r\n    if (sname == NULL)\r\n    {\r\n        sname = \"(Unknown)\";\r\n    }\r\n\r\n    /* Create new EC key and set as ECDH key */\r\n    if (NID_undef == nid || NULL == (ecdh = EC_KEY_new_by_curve_name(nid)))\r\n    {\r\n        /* Creating key failed, fall back on sane default */\r\n        ecdh = EC_KEY_new_by_curve_name(NID_secp384r1);\r\n        const char *source = (NULL == curve_name) ?\r\n                             \"extract curve from certificate\" : \"use supplied curve\";\r\n        msg(D_TLS_DEBUG_LOW,\r\n            \"Failed to %s (%s), using secp384r1 instead.\", source, sname);\r\n        sname = OBJ_nid2sn(NID_secp384r1);\r\n    }\r\n\r\n    if (!SSL_CTX_set_tmp_ecdh(ctx->ctx, ecdh))\r\n    {\r\n        crypto_msg(M_FATAL, \"SSL_CTX_set_tmp_ecdh: cannot add curve\");\r\n    }\r\n\r\n    msg(D_TLS_DEBUG_LOW, \"ECDH curve %s added\", sname);\r\n\r\n    EC_KEY_free(ecdh);\r\n#else  /* ifndef OPENSSL_NO_EC */\r\n    msg(D_LOW, \"Your OpenSSL library was built without elliptic curve support.\"\r\n        \" Skipping ECDH parameter loading.\");\r\n#endif /* OPENSSL_NO_EC */\r\n}\r\n\r\n```\r\n\r\n```\r\nopenvpn --show-curves\r\nAvailable Elliptic curves:\r\nsecp112r1\r\nsecp112r2\r\nsecp128r1\r\nsecp128r2\r\nsecp160k1\r\nsecp160r1\r\nsecp160r2\r\nsecp192k1\r\nsecp224k1\r\nsecp224r1\r\nsecp256k1\r\nsecp384r1\r\nsecp521r1\r\nprime192v1\r\nprime192v2\r\nprime192v3\r\nprime239v1\r\nprime239v2\r\nprime239v3\r\nprime256v1\r\nsect113r1\r\nsect113r2\r\nsect131r1\r\nsect131r2\r\nsect163k1\r\nsect163r1\r\nsect163r2\r\nsect193r1\r\nsect193r2\r\nsect233k1\r\nsect233r1\r\nsect239k1\r\nsect283k1\r\nsect283r1\r\nsect409k1\r\nsect409r1\r\nsect571k1\r\nsect571r1\r\nc2pnb163v1\r\nc2pnb163v2\r\nc2pnb163v3\r\nc2pnb176v1\r\nc2tnb191v1\r\nc2tnb191v2\r\nc2tnb191v3\r\nc2pnb208w1\r\nc2tnb239v1\r\nc2tnb239v2\r\nc2tnb239v3\r\nc2pnb272w1\r\nc2pnb304w1\r\nc2tnb359v1\r\nc2pnb368w1\r\nc2tnb431r1\r\nwap-wsg-idm-ecid-wtls1\r\nwap-wsg-idm-ecid-wtls3\r\nwap-wsg-idm-ecid-wtls4\r\nwap-wsg-idm-ecid-wtls5\r\nwap-wsg-idm-ecid-wtls6\r\nwap-wsg-idm-ecid-wtls7\r\nwap-wsg-idm-ecid-wtls8\r\nwap-wsg-idm-ecid-wtls9\r\nwap-wsg-idm-ecid-wtls10\r\nwap-wsg-idm-ecid-wtls11\r\nwap-wsg-idm-ecid-wtls12\r\nOakley-EC2N-3\r\nOakley-EC2N-4\r\nbrainpoolP160r1\r\nbrainpoolP160t1\r\nbrainpoolP192r1\r\nbrainpoolP192t1\r\nbrainpoolP224r1\r\nbrainpoolP224t1\r\nbrainpoolP256r1\r\nbrainpoolP256t1\r\nbrainpoolP320r1\r\nbrainpoolP320t1\r\nbrainpoolP384r1\r\nbrainpoolP384t1\r\nbrainpoolP512r1\r\nbrainpoolP512t1\r\nSM2\r\n```\r\n"}},"public":true,"created_at":"2020-03-05T23:49:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
