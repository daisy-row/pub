{"id":"11850731813","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/654","id":578429772,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzg2MDExMDcx","number":654,"title":"Use cpu_features instead of __builtin_cpu","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":21,"created_at":"2020-03-10T09:02:19Z","updated_at":"2020-03-24T17:03:21Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/654","html_url":"https://github.com/open-quantum-safe/liboqs/pull/654","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/654.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/654.patch"},"body":"FMA4 and SSE4A detection is not supported by the library. Additionally enables NEON detection in Picnic"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/603372488","html_url":"https://github.com/open-quantum-safe/liboqs/pull/654#issuecomment-603372488","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654","id":603372488,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMzM3MjQ4OA==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-03-24T17:03:21Z","updated_at":"2020-03-24T17:03:21Z","author_association":"MEMBER","body":"One last thing. We maintain a list of contributors [here](https://github.com/open-quantum-safe/liboqs/blob/master/CONTRIBUTORS). If you'd like, you can add your name and/or your affiliation/link to GitHub profile there. The choice is yours."}},"public":true,"created_at":"2020-03-24T17:03:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11851016907","type":"IssueCommentEvent","actor":{"id":58735248,"login":"gadoofou87","display_login":"gadoofou87","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","avatar_url":"https://avatars.githubusercontent.com/u/58735248?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/654","id":578429772,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzg2MDExMDcx","number":654,"title":"Use cpu_features instead of __builtin_cpu","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":21,"created_at":"2020-03-10T09:02:19Z","updated_at":"2020-03-24T17:28:48Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/654","html_url":"https://github.com/open-quantum-safe/liboqs/pull/654","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/654.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/654.patch"},"body":"FMA4 and SSE4A detection is not supported by the library. Additionally enables NEON detection in Picnic"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/603390386","html_url":"https://github.com/open-quantum-safe/liboqs/pull/654#issuecomment-603390386","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/654","id":603390386,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMzM5MDM4Ng==","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"created_at":"2020-03-24T17:28:48Z","updated_at":"2020-03-24T17:28:48Z","author_association":"CONTRIBUTOR","body":"@xvzcf Thank you for the suggestion :)"}},"public":true,"created_at":"2020-03-24T17:28:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11852775635","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/674","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/674/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/674/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/674/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/674","id":586469533,"node_id":"MDExOlB1bGxSZXF1ZXN0MzkyNTk5Mjg1","number":674,"title":"Support to cross-compile for Windows amd64 on Linux","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars3.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-03-23T19:36:36Z","updated_at":"2020-03-24T20:36:38Z","closed_at":"2020-03-24T20:36:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/674","html_url":"https://github.com/open-quantum-safe/liboqs/pull/674","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/674.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/674.patch"},"body":"Add a toolchain file for cross-compiling for Windows amd64 on Linux.\r\n\r\nAlso make the MinGW/MSYS/Cygwin builds usable by CMake before version 3.13.0, when `add_link_options` was introduced, by settings these linker flags in the older fashion. Ubuntu 18 (Bionic) provides only version 3.10.2, and this seems to be an important build platform for cross-compiling."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/603491434","html_url":"https://github.com/open-quantum-safe/liboqs/pull/674#issuecomment-603491434","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/674","id":603491434,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMzQ5MTQzNA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-03-24T20:36:37Z","updated_at":"2020-03-24T20:36:37Z","author_association":"MEMBER","body":"Thanks @kevinmkane, I've added your instructions to the wiki."}},"public":true,"created_at":"2020-03-24T20:36:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11852783702","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/11","id":587240907,"node_id":"MDExOlB1bGxSZXF1ZXN0MzkzMjI0NTg1","number":11,"title":"TLS hybrid draft update","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-24T19:53:55Z","updated_at":"2020-03-24T20:37:37Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/11","html_url":"https://github.com/open-quantum-safe/boringssl/pull/11","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/11.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/11.patch"},"body":"1. I've updated the KeyShare format to match the Feb 2020 TLS draft. \r\n\r\n2. I've created a new class `ClassicalOQSKeyShare`, for hybrid key-exchange. This class can be instantiated and used any pair of group ID's (OQS or otherwise) and does not need to keep track of the individual algorithms' ciphertext or shared secret sizes. For example, the code has \r\n\r\n```C\r\nNew<ClassicalOQSKeyShare>(SSL_CURVE_P256_FRODO640AES, SSL_CURVE_SECP256R1, OQS_KEM_alg_frodokem_640_aes)\r\n```\r\n\r\nbut if we wanted to use `X25519`, we'd just have to change this to \r\n```C\r\nNew<ClassicalOQSKeyShare>(SSL_CURVE_P256_FRODO640AES, SSL_CURVE_X25519, OQS_KEM_alg_frodokem_640_aes)\r\n```\r\n\r\nand if we wanted Level 3 security, we'd just need to invoke \r\n\r\n```C\r\nNew<ClassicalOQSKeyShare>(SSL_CURVE_P256_FRODO640AES, SSL_CURVE_SECP384R1, OQS_KEM_alg_frodokem_976_aes)\r\n```"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/603491866","html_url":"https://github.com/open-quantum-safe/boringssl/pull/11#issuecomment-603491866","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11","id":603491866,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMzQ5MTg2Ng==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2020-03-24T20:37:37Z","updated_at":"2020-03-24T20:37:37Z","author_association":"NONE","body":"I'll take a look tonight"}},"public":true,"created_at":"2020-03-24T20:37:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11854113453","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/11","id":587240907,"node_id":"MDExOlB1bGxSZXF1ZXN0MzkzMjI0NTg1","number":11,"title":"TLS hybrid draft update","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-24T19:53:55Z","updated_at":"2020-03-24T23:47:54Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/11","html_url":"https://github.com/open-quantum-safe/boringssl/pull/11","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/11.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/11.patch"},"body":"1. I've updated the KeyShare format to match the Feb 2020 TLS draft. \r\n\r\n2. I've created a new class `ClassicalOQSKeyShare`, for hybrid key-exchange. This class can be instantiated and used any pair of group ID's (OQS or otherwise) and does not need to keep track of the individual algorithms' ciphertext or shared secret sizes. For example, the code has \r\n\r\n```C\r\nNew<ClassicalOQSKeyShare>(SSL_CURVE_P256_FRODO640AES, SSL_CURVE_SECP256R1, OQS_KEM_alg_frodokem_640_aes)\r\n```\r\n\r\nbut if we wanted to use `X25519`, we'd just have to change this to \r\n```C\r\nNew<ClassicalOQSKeyShare>(SSL_CURVE_P256_FRODO640AES, SSL_CURVE_X25519, OQS_KEM_alg_frodokem_640_aes)\r\n```\r\n\r\nand if we wanted Level 3 security, we'd just need to invoke \r\n\r\n```C\r\nNew<ClassicalOQSKeyShare>(SSL_CURVE_P256_FRODO640AES, SSL_CURVE_SECP384R1, OQS_KEM_alg_frodokem_976_aes)\r\n```"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/603562607","html_url":"https://github.com/open-quantum-safe/boringssl/pull/11#issuecomment-603562607","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/11","id":603562607,"node_id":"MDEyOklzc3VlQ29tbWVudDYwMzU2MjYwNw==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2020-03-24T23:47:54Z","updated_at":"2020-03-24T23:47:54Z","author_association":"NONE","body":"Do we have a mechanism to test interop with the openssl fork?"}},"public":true,"created_at":"2020-03-24T23:47:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
