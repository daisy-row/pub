{"id":"11910035246","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/689","id":590417596,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk1NzU1NjI4","number":689,"title":"Runtime feature detection","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-30T16:17:09Z","updated_at":"2020-03-31T05:43:30Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/689","html_url":"https://github.com/open-quantum-safe/liboqs/pull/689","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/689.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/689.patch"},"body":"This PR creates static flags to test for presence/absence of the same CPU features that we presently make available with #defines. This way, the presence of the `cpu_features` library can be completely hidden from external users. For efficiency reasons I also added an `OQS_init` method which sets these flags once so that the code for this does not have to be in all places where feature detection may be needed.\r\n\r\nPlease have a look at this proposal and let me know what you think.\r\n\r\nIf you'd be OK, integrating RT feature detection then is trivial indeed: Where we currently only have `OQS_USE_AVX2_INSTRUCTIONS` compile time switches we can augment them now with RT switches\r\n```\r\nif (OQS_RT_AVX2_INSTRUCTIONS) { \r\n   // call AVX2-enabled functions here\r\n} \r\nelse {\r\n  // call non-AVX2 code here\r\n}\r\n```"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606412720","html_url":"https://github.com/open-quantum-safe/liboqs/pull/689#issuecomment-606412720","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689","id":606412720,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjQxMjcyMA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T05:43:30Z","updated_at":"2020-03-31T05:43:30Z","author_association":"MEMBER","body":"> Can you think of a clever way of getting OQS_init to run implicitly, rather than having every calling program run it?\r\n\r\nI'm afraid I don't see an \"automatic\" way. Maybe for a shared lib but certainly not for a static version. The only way to hide `OQS_init` would be to put an \"initialisation-asserted\" call to it into all `liboqs` entry points. But if I'm not mistaken, there are many (which, admittedly, are most generated by `copy_from_pqclean`). Such a \"hidden call\" also would cause a performance deterioration to all liboqs invocations -- not large but visible. What about this proposal: We merge this as-is, wire up all PRs and do performance tests throughout the SW stack all the way down at OQS-OpenSSL apps, possibly with a version containing \"initialisation assertion calls\" to see the impact of them? If we'd do automatic initialisation, we could also make RT feature detection a #define'able feature such that users unwilling to pay the performance penalty for this (i.e., that only build a system for a fixed platform) won't have to do so.\r\n\r\nLet's decide in tomorrow's call how to proceed (maybe create an issue?)."}},"public":true,"created_at":"2020-03-31T05:43:30Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11910108725","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/666","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/666/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/666/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/666/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/666","id":583902398,"node_id":"MDU6SXNzdWU1ODM5MDIzOTg=","number":666,"title":"Ensure Keccak in picnic has separate namespace","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"assignees":[{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-03-18T17:49:36Z","updated_at":"2020-03-31T05:55:31Z","closed_at":"2020-03-31T05:55:30Z","author_association":"MEMBER","body":"Goal: PQClean algorithms referencing `KeccakP1600times4_PermuteAll_24rounds` should not accidentally \"wind up\" calling Picnic's implementation thereof"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606416428","html_url":"https://github.com/open-quantum-safe/liboqs/issues/666#issuecomment-606416428","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/666","id":606416428,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjQxNjQyOA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T05:55:30Z","updated_at":"2020-03-31T05:55:30Z","author_association":"MEMBER","body":"@christianpaquin Yes, it does: Thanks! Sorry for not closing the issue earlier."}},"public":true,"created_at":"2020-03-31T05:55:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11910266146","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/675","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/675/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/675/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/675/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/675","id":586807809,"node_id":"MDExOlB1bGxSZXF1ZXN0MzkyODY3NTcx","number":675,"title":"CPU feature copy-and-build from pqclean","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-24T09:11:51Z","updated_at":"2020-03-31T06:19:43Z","closed_at":"2020-03-31T06:19:43Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/675","html_url":"https://github.com/open-quantum-safe/liboqs/pull/675","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/675.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/675.patch"},"body":"Together with PR #654 this PR will address issue #624. CI is expected to fail as `copy_from_pqclean` is not run as regular part of the build pipeline. This PR is meant to allow review of the generator scripts. A full PR can be created after running `copy_from_pqclean` (with many more changes caused by the script).\r\n\r\n"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606424214","html_url":"https://github.com/open-quantum-safe/liboqs/pull/675#issuecomment-606424214","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/675","id":606424214,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjQyNDIxNA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T06:19:43Z","updated_at":"2020-03-31T06:19:43Z","author_association":"MEMBER","body":"Superseded by PR #686 "}},"public":true,"created_at":"2020-03-31T06:19:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11910296990","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687","id":589585018,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk1MTAxMjIx","number":687,"title":"Improved argument passing for cpu_features","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-28T14:13:32Z","updated_at":"2020-03-31T06:24:13Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/687","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/687.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/687.patch"},"body":"Addition for PR https://github.com/open-quantum-safe/liboqs/pull/681 . Removes warnings like this\r\n```\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  CMakeLists.txt:9 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n-- Check for working C compiler: C:/msys64/mingw64/bin/cc.exe\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  C:/projects/liboqs/build/cpu_features-build/CMakeFiles/CMakeTmp/CMakeLists.txt:2 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n-- Check for working C compiler: C:/msys64/mingw64/bin/cc.exe -- works\r\n-- Detecting C compiler ABI info\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  C:/projects/liboqs/build/cpu_features-build/CMakeFiles/CMakeTmp/CMakeLists.txt:2 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n```"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606425755","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687#issuecomment-606425755","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687","id":606425755,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjQyNTc1NQ==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T06:24:13Z","updated_at":"2020-03-31T06:24:13Z","author_association":"MEMBER","body":"Reading through the changes, this looks good to me. @xvzcf Would you agree this is good to merge?"}},"public":true,"created_at":"2020-03-31T06:24:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11910845643","type":"IssueCommentEvent","actor":{"id":58735248,"login":"gadoofou87","display_login":"gadoofou87","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","avatar_url":"https://avatars.githubusercontent.com/u/58735248?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","id":590838034,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk2MTA5MjA4","number":690,"title":"CircleCI testing for Windows","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-03-31T06:39:21Z","updated_at":"2020-03-31T07:34:10Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/690","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/690.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/690.patch"},"body":"Adds windows to the CCI test matrix. All tests passed on my CCI account. \r\n\r\n@dstebila: Could you please touch base with CircleCI that they also activate this for the OpenQuantumSafe account? \r\n\r\n@xvzcf I could rebase PR #683 to this to demonstrate that the `CPUFEATURES_LIBRARY` fix has no negative implications to Windows-Building and we can finally merge it in. OK?\r\n\r\n@christianpaquin Given I'm a sorry but confessing Windows-noob, could you please check that I didn't do something utterly silly here? Also, one question: How can it be that build+test on Linux takes 1.5 minutes while testing on Windows takes more than 15 minutes alone? Observing the test run, it's mostly the \"SPHINCS\" family running ultra-slow on Win. Side note: Win-build is a few seconds slower than Linux, but not much, so the CircleCI VMs for Windows are not _that_ much worse than the Linux VMs; in other words, there's something weird in the Windows test run that I don't understand."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606453598","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690#issuecomment-606453598","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","id":606453598,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjQ1MzU5OA==","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T07:34:10Z","updated_at":"2020-03-31T07:34:10Z","author_association":"CONTRIBUTOR","body":"@baentsch I understand correctly that you want to use this instead of Appveyor?"}},"public":true,"created_at":"2020-03-31T07:34:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11911021665","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","id":590838034,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk2MTA5MjA4","number":690,"title":"CircleCI testing for Windows","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-31T06:39:21Z","updated_at":"2020-03-31T07:54:05Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/690","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/690.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/690.patch"},"body":"Adds windows to the CCI test matrix. All tests passed on my CCI account. \r\n\r\n@dstebila: Could you please touch base with CircleCI that they also activate this for the OpenQuantumSafe account? \r\n\r\n@xvzcf I could rebase PR #683 to this to demonstrate that the `CPUFEATURES_LIBRARY` fix has no negative implications to Windows-Building and we can finally merge it in. OK?\r\n\r\n@christianpaquin Given I'm a sorry but confessing Windows-noob, could you please check that I didn't do something utterly silly here? Also, one question: How can it be that build+test on Linux takes 1.5 minutes while testing on Windows takes more than 15 minutes alone? Observing the test run, it's mostly the \"SPHINCS\" family running ultra-slow on Win. Side note: Win-build is a few seconds slower than Linux, but not much, so the CircleCI VMs for Windows are not _that_ much worse than the Linux VMs; in other words, there's something weird in the Windows test run that I don't understand."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606462610","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690#issuecomment-606462610","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","id":606462610,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjQ2MjYxMA==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T07:54:05Z","updated_at":"2020-03-31T07:54:05Z","author_association":"MEMBER","body":"@gadoofou87 For the time being, I see this as a complement to AppVeyor. It would be good to understand why the testing there takes even longer and then fails (unlike at CircleCI), though. @xvzcf also wants to look into that..."}},"public":true,"created_at":"2020-03-31T07:54:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11915142276","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","id":590838034,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk2MTA5MjA4","number":690,"title":"CircleCI testing for Windows","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-31T06:39:21Z","updated_at":"2020-03-31T14:34:33Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/690","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/690.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/690.patch"},"body":"Adds windows to the CCI test matrix. All tests passed on my CCI account. \r\n\r\n@dstebila: Could you please touch base with CircleCI that they also activate this for the OpenQuantumSafe account? \r\n\r\n@xvzcf I could rebase PR #683 to this to demonstrate that the `CPUFEATURES_LIBRARY` fix has no negative implications to Windows-Building and we can finally merge it in. OK?\r\n\r\n@christianpaquin Given I'm a sorry but confessing Windows-noob, could you please check that I didn't do something utterly silly here? Also, one question: How can it be that build+test on Linux takes 1.5 minutes while testing on Windows takes more than 15 minutes alone? Observing the test run, it's mostly the \"SPHINCS\" family running ultra-slow on Win. Side note: Win-build is a few seconds slower than Linux, but not much, so the CircleCI VMs for Windows are not _that_ much worse than the Linux VMs; in other words, there's something weird in the Windows test run that I don't understand."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606666459","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690#issuecomment-606666459","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","id":606666459,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjY2NjQ1OQ==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T14:34:33Z","updated_at":"2020-03-31T14:34:33Z","author_association":"MEMBER","body":"> @xvzcf I could rebase PR #683 to this to demonstrate that the `CPUFEATURES_LIBRARY` fix has no negative implications to Windows-Building and we can finally merge it in. OK?\r\n\r\nSounds good.\r\n"}},"public":true,"created_at":"2020-03-31T14:34:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11915143818","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687","id":589585018,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk1MTAxMjIx","number":687,"title":"Improved argument passing for cpu_features","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-28T14:13:32Z","updated_at":"2020-03-31T14:34:40Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/687","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/687.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/687.patch"},"body":"Addition for PR https://github.com/open-quantum-safe/liboqs/pull/681 . Removes warnings like this\r\n```\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  CMakeLists.txt:9 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n-- Check for working C compiler: C:/msys64/mingw64/bin/cc.exe\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  C:/projects/liboqs/build/cpu_features-build/CMakeFiles/CMakeTmp/CMakeLists.txt:2 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n-- Check for working C compiler: C:/msys64/mingw64/bin/cc.exe -- works\r\n-- Detecting C compiler ABI info\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  C:/projects/liboqs/build/cpu_features-build/CMakeFiles/CMakeTmp/CMakeLists.txt:2 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n```"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606666523","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687#issuecomment-606666523","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687","id":606666523,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjY2NjUyMw==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T14:34:40Z","updated_at":"2020-03-31T14:34:40Z","author_association":"MEMBER","body":"@gadoofou87 One question regarding understanding the `cpu_features` integration: If I'm not mistaken, `cpu_features` should build position independent code if we set `-DBUILD_SHARED_LIBS=ON` flag (set in the main `liboqs` build) as per `cpu_features-src/CMakeLists.txt`:\r\n```\r\nif(BUILD_SHARED_LIBS AND UNIX)\r\n  set(BUILD_PIC ON)\r\nendif()\r\n```\r\nIs that correct? Now, when doing that, can you explain why am I'm now getting this error message:\r\n```\r\n/usr/bin/ld: test_kem: hidden symbol `GetX86Info' in ../cpu_features-build/libcpu_features.a(cpuinfo_x86.c.o) is referenced by DSO\r\n/usr/bin/ld: final link failed: Bad value\r\n```\r\n\r\nAm I declaring `cpu_features` somewhere incorrectly in the \"consuming\" targets? I'm doing this\r\n```\r\nif(DEFINED CPUFEATURES_LIBRARY)\r\n    target_link_libraries(test_kem PUBLIC ${CPUFEATURES_LIBRARY})\r\nendif()\r\n```\r\nwith the goal to only load the PIC symbols (but not the reference to a shared lib/`cpu_features`).\r\n\r\nOr am I making a mistake in thinking (that linking in symbols from static, but PIC-built objects into an executable or other [shared] library should be possible -- such as to drop the need to carry forward the shared library version of `cpu_features`)?"}},"public":true,"created_at":"2020-03-31T14:34:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11915433171","type":"IssueCommentEvent","actor":{"id":58735248,"login":"gadoofou87","display_login":"gadoofou87","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","avatar_url":"https://avatars.githubusercontent.com/u/58735248?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687","id":589585018,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk1MTAxMjIx","number":687,"title":"Improved argument passing for cpu_features","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-28T14:13:32Z","updated_at":"2020-03-31T14:58:00Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/687","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/687.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/687.patch"},"body":"Addition for PR https://github.com/open-quantum-safe/liboqs/pull/681 . Removes warnings like this\r\n```\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  CMakeLists.txt:9 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n-- Check for working C compiler: C:/msys64/mingw64/bin/cc.exe\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  C:/projects/liboqs/build/cpu_features-build/CMakeFiles/CMakeTmp/CMakeLists.txt:2 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n-- Check for working C compiler: C:/msys64/mingw64/bin/cc.exe -- works\r\n-- Detecting C compiler ABI info\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  C:/projects/liboqs/build/cpu_features-build/CMakeFiles/CMakeTmp/CMakeLists.txt:2 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n```"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606680387","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687#issuecomment-606680387","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687","id":606680387,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjY4MDM4Nw==","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T14:58:00Z","updated_at":"2020-03-31T14:58:00Z","author_association":"CONTRIBUTOR","body":"@baentsch I found a potential mistake. `cpu_features` uses parameter `BUILD_PIC` instead of `CMAKE_POSITION_INDEPENDENT_CODE`. Fixed it in the last commit. Can you try it again?"}},"public":true,"created_at":"2020-03-31T14:58:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11915699561","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","id":590838034,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk2MTA5MjA4","number":690,"title":"CircleCI testing for Windows","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-03-31T06:39:21Z","updated_at":"2020-03-31T15:19:48Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/690","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/690.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/690.patch"},"body":"Adds windows to the CCI test matrix. All tests passed on my CCI account. \r\n\r\n@dstebila: Could you please touch base with CircleCI that they also activate this for the OpenQuantumSafe account? \r\n\r\n@xvzcf I could rebase PR #683 to this to demonstrate that the `CPUFEATURES_LIBRARY` fix has no negative implications to Windows-Building and we can finally merge it in. OK?\r\n\r\n@christianpaquin Given I'm a sorry but confessing Windows-noob, could you please check that I didn't do something utterly silly here? Also, one question: How can it be that build+test on Linux takes 1.5 minutes while testing on Windows takes more than 15 minutes alone? Observing the test run, it's mostly the \"SPHINCS\" family running ultra-slow on Win. Side note: Win-build is a few seconds slower than Linux, but not much, so the CircleCI VMs for Windows are not _that_ much worse than the Linux VMs; in other words, there's something weird in the Windows test run that I don't understand."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606693669","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690#issuecomment-606693669","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","id":606693669,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjY5MzY2OQ==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T15:19:48Z","updated_at":"2020-03-31T15:19:48Z","author_association":"MEMBER","body":"> @dstebila: Could you please touch base with CircleCI that they also activate this for the OpenQuantumSafe account?\r\n\r\nI've submitted a request."}},"public":true,"created_at":"2020-03-31T15:19:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11915891999","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687","id":589585018,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk1MTAxMjIx","number":687,"title":"Improved argument passing for cpu_features","user":{"login":"gadoofou87","id":58735248,"node_id":"MDQ6VXNlcjU4NzM1MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/58735248?v=4","gravatar_id":"","url":"https://api.github.com/users/gadoofou87","html_url":"https://github.com/gadoofou87","followers_url":"https://api.github.com/users/gadoofou87/followers","following_url":"https://api.github.com/users/gadoofou87/following{/other_user}","gists_url":"https://api.github.com/users/gadoofou87/gists{/gist_id}","starred_url":"https://api.github.com/users/gadoofou87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gadoofou87/subscriptions","organizations_url":"https://api.github.com/users/gadoofou87/orgs","repos_url":"https://api.github.com/users/gadoofou87/repos","events_url":"https://api.github.com/users/gadoofou87/events{/privacy}","received_events_url":"https://api.github.com/users/gadoofou87/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-03-28T14:13:32Z","updated_at":"2020-03-31T15:35:34Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/687","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/687.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/687.patch"},"body":"Addition for PR https://github.com/open-quantum-safe/liboqs/pull/681 . Removes warnings like this\r\n```\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  CMakeLists.txt:9 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n-- Check for working C compiler: C:/msys64/mingw64/bin/cc.exe\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  C:/projects/liboqs/build/cpu_features-build/CMakeFiles/CMakeTmp/CMakeLists.txt:2 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n-- Check for working C compiler: C:/msys64/mingw64/bin/cc.exe -- works\r\n-- Detecting C compiler ABI info\r\nCMake Warning (dev) at C:/projects/liboqs/build/cpu_features-build/CMakeFiles/3.16.5/CMakeRCCompiler.cmake:1:\r\n  Syntax Warning in cmake code at column 25\r\n  Argument not separated from preceding token by whitespace.\r\nCall Stack (most recent call first):\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU.cmake:138 (enable_language)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/Platform/Windows-GNU-C.cmake:2 (__windows_compiler_gnu)\r\n  C:/Program Files (x86)/CMake/share/cmake-3.16/Modules/CMakeCInformation.cmake:48 (include)\r\n  C:/projects/liboqs/build/cpu_features-build/CMakeFiles/CMakeTmp/CMakeLists.txt:2 (project)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n```"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606702945","html_url":"https://github.com/open-quantum-safe/liboqs/pull/687#issuecomment-606702945","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/687","id":606702945,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjcwMjk0NQ==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T15:35:34Z","updated_at":"2020-03-31T15:35:34Z","author_association":"MEMBER","body":"@gadoofou87 Thanks for the quick reaction. But the real error was mine: I didn't add `cpu_features` to the `oqs` lib build instruction like this\r\n```\r\nif(DEFINED CPUFEATURES_LIBRARY)\r\n    target_link_libraries(oqs PRIVATE ${CPUFEATURES_LIBRARY})\r\nendif()\r\n```\r\nbut only to its apps. After adding the above, all was fine: Linker linked, functionality... functioned :-)"}},"public":true,"created_at":"2020-03-31T15:35:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11915909072","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/691","id":590843124,"node_id":"MDU6SXNzdWU1OTA4NDMxMjQ=","number":691,"title":"Update to copy_from_pqclean","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"assignees":[{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-03-31T06:49:34Z","updated_at":"2020-03-31T15:37:01Z","closed_at":null,"author_association":"MEMBER","body":"This is to capture all improvements required for `copy_from_pqclean`:\r\n- Auto-generate source code lists for CMakefiles\r\n- Automate generation of multi-feature CMake-structures from PQClean `META.yml` incl. suitable #defines (\"clean\" implementation always being the \"code of last resort\")\r\n- Ensure OS dependencies are heeded (no optimised code build enabled on unsupported platforms)\r\n- Auto-prettyprint copied source code after import to satisfy style-checks\r\n- Integrate run-time feature detection to generated `kem` and `sig` \"entry point functions\"\r\n\r\nThis supports issue #689 \r\n\r\n@dstebila If you have other items to add, please do so via Comment. Thanks in advance."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606703807","html_url":"https://github.com/open-quantum-safe/liboqs/issues/691#issuecomment-606703807","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691","id":606703807,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjcwMzgwNw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T15:37:01Z","updated_at":"2020-03-31T15:37:01Z","author_association":"MEMBER","body":"> * Auto-prettyprint copied source code after import to satisfy style-checks\r\n\r\nThere's no need for the code copied from PQClean to be pretty-printed using our style.  But files we generate using the copy\\_from\\_pqclean scripts should be pretty-printed using our style."}},"public":true,"created_at":"2020-03-31T15:37:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11916041747","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/689","id":590417596,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk1NzU1NjI4","number":689,"title":"Runtime feature detection","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-03-30T16:17:09Z","updated_at":"2020-03-31T15:48:21Z","closed_at":"2020-03-31T05:43:48Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/689","html_url":"https://github.com/open-quantum-safe/liboqs/pull/689","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/689.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/689.patch"},"body":"This PR creates static flags to test for presence/absence of the same CPU features that we presently make available with #defines. This way, the presence of the `cpu_features` library can be completely hidden from external users. For efficiency reasons I also added an `OQS_init` method which sets these flags once so that the code for this does not have to be in all places where feature detection may be needed.\r\n\r\nPlease have a look at this proposal and let me know what you think.\r\n\r\nIf you'd be OK, integrating RT feature detection then is trivial indeed: Where we currently only have `OQS_USE_AVX2_INSTRUCTIONS` compile time switches we can augment them now with RT switches\r\n```\r\nif (OQS_RT_AVX2_INSTRUCTIONS) { \r\n   // call AVX2-enabled functions here\r\n} \r\nelse {\r\n  // call non-AVX2 code here\r\n}\r\n```"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606710154","html_url":"https://github.com/open-quantum-safe/liboqs/pull/689#issuecomment-606710154","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689","id":606710154,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjcxMDE1NA==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T15:48:21Z","updated_at":"2020-03-31T15:48:21Z","author_association":"MEMBER","body":"Wiring up all the entry points would be annoying, but doable.  Presumably the check we'd do at the beginning of each entry point would be to check if a single global flag has been set, and if not, then run the CPU features detection which also sets the flag.  It's just checking one flag, the performance hit would come from cache misses or branch prediction failures.  It seems like there is a GCC attribute that one can use (`__builtin_expect`) to provide some branch prediction hints.  Rather than doing full stack performance testing down to OQS-OpenSSL, I'd start with just seeing what the performance impact is with liboqs' speed\\_kem and speed\\_sig is, and if it seems to be negligible (which I think it will be), then just go with it."}},"public":true,"created_at":"2020-03-31T15:48:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11916243563","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/689","id":590417596,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk1NzU1NjI4","number":689,"title":"Runtime feature detection","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-03-30T16:17:09Z","updated_at":"2020-03-31T16:05:47Z","closed_at":"2020-03-31T05:43:48Z","author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/689","html_url":"https://github.com/open-quantum-safe/liboqs/pull/689","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/689.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/689.patch"},"body":"This PR creates static flags to test for presence/absence of the same CPU features that we presently make available with #defines. This way, the presence of the `cpu_features` library can be completely hidden from external users. For efficiency reasons I also added an `OQS_init` method which sets these flags once so that the code for this does not have to be in all places where feature detection may be needed.\r\n\r\nPlease have a look at this proposal and let me know what you think.\r\n\r\nIf you'd be OK, integrating RT feature detection then is trivial indeed: Where we currently only have `OQS_USE_AVX2_INSTRUCTIONS` compile time switches we can augment them now with RT switches\r\n```\r\nif (OQS_RT_AVX2_INSTRUCTIONS) { \r\n   // call AVX2-enabled functions here\r\n} \r\nelse {\r\n  // call non-AVX2 code here\r\n}\r\n```"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606722566","html_url":"https://github.com/open-quantum-safe/liboqs/pull/689#issuecomment-606722566","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/689","id":606722566,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjcyMjU2Ng==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T16:05:47Z","updated_at":"2020-03-31T16:05:47Z","author_association":"MEMBER","body":"Agree. I'll put something to facilitate that right into the `copy_from_pqclean` templates."}},"public":true,"created_at":"2020-03-31T16:05:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11916247749","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/164","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/164/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/164/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/164/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/164","id":584707901,"node_id":"MDExOlB1bGxSZXF1ZXN0MzkxMjQ0MDU5","number":164,"title":"Merged upstream tag 1.1.1e","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2020-03-19T21:22:16Z","updated_at":"2020-03-31T16:06:09Z","closed_at":"2020-03-31T16:06:09Z","author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/164","html_url":"https://github.com/open-quantum-safe/openssl/pull/164","diff_url":"https://github.com/open-quantum-safe/openssl/pull/164.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/164.patch"},"body":""},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/606722751","html_url":"https://github.com/open-quantum-safe/openssl/pull/164#issuecomment-606722751","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/164","id":606722751,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjcyMjc1MQ==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T16:06:09Z","updated_at":"2020-03-31T16:06:09Z","author_association":"NONE","body":"I'm preparing a new branch integrating the 1.1.1f changes."}},"public":true,"created_at":"2020-03-31T16:06:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11916285049","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/691","id":590843124,"node_id":"MDU6SXNzdWU1OTA4NDMxMjQ=","number":691,"title":"Update to copy_from_pqclean","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"assignees":[{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-03-31T06:49:34Z","updated_at":"2020-03-31T16:09:31Z","closed_at":null,"author_association":"MEMBER","body":"This is to capture all improvements required for `copy_from_pqclean`:\r\n- Auto-generate source code lists for CMakefiles\r\n- Automate generation of multi-feature CMake-structures from PQClean `META.yml` incl. suitable #defines (\"clean\" implementation always being the \"code of last resort\")\r\n- Ensure OS dependencies are heeded (no optimised code build enabled on unsupported platforms)\r\n- Auto-prettyprint copied source code after import to satisfy style-checks\r\n- Integrate run-time feature detection to generated `kem` and `sig` \"entry point functions\"\r\n\r\nThis supports issue #689 \r\n\r\n@dstebila If you have other items to add, please do so via Comment. Thanks in advance."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606724522","html_url":"https://github.com/open-quantum-safe/liboqs/issues/691#issuecomment-606724522","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/691","id":606724522,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjcyNDUyMg==","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T16:09:31Z","updated_at":"2020-03-31T16:09:31Z","author_association":"MEMBER","body":"Enable \"implicit OQS_init\" (assert-style feature-check initialisation in all liboqs calls) along the lines suggested by [@dstebila](https://github.com/open-quantum-safe/liboqs/pull/689#issuecomment-606710154)"}},"public":true,"created_at":"2020-03-31T16:09:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11917009343","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/167","id":591252068,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk2NDUzNjI1","number":167,"title":"Merged upstream tag 1.1.1f ","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-31T16:36:11Z","updated_at":"2020-03-31T17:17:10Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/167","html_url":"https://github.com/open-quantum-safe/openssl/pull/167","diff_url":"https://github.com/open-quantum-safe/openssl/pull/167.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/167.patch"},"body":"Merges upstream tag `OpenSSL_1_1_1f`. Fixes issue #161, deprecates PR #164. "},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/606760823","html_url":"https://github.com/open-quantum-safe/openssl/pull/167#issuecomment-606760823","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167","id":606760823,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjc2MDgyMw==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T17:17:09Z","updated_at":"2020-03-31T17:17:09Z","author_association":"NONE","body":"@baentsch, @dstebila, @xvzcf; this new update fixes the issue we had with 1.1.1e, but it's now blocking due to an error with `undefined reference to GetX86Info` in OQS, which I think as been introduced with the CPU feature work (right?) Could one of you take a look? Does OpenSSL need to be updated? Are these platforms compatible with the function?"}},"public":true,"created_at":"2020-03-31T17:17:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11917117905","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","id":590838034,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk2MTA5MjA4","number":690,"title":"CircleCI testing for Windows","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars1.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-03-31T06:39:21Z","updated_at":"2020-03-31T17:27:55Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/690","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/690.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/690.patch"},"body":"Adds windows to the CCI test matrix. All tests passed on my CCI account. \r\n\r\n@dstebila: Could you please touch base with CircleCI that they also activate this for the OpenQuantumSafe account? \r\n\r\n@xvzcf I could rebase PR #683 to this to demonstrate that the `CPUFEATURES_LIBRARY` fix has no negative implications to Windows-Building and we can finally merge it in. OK?\r\n\r\n@christianpaquin Given I'm a sorry but confessing Windows-noob, could you please check that I didn't do something utterly silly here? Also, one question: How can it be that build+test on Linux takes 1.5 minutes while testing on Windows takes more than 15 minutes alone? Observing the test run, it's mostly the \"SPHINCS\" family running ultra-slow on Win. Side note: Win-build is a few seconds slower than Linux, but not much, so the CircleCI VMs for Windows are not _that_ much worse than the Linux VMs; in other words, there's something weird in the Windows test run that I don't understand."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/606766301","html_url":"https://github.com/open-quantum-safe/liboqs/pull/690#issuecomment-606766301","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/690","id":606766301,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjc2NjMwMQ==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T17:27:55Z","updated_at":"2020-03-31T17:27:55Z","author_association":"CONTRIBUTOR","body":"The Windows-specific \"stuff\" looks ok, but being a CircleCI-noob (to reuse your label :)) makes it difficult to competently review this. Was AppVeyor as slow as the CircleCI Windows build?"}},"public":true,"created_at":"2020-03-31T17:27:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"11918135350","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167/events","html_url":"https://github.com/open-quantum-safe/openssl/pull/167","id":591252068,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzk2NDUzNjI1","number":167,"title":"Merged upstream tag 1.1.1f ","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-03-31T16:36:11Z","updated_at":"2020-03-31T19:12:27Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/pulls/167","html_url":"https://github.com/open-quantum-safe/openssl/pull/167","diff_url":"https://github.com/open-quantum-safe/openssl/pull/167.diff","patch_url":"https://github.com/open-quantum-safe/openssl/pull/167.patch"},"body":"Merges upstream tag `OpenSSL_1_1_1f`. Fixes issue #161, deprecates PR #164. "},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/606818854","html_url":"https://github.com/open-quantum-safe/openssl/pull/167#issuecomment-606818854","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/167","id":606818854,"node_id":"MDEyOklzc3VlQ29tbWVudDYwNjgxODg1NA==","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars3.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2020-03-31T19:12:27Z","updated_at":"2020-03-31T19:12:27Z","author_association":"MEMBER","body":"Looking at it."}},"public":true,"created_at":"2020-03-31T19:12:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
