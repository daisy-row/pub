{"id":"13134622583","type":"IssueCommentEvent","actor":{"id":8270508,"login":"claucece","display_login":"claucece","gravatar_id":"","url":"https://api.github.com/users/claucece","avatar_url":"https://avatars.githubusercontent.com/u/8270508?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/807","id":674080598,"node_id":"MDU6SXNzdWU2NzQwODA1OTg=","number":807,"title":"Undefined behaviour in FireSaber-KEM, FrodoKEM, SIDH compressed","user":{"login":"claucece","id":8270508,"node_id":"MDQ6VXNlcjgyNzA1MDg=","avatar_url":"https://avatars0.githubusercontent.com/u/8270508?v=4","gravatar_id":"","url":"https://api.github.com/users/claucece","html_url":"https://github.com/claucece","followers_url":"https://api.github.com/users/claucece/followers","following_url":"https://api.github.com/users/claucece/following{/other_user}","gists_url":"https://api.github.com/users/claucece/gists{/gist_id}","starred_url":"https://api.github.com/users/claucece/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/claucece/subscriptions","organizations_url":"https://api.github.com/users/claucece/orgs","repos_url":"https://api.github.com/users/claucece/repos","events_url":"https://api.github.com/users/claucece/events{/privacy}","received_events_url":"https://api.github.com/users/claucece/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-08-06T07:15:52Z","updated_at":"2020-08-07T00:04:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi!\r\n\r\nI've been looking at the library and running some things, and this is a really nice work, so thanks for all!\r\n\r\nI recently ran some tests, enabling clang's UndefinedBehaviorSanitizer using the build sequence:\r\n\r\n```\r\nmkdir build && cd build\r\ncmake -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Undefined -GNinja ..\r\nninja\r\n```\r\n\r\nMy compiler is clang-11, and arch is x86_64-apple-darwin18.7.0\r\n\r\nI ran onto several undefined behaviour, on some algorithms (I'm just pasting only one of each 'family'):\r\n\r\n\r\n```\r\ntests/test_kem FireSaber-KEM    \r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Darwin-18.7.0\r\nCompiler:         clang (11.0.0 (clang-1100.0.33.17))\r\nOQS version:      0.4.0-rc1\r\nGit commit:       477ef3f60cd04f9b72b499d000a8f77ae99c0d89 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1g  21 Apr 2020)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            OpenSSL\r\n\r\n================================================================================\r\nSample computation for KEM FireSaber-KEM\r\n================================================================================\r\n../src/kem/saber/pqclean_firesaber_clean/poly_mul.c:50:44: runtime error: signed integer overflow: 57354 * 40101 cannot be represented in type 'int'\r\nshared secrets are equal\r\n```\r\n\r\n```\r\ntests/test_kem FrodoKEM-640-SHAKE\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Darwin-18.7.0\r\nCompiler:         clang (11.0.0 (clang-1100.0.33.17))\r\nOQS version:      0.4.0-rc1\r\nGit commit:       477ef3f60cd04f9b72b499d000a8f77ae99c0d89 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1g  21 Apr 2020)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            OpenSSL\r\n\r\n================================================================================\r\nSample computation for KEM FrodoKEM-640-SHAKE\r\n================================================================================\r\n../src/kem/frodokem/external/frodo_macrify_optimized.c:281:34: runtime error: signed integer overflow: 65534 * 59141 cannot be represented in type 'int'\r\n../src/kem/frodokem/external/frodo_macrify_optimized.c:281:28: runtime error: signed integer overflow: 39658 + 2147450877 cannot be represented in type 'int'\r\nshared secrets are equal\r\n```\r\n\r\n```\r\ntests/test_kem SIDH-p503-compressed\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Darwin-18.7.0\r\nCompiler:         clang (11.0.0 (clang-1100.0.33.17))\r\nOQS version:      0.4.0-rc1\r\nGit commit:       477ef3f60cd04f9b72b499d000a8f77ae99c0d89 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1g  21 Apr 2020)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            OpenSSL\r\n\r\n================================================================================\r\nSample computation for KEM SIDH-p503-compressed\r\n================================================================================\r\n../src/kem/sike/external/P503/../compression/dlog.c:108:35: runtime error: index 4 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:96:39: runtime error: index 44 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:98:39: runtime error: index 44 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:115:35: runtime error: index 4 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:65:34: runtime error: index 4 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:58:38: runtime error: index 22 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\nshared secrets are equal\r\n../src/kem/sike/external/P503/../compression/sidh_compressed.c:1031:26: runtime error: index 233 out of bounds for type 'const uint64_t [17][8]'\r\n```\r\n\r\nI haven't finish running it all for all tests; but if it is of interest, I can do that.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/670249622","html_url":"https://github.com/open-quantum-safe/liboqs/issues/807#issuecomment-670249622","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807","id":670249622,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDI0OTYyMg==","user":{"login":"claucece","id":8270508,"node_id":"MDQ6VXNlcjgyNzA1MDg=","avatar_url":"https://avatars0.githubusercontent.com/u/8270508?v=4","gravatar_id":"","url":"https://api.github.com/users/claucece","html_url":"https://github.com/claucece","followers_url":"https://api.github.com/users/claucece/followers","following_url":"https://api.github.com/users/claucece/following{/other_user}","gists_url":"https://api.github.com/users/claucece/gists{/gist_id}","starred_url":"https://api.github.com/users/claucece/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/claucece/subscriptions","organizations_url":"https://api.github.com/users/claucece/orgs","repos_url":"https://api.github.com/users/claucece/repos","events_url":"https://api.github.com/users/claucece/events{/privacy}","received_events_url":"https://api.github.com/users/claucece/received_events","type":"User","site_admin":false},"created_at":"2020-08-07T00:04:21Z","updated_at":"2020-08-07T00:04:21Z","author_association":"NONE","body":"Opened the issue over there: https://github.com/PQClean/PQClean/issues/309\r\n\r\nShould we close this one then?","performed_via_github_app":null}},"public":true,"created_at":"2020-08-07T00:04:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"13139940132","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/807","id":674080598,"node_id":"MDU6SXNzdWU2NzQwODA1OTg=","number":807,"title":"Undefined behaviour in FireSaber-KEM","user":{"login":"claucece","id":8270508,"node_id":"MDQ6VXNlcjgyNzA1MDg=","avatar_url":"https://avatars0.githubusercontent.com/u/8270508?v=4","gravatar_id":"","url":"https://api.github.com/users/claucece","html_url":"https://github.com/claucece","followers_url":"https://api.github.com/users/claucece/followers","following_url":"https://api.github.com/users/claucece/following{/other_user}","gists_url":"https://api.github.com/users/claucece/gists{/gist_id}","starred_url":"https://api.github.com/users/claucece/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/claucece/subscriptions","organizations_url":"https://api.github.com/users/claucece/orgs","repos_url":"https://api.github.com/users/claucece/repos","events_url":"https://api.github.com/users/claucece/events{/privacy}","received_events_url":"https://api.github.com/users/claucece/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-06T07:15:52Z","updated_at":"2020-08-07T13:19:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi!\r\n\r\nI've been looking at the library and running some things, and this is a really nice work, so thanks for all!\r\n\r\nI recently ran some tests, enabling clang's UndefinedBehaviorSanitizer using the build sequence:\r\n\r\n```\r\nmkdir build && cd build\r\ncmake -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Undefined -GNinja ..\r\nninja\r\n```\r\n\r\nMy compiler is clang-11, and arch is x86_64-apple-darwin18.7.0\r\n\r\nI ran onto several undefined behaviour, on some algorithms (I'm just pasting only one of each 'family'):\r\n\r\n\r\n```\r\ntests/test_kem FireSaber-KEM    \r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Darwin-18.7.0\r\nCompiler:         clang (11.0.0 (clang-1100.0.33.17))\r\nOQS version:      0.4.0-rc1\r\nGit commit:       477ef3f60cd04f9b72b499d000a8f77ae99c0d89 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1g  21 Apr 2020)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            OpenSSL\r\n\r\n================================================================================\r\nSample computation for KEM FireSaber-KEM\r\n================================================================================\r\n../src/kem/saber/pqclean_firesaber_clean/poly_mul.c:50:44: runtime error: signed integer overflow: 57354 * 40101 cannot be represented in type 'int'\r\nshared secrets are equal\r\n```\r\n\r\n```\r\ntests/test_kem FrodoKEM-640-SHAKE\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Darwin-18.7.0\r\nCompiler:         clang (11.0.0 (clang-1100.0.33.17))\r\nOQS version:      0.4.0-rc1\r\nGit commit:       477ef3f60cd04f9b72b499d000a8f77ae99c0d89 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1g  21 Apr 2020)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            OpenSSL\r\n\r\n================================================================================\r\nSample computation for KEM FrodoKEM-640-SHAKE\r\n================================================================================\r\n../src/kem/frodokem/external/frodo_macrify_optimized.c:281:34: runtime error: signed integer overflow: 65534 * 59141 cannot be represented in type 'int'\r\n../src/kem/frodokem/external/frodo_macrify_optimized.c:281:28: runtime error: signed integer overflow: 39658 + 2147450877 cannot be represented in type 'int'\r\nshared secrets are equal\r\n```\r\n\r\n```\r\ntests/test_kem SIDH-p503-compressed\r\nConfiguration info\r\n==================\r\nTarget platform:  x86_64-Darwin-18.7.0\r\nCompiler:         clang (11.0.0 (clang-1100.0.33.17))\r\nOQS version:      0.4.0-rc1\r\nGit commit:       477ef3f60cd04f9b72b499d000a8f77ae99c0d89 (+ local modifications)\r\nOpenSSL enabled:  Yes (OpenSSL 1.1.1g  21 Apr 2020)\r\nAES:              OpenSSL\r\nSHA-2:            OpenSSL\r\nSHA-3:            OpenSSL\r\n\r\n================================================================================\r\nSample computation for KEM SIDH-p503-compressed\r\n================================================================================\r\n../src/kem/sike/external/P503/../compression/dlog.c:108:35: runtime error: index 4 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:96:39: runtime error: index 44 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:98:39: runtime error: index 44 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:115:35: runtime error: index 4 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:65:34: runtime error: index 4 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\n../src/kem/sike/external/P503/../compression/dlog.c:58:38: runtime error: index 22 out of bounds for type 'const f2elm_t' (aka 'felm_t const[2]')\r\nshared secrets are equal\r\n../src/kem/sike/external/P503/../compression/sidh_compressed.c:1031:26: runtime error: index 233 out of bounds for type 'const uint64_t [17][8]'\r\n```\r\n\r\nI haven't finish running it all for all tests; but if it is of interest, I can do that.\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/670512885","html_url":"https://github.com/open-quantum-safe/liboqs/issues/807#issuecomment-670512885","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/807","id":670512885,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDUxMjg4NQ==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-08-07T13:19:57Z","updated_at":"2020-08-07T13:19:57Z","author_association":"MEMBER","body":"> Opened the issue over there: [PQClean/PQClean#309](https://github.com/PQClean/PQClean/issues/309)\r\n> \r\n> Should we close this one then?\r\n\r\nI'll keep this open but with a new title for just FireSaber so that we remember to pull that in when it's fixed.","performed_via_github_app":null}},"public":true,"created_at":"2020-08-07T13:19:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"13143817659","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/228","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/228/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/228/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/228/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/228","id":675259760,"node_id":"MDU6SXNzdWU2NzUyNTk3NjA=","number":228,"title":"Please include doxygen and graphviz in the Debian/Ubuntu dependencies","user":{"login":"sunny75016","id":36335182,"node_id":"MDQ6VXNlcjM2MzM1MTgy","avatar_url":"https://avatars0.githubusercontent.com/u/36335182?v=4","gravatar_id":"","url":"https://api.github.com/users/sunny75016","html_url":"https://github.com/sunny75016","followers_url":"https://api.github.com/users/sunny75016/followers","following_url":"https://api.github.com/users/sunny75016/following{/other_user}","gists_url":"https://api.github.com/users/sunny75016/gists{/gist_id}","starred_url":"https://api.github.com/users/sunny75016/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sunny75016/subscriptions","organizations_url":"https://api.github.com/users/sunny75016/orgs","repos_url":"https://api.github.com/users/sunny75016/repos","events_url":"https://api.github.com/users/sunny75016/events{/privacy}","received_events_url":"https://api.github.com/users/sunny75016/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-08-07T20:35:17Z","updated_at":"2020-08-07T21:05:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In step 0, please replace\r\n\r\nsudo apt install cmake gcc libtool libssl-dev make ninja-build git\r\n\r\nwith\r\n\r\nsudo apt install cmake gcc libtool libssl-dev make ninja-build git doxygen graphviz\r\n\r\nThis will avoid errors in the cmake step. Thanks.","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/670713052","html_url":"https://github.com/open-quantum-safe/openssl/issues/228#issuecomment-670713052","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/228","id":670713052,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDcxMzA1Mg==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-08-07T21:05:25Z","updated_at":"2020-08-07T21:05:25Z","author_association":"MEMBER","body":"If doxygen and graphviz are not present, cmake will still run (at least it does on a stock Ubuntu 18.04.2 image), however cmake will not generate the gen\\_docs target for liboqs.  But this is not required to successfully build OQS-OpenSSL via the instructions we've provided.","performed_via_github_app":null}},"public":true,"created_at":"2020-08-07T21:05:25Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"13144004144","type":"IssueCommentEvent","actor":{"id":628829,"login":"joostrijneveld","display_login":"joostrijneveld","gravatar_id":"","url":"https://api.github.com/users/joostrijneveld","avatar_url":"https://avatars.githubusercontent.com/u/628829?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/808","id":674084248,"node_id":"MDU6SXNzdWU2NzQwODQyNDg=","number":808,"title":"Address sanitizer error on SPHINCS+","user":{"login":"claucece","id":8270508,"node_id":"MDQ6VXNlcjgyNzA1MDg=","avatar_url":"https://avatars0.githubusercontent.com/u/8270508?v=4","gravatar_id":"","url":"https://api.github.com/users/claucece","html_url":"https://github.com/claucece","followers_url":"https://api.github.com/users/claucece/followers","following_url":"https://api.github.com/users/claucece/following{/other_user}","gists_url":"https://api.github.com/users/claucece/gists{/gist_id}","starred_url":"https://api.github.com/users/claucece/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/claucece/subscriptions","organizations_url":"https://api.github.com/users/claucece/orgs","repos_url":"https://api.github.com/users/claucece/repos","events_url":"https://api.github.com/users/claucece/events{/privacy}","received_events_url":"https://api.github.com/users/claucece/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-08-06T07:22:29Z","updated_at":"2020-08-07T21:34:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"On `SPHINCS+-Haraka-256f-robust`, `SPHINCS+-Haraka-256f-simple`, `SPHINCS+-Haraka-256s-robust`, `SPHINCS+-Haraka-256s-simple`,  and `SPHINCS+-Haraka-256f-robust`, some address sanitizer errors occur of the flavor:\r\n\r\n```\r\n. > ./build/tests/kat_sig SPHINCS+-Haraka-256s-robust\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.0/include/emmintrin.h:3553:10: runtime error: load of misaligned address 0x7ffee7648278 for type 'const __m128i' (vector of 2 'long long' values), which requires 16 byte alignment\r\n0x7ffee7648278: note: pointer points here\r\n 00 00 00 00  7c 99 35 a0 b0 76 94 aa  0c 6d 10 e4 db 6b 1a dd  2f d8 1a 25 cc b1 48 03  2d cd 73 99\r\n              ^ \r\nUndefinedBehaviorSanitizer:DEADLYSIGNAL\r\n==64875==ERROR: UndefinedBehaviorSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010964563a bp 0x7ffee76400d0 sp 0x7ffee763fc70 T265528)\r\n==64875==The signal is caused by a READ memory access.\r\n==64875==Hint: address points to the zero page.\r\n    #0 0x109645639 in haraka_S_absorb (kat_sig:x86_64+0x10108e639)\r\n    #1 0x109637e65 in PQCLEAN_SPHINCSHARAKA256SROBUST_AESNI_haraka_S (kat_sig:x86_64+0x101080e65)\r\n    #2 0x109634acd in PQCLEAN_SPHINCSHARAKA256SROBUST_AESNI_tweak_constants (kat_sig:x86_64+0x10107dacd)\r\n    #3 0x10972f239 in PQCLEAN_SPHINCSHARAKA256SROBUST_AESNI_initialize_hash_function (kat_sig:x86_64+0x101178239)\r\n    #4 0x1097304b5 in PQCLEAN_SPHINCSHARAKA256SROBUST_AESNI_crypto_sign_signature (kat_sig:x86_64+0x1011794b5)\r\n    #5 0x109616bf7 in OQS_SIG_sphincs_haraka_256s_robust_sign sig_sphincs_haraka_256s_robust.c:65\r\n    #6 0x10a3c8c54 in OQS_SIG_sign sig.c:927\r\n    #7 0x1085cb17b in sig_kat kat_sig.c:697\r\n    #8 0x1085cb5df in main kat_sig.c:756\r\n    #9 0x7fff660dd3d4 in start (libdyld.dylib:x86_64+0x163d4)\r\n\r\n==64875==Register values:\r\nrax = 0x00007ffee7648278  rbx = 0x0000000000000000  rcx = 0x00007fff66213be2  rdx = 0x0000000000000000  \r\nrdi = 0x0000000000000000  rsi = 0x000000010bbffd00  rbp = 0x00007ffee76400d0  rsp = 0x00007ffee763fc70  \r\n r8 = 0x000000010b30f8b0   r9 = 0x0000000000000076  r10 = 0x00007fff66213be2  r11 = 0x0000000000000206  \r\nr12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x0000000000000000  r15 = 0x0000000000000000  \r\nUndefinedBehaviorSanitizer can not provide additional info.\r\n==64875==ABORTING\r\ncount = 0\r\nseed = 061550234D158C5EC95595FE04EF7A25767F2E24CC2BC479D09D86DC9ABCFDE7056A8C266F9EF97ED08541DBD2E1FFA1\r\nmlen = 33\r\nmsg = D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8\r\npk = 3E784CCB7EBCDCFD45542B7F6AF778742E0F4479175084AA488B3B74340678AA66A812016C62357F407E92B7652E36E3F5CEB7E063236CA860F74B42B370DF45\r\nsk = 7C9935A0B07694AA0C6D10E4DB6B1ADD2FD81A25CCB148032DCD739936737F2DB505D7CFAD1B497499323C8686325E4792F267AAFA3F87CA60D01CB54F29202A3E784CCB7EBCDCFD45542B7F6AF778742E0F4479175084AA488B3B74340678AA66A812016C62357F407E92B7652E36E3F5CEB7E063236CA860F74B42B370DF45\r\n```\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/670722308","html_url":"https://github.com/open-quantum-safe/liboqs/issues/808#issuecomment-670722308","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808","id":670722308,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDcyMjMwOA==","user":{"login":"joostrijneveld","id":628829,"node_id":"MDQ6VXNlcjYyODgyOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/628829?v=4","gravatar_id":"","url":"https://api.github.com/users/joostrijneveld","html_url":"https://github.com/joostrijneveld","followers_url":"https://api.github.com/users/joostrijneveld/followers","following_url":"https://api.github.com/users/joostrijneveld/following{/other_user}","gists_url":"https://api.github.com/users/joostrijneveld/gists{/gist_id}","starred_url":"https://api.github.com/users/joostrijneveld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joostrijneveld/subscriptions","organizations_url":"https://api.github.com/users/joostrijneveld/orgs","repos_url":"https://api.github.com/users/joostrijneveld/repos","events_url":"https://api.github.com/users/joostrijneveld/events{/privacy}","received_events_url":"https://api.github.com/users/joostrijneveld/received_events","type":"User","site_admin":false},"created_at":"2020-08-07T21:34:57Z","updated_at":"2020-08-07T21:34:57Z","author_association":"NONE","body":"Hmm, at first glance it seems like `haraka.c` is loading from input pointers that are not necessarily aligned (not just in haraka_S_absorb, but in many of the functions handling input pointers). A quick fix to verify whether that's the cause would be to change the LOAD macro (e.g., [as seen on this line](https://github.com/open-quantum-safe/liboqs/blob/master/src/sig/sphincs/pqclean_sphincs-haraka-256s-robust_aesni/haraka.c#L17)) to use `_mm_loadu_si128`, i.e.:\r\n\r\n```\r\n#define LOAD(src) _mm_loadu_si128((u128 *)(src))\r\n```\r\n\r\nNote that the `STORE` macro (one line below) does use the unaligned version of the `_mm_store` intrinsic.\r\n\r\nJust blatantly switching to unaligned loads everywhere may come at a (small?) performance cost, but I'm not sure if there's a reasonable way to avoid that. Maybe @thomwiggers (or @kste ?) has further thoughts on that.\r\n\r\n@claucece could you change the LOAD macro in the respective haraka.c files for variants relying on AESNI in your local copy, and see if you still run into the same errors?","performed_via_github_app":null}},"public":true,"created_at":"2020-08-07T21:34:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"13144050706","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/808","id":674084248,"node_id":"MDU6SXNzdWU2NzQwODQyNDg=","number":808,"title":"Address sanitizer error on SPHINCS+","user":{"login":"claucece","id":8270508,"node_id":"MDQ6VXNlcjgyNzA1MDg=","avatar_url":"https://avatars0.githubusercontent.com/u/8270508?v=4","gravatar_id":"","url":"https://api.github.com/users/claucece","html_url":"https://github.com/claucece","followers_url":"https://api.github.com/users/claucece/followers","following_url":"https://api.github.com/users/claucece/following{/other_user}","gists_url":"https://api.github.com/users/claucece/gists{/gist_id}","starred_url":"https://api.github.com/users/claucece/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/claucece/subscriptions","organizations_url":"https://api.github.com/users/claucece/orgs","repos_url":"https://api.github.com/users/claucece/repos","events_url":"https://api.github.com/users/claucece/events{/privacy}","received_events_url":"https://api.github.com/users/claucece/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-08-06T07:22:29Z","updated_at":"2020-08-07T21:43:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"On `SPHINCS+-Haraka-256f-robust`, `SPHINCS+-Haraka-256f-simple`, `SPHINCS+-Haraka-256s-robust`, `SPHINCS+-Haraka-256s-simple`,  and `SPHINCS+-Haraka-256f-robust`, some address sanitizer errors occur of the flavor:\r\n\r\n```\r\n. > ./build/tests/kat_sig SPHINCS+-Haraka-256s-robust\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.0/include/emmintrin.h:3553:10: runtime error: load of misaligned address 0x7ffee7648278 for type 'const __m128i' (vector of 2 'long long' values), which requires 16 byte alignment\r\n0x7ffee7648278: note: pointer points here\r\n 00 00 00 00  7c 99 35 a0 b0 76 94 aa  0c 6d 10 e4 db 6b 1a dd  2f d8 1a 25 cc b1 48 03  2d cd 73 99\r\n              ^ \r\nUndefinedBehaviorSanitizer:DEADLYSIGNAL\r\n==64875==ERROR: UndefinedBehaviorSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010964563a bp 0x7ffee76400d0 sp 0x7ffee763fc70 T265528)\r\n==64875==The signal is caused by a READ memory access.\r\n==64875==Hint: address points to the zero page.\r\n    #0 0x109645639 in haraka_S_absorb (kat_sig:x86_64+0x10108e639)\r\n    #1 0x109637e65 in PQCLEAN_SPHINCSHARAKA256SROBUST_AESNI_haraka_S (kat_sig:x86_64+0x101080e65)\r\n    #2 0x109634acd in PQCLEAN_SPHINCSHARAKA256SROBUST_AESNI_tweak_constants (kat_sig:x86_64+0x10107dacd)\r\n    #3 0x10972f239 in PQCLEAN_SPHINCSHARAKA256SROBUST_AESNI_initialize_hash_function (kat_sig:x86_64+0x101178239)\r\n    #4 0x1097304b5 in PQCLEAN_SPHINCSHARAKA256SROBUST_AESNI_crypto_sign_signature (kat_sig:x86_64+0x1011794b5)\r\n    #5 0x109616bf7 in OQS_SIG_sphincs_haraka_256s_robust_sign sig_sphincs_haraka_256s_robust.c:65\r\n    #6 0x10a3c8c54 in OQS_SIG_sign sig.c:927\r\n    #7 0x1085cb17b in sig_kat kat_sig.c:697\r\n    #8 0x1085cb5df in main kat_sig.c:756\r\n    #9 0x7fff660dd3d4 in start (libdyld.dylib:x86_64+0x163d4)\r\n\r\n==64875==Register values:\r\nrax = 0x00007ffee7648278  rbx = 0x0000000000000000  rcx = 0x00007fff66213be2  rdx = 0x0000000000000000  \r\nrdi = 0x0000000000000000  rsi = 0x000000010bbffd00  rbp = 0x00007ffee76400d0  rsp = 0x00007ffee763fc70  \r\n r8 = 0x000000010b30f8b0   r9 = 0x0000000000000076  r10 = 0x00007fff66213be2  r11 = 0x0000000000000206  \r\nr12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x0000000000000000  r15 = 0x0000000000000000  \r\nUndefinedBehaviorSanitizer can not provide additional info.\r\n==64875==ABORTING\r\ncount = 0\r\nseed = 061550234D158C5EC95595FE04EF7A25767F2E24CC2BC479D09D86DC9ABCFDE7056A8C266F9EF97ED08541DBD2E1FFA1\r\nmlen = 33\r\nmsg = D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8\r\npk = 3E784CCB7EBCDCFD45542B7F6AF778742E0F4479175084AA488B3B74340678AA66A812016C62357F407E92B7652E36E3F5CEB7E063236CA860F74B42B370DF45\r\nsk = 7C9935A0B07694AA0C6D10E4DB6B1ADD2FD81A25CCB148032DCD739936737F2DB505D7CFAD1B497499323C8686325E4792F267AAFA3F87CA60D01CB54F29202A3E784CCB7EBCDCFD45542B7F6AF778742E0F4479175084AA488B3B74340678AA66A812016C62357F407E92B7652E36E3F5CEB7E063236CA860F74B42B370DF45\r\n```\r\n","performed_via_github_app":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/670724567","html_url":"https://github.com/open-quantum-safe/liboqs/issues/808#issuecomment-670724567","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/808","id":670724567,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDcyNDU2Nw==","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2020-08-07T21:43:07Z","updated_at":"2020-08-07T21:43:07Z","author_association":"MEMBER","body":"> Just blatantly switching to unaligned loads everywhere may come at a (small?) performance cost, but I'm not sure if there's a reasonable way to avoid that. Maybe @thomwiggers (or @kste ?) has further thoughts on that.\r\n\r\nIntel's documentation does not report a performance difference for [_mm_loadu_si128](https://software.intel.com/sites/landingpage/IntrinsicsGuide/#text=_mm_loadu_si128&expand=3416) versus [_mm_load_si128](https://software.intel.com/sites/landingpage/IntrinsicsGuide/#text=_mm_load_si128&expand=3343).","performed_via_github_app":null}},"public":true,"created_at":"2020-08-07T21:43:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
