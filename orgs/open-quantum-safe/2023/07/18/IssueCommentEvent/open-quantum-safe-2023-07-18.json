{"id":"30485512650","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/103","id":1802195193,"node_id":"I_kwDOETYnOM5ra1D5","number":103,"title":"Automate M1 profiling image build & use","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-07-13T05:22:41Z","updated_at":"2023-07-18T01:37:11Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Due to the unavailability (at time of creating the tests) of M1 VMs in AWS and unlike the timed AWS-based runs for `x64` and `aarch64`, the profiling run on `m1` is currently triggered by a `cron` job on a dedicated laptop like this:\r\n\r\n    docker run --privileged openquantumsafe/oqs-perf bash -c \"cd /opt/test && ./run-tests-m1.sh\" > /Users/baentsch/profiling/docker-run-m1.log 2>&1\r\n\r\nIn particular, this means the dedicated `Dockerfile-m1` dockerfile is _not_ used for M1 profiling. This may or may not be sensible -- but at least confuses me (why do we still have this file)? If we decide to keep this file, the corresponding image should be built in CI and be used (and not the more generic `aarch64` linux image). Also, would running the code in a comparable (VM-based) manner be possible? In which infrastructure? How do we ascertain that the functionality being tested on all platforms remains in sync with the main `Dockerfile` (used for `x64`)?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1639145339","html_url":"https://github.com/open-quantum-safe/profiling/issues/103#issuecomment-1639145339","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103","id":1639145339,"node_id":"IC_kwDOETYnOM5hs197","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T01:37:11Z","updated_at":"2023-07-18T01:37:11Z","author_association":"MEMBER","body":"> > It should be possible to run the data collection on our M1 inside a Docker container.\r\n> \r\n> We do. The question is whether it's sufficient(ly representative of the platform's characteristics) that we use a generic `aarch64` docker image.\r\n\r\nOh right, Docker guests will always be Linux, so the build environment might result in different behaviour.  ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1639145339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T01:37:12Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30489153959","type":"IssueCommentEvent","actor":{"id":5929871,"login":"micheleselea","display_login":"micheleselea","gravatar_id":"","url":"https://api.github.com/users/micheleselea","avatar_url":"https://avatars.githubusercontent.com/u/5929871?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/217","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/217/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/217/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/217/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/217","id":1808046436,"node_id":"I_kwDODP--n85rxJlk","number":217,"title":"Hi @baentsch I tried to use curl and httpd docker oqs image but I have some problem.","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-07-17T15:34:19Z","updated_at":"2023-07-18T06:17:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"              Hi @baentsch I tried to use curl and httpd docker oqs image but I have some problem.\r\nIf I use for server:\r\ndocker run -p 4433:4433 openquantumsafe/httpd\r\nand \r\ndocker run -it openquantumsafe/curl curl -k https://SERVERIP:4433\r\nit's ok\r\ninstead if I use\r\ndocker run -it openquantumsafe/curl curl -k https://SERVERIP:4433   --curves p256_kyber768\r\nI endup with a handshake error and I can't understand why, I tried with different curves, but seems not negotiate oqs\r\n\r\n_Originally posted by @micheleselea in https://github.com/open-quantum-safe/oqs-provider/issues/211#issuecomment-1638336605_\r\n            ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/217/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/217/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1639558698","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/217#issuecomment-1639558698","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/217","id":1639558698,"node_id":"IC_kwDODP--n85hua4q","user":{"login":"micheleselea","id":5929871,"node_id":"MDQ6VXNlcjU5Mjk4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5929871?v=4","gravatar_id":"","url":"https://api.github.com/users/micheleselea","html_url":"https://github.com/micheleselea","followers_url":"https://api.github.com/users/micheleselea/followers","following_url":"https://api.github.com/users/micheleselea/following{/other_user}","gists_url":"https://api.github.com/users/micheleselea/gists{/gist_id}","starred_url":"https://api.github.com/users/micheleselea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/micheleselea/subscriptions","organizations_url":"https://api.github.com/users/micheleselea/orgs","repos_url":"https://api.github.com/users/micheleselea/repos","events_url":"https://api.github.com/users/micheleselea/events{/privacy}","received_events_url":"https://api.github.com/users/micheleselea/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T06:17:15Z","updated_at":"2023-07-18T06:17:15Z","author_association":"NONE","body":"Ok using that DEFAULT_GROUPS I can manage to connect httpd and curl using the same curves\r\nAnyway I still have some issue connecting with my http client even using\r\nSSL_CTX_set1_groups_list(sslContext, \"frodo640aes:p256_frodo640aes\");\r\n(after loading oqsprovider) or any other, it always fail the handshake. I'll dig a litle more, but I'm using Openssl 3.1 and I think the problem can be that all the dockers use Openssl 3.2, I'll take some time to try with 3.2 and let you know","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1639558698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T06:17:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30494331099","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201","id":1781101035,"node_id":"PR_kwDOE_A9l85UQaEM","number":201,"title":"Allow the user to build oqs-provider as a static library.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":19,"created_at":"2023-06-29T15:45:28Z","updated_at":"2023-07-18T09:46:55Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/201","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201.patch","merged_at":null},"body":"This commit removes the `SHARED` argument of the `add_library`. By doing so, we let the user choose the build type of library.\r\n\r\nBy default, CMake will build a static library. Thus, [`BUILD_SHARED_LIBS`] must be used to switch to a shared library.\r\n\r\n`oqs-provider` as a static library allows us to use the provider without having to store its shared library somewhere. In addition, it happens that some operating systems prohibit the use of `dlopen`/`dlsym`.\r\n\r\nTo load `oqs-provider` when it is embedded into a library of a binary, one can use the [`OSSL_PROVIDER_add_builtin`] API from OpenSSL 3.\r\n\r\n[`BUILD_SHARED_LIBS`]: https://cmake.org/cmake/help/latest/variable/BUILD_SHARED_LIBS.html\r\n[`OSSL_PROVIDER_add_builtin`]: https://www.openssl.org/docs/man3.1/man3/OSSL_PROVIDER_add_builtin.html\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1639897587","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201#issuecomment-1639897587","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201","id":1639897587,"node_id":"IC_kwDOE_A9l85hvtnz","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T09:46:55Z","updated_at":"2023-07-18T09:46:55Z","author_association":"MEMBER","body":"> From my understanding, I fell into the following case:\r\n\r\nWell, Yes, I by now have no real trust in proper operation of OpenSSL 3.0.[0-8] (pertaining to providers :).\r\n\r\n> Thus I'm wondering if having this check in both CircleCI's config.yml and runtests.sh is actually a good idea…\r\n\r\nI'm afraid that's then necessary, indeed.\r\n\r\nBut what irks me also is that the CI task (still) uses OpenSSL1.1.1 to build `liboqs`. Such error (not finding OpenSSL111 symbols \"baked into\" `liboqs` (and thus `oqsprovider`) may also be a  reason behind the failure to load the provider. This was the reason for #212. Looking back at that PR, the fix only applies to the \"courtesy build script\" and not CI, though :-( So maybe same thing: CI needs to be upgraded, too (for `liboqs` to always use the same OpenSSL version as is used to run `oqsprovider`).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1639897587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T09:46:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30497700489","type":"IssueCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1489","id":1740686750,"node_id":"PR_kwDOA-eq3c5SItmj","number":1489,"title":"Add 12 XMSS and 16 XMSSMT parameters.","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":5,"closed_issues":4,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-07-17T13:43:47Z","due_on":null,"closed_at":null},"comments":6,"created_at":"2023-06-05T00:34:53Z","updated_at":"2023-07-18T12:03:04Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1489","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1489","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1489.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1489.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n1. All XMSS parameters are separated by namespace.\r\n2. After discussion with Andreas Huelsing, he recommends using the `fast` approach. This approach improved the performance of `signing` at the cost of larger `sk`. \r\n3. The `_fast` parameters is **incompatible** with the general version. At first, I couldn't believe it, I went back and generate original KATs file from [original Github repo](https://github.com/ducnguyen-sb/xmss-reference-original-kat/pull/1/files). And I confirm that the `_fast` and general version, given the same message and same randomness, it will generate different signatures. Given the signature of `_fast`, the general version cannot verify using `_fast` parameter public key. \r\n\r\nSimilar issue in xmss-reference: https://github.com/XMSS/xmss-reference/issues/17\r\n\r\n4. All parameters are tested with pre-generated KAT files and SHA256 hashes of the KAT. \r\n\r\nAll the parameters added to XMSS. https://github.com/ducnguyen-sb/xmss-reference/blob/master/external/xmss_liboqs_params.md\r\n\r\n\r\n| Algorithms                    | oid  | sk     | pk  | sig  | n  |\r\n|-------------------------------|------|--------|-----|------|----|\r\n| XMSS-SHA2_10_256              | 0x01 |  1373 |  64 |  2500 | 32 |\r\n| XMSS-SHA2_16_256              | 0x02 |  2093 |  64 |  2692 | 32 |\r\n| XMSS-SHA2_20_256              | 0x03 |  2573 |  64 |  2820 | 32 |\r\n| XMSS-SHAKE_10_256             | 0x07 |  1373 |  64 |  2500 | 32 |\r\n| XMSS-SHAKE_16_256             | 0x08 |  2093 |  64 |  2692 | 32 |\r\n| XMSS-SHAKE_20_256             | 0x09 |  2573 |  64 |  2820 | 32 |\r\n| XMSS-SHA2_10_512              | 0x04 |  2653 | 128 |  9092 | 64 |\r\n| XMSS-SHA2_16_512              | 0x05 |  4045 | 128 |  9476 | 64 |\r\n| XMSS-SHA2_20_512              | 0x06 |  4973 | 128 |  9732 | 64 |\r\n| XMSS-SHAKE_10_512             | 0x0a |  2653 | 128 |  9092 | 64 |\r\n| XMSS-SHAKE_16_512             | 0x0b |  4045 | 128 |  9476 | 64 |\r\n| XMSS-SHAKE_20_512             | 0x0c |  4973 | 128 |  9732 | 64 |\r\n| XMSSMT-SHA2_20/2_256          | 0x01 |  5998 |  64 |  4963 | 32 |\r\n| XMSSMT-SHA2_20/4_256          | 0x02 | 10938 |  64 |  9251 | 32 |\r\n| XMSSMT-SHA2_40/2_256          | 0x03 |  9600 |  64 |  5605 | 32 |\r\n| XMSSMT-SHA2_40/4_256          | 0x04 | 15252 |  64 |  9893 | 32 |\r\n| XMSSMT-SHA2_40/8_256          | 0x05 | 24516 |  64 | 18469 | 32 |\r\n| XMSSMT-SHA2_60/3_256          | 0x06 | 16629 |  64 |  8392 | 32 |\r\n| XMSSMT-SHA2_60/6_256          | 0x07 | 24507 |  64 | 14824 | 32 |\r\n| XMSSMT-SHA2_60/12_256         | 0x08 | 38095 |  64 | 27688 | 32 |\r\n| XMSSMT-SHAKE_20/2_256         | 0x11 |  5998 |  64 |  4963 | 32 |\r\n| XMSSMT-SHAKE_20/4_256         | 0x12 | 10938 |  64 |  9251 | 32 |\r\n| XMSSMT-SHAKE_40/2_256         | 0x13 |  9600 |  64 |  5605 | 32 |\r\n| XMSSMT-SHAKE_40/4_256         | 0x14 | 15252 |  64 |  9893 | 32 |\r\n| XMSSMT-SHAKE_40/8_256         | 0x15 | 24516 |  64 | 18469 | 32 |\r\n| XMSSMT-SHAKE_60/3_256         | 0x16 | 16629 |  64 |  8392 | 32 |\r\n| XMSSMT-SHAKE_60/6_256         | 0x17 | 24507 |  64 | 14824 | 32 |\r\n| XMSSMT-SHAKE_60/12_256        | 0x18 | 38095 |  64 | 27688 | 32 |\r\n\r\n\r\n7. The upstream of the current code: https://github.com/ducnguyen-sb/xmss-reference\r\n\r\n* [x] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [x] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640084372","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1489#issuecomment-1640084372","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489","id":1640084372,"node_id":"IC_kwDOA-eq3c5hwbOU","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T12:03:03Z","updated_at":"2023-07-18T12:03:03Z","author_association":"COLLABORATOR","body":"\r\n\r\n@baentsch I realize that the `test_cmdline.py` actually run the key pair generation. \r\nSo I write a helper so at certain parameters, it should read pre-generated keypair instead of generating one. \r\n\r\nYou can see the idea in this section of the code:\r\n\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/d7972213947d38e9fa35251f1c95ceec0ef49977/tests/test_sig_stfl.c#L179-L245\r\n\r\nNow I don't know why my test on `arm_emulated` return different hash output. That's strange. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640084372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T12:03:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30503693343","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1506","id":1797076784,"node_id":"I_kwDOA-eq3c5rHTcw","number":1506,"title":"macOS M1: dilithium/aarch64 not compiling with gcc","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-07-10T16:04:03Z","updated_at":"2023-07-18T15:24:48Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the bug**\r\nCompiling fails on macOS (M1) when using gcc.\r\n\r\n```\r\n...\r\n[ 63%] Building ASM object src/sig/dilithium/CMakeFiles/dilithium_2_aarch64.dir/pqclean_dilithium2_aarch64/__asm_iNTT.S.o\r\n/Users/bhe/git/liboqs/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S:8:1: error: unknown directive\r\n.type PQCLEAN_DILITHIUM2_AARCH64_asm_intt_SIMD_top, %function\r\n^\r\n/Users/bhe/git/liboqs/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S:418:1: error: unknown directive\r\n.type PQCLEAN_DILITHIUM2_AARCH64_asm_intt_SIMD_bot, %function\r\n^\r\n...\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\ncmake -DCMAKE_C_COMPILER=gcc-13 ..\r\nmake\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS 13.4.1\r\n - OpenSSL version 1.1.1t\r\n - Compiler version used: gcc-13 (Homebrew GCC 13.1.0) 13.1.0\r\n - Build variables used \"-DCMAKE_C_COMPILER=gcc-13\"\r\n - liboqs version: main\r\n\r\n**Additional context**\r\nThe respective \".type <fun>, %function\" statements in the aarch64 assembly code are excluded for clang but not for gcc:\r\nhttps://github.com/open-quantum-safe/liboqs/blob/93e784725e3be0aaa2691a557456ff786155a7b2/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S#L7-L9\r\nPQClean upstream appears to have removed the \".type <fun>, %function\" statements in the [meanwhile](https://github.com/PQClean/PQClean/commit/0b8db0f8323734b60f638c97f026ac8b66b42378), so a fresh copy_from_upstream might help.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640440412","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1506#issuecomment-1640440412","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506","id":1640440412,"node_id":"IC_kwDOA-eq3c5hxyJc","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T15:24:47Z","updated_at":"2023-07-18T15:24:47Z","author_association":"MEMBER","body":"@bhess #1470 has landed. Did I read the above right in that you volunteer(ed) to do the PR to close this issue?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640440412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T15:24:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30503952270","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1506","id":1797076784,"node_id":"I_kwDOA-eq3c5rHTcw","number":1506,"title":"macOS M1: dilithium/aarch64 not compiling with gcc","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[{"id":423520874,"node_id":"MDU6TGFiZWw0MjM1MjA4NzQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Something isn't working; high priority to fix"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-07-10T16:04:03Z","updated_at":"2023-07-18T15:34:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the bug**\r\nCompiling fails on macOS (M1) when using gcc.\r\n\r\n```\r\n...\r\n[ 63%] Building ASM object src/sig/dilithium/CMakeFiles/dilithium_2_aarch64.dir/pqclean_dilithium2_aarch64/__asm_iNTT.S.o\r\n/Users/bhe/git/liboqs/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S:8:1: error: unknown directive\r\n.type PQCLEAN_DILITHIUM2_AARCH64_asm_intt_SIMD_top, %function\r\n^\r\n/Users/bhe/git/liboqs/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S:418:1: error: unknown directive\r\n.type PQCLEAN_DILITHIUM2_AARCH64_asm_intt_SIMD_bot, %function\r\n^\r\n...\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\ncmake -DCMAKE_C_COMPILER=gcc-13 ..\r\nmake\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS 13.4.1\r\n - OpenSSL version 1.1.1t\r\n - Compiler version used: gcc-13 (Homebrew GCC 13.1.0) 13.1.0\r\n - Build variables used \"-DCMAKE_C_COMPILER=gcc-13\"\r\n - liboqs version: main\r\n\r\n**Additional context**\r\nThe respective \".type <fun>, %function\" statements in the aarch64 assembly code are excluded for clang but not for gcc:\r\nhttps://github.com/open-quantum-safe/liboqs/blob/93e784725e3be0aaa2691a557456ff786155a7b2/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S#L7-L9\r\nPQClean upstream appears to have removed the \".type <fun>, %function\" statements in the [meanwhile](https://github.com/PQClean/PQClean/commit/0b8db0f8323734b60f638c97f026ac8b66b42378), so a fresh copy_from_upstream might help.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640463187","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1506#issuecomment-1640463187","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506","id":1640463187,"node_id":"IC_kwDOA-eq3c5hx3tT","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T15:34:15Z","updated_at":"2023-07-18T15:34:15Z","author_association":"MEMBER","body":"Sure, I'll do a pull tomorrow and see if it fixes the issue.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640463187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T15:34:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30503953778","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1320","id":1462038378,"node_id":"I_kwDOA-eq3c5XJO9q","number":1320,"title":"Update Kyber and Dilithium ARM code.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"assignees":[{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":5,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-07-18T15:03:38Z","due_on":null,"closed_at":null},"comments":4,"created_at":"2022-11-23T16:14:51Z","updated_at":"2023-07-18T15:34:19Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640463294","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1320#issuecomment-1640463294","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320","id":1640463294,"node_id":"IC_kwDOA-eq3c5hx3u-","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T15:34:19Z","updated_at":"2023-07-18T15:34:19Z","author_association":"MEMBER","body":"> PQClean doesn't have the latest code from neon-ntt.\r\n\r\nIs this still the case? Or would/should a fresh `copy_from_upstream` resolving #1506 also resolve this issue?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640463294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T15:34:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30505464091","type":"IssueCommentEvent","actor":{"id":876514,"login":"aaupov","display_login":"aaupov","gravatar_id":"","url":"https://api.github.com/users/aaupov","avatar_url":"https://avatars.githubusercontent.com/u/876514?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1508","id":1803307043,"node_id":"PR_kwDOA-eq3c5Vb51i","number":1508,"title":"[NFCI] Move Keccak rhotates tables to rodata","user":{"login":"aaupov","id":876514,"node_id":"MDQ6VXNlcjg3NjUxNA==","avatar_url":"https://avatars.githubusercontent.com/u/876514?v=4","gravatar_id":"","url":"https://api.github.com/users/aaupov","html_url":"https://github.com/aaupov","followers_url":"https://api.github.com/users/aaupov/followers","following_url":"https://api.github.com/users/aaupov/following{/other_user}","gists_url":"https://api.github.com/users/aaupov/gists{/gist_id}","starred_url":"https://api.github.com/users/aaupov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aaupov/subscriptions","organizations_url":"https://api.github.com/users/aaupov/orgs","repos_url":"https://api.github.com/users/aaupov/repos","events_url":"https://api.github.com/users/aaupov/events{/privacy}","received_events_url":"https://api.github.com/users/aaupov/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-07-13T15:48:39Z","updated_at":"2023-07-18T16:32:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1508","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1508","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1508.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1508.patch","merged_at":null},"body":"rhotates tables are placed to .text section which confuses tools such as BOLT. Move them to rodata to unbreak and avoid polluting icache/iTLB with data.\r\n\r\nSync with OpenSSL https://github.com/openssl/openssl/pull/21440\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640558570","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1508#issuecomment-1640558570","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508","id":1640558570,"node_id":"IC_kwDOA-eq3c5hyO_q","user":{"login":"aaupov","id":876514,"node_id":"MDQ6VXNlcjg3NjUxNA==","avatar_url":"https://avatars.githubusercontent.com/u/876514?v=4","gravatar_id":"","url":"https://api.github.com/users/aaupov","html_url":"https://github.com/aaupov","followers_url":"https://api.github.com/users/aaupov/followers","following_url":"https://api.github.com/users/aaupov/following{/other_user}","gists_url":"https://api.github.com/users/aaupov/gists{/gist_id}","starred_url":"https://api.github.com/users/aaupov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aaupov/subscriptions","organizations_url":"https://api.github.com/users/aaupov/orgs","repos_url":"https://api.github.com/users/aaupov/repos","events_url":"https://api.github.com/users/aaupov/events{/privacy}","received_events_url":"https://api.github.com/users/aaupov/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T16:32:46Z","updated_at":"2023-07-18T16:32:46Z","author_association":"NONE","body":"> Hi Amir, we have very little experience with these types of matters, so any guidance from you other experts would be appreciated.\r\n\r\nThere's this patch mechanism that I don't understand enough but which unfortunately interferes with this change: https://github.com/open-quantum-safe/liboqs/blob/main/scripts/copy_from_xkcp/patches/lib_low_KeccakP-1600_AVX2_KeccakP-1600-AVX2.s\r\n\r\nIt turns on this flag `old-gas-syntax` which breaks macos builds. I don't have the context of why it was introduced so I can't just turn it off as part of PR.\r\n\r\nMoreover, my understanding is that there are two options to bring this upstream openssl change down to liboqs: \r\n1. re-generate the upstream assembly source and deal with the possible breakage of patches,\r\n2. incorporate the upstream change into patches, ensuring they will break the future updated code.\r\n\r\nThe upstream change itself is trivial, but I want to avoid doing the maintainer work of either of the two approaches above.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640558570/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T16:32:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30506445054","type":"IssueCommentEvent","actor":{"id":8883898,"login":"mczraf","display_login":"mczraf","gravatar_id":"","url":"https://api.github.com/users/mczraf","avatar_url":"https://avatars.githubusercontent.com/u/8883898?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1320","id":1462038378,"node_id":"I_kwDOA-eq3c5XJO9q","number":1320,"title":"Update Kyber and Dilithium ARM code.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"assignees":[{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":5,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-07-18T15:03:38Z","due_on":null,"closed_at":null},"comments":5,"created_at":"2022-11-23T16:14:51Z","updated_at":"2023-07-18T17:15:27Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640641574","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1320#issuecomment-1640641574","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320","id":1640641574,"node_id":"IC_kwDOA-eq3c5hyjQm","user":{"login":"mczraf","id":8883898,"node_id":"MDQ6VXNlcjg4ODM4OTg=","avatar_url":"https://avatars.githubusercontent.com/u/8883898?v=4","gravatar_id":"","url":"https://api.github.com/users/mczraf","html_url":"https://github.com/mczraf","followers_url":"https://api.github.com/users/mczraf/followers","following_url":"https://api.github.com/users/mczraf/following{/other_user}","gists_url":"https://api.github.com/users/mczraf/gists{/gist_id}","starred_url":"https://api.github.com/users/mczraf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mczraf/subscriptions","organizations_url":"https://api.github.com/users/mczraf/orgs","repos_url":"https://api.github.com/users/mczraf/repos","events_url":"https://api.github.com/users/mczraf/events{/privacy}","received_events_url":"https://api.github.com/users/mczraf/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T17:15:27Z","updated_at":"2023-07-18T17:15:27Z","author_association":"NONE","body":"> > PQClean doesn't have the latest code from neon-ntt.\r\n> \r\n> Is this still the case? Or would/should a fresh `copy_from_upstream` resolving #1506 also resolve this issue?\r\n\r\nI believe it is still the case. I've checked [PQClean repo](https://github.com/PQClean/PQClean/commits/master/crypto_kem/kyber768/aarch64/neon_poly.c), and they are still using the original Neon implementation from Sep/2021.  \r\n\r\nIt might be worth adding that upgrading this implementation to a newer version may lead to some additional benefits. For example, LibOQS Kyber's implementation is not marked as passing all Valgrind branch-on-secrets tests ([see here](https://github.com/open-quantum-safe/liboqs/blob/main/docs/algorithms/kem/kyber.md)). There's a chance this could be automatically fixed by simply resorting to the newer Neon implementation. PS: At the moment, I can't dedicate cycles to this effort myself unfortunately but I thought it would be helpful to comment here to reinforce that this seems like an interesting move for LibOQS. \r\n\r\nThank you all for this amazing project :)\r\n\r\nRafael Misoczki (speaking for myself)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1640641574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T17:15:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30506927438","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/102","id":1798110616,"node_id":"I_kwDOETYnOM5rLP2Y","number":102,"title":"Data collection inconsistent","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-07-11T05:13:18Z","updated_at":"2023-07-18T17:36:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Data as requested by @christianpaquin in #93 is being collected (see e.g. https://openquantumsafe.org/benchmarking/visualization/2023-07-08/handshakes.json) but in an inconsistent manner: Many algorithm combinations deliver results on `x64` but not `aarch64` and `m1` and in many cases it's the opposite. Investigation warranted -- as on the many other issues in this project. Not fun being alone looking at these...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1640671288","html_url":"https://github.com/open-quantum-safe/profiling/issues/102#issuecomment-1640671288","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102","id":1640671288,"node_id":"IC_kwDOETYnOM5hyqg4","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-07-18T17:36:07Z","updated_at":"2023-07-18T17:36:07Z","author_association":"NONE","body":"I had hoped that this would perhaps be a one-off issue due to timing of GitHub / Docker pushes, but that has turned out not to be the case: the July 15 test run (results in the oqs-tests S3 bucket) seems to be exhibiting the same problem.\r\n\r\n> > Many algorithm combinations deliver results on x64 but not aarch64 and m1 and in many cases it's the opposite.\r\n> \r\n> When checking the results for July 8 collected on the different architectures, I noticed something confusing: only the `x64` run collected handshake data for all algorithm combinations -- contrary to what the new logic as per #100 dictates. Weird and inexplicable given that the most current docker image is pulled as part of VM startup:\r\n\r\nI noticed this as well, and I'm at a bit of a loss. I confirmed that with a fresh pull of the oqs-perf:latest docker image, only the desired algorithm combinations run, as expected (running on my own amd64 machine). This was (apparently) pushed 15 days ago, well before the tests ran on both July 8 and July 15. It seems to me that the latest image is not, in fact, being successfully pulled in the automated process. Unless I'm missing something, of course...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1640671288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-18T17:36:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
