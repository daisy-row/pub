{"id":"30517387234","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/218","id":1810718579,"node_id":"I_kwDOE_A9l85r7V9z","number":218,"title":"Provider signing with CMS silently fails ... I thought the change was upstreamed in OpenSSL 3.2-dev?","user":{"login":"ambrisko","id":63818252,"node_id":"MDQ6VXNlcjYzODE4MjUy","avatar_url":"https://avatars.githubusercontent.com/u/63818252?v=4","gravatar_id":"","url":"https://api.github.com/users/ambrisko","html_url":"https://github.com/ambrisko","followers_url":"https://api.github.com/users/ambrisko/followers","following_url":"https://api.github.com/users/ambrisko/following{/other_user}","gists_url":"https://api.github.com/users/ambrisko/gists{/gist_id}","starred_url":"https://api.github.com/users/ambrisko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ambrisko/subscriptions","organizations_url":"https://api.github.com/users/ambrisko/orgs","repos_url":"https://api.github.com/users/ambrisko/repos","events_url":"https://api.github.com/users/ambrisko/events{/privacy}","received_events_url":"https://api.github.com/users/ambrisko/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-07-18T21:05:37Z","updated_at":"2023-07-19T05:00:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When I use the fork https://github.com/open-quantum-safe/openssl, I can do openssl cms sign and verify but with the provider it silently exits:\r\n  + ../openssl_install/bin/openssl cms -in inputfile -sign -signer sphincssha2128ssimple_srv.crt -inkey sphincssha2128ssimple_srv.key -nodetach -outform pem -binary -out signedfile.cms -provider-path /data/home/ambrisko/ucs/repo/git/adopter/ucs-adopters/uefi_keys/post_quantum_crypto_provider/openssl_install/lib/ossl-modules -provider default -provider oqsprovider\r\n  + exit 1\r\nopenssl_install/bin/openssl version\r\n  OpenSSL 3.2.0-dev  (Library: OpenSSL 3.2.0-dev )\r\nThis was cloned earlier this week. I thought this was fixed with the note about:\r\n3.0/3.1\r\n\r\nIn these versions, CMS functionality implemented in providers is not supported: The resolution of https://github.com/openssl/openssl/issues/17717 has not been not getting back-ported to OpenSSL3.0.\r\n\r\nAlso not supported in this version are provider-based signature algorithms used during TLS1.3 operations as documented in https://github.com/openssl/openssl/issues/10512.\r\n3.2(-dev)\r\n\r\nAfter https://github.com/openssl/openssl/pull/19312 landed, (also PQ) signature algorithms are working in TLS1.3 (handshaking); after https://github.com/openssl/openssl/pull/20486 has landed, also algorithms with very long signatures are supported.\r\n\r\nMaybe I'm missing something.  CMS verify works with fine with the provider if I use the OpenSSL fork to do the signing.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641412165","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/218#issuecomment-1641412165","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218","id":1641412165,"node_id":"IC_kwDOE_A9l85h1fZF","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T05:00:55Z","updated_at":"2023-07-19T05:00:55Z","author_association":"MEMBER","body":"Thanks for your report. Please provide the elements requested in a [bug report](https://github.com/open-quantum-safe/oqs-provider/issues/new?assignees=&labels=&projects=&template=bug_report.md&title=), including in this case\r\n- the commands used to generate the CRT and KEY files above\r\n- the output of the command `../openssl_install/bin/openssl list -providers -verbose -provider-path /data/home/ambrisko/ucs/repo/git/adopter/ucs-adopters/uefi_keys/post_quantum_crypto_provider/openssl_install/lib/ossl-modules -provider default -provider oqsprovider` and `../openssl_install/bin/openssl list -signature-algorithms -provider-path /data/home/ambrisko/ucs/repo/git/adopter/ucs-adopters/uefi_keys/post_quantum_crypto_provider/openssl_install/lib/ossl-modules -provider default -provider oqsprovider`\r\n\r\nLastly, to eliminate any issues with a build error on your side, please run your CMS test commands in our pre-built docker image `docker run -it openquantumsafe/oqs-ossl3`: They ought to work there as CMS testing is part of CI. No need to pass any `-provider` or `-provider-path` parameters there. \r\n\r\nPlease provide full command and output traces so we can try to understand what's happening. \"Exit 1\" is not sufficiently tell-tale for us.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641412165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T05:00:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30518763818","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/102","id":1798110616,"node_id":"I_kwDOETYnOM5rLP2Y","number":102,"title":"Data collection inconsistent","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-07-11T05:13:18Z","updated_at":"2023-07-19T06:25:44Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Data as requested by @christianpaquin in #93 is being collected (see e.g. https://openquantumsafe.org/benchmarking/visualization/2023-07-08/handshakes.json) but in an inconsistent manner: Many algorithm combinations deliver results on `x64` but not `aarch64` and `m1` and in many cases it's the opposite. Investigation warranted -- as on the many other issues in this project. Not fun being alone looking at these...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1641490469","html_url":"https://github.com/open-quantum-safe/profiling/issues/102#issuecomment-1641490469","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102","id":1641490469,"node_id":"IC_kwDOETYnOM5h1ygl","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T06:25:44Z","updated_at":"2023-07-19T06:25:44Z","author_association":"MEMBER","body":"> I'm at a bit of a loss. \r\n\r\nWelcome to the club!\r\n\r\n> I confirmed that with a fresh pull of the oqs-perf:latest docker image, only the desired algorithm combinations run, as expected (running on my own amd64 machine). This was (apparently) pushed 15 days ago, well before the tests ran on both July 8 and July 15. It seems to me that the latest image must not, in fact, be successfully pulled in the automated process. Unless I'm missing something, of course...\r\n\r\nI just manually started the [x64 profiler instance](https://us-east-2.console.aws.amazon.com/ec2/home?region=us-east-2#InstanceDetails:instanceId=i-05fa329afda1c5b66) to check the scripts:\r\n\r\n```\r\n$ crontab -l\r\n@reboot /home/ec2-user/do_test.sh\r\n$ cat /home/ec2-user/do_test.sh\r\n#!/bin/bash\r\n\r\nsudo service docker start\r\nsleep 10\r\ndocker container prune -f\r\ndocker volume prune -f\r\ndocker pull openquantumsafe/oqs-perf >> /home/ec2-user/run.log\r\ndocker run --rm --privileged ... openquantumsafe/oqs-perf >> /home/ec2-user/run.log 2>&1\r\nif [ $? -eq 0 ]; then\r\n   sudo shutdown\r\nfi\r\n```\r\n\r\nEverything _seems_ to be OK (incl. proper pull messages in the logfile). But when checking the checksums of the docker image, there's a glaring error:\r\n\r\n`openquantumsafe/oqs-perf   latest    a1ed602b67bc` while it should be `openquantumsafe/oqs-perf          latest     ae6bc92b0736`\r\n\r\n--> How in the world is it possible that the `docker pull` command is executed but leads to an old image being downloaded? When I executed the same command manually, finally, the error became visible: \"failed to register layer: Error processing tar file(exit status 1): mkdir /usr/lib/debug/.build-id/3f: no space left on device\r\n\"\r\n\r\nSigh. \r\n\r\n--> Extended the run script with `docker rmi -f $(docker images -a -q)` and now everything seems to be in order. Also extended script to log error output for `docker pull` and the shell script with \"set -e\".\r\n\r\nTogether with #104 most if not all observed issues seem to be fixed. Let's use that code now in this week's profiling runs.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1641490469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T06:25:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30520216149","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201","id":1781101035,"node_id":"PR_kwDOE_A9l85UQaEM","number":201,"title":"Allow the user to build oqs-provider as a static library.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":23,"created_at":"2023-06-29T15:45:28Z","updated_at":"2023-07-19T07:33:15Z","closed_at":"2023-07-19T07:32:27Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/201","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201.patch","merged_at":"2023-07-19T07:32:27Z"},"body":"This commit removes the `SHARED` argument of the `add_library`. By doing so, we let the user choose the build type of library.\r\n\r\nBy default, CMake will build a static library. Thus, [`BUILD_SHARED_LIBS`] must be used to switch to a shared library.\r\n\r\n`oqs-provider` as a static library allows us to use the provider without having to store its shared library somewhere. In addition, it happens that some operating systems prohibit the use of `dlopen`/`dlsym`.\r\n\r\nTo load `oqs-provider` when it is embedded into a library of a binary, one can use the [`OSSL_PROVIDER_add_builtin`] API from OpenSSL 3.\r\n\r\n[`BUILD_SHARED_LIBS`]: https://cmake.org/cmake/help/latest/variable/BUILD_SHARED_LIBS.html\r\n[`OSSL_PROVIDER_add_builtin`]: https://www.openssl.org/docs/man3.1/man3/OSSL_PROVIDER_add_builtin.html\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641568317","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/201#issuecomment-1641568317","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/201","id":1641568317,"node_id":"IC_kwDOE_A9l85h2Fg9","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T07:33:15Z","updated_at":"2023-07-19T07:33:15Z","author_association":"MEMBER","body":"Thanks again for this contribution, @thb-sb!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641568317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T07:33:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30520229224","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/82","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/82/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/82/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/82/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/82","id":1424316745,"node_id":"I_kwDOE_A9l85U5VlJ","number":82,"title":"Static library support","user":{"login":"mingw-io","id":70483213,"node_id":"MDQ6VXNlcjcwNDgzMjEz","avatar_url":"https://avatars.githubusercontent.com/u/70483213?v=4","gravatar_id":"","url":"https://api.github.com/users/mingw-io","html_url":"https://github.com/mingw-io","followers_url":"https://api.github.com/users/mingw-io/followers","following_url":"https://api.github.com/users/mingw-io/following{/other_user}","gists_url":"https://api.github.com/users/mingw-io/gists{/gist_id}","starred_url":"https://api.github.com/users/mingw-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mingw-io/subscriptions","organizations_url":"https://api.github.com/users/mingw-io/orgs","repos_url":"https://api.github.com/users/mingw-io/repos","events_url":"https://api.github.com/users/mingw-io/events{/privacy}","received_events_url":"https://api.github.com/users/mingw-io/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-10-26T16:11:18Z","updated_at":"2023-07-19T07:33:48Z","closed_at":"2023-07-19T07:33:48Z","author_association":"NONE","active_lock_reason":null,"body":"Hi.\r\n\r\nMany people build OpenSSL as a static library.\r\nIt appears that OQS provider does NOT work properly with a static OpenSSL as some failing tests demonstrate (e.g. oqs_endecode).\r\nWe have been experimenting/trying to build OpenSSL statically with OQS provider 'embedded' the same way as the legacy provider is built.\r\nThis is our first attempt and it seems to be working.\r\nObviously there are advantages and disadvantages here.\r\nThe main advantage is that we end up with only one file.\r\n\r\nWe have run all OQS tests (oqs_signatures, oqs_kems, oqs_groups & oqs_endecode) and they have all passed.\r\n\r\nDo we need to run/do more testing here? We can make the binary available (if that helps!).\r\n\r\nCheers and thanks for this project.\r\n\r\n![image](https://user-images.githubusercontent.com/70483213/198078367-ed64cc5a-80f5-42a5-8b50-12d0b0795c3e.png)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/82/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/82/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641569037","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/82#issuecomment-1641569037","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/82","id":1641569037,"node_id":"IC_kwDOE_A9l85h2FsN","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T07:33:48Z","updated_at":"2023-07-19T07:33:48Z","author_association":"MEMBER","body":"Resolved by #201 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641569037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T07:33:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30521305974","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1508","id":1803307043,"node_id":"PR_kwDOA-eq3c5Vb51i","number":1508,"title":"[NFCI] Move Keccak rhotates tables to rodata","user":{"login":"aaupov","id":876514,"node_id":"MDQ6VXNlcjg3NjUxNA==","avatar_url":"https://avatars.githubusercontent.com/u/876514?v=4","gravatar_id":"","url":"https://api.github.com/users/aaupov","html_url":"https://github.com/aaupov","followers_url":"https://api.github.com/users/aaupov/followers","following_url":"https://api.github.com/users/aaupov/following{/other_user}","gists_url":"https://api.github.com/users/aaupov/gists{/gist_id}","starred_url":"https://api.github.com/users/aaupov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aaupov/subscriptions","organizations_url":"https://api.github.com/users/aaupov/orgs","repos_url":"https://api.github.com/users/aaupov/repos","events_url":"https://api.github.com/users/aaupov/events{/privacy}","received_events_url":"https://api.github.com/users/aaupov/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-07-13T15:48:39Z","updated_at":"2023-07-19T08:16:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1508","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1508","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1508.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1508.patch","merged_at":null},"body":"rhotates tables are placed to .text section which confuses tools such as BOLT. Move them to rodata to unbreak and avoid polluting icache/iTLB with data.\r\n\r\nSync with OpenSSL https://github.com/openssl/openssl/pull/21440\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1641636624","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1508#issuecomment-1641636624","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1508","id":1641636624,"node_id":"IC_kwDOA-eq3c5h2WMQ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T08:16:32Z","updated_at":"2023-07-19T08:16:32Z","author_association":"MEMBER","body":"> Dropping this PR for maintainers to figure out the proper way to include openssl change.\r\n\r\n> there are two options to bring this upstream openssl change down \r\n\r\nI'm somewhat confused by these statements: The code this PR touches is not related to openssl, but its upstream is [XKCP](https://github.com/XKCP/XKCP). And in that project I didn't find the change done in https://github.com/openssl/openssl/pull/21440 so the proposed update options from upstream won't quite solve the issue. \r\n\r\nWithout having this change in upstream (XKCP) the proposed change may be added to the upstream patch -- but I don't know either the rationale for enabling \"old-gas-syntax\" in #1173, so asking its authors @jschanck and @dstebila for advice. \r\n\r\nWithout such rationale, we could add the proposed change to https://github.com/open-quantum-safe/liboqs/tree/main/scripts/copy_from_xkcp/patches guarding for Darwin (e.g. with a surrounding \"#ifndef old_gas_syntax\"). Would that serve your purpose @aaupov ?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1641636624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T08:16:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30521479451","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1506","id":1797076784,"node_id":"I_kwDOA-eq3c5rHTcw","number":1506,"title":"macOS M1: dilithium/aarch64 not compiling with gcc","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[{"id":423520874,"node_id":"MDU6TGFiZWw0MjM1MjA4NzQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Something isn't working; high priority to fix"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-07-10T16:04:03Z","updated_at":"2023-07-19T08:23:11Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the bug**\r\nCompiling fails on macOS (M1) when using gcc.\r\n\r\n```\r\n...\r\n[ 63%] Building ASM object src/sig/dilithium/CMakeFiles/dilithium_2_aarch64.dir/pqclean_dilithium2_aarch64/__asm_iNTT.S.o\r\n/Users/bhe/git/liboqs/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S:8:1: error: unknown directive\r\n.type PQCLEAN_DILITHIUM2_AARCH64_asm_intt_SIMD_top, %function\r\n^\r\n/Users/bhe/git/liboqs/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S:418:1: error: unknown directive\r\n.type PQCLEAN_DILITHIUM2_AARCH64_asm_intt_SIMD_bot, %function\r\n^\r\n...\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\ncmake -DCMAKE_C_COMPILER=gcc-13 ..\r\nmake\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS 13.4.1\r\n - OpenSSL version 1.1.1t\r\n - Compiler version used: gcc-13 (Homebrew GCC 13.1.0) 13.1.0\r\n - Build variables used \"-DCMAKE_C_COMPILER=gcc-13\"\r\n - liboqs version: main\r\n\r\n**Additional context**\r\nThe respective \".type <fun>, %function\" statements in the aarch64 assembly code are excluded for clang but not for gcc:\r\nhttps://github.com/open-quantum-safe/liboqs/blob/93e784725e3be0aaa2691a557456ff786155a7b2/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S#L7-L9\r\nPQClean upstream appears to have removed the \".type <fun>, %function\" statements in the [meanwhile](https://github.com/PQClean/PQClean/commit/0b8db0f8323734b60f638c97f026ac8b66b42378), so a fresh copy_from_upstream might help.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1641645941","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1506#issuecomment-1641645941","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506","id":1641645941,"node_id":"IC_kwDOA-eq3c5h2Yd1","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T08:23:11Z","updated_at":"2023-07-19T08:23:11Z","author_association":"MEMBER","body":"@bhess Thanks in advance. And while you're at it, please also check `clang` operations: I'm now getting an error on M1 in AES, too (plain `cmake -GNinja ..` config): The code was introduced in https://github.com/open-quantum-safe/liboqs/commit/719a84ecddc89c0fc64ae75040ce0d717ea13394\r\n\r\n```\r\n[9/652] Building C object src/common/CMakeFiles/common.dir/aes/aes256_armv8.c.o\r\nFAILED: src/common/CMakeFiles/common.dir/aes/aes256_armv8.c.o \r\n/Library/Developer/CommandLineTools/usr/bin/cc -DOQS_HAVE_ALIGNED_ALLOC -DOQS_HAVE_GETENTROPY -DOQS_HAVE_MEMSET_S -DOQS_HAVE_POSIX_MEMALIGN -I/Users/baentsch/git/liboqs/build/include -std=gnu11 -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk -mmacosx-version-min=13.4 -fPIC -fvisibility=hidden -march=armv8-a+crypto -Wall -Wextra -Wpedantic -Wno-unused-command-line-argument -Wa,--noexecstack -O3 -fomit-frame-pointer -Wbad-function-cast -Wcast-qual -Wnarrowing -Wconversion -Werror -mcpu=cortex-a53+crypto -MD -MT src/common/CMakeFiles/common.dir/aes/aes256_armv8.c.o -MF src/common/CMakeFiles/common.dir/aes/aes256_armv8.c.o.d -o src/common/CMakeFiles/common.dir/aes/aes256_armv8.c.o -c /Users/baentsch/git/liboqs/src/common/aes/aes256_armv8.c\r\n/Users/baentsch/git/liboqs/src/common/aes/aes256_armv8.c:73:84: error: cast from 'const void *' to 'aes256ctx_nobitslice *' drops const qualifier [-Werror,-Wcast-qual]\r\n        const unsigned char *schedule = (const unsigned char *) ((aes256ctx_nobitslice *) _schedule)->sk_exp;\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1641645941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T08:23:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30522406476","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1506","id":1797076784,"node_id":"I_kwDOA-eq3c5rHTcw","number":1506,"title":"macOS M1: dilithium/aarch64 not compiling with gcc","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[{"id":423520874,"node_id":"MDU6TGFiZWw0MjM1MjA4NzQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Something isn't working; high priority to fix"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-07-10T16:04:03Z","updated_at":"2023-07-19T08:58:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the bug**\r\nCompiling fails on macOS (M1) when using gcc.\r\n\r\n```\r\n...\r\n[ 63%] Building ASM object src/sig/dilithium/CMakeFiles/dilithium_2_aarch64.dir/pqclean_dilithium2_aarch64/__asm_iNTT.S.o\r\n/Users/bhe/git/liboqs/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S:8:1: error: unknown directive\r\n.type PQCLEAN_DILITHIUM2_AARCH64_asm_intt_SIMD_top, %function\r\n^\r\n/Users/bhe/git/liboqs/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S:418:1: error: unknown directive\r\n.type PQCLEAN_DILITHIUM2_AARCH64_asm_intt_SIMD_bot, %function\r\n^\r\n...\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\ncmake -DCMAKE_C_COMPILER=gcc-13 ..\r\nmake\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS 13.4.1\r\n - OpenSSL version 1.1.1t\r\n - Compiler version used: gcc-13 (Homebrew GCC 13.1.0) 13.1.0\r\n - Build variables used \"-DCMAKE_C_COMPILER=gcc-13\"\r\n - liboqs version: main\r\n\r\n**Additional context**\r\nThe respective \".type <fun>, %function\" statements in the aarch64 assembly code are excluded for clang but not for gcc:\r\nhttps://github.com/open-quantum-safe/liboqs/blob/93e784725e3be0aaa2691a557456ff786155a7b2/src/sig/dilithium/pqclean_dilithium2_aarch64/__asm_iNTT.S#L7-L9\r\nPQClean upstream appears to have removed the \".type <fun>, %function\" statements in the [meanwhile](https://github.com/PQClean/PQClean/commit/0b8db0f8323734b60f638c97f026ac8b66b42378), so a fresh copy_from_upstream might help.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1641699637","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1506#issuecomment-1641699637","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1506","id":1641699637,"node_id":"IC_kwDOA-eq3c5h2lk1","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T08:58:16Z","updated_at":"2023-07-19T08:58:16Z","author_association":"MEMBER","body":"> @bhess Thanks in advance. And while you're at it, please also check `clang` operations: I'm now getting an error on M1 in AES, too (plain `cmake -GNinja ..` config): The code was introduced in [719a84e](https://github.com/open-quantum-safe/liboqs/commit/719a84ecddc89c0fc64ae75040ce0d717ea13394)\r\n\r\nThanks for catching this @baentsch. I could reproduce the error but needed to compile with `cmake -GNinja -DOQS_USE_AES_OPENSSL=OFF -DCMAKE_C_FLAGS=\"-Werror\" ..`. Will add a fix with the PR!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1641699637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T08:58:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30526055855","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/199","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/199/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/199/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/199/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/199","id":1778287767,"node_id":"I_kwDOE_A9l85p_oSX","number":199,"title":"build failure on Mac Pro with Apple M2 Chip.","user":{"login":"tpa10","id":4023371,"node_id":"MDQ6VXNlcjQwMjMzNzE=","avatar_url":"https://avatars.githubusercontent.com/u/4023371?v=4","gravatar_id":"","url":"https://api.github.com/users/tpa10","html_url":"https://github.com/tpa10","followers_url":"https://api.github.com/users/tpa10/followers","following_url":"https://api.github.com/users/tpa10/following{/other_user}","gists_url":"https://api.github.com/users/tpa10/gists{/gist_id}","starred_url":"https://api.github.com/users/tpa10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tpa10/subscriptions","organizations_url":"https://api.github.com/users/tpa10/orgs","repos_url":"https://api.github.com/users/tpa10/repos","events_url":"https://api.github.com/users/tpa10/events{/privacy}","received_events_url":"https://api.github.com/users/tpa10/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-06-28T06:23:12Z","updated_at":"2023-07-19T11:20:58Z","closed_at":"2023-07-19T11:20:58Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nld emits warning:\r\nld: warning: ignoring file /Users/tpa/oqs-provider-git-repo/oqs-provider/.local/lib/libcrypto.dylib, building for macOS-x86_64 but attempting to link with file built for macOS-arm64 \r\nand subsequent link step fails due to not finding entry points...\r\n\r\nUndefined symbols for architecture x86_64:\r\n  \"_ASN1_item_d2i_ex\", referenced from:\r\n      _oqsx_d2i_X509_PUBKEY_INTERNAL in oqs_decode_der2key.c.o\r\n  \"_ERR_new\", referenced from:\r\n      _OSSL_provider_init in oqsprov.c.o\r\n      _oqsx_key_op in oqsprov_keys.c.o\r\n      _oqsx_key_new in oqsprov_keys.c.o\r\n      _oqsx_key_fromdata in oqsprov_keys.c.o\r\n      _oqsx_key_recreate_classickey in oqsprov_keys.c.o\r\n      _oqsx_key_new_from_nid in oqsprov_keys.c.o\r\n      _oqsx_import in oqs_kmgmt.c.o\r\n      ...\r\netc, etc.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. git clone https://github.com/open-quantum-safe/oqs-provider.git\r\n2. cd ors-provider\r\n3. scripts/fullbuild.sh -F\r\n\r\n**Expected behavior**\r\nExpected build to complete without error.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.3.1\r\n - OpenSSL version:  OpenSSL 3.2.0-dev  (Library: OpenSSL 3.2.0-dev ) \r\n - Version [e.g. 0.4.0]\r\n\r\n**Additional context**\r\nit appears that openssl is being built for arm64 and oqs-provider is trying to build for X86_64, but I have no idea how to fix this.\r\nnote that I get the same result, whether I use the \"fullbuild.sh\" script, or if I manually build & install openssl and liboqs.  \r\nThose components build and run, but when I attempt to use them to build oqs-provider, I get the arch mismatch problem.\r\nI expect this is NOT an issue on an older Mac that is using an intel chip.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/199/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641900986","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/199#issuecomment-1641900986","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/199","id":1641900986,"node_id":"IC_kwDOE_A9l85h3Wu6","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T11:20:58Z","updated_at":"2023-07-19T11:20:58Z","author_association":"MEMBER","body":"Closing assuming this is fixed. Please re-open if not, providing new logs.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641900986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T11:20:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30527390045","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221","id":1811782235,"node_id":"PR_kwDOE_A9l85V4ilI","number":221,"title":"Fix a bug in the CMake script.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-07-19T11:51:12Z","updated_at":"2023-07-19T12:15:41Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/221","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221.patch","merged_at":null},"body":"PR [#207] introduced a check for setting the right suffix to the library, depending on the target OS:\r\n\r\nhttps://github.com/open-quantum-safe/oqs-provider/blob/823f3178dd50eeb5febf29eb82680400c4d9e887/oqsprov/CMakeLists.txt#L61-L7://github.com/open-quantum-safe/oqs-provider/blob/823f3178dd50eeb5febf29eb82680400c4d9e887/oqsprov/CMakeLists.txt#L61-L79\r\n\r\nHowever, mixed with PR [#201] and the `OQS_PROVIDER_BUILD_STATIC` option, the library may be suffixed with the wrong extension: we may end up with a static library named `oqsprovider.dylib`, even if it's an archive:\r\n\r\n```shell\r\n$ cmake -GNinja \\\r\n    -DOQS_PROVIDER_BUILD_STATIC=ON \\\r\n    -B build\r\n$ cmake --build build\r\n$ file build/lib/oqsprovider.dylib\r\nbuild/lib/oqsprovider.dylib: current ar archive random library\r\n$ # ^ should be named `oqsprovider.a`!\r\n```\r\n\r\nThe check mentioned above is only relevant when oqsprovider is built as a module.\r\n\r\nThis commit fixes this bug and introduces a check in the CircleCI jobs to verify that `oqsprovider.a` is actually produced.\r\n\r\n[#201](https://github.com/open-quantum-safe/oqs-provider/pull/201)\r\n[#207](https://github.com/open-quantum-safe/oqs-provider/pull/207)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641976874","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221#issuecomment-1641976874","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221","id":1641976874,"node_id":"IC_kwDOE_A9l85h3pQq","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T12:15:41Z","updated_at":"2023-07-19T12:15:41Z","author_association":"MEMBER","body":"Hmm -- CI fails... And [the macOS log](https://app.circleci.com/pipelines/github/open-quantum-safe/oqs-provider/719/workflows/9b9121f9-50ae-4f36-91a3-6d1d501bf08b/jobs/1642) makes we wonder (again): Why in the world is `liboqs` again getting built using OpenSSL111? It seems `brew` _de_installs openssl@3 (??) Also, this seems to introduce even more \"suffix surprises\": \"macOS-static\" building a \".dylib\"??","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1641976874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T12:15:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30529880972","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/223","id":1811933905,"node_id":"I_kwDOE_A9l85r_-rR","number":223,"title":"openssl s_client seems to work but s_time does not","user":{"login":"cryptobsv","id":89771619,"node_id":"MDQ6VXNlcjg5NzcxNjE5","avatar_url":"https://avatars.githubusercontent.com/u/89771619?v=4","gravatar_id":"","url":"https://api.github.com/users/cryptobsv","html_url":"https://github.com/cryptobsv","followers_url":"https://api.github.com/users/cryptobsv/followers","following_url":"https://api.github.com/users/cryptobsv/following{/other_user}","gists_url":"https://api.github.com/users/cryptobsv/gists{/gist_id}","starred_url":"https://api.github.com/users/cryptobsv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cryptobsv/subscriptions","organizations_url":"https://api.github.com/users/cryptobsv/orgs","repos_url":"https://api.github.com/users/cryptobsv/repos","events_url":"https://api.github.com/users/cryptobsv/events{/privacy}","received_events_url":"https://api.github.com/users/cryptobsv/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-07-19T13:20:05Z","updated_at":"2023-07-19T13:41:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"openssl s_client seems to work but s_time does not\r\n\r\nI create a self-signed cert:\r\n`openssl req -x509 -new -newkey dilithium2 -keyout CA.key -out CA.crt -nodes -subj \"/CN=oqstest CA\" -days 365`\r\nI start a server:\r\n`openssl s_server -cert CA.crt -key CA.key -curves kyber512 -www -tls1_3 -accept 127.0.0.1:8080 &`\r\nI connect with\r\n`openssl s_client -connect 127.0.0.1:8080`\r\nand I see it connects.\r\nIf I try to connect with\r\n`openssl s_time -connect 127.0.0.1:8080`\r\nI get an error\r\n```\r\nCollecting connection statistics for 30 seconds\r\nERROR\r\n20E05889FFFF0000:error:0A000065:SSL routines:final_key_share:no suitable key share:\r\n../git/ssl/statem/extensions.c:1470:\r\n20305190FFFF0000:error:0A000410:SSL routines:ssl3_read_bytes:ssl/tls alert handshak\r\ne failure:../git/ssl/record/rec_layer_s3.c:856:SSL alert number 40\r\n```\r\nI'm using openssl 3.2.0-dev (commit 709ef409) on an ARM platform and oqsprovider 0.5.1-dev (commit 0c91d091).\r\nIs there anything I am obviously doing wrong? Thanks!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642107539","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/223#issuecomment-1642107539","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223","id":1642107539,"node_id":"IC_kwDOE_A9l85h4JKT","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T13:41:18Z","updated_at":"2023-07-19T13:41:18Z","author_association":"MEMBER","body":"> Is there anything I am obviously doing wrong? Thanks!\r\n\r\nYes: The server specs \"kyber512\" as KEM group while the client does not. So it will use whatever default group you have spec'd (most likely X25519): Mayhem ensues.\r\n\r\nFWIW, here's what we do in [profiling](https://github.com/open-quantum-safe/profiling) for https://openquantumsafe.org/benchmarking: https://github.com/open-quantum-safe/profiling/blob/246d36484c8529d46a9c3f94a713f2d2a37f3a78/perf/Dockerfile#L65C1-L65C510 or more readable in [the usage documentation](https://github.com/open-quantum-safe/oqs-provider/blob/main/USAGE.md#configuration-parameter) to work around this `openssl` limitation (of not being able to spec the TLS1.3 group on the command line for `s_time`).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642107539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T13:41:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30530210948","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1320","id":1462038378,"node_id":"I_kwDOA-eq3c5XJO9q","number":1320,"title":"Update Kyber and Dilithium ARM code.","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"assignees":[{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":5,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-07-18T15:03:38Z","due_on":null,"closed_at":null},"comments":6,"created_at":"2022-11-23T16:14:51Z","updated_at":"2023-07-19T13:52:08Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642127075","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1320#issuecomment-1642127075","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1320","id":1642127075,"node_id":"IC_kwDOA-eq3c5h4N7j","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T13:52:08Z","updated_at":"2023-07-19T13:52:08Z","author_association":"MEMBER","body":"Thanks for the feedback, @mczraf ! https://github.com/PQClean/PQClean/pull/493 seems to confirm --and be work to resolve-- this.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642127075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T13:52:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30532127826","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221","id":1811782235,"node_id":"PR_kwDOE_A9l85V4ilI","number":221,"title":"Fix a bug in the CMake script.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-07-19T11:51:12Z","updated_at":"2023-07-19T14:53:19Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/221","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221.patch","merged_at":null},"body":"PR [#207] introduced a check for setting the right suffix to the library, depending on the target OS:\r\n\r\nhttps://github.com/open-quantum-safe/oqs-provider/blob/823f3178dd50eeb5febf29eb82680400c4d9e887/oqsprov/CMakeLists.txt#L61-L7://github.com/open-quantum-safe/oqs-provider/blob/823f3178dd50eeb5febf29eb82680400c4d9e887/oqsprov/CMakeLists.txt#L61-L79\r\n\r\nHowever, mixed with PR [#201] and the `OQS_PROVIDER_BUILD_STATIC` option, the library may be suffixed with the wrong extension: we may end up with a static library named `oqsprovider.dylib`, even if it's an archive:\r\n\r\n```shell\r\n$ cmake -GNinja \\\r\n    -DOQS_PROVIDER_BUILD_STATIC=ON \\\r\n    -B build\r\n$ cmake --build build\r\n$ file build/lib/oqsprovider.dylib\r\nbuild/lib/oqsprovider.dylib: current ar archive random library\r\n$ # ^ should be named `oqsprovider.a`!\r\n```\r\n\r\nThe check mentioned above is only relevant when oqsprovider is built as a module.\r\n\r\nThis commit fixes this bug and introduces a check in the CircleCI jobs to verify that `oqsprovider.a` is actually produced.\r\n\r\n[#201](https://github.com/open-quantum-safe/oqs-provider/pull/201)\r\n[#207](https://github.com/open-quantum-safe/oqs-provider/pull/207)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642243250","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/221#issuecomment-1642243250","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/221","id":1642243250,"node_id":"IC_kwDOE_A9l85h4qSy","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T14:53:19Z","updated_at":"2023-07-19T14:53:19Z","author_association":"MEMBER","body":"@thb-sb Linux again ... builds a .so so the new test for .a fails...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642243250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T14:53:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30532746272","type":"IssueCommentEvent","actor":{"id":89771619,"login":"cryptobsv","display_login":"cryptobsv","gravatar_id":"","url":"https://api.github.com/users/cryptobsv","avatar_url":"https://avatars.githubusercontent.com/u/89771619?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/223","id":1811933905,"node_id":"I_kwDOE_A9l85r_-rR","number":223,"title":"openssl s_client seems to work but s_time does not","user":{"login":"cryptobsv","id":89771619,"node_id":"MDQ6VXNlcjg5NzcxNjE5","avatar_url":"https://avatars.githubusercontent.com/u/89771619?v=4","gravatar_id":"","url":"https://api.github.com/users/cryptobsv","html_url":"https://github.com/cryptobsv","followers_url":"https://api.github.com/users/cryptobsv/followers","following_url":"https://api.github.com/users/cryptobsv/following{/other_user}","gists_url":"https://api.github.com/users/cryptobsv/gists{/gist_id}","starred_url":"https://api.github.com/users/cryptobsv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cryptobsv/subscriptions","organizations_url":"https://api.github.com/users/cryptobsv/orgs","repos_url":"https://api.github.com/users/cryptobsv/repos","events_url":"https://api.github.com/users/cryptobsv/events{/privacy}","received_events_url":"https://api.github.com/users/cryptobsv/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-07-19T13:20:05Z","updated_at":"2023-07-19T15:13:43Z","closed_at":"2023-07-19T15:13:43Z","author_association":"NONE","active_lock_reason":null,"body":"openssl s_client seems to work but s_time does not\r\n\r\nI create a self-signed cert:\r\n`openssl req -x509 -new -newkey dilithium2 -keyout CA.key -out CA.crt -nodes -subj \"/CN=oqstest CA\" -days 365`\r\nI start a server:\r\n`openssl s_server -cert CA.crt -key CA.key -curves kyber512 -www -tls1_3 -accept 127.0.0.1:8080 &`\r\nI connect with\r\n`openssl s_client -connect 127.0.0.1:8080`\r\nand I see it connects.\r\nIf I try to connect with\r\n`openssl s_time -connect 127.0.0.1:8080`\r\nI get an error\r\n```\r\nCollecting connection statistics for 30 seconds\r\nERROR\r\n20E05889FFFF0000:error:0A000065:SSL routines:final_key_share:no suitable key share:\r\n../git/ssl/statem/extensions.c:1470:\r\n20305190FFFF0000:error:0A000410:SSL routines:ssl3_read_bytes:ssl/tls alert handshak\r\ne failure:../git/ssl/record/rec_layer_s3.c:856:SSL alert number 40\r\n```\r\nI'm using openssl 3.2.0-dev (commit 709ef409) on an ARM platform and oqsprovider 0.5.1-dev (commit 0c91d091).\r\nIs there anything I am obviously doing wrong? Thanks!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642279585","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/223#issuecomment-1642279585","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223","id":1642279585,"node_id":"IC_kwDOE_A9l85h4zKh","user":{"login":"cryptobsv","id":89771619,"node_id":"MDQ6VXNlcjg5NzcxNjE5","avatar_url":"https://avatars.githubusercontent.com/u/89771619?v=4","gravatar_id":"","url":"https://api.github.com/users/cryptobsv","html_url":"https://github.com/cryptobsv","followers_url":"https://api.github.com/users/cryptobsv/followers","following_url":"https://api.github.com/users/cryptobsv/following{/other_user}","gists_url":"https://api.github.com/users/cryptobsv/gists{/gist_id}","starred_url":"https://api.github.com/users/cryptobsv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cryptobsv/subscriptions","organizations_url":"https://api.github.com/users/cryptobsv/orgs","repos_url":"https://api.github.com/users/cryptobsv/repos","events_url":"https://api.github.com/users/cryptobsv/events{/privacy}","received_events_url":"https://api.github.com/users/cryptobsv/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T15:13:43Z","updated_at":"2023-07-19T15:13:43Z","author_association":"NONE","body":"Thanks for the quick reply. For the benefit of anyone with the same problem, I'll quickly summarize how I got `openssl s_time` to work.\r\nModifying openssl.cnf as in https://github.com/open-quantum-safe/oqs-provider/blob/main/USAGE.md#configuration-parameter did the trick.\r\n(Before that, I tried setting the environment variable DEFAULT_GROUPS (as in https://github.com/open-quantum-safe/profiling/blob/246d36484c8529d46a9c3f94a713f2d2a37f3a78/perf/scripts/handshakes.py#L51C6-L51C6), but that did not work.)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642279585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T15:13:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30533281576","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/102","id":1798110616,"node_id":"I_kwDOETYnOM5rLP2Y","number":102,"title":"Data collection inconsistent","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-07-11T05:13:18Z","updated_at":"2023-07-19T15:32:21Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Data as requested by @christianpaquin in #93 is being collected (see e.g. https://openquantumsafe.org/benchmarking/visualization/2023-07-08/handshakes.json) but in an inconsistent manner: Many algorithm combinations deliver results on `x64` but not `aarch64` and `m1` and in many cases it's the opposite. Investigation warranted -- as on the many other issues in this project. Not fun being alone looking at these...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1642311856","html_url":"https://github.com/open-quantum-safe/profiling/issues/102#issuecomment-1642311856","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102","id":1642311856,"node_id":"IC_kwDOETYnOM5h47Cw","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T15:32:21Z","updated_at":"2023-07-19T15:32:21Z","author_association":"NONE","body":"> Everything _seems_ to be OK (incl. proper pull messages in the logfile). But when checking the\r\n> --> How in the world is it possible that the `docker pull` command is executed but leads to an old image being downloaded? When I executed the same command manually, finally, the error became visible: \"failed to register layer: Error processing tar file(exit status 1): mkdir /usr/lib/debug/.build-id/3f: no space left on device \"\r\n> \r\n> Sigh.\r\n\r\nWell, that would do it... Assuming that the aarch64 instance has a similar cron job, it's probably a good idea to make the same modification there so we don't see this pop up again in the (near? distant?) future. Maybe on the M1 machine too?\r\n\r\n(That said, I see that the aarch64 instance was started recently, so it's possible you've already done this.)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1642311856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T15:32:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30533332796","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/223","id":1811933905,"node_id":"I_kwDOE_A9l85r_-rR","number":223,"title":"openssl s_client seems to work but s_time does not","user":{"login":"cryptobsv","id":89771619,"node_id":"MDQ6VXNlcjg5NzcxNjE5","avatar_url":"https://avatars.githubusercontent.com/u/89771619?v=4","gravatar_id":"","url":"https://api.github.com/users/cryptobsv","html_url":"https://github.com/cryptobsv","followers_url":"https://api.github.com/users/cryptobsv/followers","following_url":"https://api.github.com/users/cryptobsv/following{/other_user}","gists_url":"https://api.github.com/users/cryptobsv/gists{/gist_id}","starred_url":"https://api.github.com/users/cryptobsv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cryptobsv/subscriptions","organizations_url":"https://api.github.com/users/cryptobsv/orgs","repos_url":"https://api.github.com/users/cryptobsv/repos","events_url":"https://api.github.com/users/cryptobsv/events{/privacy}","received_events_url":"https://api.github.com/users/cryptobsv/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-07-19T13:20:05Z","updated_at":"2023-07-19T15:34:15Z","closed_at":"2023-07-19T15:13:43Z","author_association":"NONE","active_lock_reason":null,"body":"openssl s_client seems to work but s_time does not\r\n\r\nI create a self-signed cert:\r\n`openssl req -x509 -new -newkey dilithium2 -keyout CA.key -out CA.crt -nodes -subj \"/CN=oqstest CA\" -days 365`\r\nI start a server:\r\n`openssl s_server -cert CA.crt -key CA.key -curves kyber512 -www -tls1_3 -accept 127.0.0.1:8080 &`\r\nI connect with\r\n`openssl s_client -connect 127.0.0.1:8080`\r\nand I see it connects.\r\nIf I try to connect with\r\n`openssl s_time -connect 127.0.0.1:8080`\r\nI get an error\r\n```\r\nCollecting connection statistics for 30 seconds\r\nERROR\r\n20E05889FFFF0000:error:0A000065:SSL routines:final_key_share:no suitable key share:\r\n../git/ssl/statem/extensions.c:1470:\r\n20305190FFFF0000:error:0A000410:SSL routines:ssl3_read_bytes:ssl/tls alert handshak\r\ne failure:../git/ssl/record/rec_layer_s3.c:856:SSL alert number 40\r\n```\r\nI'm using openssl 3.2.0-dev (commit 709ef409) on an ARM platform and oqsprovider 0.5.1-dev (commit 0c91d091).\r\nIs there anything I am obviously doing wrong? Thanks!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642315176","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/223#issuecomment-1642315176","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/223","id":1642315176,"node_id":"IC_kwDOE_A9l85h472o","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T15:34:14Z","updated_at":"2023-07-19T15:34:14Z","author_association":"MEMBER","body":">  I tried setting the environment variable DEFAULT_GROUPS (as in https://github.com/open-quantum-safe/profiling/blob/246d36484c8529d46a9c3f94a713f2d2a37f3a78/perf/scripts/handshakes.py#L51C6-L51C6), but that did not work.\r\n\r\nNo, that (alone) could not have worked as it depends on \r\n\r\n> [system_default_sect]\r\nGroups = $ENV::DEFAULT_GROUPS\r\n\r\nbeing present in \"openssl.cnf\" (as per the above-mentioned \"straightforward `sed`\" statements: https://github.com/open-quantum-safe/profiling/blob/246d36484c8529d46a9c3f94a713f2d2a37f3a78/perf/Dockerfile#L65C1-L65C510 :-)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642315176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T15:34:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30533567121","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/102","id":1798110616,"node_id":"I_kwDOETYnOM5rLP2Y","number":102,"title":"Data collection inconsistent","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-07-11T05:13:18Z","updated_at":"2023-07-19T15:42:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Data as requested by @christianpaquin in #93 is being collected (see e.g. https://openquantumsafe.org/benchmarking/visualization/2023-07-08/handshakes.json) but in an inconsistent manner: Many algorithm combinations deliver results on `x64` but not `aarch64` and `m1` and in many cases it's the opposite. Investigation warranted -- as on the many other issues in this project. Not fun being alone looking at these...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1642331567","html_url":"https://github.com/open-quantum-safe/profiling/issues/102#issuecomment-1642331567","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/102","id":1642331567,"node_id":"IC_kwDOETYnOM5h4_2v","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T15:42:48Z","updated_at":"2023-07-19T15:42:48Z","author_association":"MEMBER","body":"> I see that the aarch64 instance was started recently, so it's possible you've already done this\r\n\r\nYes, it's also been fixed on that VM. On the M1 I only corrected the error logging -- as everything's running on my user account there, I don't want to always kill all docker images. That said, it may be prudent to move the M1 profiling to a \"technical account\" independent of any user....","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1642331567/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T15:42:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30533875473","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/103","id":1802195193,"node_id":"I_kwDOETYnOM5ra1D5","number":103,"title":"Automate M1 profiling image build & use","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-07-13T05:22:41Z","updated_at":"2023-07-19T15:54:32Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Due to the unavailability (at time of creating the tests) of M1 VMs in AWS and unlike the timed AWS-based runs for `x64` and `aarch64`, the profiling run on `m1` is currently triggered by a `cron` job on a dedicated laptop like this:\r\n\r\n    docker run --privileged openquantumsafe/oqs-perf bash -c \"cd /opt/test && ./run-tests-m1.sh\" > /Users/baentsch/profiling/docker-run-m1.log 2>&1\r\n\r\nIn particular, this means the dedicated `Dockerfile-m1` dockerfile is _not_ used for M1 profiling. This may or may not be sensible -- but at least confuses me (why do we still have this file)? If we decide to keep this file, the corresponding image should be built in CI and be used (and not the more generic `aarch64` linux image). Also, would running the code in a comparable (VM-based) manner be possible? In which infrastructure? How do we ascertain that the functionality being tested on all platforms remains in sync with the main `Dockerfile` (used for `x64`)?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1642349460","html_url":"https://github.com/open-quantum-safe/profiling/issues/103#issuecomment-1642349460","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103","id":1642349460,"node_id":"IC_kwDOETYnOM5h5EOU","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T15:54:32Z","updated_at":"2023-07-19T15:54:32Z","author_association":"MEMBER","body":"Cloud-hosted Mac instances have some drawbacks. Most notably Apple's licensing terms mean that you have to run them (or at least, pay for running them) for at least 24 hours.  It's also a bare metal, not virtualized, environment, so you're paying for the whole machine, and you also have to wait much longer for it to boot, possibly up to 20 minutes according to AWS documentation. https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-mac-instances.html","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1642349460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T15:54:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30535816804","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/103","id":1802195193,"node_id":"I_kwDOETYnOM5ra1D5","number":103,"title":"Automate M1 profiling image build & use","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-07-13T05:22:41Z","updated_at":"2023-07-19T17:16:25Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Due to the unavailability (at time of creating the tests) of M1 VMs in AWS and unlike the timed AWS-based runs for `x64` and `aarch64`, the profiling run on `m1` is currently triggered by a `cron` job on a dedicated laptop like this:\r\n\r\n    docker run --privileged openquantumsafe/oqs-perf bash -c \"cd /opt/test && ./run-tests-m1.sh\" > /Users/baentsch/profiling/docker-run-m1.log 2>&1\r\n\r\nIn particular, this means the dedicated `Dockerfile-m1` dockerfile is _not_ used for M1 profiling. This may or may not be sensible -- but at least confuses me (why do we still have this file)? If we decide to keep this file, the corresponding image should be built in CI and be used (and not the more generic `aarch64` linux image). Also, would running the code in a comparable (VM-based) manner be possible? In which infrastructure? How do we ascertain that the functionality being tested on all platforms remains in sync with the main `Dockerfile` (used for `x64`)?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1642463366","html_url":"https://github.com/open-quantum-safe/profiling/issues/103#issuecomment-1642463366","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/103","id":1642463366,"node_id":"IC_kwDOETYnOM5h5gCG","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T17:16:24Z","updated_at":"2023-07-19T17:16:24Z","author_association":"MEMBER","body":"In cases like this, what about letting the \"eco-conscience\" decide (for those that have it :-): Spin up a new VM (i.e. causing more CO2 emissions) or utilize a machine that's already keeping Douglas' heating bill low. Clear winner on that criterion: Option 2. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1642463366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T17:16:25Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30536064535","type":"IssueCommentEvent","actor":{"id":63818252,"login":"ambrisko","display_login":"ambrisko","gravatar_id":"","url":"https://api.github.com/users/ambrisko","avatar_url":"https://avatars.githubusercontent.com/u/63818252?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/218","id":1810718579,"node_id":"I_kwDOE_A9l85r7V9z","number":218,"title":"Provider signing with CMS silently fails ... I thought the change was upstreamed in OpenSSL 3.2-dev?","user":{"login":"ambrisko","id":63818252,"node_id":"MDQ6VXNlcjYzODE4MjUy","avatar_url":"https://avatars.githubusercontent.com/u/63818252?v=4","gravatar_id":"","url":"https://api.github.com/users/ambrisko","html_url":"https://github.com/ambrisko","followers_url":"https://api.github.com/users/ambrisko/followers","following_url":"https://api.github.com/users/ambrisko/following{/other_user}","gists_url":"https://api.github.com/users/ambrisko/gists{/gist_id}","starred_url":"https://api.github.com/users/ambrisko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ambrisko/subscriptions","organizations_url":"https://api.github.com/users/ambrisko/orgs","repos_url":"https://api.github.com/users/ambrisko/repos","events_url":"https://api.github.com/users/ambrisko/events{/privacy}","received_events_url":"https://api.github.com/users/ambrisko/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-07-18T21:05:37Z","updated_at":"2023-07-19T17:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When I use the fork https://github.com/open-quantum-safe/openssl, I can do openssl cms sign and verify but with the provider it silently exits:\r\n  + ../openssl_install/bin/openssl cms -in inputfile -sign -signer sphincssha2128ssimple_srv.crt -inkey sphincssha2128ssimple_srv.key -nodetach -outform pem -binary -out signedfile.cms -provider-path /data/home/ambrisko/ucs/repo/git/adopter/ucs-adopters/uefi_keys/post_quantum_crypto_provider/openssl_install/lib/ossl-modules -provider default -provider oqsprovider\r\n  + exit 1\r\nopenssl_install/bin/openssl version\r\n  OpenSSL 3.2.0-dev  (Library: OpenSSL 3.2.0-dev )\r\nThis was cloned earlier this week. I thought this was fixed with the note about:\r\n3.0/3.1\r\n\r\nIn these versions, CMS functionality implemented in providers is not supported: The resolution of https://github.com/openssl/openssl/issues/17717 has not been not getting back-ported to OpenSSL3.0.\r\n\r\nAlso not supported in this version are provider-based signature algorithms used during TLS1.3 operations as documented in https://github.com/openssl/openssl/issues/10512.\r\n3.2(-dev)\r\n\r\nAfter https://github.com/openssl/openssl/pull/19312 landed, (also PQ) signature algorithms are working in TLS1.3 (handshaking); after https://github.com/openssl/openssl/pull/20486 has landed, also algorithms with very long signatures are supported.\r\n\r\nMaybe I'm missing something.  CMS verify works with fine with the provider if I use the OpenSSL fork to do the signing.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642475506","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/218#issuecomment-1642475506","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218","id":1642475506,"node_id":"IC_kwDOE_A9l85h5i_y","user":{"login":"ambrisko","id":63818252,"node_id":"MDQ6VXNlcjYzODE4MjUy","avatar_url":"https://avatars.githubusercontent.com/u/63818252?v=4","gravatar_id":"","url":"https://api.github.com/users/ambrisko","html_url":"https://github.com/ambrisko","followers_url":"https://api.github.com/users/ambrisko/followers","following_url":"https://api.github.com/users/ambrisko/following{/other_user}","gists_url":"https://api.github.com/users/ambrisko/gists{/gist_id}","starred_url":"https://api.github.com/users/ambrisko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ambrisko/subscriptions","organizations_url":"https://api.github.com/users/ambrisko/orgs","repos_url":"https://api.github.com/users/ambrisko/repos","events_url":"https://api.github.com/users/ambrisko/events{/privacy}","received_events_url":"https://api.github.com/users/ambrisko/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T17:26:36Z","updated_at":"2023-07-19T17:26:36Z","author_association":"NONE","body":"Okay, I wanted to sanity check that this is supposed to work before digging into details.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642475506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T17:26:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30536212701","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1489","id":1740686750,"node_id":"PR_kwDOA-eq3c5SItmj","number":1489,"title":"Add 12 XMSS and 16 XMSSMT parameters.","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":5,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-07-18T15:03:38Z","due_on":null,"closed_at":null},"comments":9,"created_at":"2023-06-05T00:34:53Z","updated_at":"2023-07-19T17:33:22Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1489","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1489","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1489.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1489.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n1. All XMSS parameters are separated by namespace.\r\n2. After discussion with Andreas Huelsing, he recommends using the `fast` approach. This approach improved the performance of `signing` at the cost of larger `sk`. \r\n3. The `_fast` parameters is **incompatible** with the general version. At first, I couldn't believe it, I went back and generate original KATs file from [original Github repo](https://github.com/ducnguyen-sb/xmss-reference-original-kat/pull/1/files). And I confirm that the `_fast` and general version, given the same message and same randomness, it will generate different signatures. Given the signature of `_fast`, the general version cannot verify using `_fast` parameter public key. \r\n\r\nSimilar issue in xmss-reference: https://github.com/XMSS/xmss-reference/issues/17\r\n\r\n4. All parameters are tested with pre-generated KAT files and SHA256 hashes of the KAT. \r\n\r\nAll the parameters added to XMSS. https://github.com/ducnguyen-sb/xmss-reference/blob/master/external/xmss_liboqs_params.md\r\n\r\n\r\n| Algorithms                    | oid  | sk     | pk  | sig  | n  |\r\n|-------------------------------|------|--------|-----|------|----|\r\n| XMSS-SHA2_10_256              | 0x01 |  1373 |  64 |  2500 | 32 |\r\n| XMSS-SHA2_16_256              | 0x02 |  2093 |  64 |  2692 | 32 |\r\n| XMSS-SHA2_20_256              | 0x03 |  2573 |  64 |  2820 | 32 |\r\n| XMSS-SHAKE_10_256             | 0x07 |  1373 |  64 |  2500 | 32 |\r\n| XMSS-SHAKE_16_256             | 0x08 |  2093 |  64 |  2692 | 32 |\r\n| XMSS-SHAKE_20_256             | 0x09 |  2573 |  64 |  2820 | 32 |\r\n| XMSS-SHA2_10_512              | 0x04 |  2653 | 128 |  9092 | 64 |\r\n| XMSS-SHA2_16_512              | 0x05 |  4045 | 128 |  9476 | 64 |\r\n| XMSS-SHA2_20_512              | 0x06 |  4973 | 128 |  9732 | 64 |\r\n| XMSS-SHAKE_10_512             | 0x0a |  2653 | 128 |  9092 | 64 |\r\n| XMSS-SHAKE_16_512             | 0x0b |  4045 | 128 |  9476 | 64 |\r\n| XMSS-SHAKE_20_512             | 0x0c |  4973 | 128 |  9732 | 64 |\r\n| XMSSMT-SHA2_20/2_256          | 0x01 |  5998 |  64 |  4963 | 32 |\r\n| XMSSMT-SHA2_20/4_256          | 0x02 | 10938 |  64 |  9251 | 32 |\r\n| XMSSMT-SHA2_40/2_256          | 0x03 |  9600 |  64 |  5605 | 32 |\r\n| XMSSMT-SHA2_40/4_256          | 0x04 | 15252 |  64 |  9893 | 32 |\r\n| XMSSMT-SHA2_40/8_256          | 0x05 | 24516 |  64 | 18469 | 32 |\r\n| XMSSMT-SHA2_60/3_256          | 0x06 | 16629 |  64 |  8392 | 32 |\r\n| XMSSMT-SHA2_60/6_256          | 0x07 | 24507 |  64 | 14824 | 32 |\r\n| XMSSMT-SHA2_60/12_256         | 0x08 | 38095 |  64 | 27688 | 32 |\r\n| XMSSMT-SHAKE_20/2_256         | 0x11 |  5998 |  64 |  4963 | 32 |\r\n| XMSSMT-SHAKE_20/4_256         | 0x12 | 10938 |  64 |  9251 | 32 |\r\n| XMSSMT-SHAKE_40/2_256         | 0x13 |  9600 |  64 |  5605 | 32 |\r\n| XMSSMT-SHAKE_40/4_256         | 0x14 | 15252 |  64 |  9893 | 32 |\r\n| XMSSMT-SHAKE_40/8_256         | 0x15 | 24516 |  64 | 18469 | 32 |\r\n| XMSSMT-SHAKE_60/3_256         | 0x16 | 16629 |  64 |  8392 | 32 |\r\n| XMSSMT-SHAKE_60/6_256         | 0x17 | 24507 |  64 | 14824 | 32 |\r\n| XMSSMT-SHAKE_60/12_256        | 0x18 | 38095 |  64 | 27688 | 32 |\r\n\r\n\r\n7. The upstream of the current code: https://github.com/ducnguyen-sb/xmss-reference\r\n\r\n* [x] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [x] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642483566","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1489#issuecomment-1642483566","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489","id":1642483566,"node_id":"IC_kwDOA-eq3c5h5k9u","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T17:33:22Z","updated_at":"2023-07-19T17:33:22Z","author_association":"MEMBER","body":"> Am I allowed to modify the reference code (as long as same KAT output) to fix the scan_build?\r\n\r\nI'd personally say \"Yes, of course\" -- if that corrects code otherwise containing flaws. Now, on second consideration the question is this: How did you import this reference code? If it's a fully automated process, please consider doing something similar to what we already do in `scripts` with `copy_from_upstream` and `copy_from_xkcp`: In both cases there's the concept of \"copy-then-patch\". In this case, the patch of course should contain the changes to fix \"scan_build\" (and you may want to consider contributing those changes upstream such as to eventually completely get rid of them here -- and improve the reference code). If you did the import manually, well, please consider automation: It'll save all of us a lot of problems in the future (that upstream changes or we harden our own tests).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642483566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T17:33:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30536548849","type":"IssueCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1489","id":1740686750,"node_id":"PR_kwDOA-eq3c5SItmj","number":1489,"title":"Add 12 XMSS and 16 XMSSMT parameters.","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":5,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-07-18T15:03:38Z","due_on":null,"closed_at":null},"comments":10,"created_at":"2023-06-05T00:34:53Z","updated_at":"2023-07-19T17:48:45Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1489","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1489","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1489.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1489.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n1. All XMSS parameters are separated by namespace.\r\n2. After discussion with Andreas Huelsing, he recommends using the `fast` approach. This approach improved the performance of `signing` at the cost of larger `sk`. \r\n3. The `_fast` parameters is **incompatible** with the general version. At first, I couldn't believe it, I went back and generate original KATs file from [original Github repo](https://github.com/ducnguyen-sb/xmss-reference-original-kat/pull/1/files). And I confirm that the `_fast` and general version, given the same message and same randomness, it will generate different signatures. Given the signature of `_fast`, the general version cannot verify using `_fast` parameter public key. \r\n\r\nSimilar issue in xmss-reference: https://github.com/XMSS/xmss-reference/issues/17\r\n\r\n4. All parameters are tested with pre-generated KAT files and SHA256 hashes of the KAT. \r\n\r\nAll the parameters added to XMSS. https://github.com/ducnguyen-sb/xmss-reference/blob/master/external/xmss_liboqs_params.md\r\n\r\n\r\n| Algorithms                    | oid  | sk     | pk  | sig  | n  |\r\n|-------------------------------|------|--------|-----|------|----|\r\n| XMSS-SHA2_10_256              | 0x01 |  1373 |  64 |  2500 | 32 |\r\n| XMSS-SHA2_16_256              | 0x02 |  2093 |  64 |  2692 | 32 |\r\n| XMSS-SHA2_20_256              | 0x03 |  2573 |  64 |  2820 | 32 |\r\n| XMSS-SHAKE_10_256             | 0x07 |  1373 |  64 |  2500 | 32 |\r\n| XMSS-SHAKE_16_256             | 0x08 |  2093 |  64 |  2692 | 32 |\r\n| XMSS-SHAKE_20_256             | 0x09 |  2573 |  64 |  2820 | 32 |\r\n| XMSS-SHA2_10_512              | 0x04 |  2653 | 128 |  9092 | 64 |\r\n| XMSS-SHA2_16_512              | 0x05 |  4045 | 128 |  9476 | 64 |\r\n| XMSS-SHA2_20_512              | 0x06 |  4973 | 128 |  9732 | 64 |\r\n| XMSS-SHAKE_10_512             | 0x0a |  2653 | 128 |  9092 | 64 |\r\n| XMSS-SHAKE_16_512             | 0x0b |  4045 | 128 |  9476 | 64 |\r\n| XMSS-SHAKE_20_512             | 0x0c |  4973 | 128 |  9732 | 64 |\r\n| XMSSMT-SHA2_20/2_256          | 0x01 |  5998 |  64 |  4963 | 32 |\r\n| XMSSMT-SHA2_20/4_256          | 0x02 | 10938 |  64 |  9251 | 32 |\r\n| XMSSMT-SHA2_40/2_256          | 0x03 |  9600 |  64 |  5605 | 32 |\r\n| XMSSMT-SHA2_40/4_256          | 0x04 | 15252 |  64 |  9893 | 32 |\r\n| XMSSMT-SHA2_40/8_256          | 0x05 | 24516 |  64 | 18469 | 32 |\r\n| XMSSMT-SHA2_60/3_256          | 0x06 | 16629 |  64 |  8392 | 32 |\r\n| XMSSMT-SHA2_60/6_256          | 0x07 | 24507 |  64 | 14824 | 32 |\r\n| XMSSMT-SHA2_60/12_256         | 0x08 | 38095 |  64 | 27688 | 32 |\r\n| XMSSMT-SHAKE_20/2_256         | 0x11 |  5998 |  64 |  4963 | 32 |\r\n| XMSSMT-SHAKE_20/4_256         | 0x12 | 10938 |  64 |  9251 | 32 |\r\n| XMSSMT-SHAKE_40/2_256         | 0x13 |  9600 |  64 |  5605 | 32 |\r\n| XMSSMT-SHAKE_40/4_256         | 0x14 | 15252 |  64 |  9893 | 32 |\r\n| XMSSMT-SHAKE_40/8_256         | 0x15 | 24516 |  64 | 18469 | 32 |\r\n| XMSSMT-SHAKE_60/3_256         | 0x16 | 16629 |  64 |  8392 | 32 |\r\n| XMSSMT-SHAKE_60/6_256         | 0x17 | 24507 |  64 | 14824 | 32 |\r\n| XMSSMT-SHAKE_60/12_256        | 0x18 | 38095 |  64 | 27688 | 32 |\r\n\r\n\r\n7. The upstream of the current code: https://github.com/ducnguyen-sb/xmss-reference\r\n\r\n* [x] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [x] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642504616","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1489#issuecomment-1642504616","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1489","id":1642504616,"node_id":"IC_kwDOA-eq3c5h5qGo","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T17:48:44Z","updated_at":"2023-07-19T17:48:44Z","author_association":"COLLABORATOR","body":">  How did you import this reference code?  \r\n\r\nUnfortunately, I import this code manually. The original reference does not: \r\n1. Separate message and signature\r\n2. Type confusion (unsigned long) \r\n\r\nAnd it was not [updated for years](https://github.com/XMSS/xmss-reference), due to this I think automation from upstream is a bit overkill. I think my code is a little far ahead of reference implementation. \r\n\r\nI will look into the code to fix `scan_build`. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642504616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T17:48:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30538917661","type":"IssueCommentEvent","actor":{"id":8883898,"login":"mczraf","display_login":"mczraf","gravatar_id":"","url":"https://api.github.com/users/mczraf","avatar_url":"https://avatars.githubusercontent.com/u/8883898?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1512","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1512/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1512/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1512/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1512","id":1812020887,"node_id":"PR_kwDOA-eq3c5V5XCX","number":1512,"title":"kyber/dilithium aarch64 pull from pqclean + patches","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-07-19T13:59:49Z","updated_at":"2023-07-19T19:38:10Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1512","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1512","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1512.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1512.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n- Runs copy_from_upstream with pqclean code, updating kyber and dilithium for aarch64\r\n- Updates upstream patches & adds a few more fixes \r\n- Fixes a compiler warning in the arm aes code (https://github.com/open-quantum-safe/liboqs/issues/1506#issuecomment-1641645941)\r\n- Fixes #1506 #1320\r\n- Updates a few pqclean upstream licenses. \r\n- adds a falcon update from pqclean upstream\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\nTODOs: \r\n\r\n- [ ] KATs of 2 out of 3 Kyber versions (768, 1024) seem to fail with the updated upstream code.\r\n@Martyrshot did you face any similar issues when including the previous code?\r\n- [ ] Update license infos\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1512/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642652705","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1512#issuecomment-1642652705","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1512","id":1642652705,"node_id":"IC_kwDOA-eq3c5h6OQh","user":{"login":"mczraf","id":8883898,"node_id":"MDQ6VXNlcjg4ODM4OTg=","avatar_url":"https://avatars.githubusercontent.com/u/8883898?v=4","gravatar_id":"","url":"https://api.github.com/users/mczraf","html_url":"https://github.com/mczraf","followers_url":"https://api.github.com/users/mczraf/followers","following_url":"https://api.github.com/users/mczraf/following{/other_user}","gists_url":"https://api.github.com/users/mczraf/gists{/gist_id}","starred_url":"https://api.github.com/users/mczraf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mczraf/subscriptions","organizations_url":"https://api.github.com/users/mczraf/orgs","repos_url":"https://api.github.com/users/mczraf/repos","events_url":"https://api.github.com/users/mczraf/events{/privacy}","received_events_url":"https://api.github.com/users/mczraf/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T19:38:10Z","updated_at":"2023-07-19T19:38:10Z","author_association":"NONE","body":"@bhess Thank you for working on the KAT mismatch issue. Quick question: would you have any rough time estimate for the integration of this pull-request? I suspect that the KAT mismatch needs to be fixed first but is there any other blocking issues for this integration?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642652705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T19:38:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30541006141","type":"IssueCommentEvent","actor":{"id":63818252,"login":"ambrisko","display_login":"ambrisko","gravatar_id":"","url":"https://api.github.com/users/ambrisko","avatar_url":"https://avatars.githubusercontent.com/u/63818252?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/218","id":1810718579,"node_id":"I_kwDOE_A9l85r7V9z","number":218,"title":"Provider signing with CMS silently fails ... I thought the change was upstreamed in OpenSSL 3.2-dev?","user":{"login":"ambrisko","id":63818252,"node_id":"MDQ6VXNlcjYzODE4MjUy","avatar_url":"https://avatars.githubusercontent.com/u/63818252?v=4","gravatar_id":"","url":"https://api.github.com/users/ambrisko","html_url":"https://github.com/ambrisko","followers_url":"https://api.github.com/users/ambrisko/followers","following_url":"https://api.github.com/users/ambrisko/following{/other_user}","gists_url":"https://api.github.com/users/ambrisko/gists{/gist_id}","starred_url":"https://api.github.com/users/ambrisko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ambrisko/subscriptions","organizations_url":"https://api.github.com/users/ambrisko/orgs","repos_url":"https://api.github.com/users/ambrisko/repos","events_url":"https://api.github.com/users/ambrisko/events{/privacy}","received_events_url":"https://api.github.com/users/ambrisko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-07-18T21:05:37Z","updated_at":"2023-07-19T21:23:48Z","closed_at":"2023-07-19T21:23:48Z","author_association":"NONE","active_lock_reason":null,"body":"When I use the fork https://github.com/open-quantum-safe/openssl, I can do openssl cms sign and verify but with the provider it silently exits:\r\n  + ../openssl_install/bin/openssl cms -in inputfile -sign -signer sphincssha2128ssimple_srv.crt -inkey sphincssha2128ssimple_srv.key -nodetach -outform pem -binary -out signedfile.cms -provider-path /data/home/ambrisko/ucs/repo/git/adopter/ucs-adopters/uefi_keys/post_quantum_crypto_provider/openssl_install/lib/ossl-modules -provider default -provider oqsprovider\r\n  + exit 1\r\nopenssl_install/bin/openssl version\r\n  OpenSSL 3.2.0-dev  (Library: OpenSSL 3.2.0-dev )\r\nThis was cloned earlier this week. I thought this was fixed with the note about:\r\n3.0/3.1\r\n\r\nIn these versions, CMS functionality implemented in providers is not supported: The resolution of https://github.com/openssl/openssl/issues/17717 has not been not getting back-ported to OpenSSL3.0.\r\n\r\nAlso not supported in this version are provider-based signature algorithms used during TLS1.3 operations as documented in https://github.com/openssl/openssl/issues/10512.\r\n3.2(-dev)\r\n\r\nAfter https://github.com/openssl/openssl/pull/19312 landed, (also PQ) signature algorithms are working in TLS1.3 (handshaking); after https://github.com/openssl/openssl/pull/20486 has landed, also algorithms with very long signatures are supported.\r\n\r\nMaybe I'm missing something.  CMS verify works with fine with the provider if I use the OpenSSL fork to do the signing.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642777290","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/218#issuecomment-1642777290","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/218","id":1642777290,"node_id":"IC_kwDOE_A9l85h6srK","user":{"login":"ambrisko","id":63818252,"node_id":"MDQ6VXNlcjYzODE4MjUy","avatar_url":"https://avatars.githubusercontent.com/u/63818252?v=4","gravatar_id":"","url":"https://api.github.com/users/ambrisko","html_url":"https://github.com/ambrisko","followers_url":"https://api.github.com/users/ambrisko/followers","following_url":"https://api.github.com/users/ambrisko/following{/other_user}","gists_url":"https://api.github.com/users/ambrisko/gists{/gist_id}","starred_url":"https://api.github.com/users/ambrisko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ambrisko/subscriptions","organizations_url":"https://api.github.com/users/ambrisko/orgs","repos_url":"https://api.github.com/users/ambrisko/repos","events_url":"https://api.github.com/users/ambrisko/events{/privacy}","received_events_url":"https://api.github.com/users/ambrisko/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T21:23:47Z","updated_at":"2023-07-19T21:23:47Z","author_association":"NONE","body":"Found the issue was a missing -md sha512 in the signing command.  Now works with 3.1.1 and 3.2-dev.  Fails with 3.0.9.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1642777290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T21:23:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30543124539","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1488","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1488/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1488/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1488/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1488","id":1740544746,"node_id":"I_kwDOA-eq3c5nvprq","number":1488,"title":"0.8.0rc1 MSVC 32-bit builds fail on Falcon with AVX","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":423520874,"node_id":"MDU6TGFiZWw0MjM1MjA4NzQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Something isn't working; high priority to fix"},{"id":1168141259,"node_id":"MDU6TGFiZWwxMTY4MTQxMjU5","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Asking for support from non-core team"},{"id":5700733396,"node_id":"LA_kwDOA-eq3c8AAAABU8pJ1A","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/platform-specific","name":"platform-specific","color":"C4AA6F","default":false,"description":"Issue related to a specific platform configuration; core team may not have required platform"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":5,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-07-18T15:03:38Z","due_on":null,"closed_at":null},"comments":11,"created_at":"2023-06-04T19:26:27Z","updated_at":"2023-07-19T23:59:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Discussed in https://github.com/orgs/open-quantum-safe/discussions/1487\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **blackbird1999** May 31, 2023</sup>\r\n 44>D:\\CDK8.1\\liboqs\\src\\sig\\falcon\\pqclean_falcon-512_avx2\\sign.c(1033): error C2440: 'function': cannot convert fr\r\n       om 'int' to '__m128i' [D:\\CDK8.1\\liboqs\\buildmt\\src\\sig\\falcon\\falcon_512_avx2.vcxproj]\r\n    41>D:\\CDK8.1\\liboqs\\src\\sig\\falcon\\pqclean_falcon-1024_avx2\\sign.c(1033): error C2440: 'function': cannot convert f\r\n       rom 'int' to '__m128i' [D:\\CDK8.1\\liboqs\\buildmt\\src\\sig\\falcon\\falcon_1024_avx2.vcxproj]\r\n\r\nIt appears that the AVX2 code no longer matches that found here https://falcon-sign.info/falcon-round3.zip. In particular, it no longer has the #ifdef for x64/x86 that allows it to compile. \r\n\r\nI'm not sure of the steps to report such things. Thanks for your help!\r\n\r\nSincerely,\r\nJonathan\r\n</div>","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1488/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642911761","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1488#issuecomment-1642911761","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1488","id":1642911761,"node_id":"IC_kwDOA-eq3c5h7NgR","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-07-19T23:59:22Z","updated_at":"2023-07-19T23:59:22Z","author_association":"MEMBER","body":"FYI @bhess this is not fixed by #1512 since #1512 pulls from https://github.com/PQClean/PQClean/commit/66e50172055aaf1b9a16d8f35fe03b0807f2723e but the Falcon changes landed in https://github.com/PQClean/PQClean/commit/c3abebf4ab1ff516ffa71e6337f06d898952c299.  We can save fixing this until after you've got #1512 sorted, don't want to complicate #1512 unnecessarily. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1642911761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-07-19T23:59:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
