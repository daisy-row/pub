{"id":"32968517159","type":"IssueCommentEvent","actor":{"id":6188943,"login":"vsoftco","display_login":"vsoftco","gravatar_id":"","url":"https://api.github.com/users/vsoftco","avatar_url":"https://avatars.githubusercontent.com/u/6188943?"},"repo":{"id":170719151,"name":"open-quantum-safe/liboqs-cpp","url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/events","html_url":"https://github.com/open-quantum-safe/liboqs-cpp/issues/12","id":1969504590,"node_id":"I_kwDOCiz3r851ZEFO","number":12,"title":"The project doesn't install anything","user":{"login":"yurivict","id":271906,"node_id":"MDQ6VXNlcjI3MTkwNg==","avatar_url":"https://avatars.githubusercontent.com/u/271906?v=4","gravatar_id":"","url":"https://api.github.com/users/yurivict","html_url":"https://github.com/yurivict","followers_url":"https://api.github.com/users/yurivict/followers","following_url":"https://api.github.com/users/yurivict/following{/other_user}","gists_url":"https://api.github.com/users/yurivict/gists{/gist_id}","starred_url":"https://api.github.com/users/yurivict/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurivict/subscriptions","organizations_url":"https://api.github.com/users/yurivict/orgs","repos_url":"https://api.github.com/users/yurivict/repos","events_url":"https://api.github.com/users/yurivict/events{/privacy}","received_events_url":"https://api.github.com/users/yurivict/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-31T02:11:00Z","updated_at":"2023-10-31T03:41:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"You need to add 'install' instructions to install the headers and cmake files, if any.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/comments/1786389371","html_url":"https://github.com/open-quantum-safe/liboqs-cpp/issues/12#issuecomment-1786389371","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12","id":1786389371,"node_id":"IC_kwDOCiz3r85qeiN7","user":{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false},"created_at":"2023-10-31T03:41:04Z","updated_at":"2023-10-31T03:41:04Z","author_association":"MEMBER","body":"@yurivict will do soon, thanks","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/comments/1786389371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-31T03:41:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32974167120","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/events","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/57","id":1556533746,"node_id":"I_kwDOCa-Cls5cxtHy","number":57,"title":"Question: Worth while automating install?","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":1167238766,"node_id":"MDU6TGFiZWwxMTY3MjM4NzY2","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"},{"id":1167238771,"node_id":"MDU6TGFiZWwxMTY3MjM4Nzcx","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"closed","locked":false,"assignee":{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false},"assignees":[{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2023-01-25T12:04:59Z","updated_at":"2023-10-31T08:49:58Z","closed_at":"2023-10-30T19:15:49Z","author_association":"MEMBER","active_lock_reason":null,"body":"Triggered by https://github.com/open-quantum-safe/liboqs/pull/1367 this is to ask whether it might be worth while extending `setup.py` along the lines shown e.g., [here](https://github.com/pybind/cmake_example/blob/master/setup.py) to build `liboqs` automatically when running the install (e.g., after making `liboqs` a git submodule of `liboqs-python`)? Have you already considered this once, @vsoftco ?\r\nRight now, running `python3 setup.py install` runs successfully even if liboqs has not been built (and/or is not on `LD_LIBRARY_PATH`) -- \"just\" the subsequent commands then don't work: At least confused me somewhat -- but then again, I'm no serious python user...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments/1786766093","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/57#issuecomment-1786766093","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57","id":1786766093,"node_id":"IC_kwDOCa-Cls5qf-MN","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-31T08:49:58Z","updated_at":"2023-10-31T08:49:58Z","author_association":"MEMBER","body":"Hmm -- can I ask you to consider the position of users, too, please? They want the code to build -- and run correctly. They want the \"standard case\" to work. Both would be guaranteed by way of submodule use. \r\n\r\nYour concerns above are ones that could be solved by scripting (for your internal testing) and not breaking things: Indeed if something breaks, there is nearly always something wrong in the set-up, i.e., a real problem. Thus, sub-module relationships can very well serve as canaries for incorrect code (either up- or downstream or in the local package).\r\n\r\nI see your frustration of not getting support by others helping you with this sub-project (and taking this issue on). I share it in all other sub-projects that I can devote more time to.\r\n\r\nMy approach there is to keep issues open, though, in the hope that some new contributors take them on and improve the overall situation. May I ask you to consider adopting this approach here, too?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments/1786766093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-31T08:49:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32989701054","type":"IssueCommentEvent","actor":{"id":7943812,"login":"opencrypto","display_login":"opencrypto","gravatar_id":"","url":"https://api.github.com/users/opencrypto","avatar_url":"https://avatars.githubusercontent.com/u/7943812?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/239","id":1874531092,"node_id":"I_kwDOE_A9l85vuxMU","number":239,"title":"Missing support for hash-n-sign","user":{"login":"opencrypto","id":7943812,"node_id":"MDQ6VXNlcjc5NDM4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7943812?v=4","gravatar_id":"","url":"https://api.github.com/users/opencrypto","html_url":"https://github.com/opencrypto","followers_url":"https://api.github.com/users/opencrypto/followers","following_url":"https://api.github.com/users/opencrypto/following{/other_user}","gists_url":"https://api.github.com/users/opencrypto/gists{/gist_id}","starred_url":"https://api.github.com/users/opencrypto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opencrypto/subscriptions","organizations_url":"https://api.github.com/users/opencrypto/orgs","repos_url":"https://api.github.com/users/opencrypto/repos","events_url":"https://api.github.com/users/opencrypto/events{/privacy}","received_events_url":"https://api.github.com/users/opencrypto/received_events","type":"User","site_admin":false},"labels":[{"id":2701983054,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU0","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2701983059,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU5","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/futurework","name":"futurework","color":"ffffff","default":false,"description":"This may or may not be worked on"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-08-30T23:51:35Z","updated_at":"2023-10-31T17:11:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The current implementation for the oqsprovider does not allow the use of the hash-n-sign paradigm with the signature algorithms. It would be useful to add support for signing pre-hashed data. This would enable, for example, the possibility to sign with <algorithmX>With<hashAlgY> type of algorithms:\r\n```bash\r\n$ openssl req -new -key \"dilithium2.key\" -subj \"/O=OpenCA\" -sha256 -out dilithium2.req\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1787638822","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/239#issuecomment-1787638822","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239","id":1787638822,"node_id":"IC_kwDOE_A9l85qjTQm","user":{"login":"opencrypto","id":7943812,"node_id":"MDQ6VXNlcjc5NDM4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7943812?v=4","gravatar_id":"","url":"https://api.github.com/users/opencrypto","html_url":"https://github.com/opencrypto","followers_url":"https://api.github.com/users/opencrypto/followers","following_url":"https://api.github.com/users/opencrypto/following{/other_user}","gists_url":"https://api.github.com/users/opencrypto/gists{/gist_id}","starred_url":"https://api.github.com/users/opencrypto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opencrypto/subscriptions","organizations_url":"https://api.github.com/users/opencrypto/orgs","repos_url":"https://api.github.com/users/opencrypto/repos","events_url":"https://api.github.com/users/opencrypto/events{/privacy}","received_events_url":"https://api.github.com/users/opencrypto/received_events","type":"User","site_admin":false},"created_at":"2023-10-31T17:11:47Z","updated_at":"2023-10-31T17:11:47Z","author_association":"NONE","body":"@trigpolynom I will be happy to help if I can, let me know what you need.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1787638822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-31T17:11:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32989887309","type":"IssueCommentEvent","actor":{"id":74934208,"login":"trigpolynom","display_login":"trigpolynom","gravatar_id":"","url":"https://api.github.com/users/trigpolynom","avatar_url":"https://avatars.githubusercontent.com/u/74934208?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/239","id":1874531092,"node_id":"I_kwDOE_A9l85vuxMU","number":239,"title":"Missing support for hash-n-sign","user":{"login":"opencrypto","id":7943812,"node_id":"MDQ6VXNlcjc5NDM4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7943812?v=4","gravatar_id":"","url":"https://api.github.com/users/opencrypto","html_url":"https://github.com/opencrypto","followers_url":"https://api.github.com/users/opencrypto/followers","following_url":"https://api.github.com/users/opencrypto/following{/other_user}","gists_url":"https://api.github.com/users/opencrypto/gists{/gist_id}","starred_url":"https://api.github.com/users/opencrypto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opencrypto/subscriptions","organizations_url":"https://api.github.com/users/opencrypto/orgs","repos_url":"https://api.github.com/users/opencrypto/repos","events_url":"https://api.github.com/users/opencrypto/events{/privacy}","received_events_url":"https://api.github.com/users/opencrypto/received_events","type":"User","site_admin":false},"labels":[{"id":2701983054,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU0","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"},{"id":2701983059,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU5","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/futurework","name":"futurework","color":"ffffff","default":false,"description":"This may or may not be worked on"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-08-30T23:51:35Z","updated_at":"2023-10-31T17:18:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The current implementation for the oqsprovider does not allow the use of the hash-n-sign paradigm with the signature algorithms. It would be useful to add support for signing pre-hashed data. This would enable, for example, the possibility to sign with <algorithmX>With<hashAlgY> type of algorithms:\r\n```bash\r\n$ openssl req -new -key \"dilithium2.key\" -subj \"/O=OpenCA\" -sha256 -out dilithium2.req\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1787649134","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/239#issuecomment-1787649134","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/239","id":1787649134,"node_id":"IC_kwDOE_A9l85qjVxu","user":{"login":"trigpolynom","id":74934208,"node_id":"MDQ6VXNlcjc0OTM0MjA4","avatar_url":"https://avatars.githubusercontent.com/u/74934208?v=4","gravatar_id":"","url":"https://api.github.com/users/trigpolynom","html_url":"https://github.com/trigpolynom","followers_url":"https://api.github.com/users/trigpolynom/followers","following_url":"https://api.github.com/users/trigpolynom/following{/other_user}","gists_url":"https://api.github.com/users/trigpolynom/gists{/gist_id}","starred_url":"https://api.github.com/users/trigpolynom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trigpolynom/subscriptions","organizations_url":"https://api.github.com/users/trigpolynom/orgs","repos_url":"https://api.github.com/users/trigpolynom/repos","events_url":"https://api.github.com/users/trigpolynom/events{/privacy}","received_events_url":"https://api.github.com/users/trigpolynom/received_events","type":"User","site_admin":false},"created_at":"2023-10-31T17:18:10Z","updated_at":"2023-10-31T17:18:10Z","author_association":"NONE","body":"Thanks @opencrypto! I'll be sure to reach out if I have any questions. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1787649134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-31T17:18:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32990201671","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591","id":1960549030,"node_id":"I_kwDOA-eq3c5025qm","number":1591,"title":"Falcon variable length signatures ","user":{"login":"olivamadrigal","id":3107478,"node_id":"MDQ6VXNlcjMxMDc0Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/3107478?v=4","gravatar_id":"","url":"https://api.github.com/users/olivamadrigal","html_url":"https://github.com/olivamadrigal","followers_url":"https://api.github.com/users/olivamadrigal/followers","following_url":"https://api.github.com/users/olivamadrigal/following{/other_user}","gists_url":"https://api.github.com/users/olivamadrigal/gists{/gist_id}","starred_url":"https://api.github.com/users/olivamadrigal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olivamadrigal/subscriptions","organizations_url":"https://api.github.com/users/olivamadrigal/orgs","repos_url":"https://api.github.com/users/olivamadrigal/repos","events_url":"https://api.github.com/users/olivamadrigal/events{/privacy}","received_events_url":"https://api.github.com/users/olivamadrigal/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-25T05:08:29Z","updated_at":"2023-10-31T17:28:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nBoth Falcon-512 and Falcon-1024 variants return a variable length signature. This is observed in the **test_sig** correctness test by\r\nprinting the output variable **signature_len**  after the sign() function is called:  https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c. The test will pass because **signature_len** is an output computed internally by the sign() function specifying the length of the generated signature returned and the same length signature is verified by the verify() function.  **signature_len** is given as input to verify().\r\n\r\nsign() and verify() should be updated to fixed length signatures.\r\n\r\nrc = OQS_SIG_sign(sig, _signature_, **&signature_len**, message, message_len, secret_key);\r\n\r\nrc = OQS_SIG_verify(sig, message, message_len, _signature_, **signature_len**, public_key);\r\n\r\nfor [pqclean_falcon-512_clean](https://github.com/open-quantum-safe/liboqs/tree/main/src/sig/falcon/pqclean_falcon-512_clean), internally that would be: \r\n**PQCLEAN_FALCON512_CLEAN_comp_encode()**\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/codec.c\r\n\r\ncalled by:\r\nstatic int do_sign(uint8_t *nonce, uint8_t *sigbuf, size_t *sigbuflen, const uint8_t *m, size_t mlen, const uint8_t *sk) ()\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\nwhich is called by:\r\nPQCLEAN_FALCON512_CLEAN_crypto_sign_signature() \r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Edit: https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c\r\n2. Print **sig->length_signature** after line 61, the allocated buffer length according to constants defined in https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/sig_falcon.h\r\n3. Print **signature_len** after line 95\r\n4. compile and test both variants:\r\n./test_sig Falcon-512\r\n./test_sig Falcon-1024\r\n\r\n**Expected behavior**\r\n./test_sig Falcon-512\r\nsig->length_signature = 666\r\nsignature_len = 654\r\n\r\n./test_sig Falcon-1024\r\nsig->length_signature = 1280\r\nsignature_len = 1277\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. Linux]\r\n - OpenSSL version [1.1.1.t]\r\n - Compiler version used [gcc]\r\n - Build variables used [e.g., \"-DOQS_DIST_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DOQS_OPENSSL=OFF -DRUN_RESULT__TRYRUN_OUTPUT=stdout ..\" ]\r\n - liboqs version [0.8.0 and latest 0.9.0]\r\n\r\n**Additional context**\r\ncross-compiled for aarch64.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1787666466","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591#issuecomment-1787666466","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","id":1787666466,"node_id":"IC_kwDOA-eq3c5qjaAi","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2023-10-31T17:28:53Z","updated_at":"2023-10-31T17:28:53Z","author_association":"COLLABORATOR","body":"I do recall reading/hearing somewhere (yes citation needed, but sadly I don't have one :-() that the \"final\" version of Falcon will be fixed length. It just hasn't made it to pqclean and thus liboqs.\r\n\r\n@baentsch might it be worth exposing the different falcon modes through liboqs somehow?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1787666466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-31T17:28:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32996388856","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591","id":1960549030,"node_id":"I_kwDOA-eq3c5025qm","number":1591,"title":"Falcon variable length signatures ","user":{"login":"olivamadrigal","id":3107478,"node_id":"MDQ6VXNlcjMxMDc0Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/3107478?v=4","gravatar_id":"","url":"https://api.github.com/users/olivamadrigal","html_url":"https://github.com/olivamadrigal","followers_url":"https://api.github.com/users/olivamadrigal/followers","following_url":"https://api.github.com/users/olivamadrigal/following{/other_user}","gists_url":"https://api.github.com/users/olivamadrigal/gists{/gist_id}","starred_url":"https://api.github.com/users/olivamadrigal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olivamadrigal/subscriptions","organizations_url":"https://api.github.com/users/olivamadrigal/orgs","repos_url":"https://api.github.com/users/olivamadrigal/repos","events_url":"https://api.github.com/users/olivamadrigal/events{/privacy}","received_events_url":"https://api.github.com/users/olivamadrigal/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-10-25T05:08:29Z","updated_at":"2023-10-31T22:00:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nBoth Falcon-512 and Falcon-1024 variants return a variable length signature. This is observed in the **test_sig** correctness test by\r\nprinting the output variable **signature_len**  after the sign() function is called:  https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c. The test will pass because **signature_len** is an output computed internally by the sign() function specifying the length of the generated signature returned and the same length signature is verified by the verify() function.  **signature_len** is given as input to verify().\r\n\r\nsign() and verify() should be updated to fixed length signatures.\r\n\r\nrc = OQS_SIG_sign(sig, _signature_, **&signature_len**, message, message_len, secret_key);\r\n\r\nrc = OQS_SIG_verify(sig, message, message_len, _signature_, **signature_len**, public_key);\r\n\r\nfor [pqclean_falcon-512_clean](https://github.com/open-quantum-safe/liboqs/tree/main/src/sig/falcon/pqclean_falcon-512_clean), internally that would be: \r\n**PQCLEAN_FALCON512_CLEAN_comp_encode()**\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/codec.c\r\n\r\ncalled by:\r\nstatic int do_sign(uint8_t *nonce, uint8_t *sigbuf, size_t *sigbuflen, const uint8_t *m, size_t mlen, const uint8_t *sk) ()\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\nwhich is called by:\r\nPQCLEAN_FALCON512_CLEAN_crypto_sign_signature() \r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Edit: https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c\r\n2. Print **sig->length_signature** after line 61, the allocated buffer length according to constants defined in https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/sig_falcon.h\r\n3. Print **signature_len** after line 95\r\n4. compile and test both variants:\r\n./test_sig Falcon-512\r\n./test_sig Falcon-1024\r\n\r\n**Expected behavior**\r\n./test_sig Falcon-512\r\nsig->length_signature = 666\r\nsignature_len = 654\r\n\r\n./test_sig Falcon-1024\r\nsig->length_signature = 1280\r\nsignature_len = 1277\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. Linux]\r\n - OpenSSL version [1.1.1.t]\r\n - Compiler version used [gcc]\r\n - Build variables used [e.g., \"-DOQS_DIST_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DOQS_OPENSSL=OFF -DRUN_RESULT__TRYRUN_OUTPUT=stdout ..\" ]\r\n - liboqs version [0.8.0 and latest 0.9.0]\r\n\r\n**Additional context**\r\ncross-compiled for aarch64.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788096994","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591#issuecomment-1788096994","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","id":1788096994,"node_id":"IC_kwDOA-eq3c5qlDHi","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2023-10-31T22:00:51Z","updated_at":"2023-10-31T22:00:51Z","author_association":"COLLABORATOR","body":"Looking at the codebase on the [falcon website](falcon-signlinfo) vs the pqclean codebase makes it look like pqclean only supports the variable length version... So I guess it would be a non-trivial amount of work to bring the PADDED and CT falcon formats into liboqs","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788096994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-31T22:00:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
