{"id":"32820398470","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/145","id":1855278084,"node_id":"I_kwDOBsoLV85ulUwE","number":145,"title":"New \"permanent temporary\" P256+Kyber768 IANA codepoint support in OQS OpenSSH","user":{"login":"csosto-pk","id":24617764,"node_id":"MDQ6VXNlcjI0NjE3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/24617764?v=4","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","html_url":"https://github.com/csosto-pk","followers_url":"https://api.github.com/users/csosto-pk/followers","following_url":"https://api.github.com/users/csosto-pk/following{/other_user}","gists_url":"https://api.github.com/users/csosto-pk/gists{/gist_id}","starred_url":"https://api.github.com/users/csosto-pk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/csosto-pk/subscriptions","organizations_url":"https://api.github.com/users/csosto-pk/orgs","repos_url":"https://api.github.com/users/csosto-pk/repos","events_url":"https://api.github.com/users/csosto-pk/events{/privacy}","received_events_url":"https://api.github.com/users/csosto-pk/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-08-17T15:55:14Z","updated_at":"2023-10-25T01:24:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi folks,\r\n\r\nThere has been consensus for TLS to combine classical ECDH with Kyber-768 (not 512). The reason is the Kyber-512's security level is considered less than 128-bits and those that want to be conservative chose Kyber768 as the default. Drafts [draft-tls-westerbaan-xyber768d00](https://datatracker.ietf.org/doc/draft-tls-westerbaan-xyber768d00) and [draft-kwiatkowski-tls-ecdhe-kyber](https://datatracker.ietf.org/doc/html/draft-kwiatkowski-tls-ecdhe-kyber) got assigned temporary codepoints for ECDH with Kyber768 combinations. These are supported in OQS OpenSSL already I believe.\r\n\r\nI think this can be the sane strategy for a temporary IANA codepoint for SSH on top of the temporary, \"arbitrary\" ones in [draft-kampanakis-curdle-ssh-pq-ke](https://datatracker.ietf.org/doc/html/draft-kampanakis-curdle-ssh-pq-ke) we are all have coded to. \r\n\r\nSo, after we have the first draft spec of Kyber768, we would like to add support for P256-Kyber768 by using a \"permanent temporary\" IANA registry codepoint. This codepoint can live forever until we get the final final spec. At that point we will not need the codepoint any more, but it can still be supported until everyone migrates. This is the approach TLS is taking as well. \r\n\r\nWe would like to have OQS OpenSSH support this codepoint as the defacto PQ OpenSSH library. Otherwise there is no reason to support it on our own. \r\n\r\nAny interest in adding support for a \"temporary permanent\" P256+Kyber768 codepoint?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1778327645","html_url":"https://github.com/open-quantum-safe/openssh/issues/145#issuecomment-1778327645","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145","id":1778327645,"node_id":"IC_kwDOBsoLV85p_yBd","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T01:24:54Z","updated_at":"2023-10-25T01:24:54Z","author_association":"MEMBER","body":"> > OpenSSH indicated that they would like to support x25519-mlkem768-sha256 if they find time to implement.\r\n> \r\n> May I ask then which value is still seen in retaining this fork? Wouldn't it be more reasonable to consider supporting the upstream interest instead and sunsetting this as an OQS subproject?\r\n\r\nIn the long run we do want to see the standardized algorithms adopted in base OpenSSH, so we wouldn't fit that need once they've done so.  There could be a role for experimenting with the remaining round 4 algorithms or the signature on ramp, as we start to add new signature algorithms to the experimental branch.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1778327645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T01:24:55Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32821753651","type":"IssueCommentEvent","actor":{"id":24617764,"login":"csosto-pk","display_login":"csosto-pk","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","avatar_url":"https://avatars.githubusercontent.com/u/24617764?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/145","id":1855278084,"node_id":"I_kwDOBsoLV85ulUwE","number":145,"title":"New \"permanent temporary\" P256+Kyber768 IANA codepoint support in OQS OpenSSH","user":{"login":"csosto-pk","id":24617764,"node_id":"MDQ6VXNlcjI0NjE3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/24617764?v=4","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","html_url":"https://github.com/csosto-pk","followers_url":"https://api.github.com/users/csosto-pk/followers","following_url":"https://api.github.com/users/csosto-pk/following{/other_user}","gists_url":"https://api.github.com/users/csosto-pk/gists{/gist_id}","starred_url":"https://api.github.com/users/csosto-pk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/csosto-pk/subscriptions","organizations_url":"https://api.github.com/users/csosto-pk/orgs","repos_url":"https://api.github.com/users/csosto-pk/repos","events_url":"https://api.github.com/users/csosto-pk/events{/privacy}","received_events_url":"https://api.github.com/users/csosto-pk/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-08-17T15:55:14Z","updated_at":"2023-10-25T03:03:38Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi folks,\r\n\r\nThere has been consensus for TLS to combine classical ECDH with Kyber-768 (not 512). The reason is the Kyber-512's security level is considered less than 128-bits and those that want to be conservative chose Kyber768 as the default. Drafts [draft-tls-westerbaan-xyber768d00](https://datatracker.ietf.org/doc/draft-tls-westerbaan-xyber768d00) and [draft-kwiatkowski-tls-ecdhe-kyber](https://datatracker.ietf.org/doc/html/draft-kwiatkowski-tls-ecdhe-kyber) got assigned temporary codepoints for ECDH with Kyber768 combinations. These are supported in OQS OpenSSL already I believe.\r\n\r\nI think this can be the sane strategy for a temporary IANA codepoint for SSH on top of the temporary, \"arbitrary\" ones in [draft-kampanakis-curdle-ssh-pq-ke](https://datatracker.ietf.org/doc/html/draft-kampanakis-curdle-ssh-pq-ke) we are all have coded to. \r\n\r\nSo, after we have the first draft spec of Kyber768, we would like to add support for P256-Kyber768 by using a \"permanent temporary\" IANA registry codepoint. This codepoint can live forever until we get the final final spec. At that point we will not need the codepoint any more, but it can still be supported until everyone migrates. This is the approach TLS is taking as well. \r\n\r\nWe would like to have OQS OpenSSH support this codepoint as the defacto PQ OpenSSH library. Otherwise there is no reason to support it on our own. \r\n\r\nAny interest in adding support for a \"temporary permanent\" P256+Kyber768 codepoint?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1778429770","html_url":"https://github.com/open-quantum-safe/openssh/issues/145#issuecomment-1778429770","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/145","id":1778429770,"node_id":"IC_kwDOBsoLV85qAK9K","user":{"login":"csosto-pk","id":24617764,"node_id":"MDQ6VXNlcjI0NjE3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/24617764?v=4","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","html_url":"https://github.com/csosto-pk","followers_url":"https://api.github.com/users/csosto-pk/followers","following_url":"https://api.github.com/users/csosto-pk/following{/other_user}","gists_url":"https://api.github.com/users/csosto-pk/gists{/gist_id}","starred_url":"https://api.github.com/users/csosto-pk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/csosto-pk/subscriptions","organizations_url":"https://api.github.com/users/csosto-pk/orgs","repos_url":"https://api.github.com/users/csosto-pk/repos","events_url":"https://api.github.com/users/csosto-pk/events{/privacy}","received_events_url":"https://api.github.com/users/csosto-pk/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T03:03:38Z","updated_at":"2023-10-25T03:03:38Z","author_association":"NONE","body":"> In the long run we do want to see the standardized algorithms adopted in base OpenSSH, so we wouldn't fit that need once they've done so. There could be a role for experimenting with the remaining round 4 algorithms or the signature on ramp, as we start to add new signature algorithms to the experimental branch.\r\n\r\nI agree. Also, I am not sure OpenSSH is considering to support more than ``` x25519-mlkem768-sha256``` at this point. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1778429770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T03:03:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32824944444","type":"IssueCommentEvent","actor":{"id":74706004,"login":"pi-314159","display_login":"pi-314159","gravatar_id":"","url":"https://api.github.com/users/pi-314159","avatar_url":"https://avatars.githubusercontent.com/u/74706004?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/104","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/104/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/104/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/104/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/104","id":1960633637,"node_id":"PR_kwDOCrBzOM5dtnHs","number":104,"title":"Update to upstream 4df6f97","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-25T06:23:10Z","updated_at":"2023-10-25T06:36:47Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/104","html_url":"https://github.com/open-quantum-safe/boringssl/pull/104","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/104.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/104.patch","merged_at":null},"body":"- Works with liboqs 0.9.0\r\n- This update will not affect current Chromium build instructions (because the git command in current instructions will retrieve commit 1ca41b)\r\n- I suspect CI will pass... The latest boringssl requires libunwind-dev > 1.3.0, while I believe the version of libunwind-dev on Ubuntu 20.04 is 1.2.1","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/104/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1778606776","html_url":"https://github.com/open-quantum-safe/boringssl/pull/104#issuecomment-1778606776","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/104","id":1778606776,"node_id":"IC_kwDOCrBzOM5qA2K4","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T06:36:46Z","updated_at":"2023-10-25T06:36:46Z","author_association":"NONE","body":"We've done following interop tests, all passed\r\n\r\n```\r\ntool/bssl client -curves bikel1 -connect test.openquantumsafe.org:6001 </dev/null\r\ntool/bssl client -curves bikel3 -connect test.openquantumsafe.org:6002 </dev/null\r\ntool/bssl client -curves frodo1344aes -connect test.openquantumsafe.org:6004 </dev/null\r\ntool/bssl client -curves frodo1344shake -connect test.openquantumsafe.org:6005 </dev/null\r\ntool/bssl client -curves frodo640shake -connect test.openquantumsafe.org:6007 </dev/null\r\ntool/bssl client -curves frodo976aes -connect test.openquantumsafe.org:6008 </dev/null\r\ntool/bssl client -curves frodo976shake -connect test.openquantumsafe.org:6009 </dev/null\r\ntool/bssl client -curves hqc128 -connect test.openquantumsafe.org:6010 </dev/null\r\ntool/bssl client -curves hqc192 -connect test.openquantumsafe.org:6011 </dev/null\r\ntool/bssl client -curves hqc256 -connect test.openquantumsafe.org:6012 </dev/null\r\ntool/bssl client -curves kyber1024 -connect test.openquantumsafe.org:6013 </dev/null\r\ntool/bssl client -curves kyber512 -connect test.openquantumsafe.org:6014 </dev/null\r\ntool/bssl client -curves kyber768 -connect test.openquantumsafe.org:6015 </dev/null\r\ntool/bssl client -curves p256_bikel1 -connect test.openquantumsafe.org:6016 </dev/null\r\ntool/bssl client -curves p384_bikel3 -connect test.openquantumsafe.org:6018 </dev/null\r\ntool/bssl client -curves p521_frodo1344aes -connect test.openquantumsafe.org:6021 </dev/null\r\ntool/bssl client -curves p521_frodo1344shake -connect test.openquantumsafe.org:6022 </dev/null\r\ntool/bssl client -curves p256_frodo640shake -connect test.openquantumsafe.org:6025 </dev/null\r\ntool/bssl client -curves p384_frodo976aes -connect test.openquantumsafe.org:6027 </dev/null\r\ntool/bssl client -curves p384_frodo976shake -connect test.openquantumsafe.org:6029 </dev/null\r\ntool/bssl client -curves p256_hqc128 -connect test.openquantumsafe.org:6031 </dev/null\r\ntool/bssl client -curves p384_hqc192 -connect test.openquantumsafe.org:6033 </dev/null\r\ntool/bssl client -curves p521_hqc256 -connect test.openquantumsafe.org:6035 </dev/null\r\ntool/bssl client -curves p521_kyber1024 -connect test.openquantumsafe.org:6036 </dev/null\r\ntool/bssl client -curves p256_kyber512 -connect test.openquantumsafe.org:6037 </dev/null\r\ntool/bssl client -curves p384_kyber768 -connect test.openquantumsafe.org:6040 </dev/null\r\ntool/bssl client -curves bikel1 -connect test.openquantumsafe.org:6044 </dev/null\r\ntool/bssl client -curves bikel3 -connect test.openquantumsafe.org:6045 </dev/null\r\ntool/bssl client -curves frodo1344aes -connect test.openquantumsafe.org:6047 </dev/null\r\ntool/bssl client -curves frodo1344shake -connect test.openquantumsafe.org:6048 </dev/null\r\ntool/bssl client -curves frodo640shake -connect test.openquantumsafe.org:6050 </dev/null\r\ntool/bssl client -curves frodo976aes -connect test.openquantumsafe.org:6051 </dev/null\r\ntool/bssl client -curves frodo976shake -connect test.openquantumsafe.org:6052 </dev/null\r\ntool/bssl client -curves hqc128 -connect test.openquantumsafe.org:6053 </dev/null\r\ntool/bssl client -curves hqc192 -connect test.openquantumsafe.org:6054 </dev/null\r\ntool/bssl client -curves hqc256 -connect test.openquantumsafe.org:6055 </dev/null\r\ntool/bssl client -curves kyber1024 -connect test.openquantumsafe.org:6056 </dev/null\r\ntool/bssl client -curves kyber512 -connect test.openquantumsafe.org:6057 </dev/null\r\ntool/bssl client -curves kyber768 -connect test.openquantumsafe.org:6058 </dev/null\r\ntool/bssl client -curves p256_bikel1 -connect test.openquantumsafe.org:6059 </dev/null\r\ntool/bssl client -curves p384_bikel3 -connect test.openquantumsafe.org:6061 </dev/null\r\ntool/bssl client -curves p521_frodo1344aes -connect test.openquantumsafe.org:6064 </dev/null\r\ntool/bssl client -curves p521_frodo1344shake -connect test.openquantumsafe.org:6065 </dev/null\r\ntool/bssl client -curves p256_frodo640shake -connect test.openquantumsafe.org:6068 </dev/null\r\ntool/bssl client -curves p384_frodo976aes -connect test.openquantumsafe.org:6070 </dev/null\r\ntool/bssl client -curves p384_frodo976shake -connect test.openquantumsafe.org:6072 </dev/null\r\ntool/bssl client -curves p256_hqc128 -connect test.openquantumsafe.org:6074 </dev/null\r\ntool/bssl client -curves p384_hqc192 -connect test.openquantumsafe.org:6076 </dev/null\r\ntool/bssl client -curves p521_hqc256 -connect test.openquantumsafe.org:6078 </dev/null\r\ntool/bssl client -curves p521_kyber1024 -connect test.openquantumsafe.org:6079 </dev/null\r\ntool/bssl client -curves p256_kyber512 -connect test.openquantumsafe.org:6080 </dev/null\r\ntool/bssl client -curves p384_kyber768 -connect test.openquantumsafe.org:6083 </dev/null\r\ntool/bssl client -curves bikel1 -connect test.openquantumsafe.org:6087 </dev/null\r\ntool/bssl client -curves frodo640shake -connect test.openquantumsafe.org:6089 </dev/null\r\ntool/bssl client -curves hqc128 -connect test.openquantumsafe.org:6090 </dev/null\r\ntool/bssl client -curves kyber512 -connect test.openquantumsafe.org:6091 </dev/null\r\ntool/bssl client -curves p256_bikel1 -connect test.openquantumsafe.org:6092 </dev/null\r\ntool/bssl client -curves p256_frodo640shake -connect test.openquantumsafe.org:6096 </dev/null\r\ntool/bssl client -curves p256_hqc128 -connect test.openquantumsafe.org:6098 </dev/null\r\ntool/bssl client -curves p256_kyber512 -connect test.openquantumsafe.org:6100 </dev/null\r\ntool/bssl client -curves bikel3 -connect test.openquantumsafe.org:6105 </dev/null\r\ntool/bssl client -curves frodo976aes -connect test.openquantumsafe.org:6106 </dev/null\r\ntool/bssl client -curves frodo976shake -connect test.openquantumsafe.org:6107 </dev/null\r\ntool/bssl client -curves hqc192 -connect test.openquantumsafe.org:6108 </dev/null\r\ntool/bssl client -curves kyber768 -connect test.openquantumsafe.org:6109 </dev/null\r\ntool/bssl client -curves p384_bikel3 -connect test.openquantumsafe.org:6110 </dev/null\r\ntool/bssl client -curves p384_frodo976aes -connect test.openquantumsafe.org:6112 </dev/null\r\ntool/bssl client -curves p384_frodo976shake -connect test.openquantumsafe.org:6114 </dev/null\r\ntool/bssl client -curves p384_hqc192 -connect test.openquantumsafe.org:6116 </dev/null\r\ntool/bssl client -curves p384_kyber768 -connect test.openquantumsafe.org:6118 </dev/null\r\ntool/bssl client -curves frodo1344aes -connect test.openquantumsafe.org:6122 </dev/null\r\ntool/bssl client -curves frodo1344shake -connect test.openquantumsafe.org:6123 </dev/null\r\ntool/bssl client -curves hqc256 -connect test.openquantumsafe.org:6124 </dev/null\r\ntool/bssl client -curves kyber1024 -connect test.openquantumsafe.org:6125 </dev/null\r\ntool/bssl client -curves p521_frodo1344aes -connect test.openquantumsafe.org:6127 </dev/null\r\ntool/bssl client -curves p521_frodo1344shake -connect test.openquantumsafe.org:6128 </dev/null\r\ntool/bssl client -curves p521_hqc256 -connect test.openquantumsafe.org:6129 </dev/null\r\ntool/bssl client -curves p521_kyber1024 -connect test.openquantumsafe.org:6130 </dev/null\r\ntool/bssl client -curves frodo1344aes -connect test.openquantumsafe.org:6133 </dev/null\r\ntool/bssl client -curves frodo1344shake -connect test.openquantumsafe.org:6134 </dev/null\r\ntool/bssl client -curves hqc256 -connect test.openquantumsafe.org:6135 </dev/null\r\ntool/bssl client -curves kyber1024 -connect test.openquantumsafe.org:6136 </dev/null\r\ntool/bssl client -curves p521_frodo1344aes -connect test.openquantumsafe.org:6138 </dev/null\r\ntool/bssl client -curves p521_frodo1344shake -connect test.openquantumsafe.org:6139 </dev/null\r\ntool/bssl client -curves p521_hqc256 -connect test.openquantumsafe.org:6140 </dev/null\r\ntool/bssl client -curves p521_kyber1024 -connect test.openquantumsafe.org:6141 </dev/null\r\ntool/bssl client -curves bikel1 -connect test.openquantumsafe.org:6143 </dev/null\r\ntool/bssl client -curves frodo640shake -connect test.openquantumsafe.org:6145 </dev/null\r\ntool/bssl client -curves hqc128 -connect test.openquantumsafe.org:6146 </dev/null\r\ntool/bssl client -curves kyber512 -connect test.openquantumsafe.org:6147 </dev/null\r\ntool/bssl client -curves p256_bikel1 -connect test.openquantumsafe.org:6148 </dev/null\r\ntool/bssl client -curves p256_frodo640shake -connect test.openquantumsafe.org:6152 </dev/null\r\ntool/bssl client -curves p256_hqc128 -connect test.openquantumsafe.org:6154 </dev/null\r\ntool/bssl client -curves p256_kyber512 -connect test.openquantumsafe.org:6156 </dev/null\r\ntool/bssl client -curves bikel1 -connect test.openquantumsafe.org:6161 </dev/null\r\ntool/bssl client -curves frodo640shake -connect test.openquantumsafe.org:6163 </dev/null\r\ntool/bssl client -curves hqc128 -connect test.openquantumsafe.org:6164 </dev/null\r\ntool/bssl client -curves kyber512 -connect test.openquantumsafe.org:6165 </dev/null\r\ntool/bssl client -curves p256_bikel1 -connect test.openquantumsafe.org:6166 </dev/null\r\ntool/bssl client -curves p256_frodo640shake -connect test.openquantumsafe.org:6170 </dev/null\r\ntool/bssl client -curves p256_hqc128 -connect test.openquantumsafe.org:6172 </dev/null\r\ntool/bssl client -curves p256_kyber512 -connect test.openquantumsafe.org:6174 </dev/null\r\ntool/bssl client -curves bikel1 -connect test.openquantumsafe.org:6179 </dev/null\r\ntool/bssl client -curves frodo640shake -connect test.openquantumsafe.org:6181 </dev/null\r\ntool/bssl client -curves hqc128 -connect test.openquantumsafe.org:6182 </dev/null\r\ntool/bssl client -curves kyber512 -connect test.openquantumsafe.org:6183 </dev/null\r\ntool/bssl client -curves p256_bikel1 -connect test.openquantumsafe.org:6184 </dev/null\r\ntool/bssl client -curves p256_frodo640shake -connect test.openquantumsafe.org:6188 </dev/null\r\ntool/bssl client -curves p256_hqc128 -connect test.openquantumsafe.org:6190 </dev/null\r\ntool/bssl client -curves p256_kyber512 -connect test.openquantumsafe.org:6192 </dev/null\r\ntool/bssl client -curves bikel3 -connect test.openquantumsafe.org:6197 </dev/null\r\ntool/bssl client -curves frodo976aes -connect test.openquantumsafe.org:6198 </dev/null\r\ntool/bssl client -curves frodo976shake -connect test.openquantumsafe.org:6199 </dev/null\r\ntool/bssl client -curves hqc192 -connect test.openquantumsafe.org:6200 </dev/null\r\ntool/bssl client -curves kyber768 -connect test.openquantumsafe.org:6201 </dev/null\r\ntool/bssl client -curves p384_bikel3 -connect test.openquantumsafe.org:6202 </dev/null\r\ntool/bssl client -curves p384_frodo976aes -connect test.openquantumsafe.org:6204 </dev/null\r\ntool/bssl client -curves p384_frodo976shake -connect test.openquantumsafe.org:6206 </dev/null\r\ntool/bssl client -curves p384_hqc192 -connect test.openquantumsafe.org:6208 </dev/null\r\ntool/bssl client -curves p384_kyber768 -connect test.openquantumsafe.org:6210 </dev/null\r\ntool/bssl client -curves bikel1 -connect test.openquantumsafe.org:6213 </dev/null\r\ntool/bssl client -curves frodo640shake -connect test.openquantumsafe.org:6215 </dev/null\r\ntool/bssl client -curves hqc128 -connect test.openquantumsafe.org:6216 </dev/null\r\ntool/bssl client -curves kyber512 -connect test.openquantumsafe.org:6217 </dev/null\r\ntool/bssl client -curves p256_bikel1 -connect test.openquantumsafe.org:6218 </dev/null\r\ntool/bssl client -curves p256_frodo640shake -connect test.openquantumsafe.org:6222 </dev/null\r\ntool/bssl client -curves p256_hqc128 -connect test.openquantumsafe.org:6224 </dev/null\r\ntool/bssl client -curves p256_kyber512 -connect test.openquantumsafe.org:6226 </dev/null\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1778606776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T06:36:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32829293913","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238","id":1950213600,"node_id":"PR_kwDODP--n85dKpQ_","number":238,"title":"Updates docker file to create test server package","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-10-18T16:47:40Z","updated_at":"2023-10-25T09:17:14Z","closed_at":"2023-10-19T18:19:36Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/pulls/238","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238","diff_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238.diff","patch_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238.patch","merged_at":"2023-10-19T18:19:36Z"},"body":"The update uses..\r\n- liboqs 0.9.0\r\n- latest oqs-provider (main)\r\n- latest nginx 1.25.2\r\n\r\nAlso updates the nginx docker demo to v1.25.2.\r\nNote that with [nginx 1.25.2](http://nginx.org/en/CHANGES), the location of the openssl config file needs to be passed as an env variable. This is reflected in the Dockerfile of the nginx demo.\r\n\r\nThe updated package is already deployed at test.openquantumsafe.org.\r\nA test run with `testrun.sh` passes.\r\nI'll update the server again to a tagged oqs-provider release once available.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1778850709","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238#issuecomment-1778850709","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238","id":1778850709,"node_id":"IC_kwDODP--n85qBxuV","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T09:17:13Z","updated_at":"2023-10-25T09:17:13Z","author_association":"MEMBER","body":"> I'll update the server again to a tagged oqs-provider release once available.\r\n\r\n@bhess FWIW [oqsprovider release is available](https://github.com/open-quantum-safe/oqs-provider/releases/tag/0.5.2)...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1778850709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T09:17:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32829328738","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238","id":1950213600,"node_id":"PR_kwDODP--n85dKpQ_","number":238,"title":"Updates docker file to create test server package","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-10-18T16:47:40Z","updated_at":"2023-10-25T09:18:22Z","closed_at":"2023-10-19T18:19:36Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/pulls/238","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238","diff_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238.diff","patch_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238.patch","merged_at":"2023-10-19T18:19:36Z"},"body":"The update uses..\r\n- liboqs 0.9.0\r\n- latest oqs-provider (main)\r\n- latest nginx 1.25.2\r\n\r\nAlso updates the nginx docker demo to v1.25.2.\r\nNote that with [nginx 1.25.2](http://nginx.org/en/CHANGES), the location of the openssl config file needs to be passed as an env variable. This is reflected in the Dockerfile of the nginx demo.\r\n\r\nThe updated package is already deployed at test.openquantumsafe.org.\r\nA test run with `testrun.sh` passes.\r\nI'll update the server again to a tagged oqs-provider release once available.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1778852645","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238#issuecomment-1778852645","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238","id":1778852645,"node_id":"IC_kwDODP--n85qByMl","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T09:18:22Z","updated_at":"2023-10-25T09:18:22Z","author_association":"MEMBER","body":"> > I'll update the server again to a tagged oqs-provider release once available.\r\n> \r\n> @bhess FWIW [oqsprovider release is available](https://github.com/open-quantum-safe/oqs-provider/releases/tag/0.5.2)...\r\n\r\nThanks @baentsch! Will update the server today.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1778852645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T09:18:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32830080497","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/295","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/295/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/295/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/295/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/295","id":1959794427,"node_id":"I_kwDOE_A9l8500Bb7","number":295,"title":"oqsx_key_fromdata returns success when no private and public are provided","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-24T18:04:12Z","updated_at":"2023-10-25T09:43:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hey!\r\n\r\nI've been playing with oqs provider. I noticed that in `oqsx_key_fromdata` that if the user screws up and doesn't provide a `priv` and does not provide a `pub` OSSL_PARAM, that success is returned. Would it make more sense to only return `1` if something was successfully imported?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/295/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1778894065","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/295#issuecomment-1778894065","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/295","id":1778894065,"node_id":"IC_kwDOE_A9l85qB8Tx","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T09:43:27Z","updated_at":"2023-10-25T09:43:27Z","author_association":"MEMBER","body":"Thanks for the report @Martyrshot . For this function, indeed, it's not sensible to return OK if both parameters are missing. Please feel free to check whether #296 fixes the issue in your eyes. This is mostly due to the fact that this function is used throughout the provider and sets necessary logic for private only, public only, or complete key pairs.\r\n\r\nIn general, though, if a user is calling a function without parameters properly set thus leading to a no-operation is not something the provider needs (or IMO sensibly ought) to report: The resultant behaviour (of incorrectly called param getters and setters) will become (more) obvious (to the user) later -- then at the actual operation. As an example, should it be considered an error to not pass a bit length param to a key gen initialization? I don't think so: Rationale: A wrong size parameter passed as parameter to a key gen context creation generally cannot be detected as an error (unlike a completely missing parameter). Both user mistakes will become obvious(ly understandable to the user) at the actual key gen operation, though.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1778894065/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T09:43:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32831114223","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591","id":1960549030,"node_id":"I_kwDOA-eq3c5025qm","number":1591,"title":"Falcon variable length signatures ","user":{"login":"olivamadrigal","id":3107478,"node_id":"MDQ6VXNlcjMxMDc0Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/3107478?v=4","gravatar_id":"","url":"https://api.github.com/users/olivamadrigal","html_url":"https://github.com/olivamadrigal","followers_url":"https://api.github.com/users/olivamadrigal/followers","following_url":"https://api.github.com/users/olivamadrigal/following{/other_user}","gists_url":"https://api.github.com/users/olivamadrigal/gists{/gist_id}","starred_url":"https://api.github.com/users/olivamadrigal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olivamadrigal/subscriptions","organizations_url":"https://api.github.com/users/olivamadrigal/orgs","repos_url":"https://api.github.com/users/olivamadrigal/repos","events_url":"https://api.github.com/users/olivamadrigal/events{/privacy}","received_events_url":"https://api.github.com/users/olivamadrigal/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-25T05:08:29Z","updated_at":"2023-10-25T10:18:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nBoth Falcon-512 and Falcon-1024 variants return a variable length signature. This is observed in the **test_sig** correctness test by\r\nprinting the output variable **signature_len**  after the sign() function is called:  https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c. The test will pass because **signature_len** is an output computed internally by the sign() function specifying the length of the generated signature returned and the same length signature is verified by the verify() function.  **signature_len** is given as input to verify().\r\n\r\nsign() and verify() should be updated to fixed length signatures.\r\n\r\nrc = OQS_SIG_sign(sig, _signature_, **&signature_len**, message, message_len, secret_key);\r\n\r\nrc = OQS_SIG_verify(sig, message, message_len, _signature_, **signature_len**, public_key);\r\n\r\nfor [pqclean_falcon-512_clean](https://github.com/open-quantum-safe/liboqs/tree/main/src/sig/falcon/pqclean_falcon-512_clean), internally that would be: \r\n**PQCLEAN_FALCON512_CLEAN_comp_encode()**\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/codec.c\r\n\r\ncalled by:\r\nstatic int do_sign(uint8_t *nonce, uint8_t *sigbuf, size_t *sigbuflen, const uint8_t *m, size_t mlen, const uint8_t *sk) ()\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\nwhich is called by:\r\nPQCLEAN_FALCON512_CLEAN_crypto_sign_signature() \r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Edit: https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c\r\n2. Print **sig->length_signature** after line 61, the allocated buffer length according to constants defined in https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/sig_falcon.h\r\n3. Print **signature_len** after line 95\r\n4. compile and test both variants:\r\n./test_sig Falcon-512\r\n./test_sig Falcon-1024\r\n\r\n**Expected behavior**\r\n./test_sig Falcon-512\r\nsig->length_signature = 666\r\nsignature_len = 654\r\n\r\n./test_sig Falcon-1024\r\nsig->length_signature = 1280\r\nsignature_len = 1277\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. Linux]\r\n - OpenSSL version [1.1.1.t]\r\n - Compiler version used [gcc]\r\n - Build variables used [e.g., \"-DOQS_DIST_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DOQS_OPENSSL=OFF -DRUN_RESULT__TRYRUN_OUTPUT=stdout ..\" ]\r\n - liboqs version [0.8.0 and latest 0.9.0]\r\n\r\n**Additional context**\r\ncross-compiled for aarch64.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1778950764","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591#issuecomment-1778950764","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","id":1778950764,"node_id":"IC_kwDOA-eq3c5qCKJs","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T10:18:33Z","updated_at":"2023-10-25T10:18:33Z","author_association":"MEMBER","body":"> sign() and verify() should be updated to fixed length signatures.\r\n\r\nIMO fixed length sigs are just one option in the Falcon specs; for the NIST competition--which OQS tracks-- variable length sigs have been spec'd (see [algorithm specs, section 3.11.6](https://falcon-sign.info/falcon.pdf)): the siglen size thus is a maximum value not a guaranteed one and the APIs operate as designed (and desirable from a \"small is better\" perspective; what advantages for longer, fixed sizes do you see?).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1778950764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T10:18:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32837201594","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1521","id":1841452867,"node_id":"I_kwDOA-eq3c5twldD","number":1521,"title":"Update Kyber and Dilithium to FIPS versions","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/23","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23/labels","id":9830315,"node_id":"MI_kwDOA-eq3c4Alf-r","number":23,"title":"0.10.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":0,"state":"open","created_at":"2023-08-23T17:18:24Z","updated_at":"2023-08-23T17:24:33Z","due_on":null,"closed_at":null},"comments":22,"created_at":"2023-08-08T14:39:08Z","updated_at":"2023-10-25T13:42:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Once the FIPS drafts are released, we'll need to update Kyber and Dilithium based on the tweaks added by NIST.  \r\n\r\nUpstream already has started on this:\r\n- https://github.com/pq-crystals/kyber/tree/standard\r\n- https://github.com/pq-crystals/dilithium/tree/standard","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1779307476","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1521#issuecomment-1779307476","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521","id":1779307476,"node_id":"IC_kwDOA-eq3c5qDhPU","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T13:42:33Z","updated_at":"2023-10-25T13:42:33Z","author_association":"CONTRIBUTOR","body":"> What is it that PPCoE tests (@christianpaquin )?\r\n\r\nThe NCCoE? We test interoperability between implementations provided by consortium members. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1779307476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T13:42:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32841467183","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1585","id":1952352705,"node_id":"PR_kwDOA-eq3c5dR64z","number":1585,"title":"Pull new HQC implementation from upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-19T14:05:18Z","updated_at":"2023-10-25T15:48:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1585","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1585","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1585.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1585.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nRun copy_from_upstream to pull the [recently merged](https://github.com/PQClean/PQClean/pull/512) HQC updates from PQClean. Ignore Kyber and Dilithium updates as we don't yet want to move to the \"standard\" version.\r\n\r\nThis is unfortunately a bit of a \"kitchen sink\" PR: it contains\r\n1. a new version of HQC from https://github.com/PQClean/PQClean/pull/512,\r\n2. updates to Falcon and Sphincs+ which landed in PQClean before the HQC code was merged, and\r\n3. support for the HQC custom PRNG for KAT checking.\r\n\r\nNotably, this PR does _not_ contain the latest [Kyber](https://github.com/PQClean/PQClean/pull/504) and [Dilithium](https://github.com/PQClean/PQClean/pull/511) updates from PQClean, as this would entail updating liboqs to be in sync with the \"standard\" track. If/when this is merged, we will be out of sync with PQClean.\r\n\r\nWhen patching HQC, I made a number of minor changes to the upstream code, mostly to address undefined or implementation-defined behaviour and endianness issues. I also wrote a new modular reduction routine to address https://github.com/PQClean/PQClean/issues/482; this can be found in `vector.c`. It might be easier to review my changes directly against the reference implementation; you can view the patches [here](https://github.com/SWilson4/package-pqclean/tree/main/hqc/patches).\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1319.\r\nFixes #995.\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [x] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1779574068","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1585#issuecomment-1779574068","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585","id":1779574068,"node_id":"IC_kwDOA-eq3c5qEiU0","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T15:48:06Z","updated_at":"2023-10-25T15:48:06Z","author_association":"CONTRIBUTOR","body":"> The version of HQC does not seem to have been updated. Am I right in this understanding? If so, can we please fix this before merge, either by patch or upstream update?\r\n\r\n> Oh, one more thing: This PR needs to update the top-level `CMakeLists.txt`to have \"OQS_VERSION_TEXT\" read \"0.10.0-dev\".\r\n\r\nBoth should be fixed now. I also incremented the `SOVERSION`, as we did when doing [a similar merge for McEliece](https://github.com/open-quantum-safe/liboqs/pull/1470).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1779574068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T15:48:07Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32841514437","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294","id":1959666927,"node_id":"PR_kwDOE_A9l85dqaJH","number":294,"title":"Fix #272: run `c_obj_create` under a lock.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-24T16:42:20Z","updated_at":"2023-10-25T15:49:41Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/294","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294.patch","merged_at":null},"body":"See https://github.com/open-quantum-safe/oqs-provider/issues/272.\r\n\r\nThis commit adds a lock to run `c_obj_create` and `OBJ_create` thread-safely in `OQS_PROVIDER_ENTRYPOINT_NAME`,\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1779577025","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294#issuecomment-1779577025","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294","id":1779577025,"node_id":"IC_kwDOE_A9l85qEjDB","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T15:49:41Z","updated_at":"2023-10-25T15:49:41Z","author_association":"MEMBER","body":"> the teardown function of oqsprovider doesn't destroy the previously created NIDs and OIDs\r\n\r\nCorrect observation: As per the [OpenSSL documentation](https://www.openssl.org/docs/man3.0/man3/OPENSSL_init_crypto.html):\r\n\r\n> By default OpenSSL will attempt to clean itself up when the process exits via an “atexit” handler. \r\n\r\nThis IMO applies also to all objects created/registered via an OpenSSL API. We have `asan` tests successfully running over the whole gamut and they don't find \"unfreed\" memory, so I think we're good.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1779577025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T15:49:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32842297619","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584","id":1949991089,"node_id":"I_kwDOA-eq3c50OoCx","number":1584,"title":"Improve granularity of copy_from_upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-18T15:10:05Z","updated_at":"2023-10-25T16:16:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As things currently stand, the `copy_from_upstream` script attempts to integrate updates for _all_ schemes sourced from a given upstream. The update source is given by a git commit SHA for the upstream repo.\r\n\r\nIt would be nice to have the option to override this on a scheme-by-scheme basis so that integrating upstream code doesn't get messy if OQS (deliberately) goes out of sync with an upstream source on some algorithms but not others. For instance, we could specify that the PQClean aarch64 implementations of Dilithium and Kyber should remain at the latest commit before [PQClean updated their implementation to be in sync with the pq-crystals `standard` branches](https://github.com/PQClean/PQClean/pull/511) while still pulling the latest updates to HQC and Sphincs+.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1779624580","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584#issuecomment-1779624580","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","id":1779624580,"node_id":"IC_kwDOA-eq3c5qEuqE","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T16:16:23Z","updated_at":"2023-10-25T16:16:23Z","author_association":"CONTRIBUTOR","body":"I tested running `NOT_READY=\"kyber dilithium\" python3 copy_from_upstream.py copy` on my branch, and it changed a bunch of files we wouldn't want it to, including removing Kyber and Dilithium from `CMakeLists.txt`. So unfortunately I don't think it's a quick fix. That said, perhaps it could be turned into one? I haven't looked closely at it yet.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1779624580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T16:16:23Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32842368207","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589","id":1953604897,"node_id":"PR_kwDOA-eq3c5dWJpI","number":1589,"title":"Run copy_from_upstream and test","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-10-20T06:12:52Z","updated_at":"2023-10-25T16:18:55Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1589","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1589.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1589.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nFixes #1586\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1779628776","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589#issuecomment-1779628776","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589","id":1779628776,"node_id":"IC_kwDOA-eq3c5qEvro","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T16:18:55Z","updated_at":"2023-10-25T16:18:55Z","author_association":"CONTRIBUTOR","body":"> Oops -- here's a PR I forgot to mention when we just discussed: @praveksharma @SWilson4 : Do you want to review or shall this be superseded by #1585? Would be totally fine with me. Main thing is #1586 gets fixed (incl. the CI shortcoming addressed in this PR).\r\n\r\nI'd rather not try to cram the CI fix into (the already massive) #1585, so on that front I'm OK with proceeding with this PR, once we're satisfied that the documentation is indeed generated correctly. _However_, once #1585 lands we will be out of sync with PQClean, so the CI fix should break the build. (Or, if this PR lands first, #1585 will be blocked from merging.)\r\n\r\nHow ought we to deal with this? Ideally. I think we'd resolve #1584, but that might get fairly involved. Still, it will need to be done if idempotence under `copy_from_upstream.py` is a desired property. We could also do a hacky workaround like disabling the CI check for now, or adding some exceptions to it, but that seems like a recipe for future pain.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1779628776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T16:18:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32842945377","type":"IssueCommentEvent","actor":{"id":6541356,"login":"Martyrshot","display_login":"Martyrshot","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","avatar_url":"https://avatars.githubusercontent.com/u/6541356?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/296","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/296/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/296/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/296/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/296","id":1960950294,"node_id":"PR_kwDOE_A9l85dur4r","number":296,"title":"check empty params lists passed","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-25T09:27:18Z","updated_at":"2023-10-25T16:40:24Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/296","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/296","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/296.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/296.patch","merged_at":null},"body":"This checks all functions taking an OSSL_PARAM list as to whether missing parameters have a negative impact to their logic.\r\n\r\nFixes #295.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/296/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/296/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1779662815","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/296#issuecomment-1779662815","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/296","id":1779662815,"node_id":"IC_kwDOE_A9l85qE3_f","user":{"login":"Martyrshot","id":6541356,"node_id":"MDQ6VXNlcjY1NDEzNTY=","avatar_url":"https://avatars.githubusercontent.com/u/6541356?v=4","gravatar_id":"","url":"https://api.github.com/users/Martyrshot","html_url":"https://github.com/Martyrshot","followers_url":"https://api.github.com/users/Martyrshot/followers","following_url":"https://api.github.com/users/Martyrshot/following{/other_user}","gists_url":"https://api.github.com/users/Martyrshot/gists{/gist_id}","starred_url":"https://api.github.com/users/Martyrshot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Martyrshot/subscriptions","organizations_url":"https://api.github.com/users/Martyrshot/orgs","repos_url":"https://api.github.com/users/Martyrshot/repos","events_url":"https://api.github.com/users/Martyrshot/events{/privacy}","received_events_url":"https://api.github.com/users/Martyrshot/received_events","type":"User","site_admin":false},"created_at":"2023-10-25T16:40:23Z","updated_at":"2023-10-25T16:40:23Z","author_association":"NONE","body":"This looks like a great fix. Thanks Michael!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1779662815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-25T16:40:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
