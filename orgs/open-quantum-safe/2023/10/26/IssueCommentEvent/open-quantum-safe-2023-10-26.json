{"id":"32852570754","type":"IssueCommentEvent","actor":{"id":74706004,"login":"pi-314159","display_login":"pi-314159","gravatar_id":"","url":"https://api.github.com/users/pi-314159","avatar_url":"https://avatars.githubusercontent.com/u/74706004?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238","id":1950213600,"node_id":"PR_kwDODP--n85dKpQ_","number":238,"title":"Updates docker file to create test server package","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-10-18T16:47:40Z","updated_at":"2023-10-26T00:17:37Z","closed_at":"2023-10-19T18:19:36Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/pulls/238","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238","diff_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238.diff","patch_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238.patch","merged_at":"2023-10-19T18:19:36Z"},"body":"The update uses..\r\n- liboqs 0.9.0\r\n- latest oqs-provider (main)\r\n- latest nginx 1.25.2\r\n\r\nAlso updates the nginx docker demo to v1.25.2.\r\nNote that with [nginx 1.25.2](http://nginx.org/en/CHANGES), the location of the openssl config file needs to be passed as an env variable. This is reflected in the Dockerfile of the nginx demo.\r\n\r\nThe updated package is already deployed at test.openquantumsafe.org.\r\nA test run with `testrun.sh` passes.\r\nI'll update the server again to a tagged oqs-provider release once available.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1780228781","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238#issuecomment-1780228781","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238","id":1780228781,"node_id":"IC_kwDODP--n85qHCKt","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T00:17:36Z","updated_at":"2023-10-26T00:17:36Z","author_association":"CONTRIBUTOR","body":"@bhess Should we also update tags in README.md?\r\n\r\n> Open Quantum Safe TLS/X.509 interoperability test server at https://test.openquantumsafe.org/ (set up using oqs-provider **v0.5.0** and liboqs **v0.8.0**)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1780228781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T00:17:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32853454098","type":"IssueCommentEvent","actor":{"id":132921394,"login":"praveksharma","display_login":"praveksharma","gravatar_id":"","url":"https://api.github.com/users/praveksharma","avatar_url":"https://avatars.githubusercontent.com/u/132921394?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589","id":1953604897,"node_id":"PR_kwDOA-eq3c5dWJpI","number":1589,"title":"Run copy_from_upstream and test","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-10-20T06:12:52Z","updated_at":"2023-10-26T01:23:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1589","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1589.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1589.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nFixes #1586\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780271956","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589#issuecomment-1780271956","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589","id":1780271956,"node_id":"IC_kwDOA-eq3c5qHMtU","user":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T01:23:15Z","updated_at":"2023-10-26T01:23:15Z","author_association":"MEMBER","body":"> I'd like to hear @praveksharma's thoughts on the constant-time documentation changes for McEliece and Falcon; if I recall correctly he recently worked on some related issues.\r\n\r\n@SWilson4, copying a comment from another PR over here: `classic_mceliece.md` wasn't updated along with `classic_mceliece.yml` in #1552 (presumably I forgot to run `update_upstream_alg_docs.py` at the time) so these changes are desirable. Ditto with Falcon.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780271956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T01:23:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32856467745","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294","id":1959666927,"node_id":"PR_kwDOE_A9l85dqaJH","number":294,"title":"Fix #272: run `c_obj_create` under a lock.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-10-24T16:42:20Z","updated_at":"2023-10-26T05:09:16Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/294","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294.patch","merged_at":null},"body":"See https://github.com/open-quantum-safe/oqs-provider/issues/272.\r\n\r\nThis commit adds a lock to run `c_obj_create` and `OBJ_create` thread-safely in `OQS_PROVIDER_ENTRYPOINT_NAME`,\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1780424294","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/294#issuecomment-1780424294","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/294","id":1780424294,"node_id":"IC_kwDOE_A9l85qHx5m","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T05:09:16Z","updated_at":"2023-10-26T05:09:16Z","author_association":"MEMBER","body":"> Okay so we can't pass arguments to `CRYPTO_THREAD_run_once`, so it forces me to move pretty much all the variables from `OQS_PROVIDER_ENTRYPOINT_NAME` to the static section… Should I do that @baentsch ?\r\n\r\nYikes. That doesn't sound \"attractive\". Sorry I hadn't considered that (lack of parameters) when making the proposal. If I were doing this (having arbitrary time at my hands :), I'd do two things: 1) Go ahead and make that change and then very carefully observe the results of an `asan` run _and_ 2) Raise an issue/question in the OpenSSL discussion forum as to whether this is an intended/acceptable way to use `CRYPTO_THREAD_run_once`.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1780424294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T05:09:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32856984660","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589","id":1953604897,"node_id":"PR_kwDOA-eq3c5dWJpI","number":1589,"title":"Run copy_from_upstream and test","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-10-20T06:12:52Z","updated_at":"2023-10-26T05:41:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1589","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1589.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1589.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nFixes #1586\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780449143","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589#issuecomment-1780449143","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589","id":1780449143,"node_id":"IC_kwDOA-eq3c5qH393","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T05:41:16Z","updated_at":"2023-10-26T05:41:16Z","author_association":"MEMBER","body":">  if idempotence under copy_from_upstream.py is a desired property.\r\n\r\nI'd argue idempotence under `copy_from_upstream` is essential for this project: `liboqs` is pretty much completely gutted if it cannot reliably import the algorithms. As we're not under any time pressure, I'd argue to do it \"right\": Fix #1584 first, maybe (just as a test) use that to re-generate #1586 (it seems we now have clarity on the McEliece docs, thanks @praveksharma ), then re-base #1585 (giving the improved copy_from_upstream a final \"run for its money\" -- and have it focus on HQC and not the other shenenigans).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780449143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T05:41:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32857072612","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584","id":1949991089,"node_id":"I_kwDOA-eq3c50OoCx","number":1584,"title":"Improve granularity of copy_from_upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-10-18T15:10:05Z","updated_at":"2023-10-26T05:46:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As things currently stand, the `copy_from_upstream` script attempts to integrate updates for _all_ schemes sourced from a given upstream. The update source is given by a git commit SHA for the upstream repo.\r\n\r\nIt would be nice to have the option to override this on a scheme-by-scheme basis so that integrating upstream code doesn't get messy if OQS (deliberately) goes out of sync with an upstream source on some algorithms but not others. For instance, we could specify that the PQClean aarch64 implementations of Dilithium and Kyber should remain at the latest commit before [PQClean updated their implementation to be in sync with the pq-crystals `standard` branches](https://github.com/PQClean/PQClean/pull/511) while still pulling the latest updates to HQC and Sphincs+.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780453375","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584#issuecomment-1780453375","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","id":1780453375,"node_id":"IC_kwDOA-eq3c5qH4__","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T05:46:50Z","updated_at":"2023-10-26T05:46:50Z","author_association":"MEMBER","body":"> including removing Kyber and Dilithium from CMakeLists.txt. So unfortunately I don't think it's a quick fix. That said, perhaps it could be turned into one?\r\n\r\nYeah... Removing Kyber and Dilithium completely sounds somewhat suboptimal... @bhess: The \"NOT_READY\" feature has been introduced by [you](https://github.com/open-quantum-safe/liboqs/commit/fc35e09a1491fe3ffaba90999c1767e65a694ac9): Would you think this can be extended (more easily than re-working the `copy_from_upstream` logic) to resolve this issue and would you be willing to lend a hand? Or is this actually code you'd rather see completely eliminated (as you didn't answer my question above)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780453375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T05:46:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32858738007","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238","id":1950213600,"node_id":"PR_kwDODP--n85dKpQ_","number":238,"title":"Updates docker file to create test server package","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-10-18T16:47:40Z","updated_at":"2023-10-26T07:09:18Z","closed_at":"2023-10-19T18:19:36Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/pulls/238","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238","diff_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238.diff","patch_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238.patch","merged_at":"2023-10-19T18:19:36Z"},"body":"The update uses..\r\n- liboqs 0.9.0\r\n- latest oqs-provider (main)\r\n- latest nginx 1.25.2\r\n\r\nAlso updates the nginx docker demo to v1.25.2.\r\nNote that with [nginx 1.25.2](http://nginx.org/en/CHANGES), the location of the openssl config file needs to be passed as an env variable. This is reflected in the Dockerfile of the nginx demo.\r\n\r\nThe updated package is already deployed at test.openquantumsafe.org.\r\nA test run with `testrun.sh` passes.\r\nI'll update the server again to a tagged oqs-provider release once available.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1780536865","html_url":"https://github.com/open-quantum-safe/oqs-demos/pull/238#issuecomment-1780536865","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/238","id":1780536865,"node_id":"IC_kwDODP--n85qINYh","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T07:09:17Z","updated_at":"2023-10-26T07:09:17Z","author_association":"MEMBER","body":"> @bhess Should we also update tags in README.md?\r\n\r\nAdded an update in PR #241. Thanks @pi-314159!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1780536865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T07:09:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32859569527","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584","id":1949991089,"node_id":"I_kwDOA-eq3c50OoCx","number":1584,"title":"Improve granularity of copy_from_upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-10-18T15:10:05Z","updated_at":"2023-10-26T07:42:26Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As things currently stand, the `copy_from_upstream` script attempts to integrate updates for _all_ schemes sourced from a given upstream. The update source is given by a git commit SHA for the upstream repo.\r\n\r\nIt would be nice to have the option to override this on a scheme-by-scheme basis so that integrating upstream code doesn't get messy if OQS (deliberately) goes out of sync with an upstream source on some algorithms but not others. For instance, we could specify that the PQClean aarch64 implementations of Dilithium and Kyber should remain at the latest commit before [PQClean updated their implementation to be in sync with the pq-crystals `standard` branches](https://github.com/PQClean/PQClean/pull/511) while still pulling the latest updates to HQC and Sphincs+.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780580867","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584#issuecomment-1780580867","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","id":1780580867,"node_id":"IC_kwDOA-eq3c5qIYID","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T07:42:26Z","updated_at":"2023-10-26T07:42:26Z","author_association":"MEMBER","body":"> @bhess: The \"NOT_READY\" feature has been introduced by [you](https://github.com/open-quantum-safe/liboqs/commit/fc35e09a1491fe3ffaba90999c1767e65a694ac9): Would you think this can be extended (more easily than re-working the `copy_from_upstream` logic)\r\n\r\nThe feature seemed to be introduced even earlier in https://github.com/open-quantum-safe/liboqs/pull/841, my commit merely refactored the script formerly called copy_from_pqclean.py.\r\n\r\nI think a feature to selectively specify which commit/tag to chose per algorithm/architecture would be useful. Another use case will be if we decide to support e.g. both Kyber-R3 and the Kyber \"standard\" branch, which will correspond to different commits in the same repository. If NOT_READY isn't a workaround, perhaps editing the copy_from_upstream logic is more promising.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780580867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T07:42:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32859958937","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/105","id":1960798567,"node_id":"PR_kwDOCrBzOM5duK_E","number":105,"title":"Update to upstream 4df6f97","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-25T08:05:35Z","updated_at":"2023-10-26T07:57:00Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/105","html_url":"https://github.com/open-quantum-safe/boringssl/pull/105","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/105.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/105.patch","merged_at":null},"body":"- Works with liboqs 0.9.0\r\n- This update will not affect current Chromium build instructions (because the git command in current instructions will retrieve commit 1ca41b)\r\n- All interop tests https://github.com/open-quantum-safe/boringssl/pull/103#issuecomment-1616803098 are passed","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1780602603","html_url":"https://github.com/open-quantum-safe/boringssl/pull/105#issuecomment-1780602603","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105","id":1780602603,"node_id":"IC_kwDOCrBzOM5qIdbr","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T07:57:00Z","updated_at":"2023-10-26T07:57:00Z","author_association":"MEMBER","body":"PS: Our policy is for the author to give things a final look-over and merge the PR if an approval is given. In this case, it would be particularly good if you'd do this to see all privileges are properly working for you now, @pi-314159 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1780602603/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T07:57:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32860122296","type":"IssueCommentEvent","actor":{"id":74706004,"login":"pi-314159","display_login":"pi-314159","gravatar_id":"","url":"https://api.github.com/users/pi-314159","avatar_url":"https://avatars.githubusercontent.com/u/74706004?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/events","html_url":"https://github.com/open-quantum-safe/boringssl/pull/105","id":1960798567,"node_id":"PR_kwDOCrBzOM5duK_E","number":105,"title":"Update to upstream 4df6f97","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-25T08:05:35Z","updated_at":"2023-10-26T08:02:51Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/pulls/105","html_url":"https://github.com/open-quantum-safe/boringssl/pull/105","diff_url":"https://github.com/open-quantum-safe/boringssl/pull/105.diff","patch_url":"https://github.com/open-quantum-safe/boringssl/pull/105.patch","merged_at":null},"body":"- Works with liboqs 0.9.0\r\n- This update will not affect current Chromium build instructions (because the git command in current instructions will retrieve commit 1ca41b)\r\n- All interop tests https://github.com/open-quantum-safe/boringssl/pull/103#issuecomment-1616803098 are passed","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1780611288","html_url":"https://github.com/open-quantum-safe/boringssl/pull/105#issuecomment-1780611288","issue_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/105","id":1780611288,"node_id":"IC_kwDOCrBzOM5qIfjY","user":{"login":"pi-314159","id":74706004,"node_id":"MDQ6VXNlcjc0NzA2MDA0","avatar_url":"https://avatars.githubusercontent.com/u/74706004?v=4","gravatar_id":"","url":"https://api.github.com/users/pi-314159","html_url":"https://github.com/pi-314159","followers_url":"https://api.github.com/users/pi-314159/followers","following_url":"https://api.github.com/users/pi-314159/following{/other_user}","gists_url":"https://api.github.com/users/pi-314159/gists{/gist_id}","starred_url":"https://api.github.com/users/pi-314159/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi-314159/subscriptions","organizations_url":"https://api.github.com/users/pi-314159/orgs","repos_url":"https://api.github.com/users/pi-314159/repos","events_url":"https://api.github.com/users/pi-314159/events{/privacy}","received_events_url":"https://api.github.com/users/pi-314159/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T08:02:51Z","updated_at":"2023-10-26T08:02:51Z","author_association":"COLLABORATOR","body":"@baentsch Thanks! Google made some changes to the fuzzer and that's why there are so many changed files 😄 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/comments/1780611288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T08:02:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32860552625","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586","id":1952839416,"node_id":"I_kwDOA-eq3c50Zfb4","number":1586,"title":"copy_from_upstream run mistake (also in 0.9.0 release)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-10-19T18:30:56Z","updated_at":"2023-10-26T08:18:11Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When looking into https://github.com/open-quantum-safe/liboqs/issues/1584 I noticed that \"main\" (and 0.9.0) are not idempotent to a run of `copy_from_upstream` on my machine: See the differences in https://github.com/open-quantum-safe/liboqs/blob/mb-fixcopyfromupstream: Compare for example the documentation of algorithm feature sets for Sphincs.\r\n\r\nWe have [a test protecting against such failures](https://github.com/open-quantum-safe/liboqs/blob/bac716cc91c53529e3fad88e92ff9dfd19c04577/.github/workflows/linux.yml#L21-L36), but this \"silently\" [failed](https://github.com/open-quantum-safe/liboqs/actions/runs/6564959643/job/17832426451) i.e., incorrectly returned OK after reporting a failure. This ought to be investigated I'd gather.\r\n\r\nAlso the [Release process documentation](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) was lacking in this regard (now fixed).\r\n\r\nCould someone else please take a look (maybe first just confirm this finding as I'm not sure my machine is not a bit misconfigured), maybe @praveksharma or @SWilson4 ? If confirmed, we might want to add wording to the release notes of 0.9.0 that the algorithm documentation isn't \"quite right\": At first blush, it seems upstream Sphincs claims support for all OSs while `liboqs` only documents support for Linux&Darwin for optimized Sphincs... Or is this related to the limitations of our shared code in Windows? But why then doesn't `copy_from_upstream` reconcile this?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780634337","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586#issuecomment-1780634337","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","id":1780634337,"node_id":"IC_kwDOA-eq3c5qIlLh","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T08:18:11Z","updated_at":"2023-10-26T08:18:11Z","author_association":"MEMBER","body":"I can also confirm on two instances (MacOS, Fedora Linux) that there are non-committed changes in the docs after running copy_from_upstream.py on main:\r\n\r\n```\r\n$  ! git status | grep modified\r\n\tmodified:   docs/algorithms/kem/classic_mceliece.md\r\n\tmodified:   docs/algorithms/kem/classic_mceliece.yml\r\n\tmodified:   docs/algorithms/sig/falcon.md\r\n\tmodified:   docs/algorithms/sig/sphincs.md\r\n\tmodified:   docs/algorithms/sig/sphincs.yml\r\n$ echo $?\r\n```\r\n\r\nAfter I commit the changes and run copy_from_upstream.py again, it's idempotent. I also don't see why this should be different across environments. @SWilson4 what env do you use? Might there be some python modules missing (requirements.txt) that would skip some steps?\r\n\r\n[CI](https://github.com/open-quantum-safe/liboqs/actions/runs/6564959643/job/17832426451) seems to give a hint to a solution why it fails before running `!git status | grep modified`:\r\n```\r\nfatal: detected dubious ownership in repository at '/__w/liboqs/liboqs'\r\nTo add an exception for this directory, call:\r\n\r\n\tgit config --global --add safe.directory /__w/liboqs/liboqs\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780634337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T08:18:12Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32861242412","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586","id":1952839416,"node_id":"I_kwDOA-eq3c50Zfb4","number":1586,"title":"copy_from_upstream run mistake (also in 0.9.0 release)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-10-19T18:30:56Z","updated_at":"2023-10-26T08:42:19Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When looking into https://github.com/open-quantum-safe/liboqs/issues/1584 I noticed that \"main\" (and 0.9.0) are not idempotent to a run of `copy_from_upstream` on my machine: See the differences in https://github.com/open-quantum-safe/liboqs/blob/mb-fixcopyfromupstream: Compare for example the documentation of algorithm feature sets for Sphincs.\r\n\r\nWe have [a test protecting against such failures](https://github.com/open-quantum-safe/liboqs/blob/bac716cc91c53529e3fad88e92ff9dfd19c04577/.github/workflows/linux.yml#L21-L36), but this \"silently\" [failed](https://github.com/open-quantum-safe/liboqs/actions/runs/6564959643/job/17832426451) i.e., incorrectly returned OK after reporting a failure. This ought to be investigated I'd gather.\r\n\r\nAlso the [Release process documentation](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) was lacking in this regard (now fixed).\r\n\r\nCould someone else please take a look (maybe first just confirm this finding as I'm not sure my machine is not a bit misconfigured), maybe @praveksharma or @SWilson4 ? If confirmed, we might want to add wording to the release notes of 0.9.0 that the algorithm documentation isn't \"quite right\": At first blush, it seems upstream Sphincs claims support for all OSs while `liboqs` only documents support for Linux&Darwin for optimized Sphincs... Or is this related to the limitations of our shared code in Windows? But why then doesn't `copy_from_upstream` reconcile this?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780671688","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586#issuecomment-1780671688","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","id":1780671688,"node_id":"IC_kwDOA-eq3c5qIuTI","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T08:42:19Z","updated_at":"2023-10-26T08:42:19Z","author_association":"MEMBER","body":"> I can also confirm on two instances (MacOS, Fedora Linux) that there are non-committed changes in the docs after running copy_from_upstream.py on main:\r\n> \r\n> ```\r\n> $  ! git status | grep modified\r\n> \tmodified:   docs/algorithms/kem/classic_mceliece.md\r\n> \tmodified:   docs/algorithms/kem/classic_mceliece.yml\r\n> \tmodified:   docs/algorithms/sig/falcon.md\r\n> \tmodified:   docs/algorithms/sig/sphincs.md\r\n> \tmodified:   docs/algorithms/sig/sphincs.yml\r\n> $ echo $?\r\n> 1\r\n> ```\r\n> \r\n> After I commit the changes and run copy_from_upstream.py again, it's idempotent. I also don't see why this should be different across environments. @SWilson4 what env do you use? Might there be some python modules missing (requirements.txt) that would skip some steps?\r\n> \r\n> [CI](https://github.com/open-quantum-safe/liboqs/actions/runs/6564959643/job/17832426451) seems to give a hint to a solution why it fails there before running `!git status | grep modified`:\r\n> \r\n> ```\r\n> fatal: detected dubious ownership in repository at '/__w/liboqs/liboqs'\r\n> To add an exception for this directory, call:\r\n> \r\n> \tgit config --global --add safe.directory /__w/liboqs/liboqs\r\n> ```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1780671688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T08:42:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32870808916","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584","id":1949991089,"node_id":"I_kwDOA-eq3c50OoCx","number":1584,"title":"Improve granularity of copy_from_upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-10-18T15:10:05Z","updated_at":"2023-10-26T14:04:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As things currently stand, the `copy_from_upstream` script attempts to integrate updates for _all_ schemes sourced from a given upstream. The update source is given by a git commit SHA for the upstream repo.\r\n\r\nIt would be nice to have the option to override this on a scheme-by-scheme basis so that integrating upstream code doesn't get messy if OQS (deliberately) goes out of sync with an upstream source on some algorithms but not others. For instance, we could specify that the PQClean aarch64 implementations of Dilithium and Kyber should remain at the latest commit before [PQClean updated their implementation to be in sync with the pq-crystals `standard` branches](https://github.com/PQClean/PQClean/pull/511) while still pulling the latest updates to HQC and Sphincs+.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1781198891","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584#issuecomment-1781198891","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","id":1781198891,"node_id":"IC_kwDOA-eq3c5qKvAr","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T14:04:15Z","updated_at":"2023-10-26T14:04:15Z","author_association":"MEMBER","body":"> The feature seemed to be introduced even earlier in https://github.com/open-quantum-safe/liboqs/pull/841, my commit merely refactored the script formerly called copy_from_pqclean.py.\r\n\r\nYikes. This had been done at a time when we didn't import from different upstreams; hence this feature should not have survived the refactoring. Apologies for not spotting this in the PR review of #883. Mea culpa.\r\n\r\n> editing the copy_from_upstream logic is more promising.\r\n\r\nIt absolutely is (necessary to do that) -- particularly if we'd want to support several different upstream branches for the same algorithm(s). But would we really need to? In my eyes the \"standard\" upstream should be integrated into an entirely different algorithm family using the NIST naming and sit alongside the old R3 code (until that is sunset), no?\r\n\r\nSo what about this proposal: We (probably I :} review the NOT_READY feature and update it to the \"multi-upstream\" world. Goal would be to stop algorithms tagged this way to receive any upstream updates, but remain active. In parallel/separately we could add logic to add&pull the new \"ML\" algs from wherever (thus also closing #1521). \r\n\r\nReasonable @SWilson4 @bhess ? Helping hands still welcome as I'm still \"on the road\". It possibly is simple, but I first need to fully understand the current logic.... Yes, I saw your \"1-2 weeks timeline\" comment somewhere, @bhess, so I don't count on you.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1781198891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T14:04:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32877215353","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1521","id":1841452867,"node_id":"I_kwDOA-eq3c5twldD","number":1521,"title":"Update Kyber and Dilithium to FIPS versions","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/23","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23/labels","id":9830315,"node_id":"MI_kwDOA-eq3c4Alf-r","number":23,"title":"0.10.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":0,"state":"open","created_at":"2023-08-23T17:18:24Z","updated_at":"2023-08-23T17:24:33Z","due_on":null,"closed_at":null},"comments":23,"created_at":"2023-08-08T14:39:08Z","updated_at":"2023-10-26T17:42:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Once the FIPS drafts are released, we'll need to update Kyber and Dilithium based on the tweaks added by NIST.  \r\n\r\nUpstream already has started on this:\r\n- https://github.com/pq-crystals/kyber/tree/standard\r\n- https://github.com/pq-crystals/dilithium/tree/standard","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1781560017","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1521#issuecomment-1781560017","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521","id":1781560017,"node_id":"IC_kwDOA-eq3c5qMHLR","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T17:42:17Z","updated_at":"2023-10-26T17:42:17Z","author_association":"MEMBER","body":"> > What is it that PPCoE tests (@christianpaquin )?\r\n> \r\n> The NCCoE? We test interoperability between implementations provided by consortium members.\r\n\r\n*blush* :-/ At least 60% of letters matching. My question was whether you intend/do test Kyber/Dilithium FIPS versions now or also wait until their are truly final, i.e, whether we should postpone this issue until middle 2024 or add the algs now, e.g., under different names.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1781560017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T17:42:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32880288873","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586","id":1952839416,"node_id":"I_kwDOA-eq3c50Zfb4","number":1586,"title":"copy_from_upstream run mistake (also in 0.9.0 release)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-10-19T18:30:56Z","updated_at":"2023-10-26T19:52:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When looking into https://github.com/open-quantum-safe/liboqs/issues/1584 I noticed that \"main\" (and 0.9.0) are not idempotent to a run of `copy_from_upstream` on my machine: See the differences in https://github.com/open-quantum-safe/liboqs/blob/mb-fixcopyfromupstream: Compare for example the documentation of algorithm feature sets for Sphincs.\r\n\r\nWe have [a test protecting against such failures](https://github.com/open-quantum-safe/liboqs/blob/bac716cc91c53529e3fad88e92ff9dfd19c04577/.github/workflows/linux.yml#L21-L36), but this \"silently\" [failed](https://github.com/open-quantum-safe/liboqs/actions/runs/6564959643/job/17832426451) i.e., incorrectly returned OK after reporting a failure. This ought to be investigated I'd gather.\r\n\r\nAlso the [Release process documentation](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) was lacking in this regard (now fixed).\r\n\r\nCould someone else please take a look (maybe first just confirm this finding as I'm not sure my machine is not a bit misconfigured), maybe @praveksharma or @SWilson4 ? If confirmed, we might want to add wording to the release notes of 0.9.0 that the algorithm documentation isn't \"quite right\": At first blush, it seems upstream Sphincs claims support for all OSs while `liboqs` only documents support for Linux&Darwin for optimized Sphincs... Or is this related to the limitations of our shared code in Windows? But why then doesn't `copy_from_upstream` reconcile this?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1781803899","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586#issuecomment-1781803899","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","id":1781803899,"node_id":"IC_kwDOA-eq3c5qNCt7","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-10-26T19:52:02Z","updated_at":"2023-10-26T19:52:02Z","author_association":"CONTRIBUTOR","body":"It seems that the inconsistency between my \"env\" and that of @baentsch was actually due to my running `copy_from_upstream` with the `-k` switch. When running without `-k`, my results match Michael's. So there was no bizarre env-specific behaviour here, just the bug which will be (hopefully!) fixed in #1589.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1781803899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-26T19:52:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
