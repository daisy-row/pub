{"id":"32713489757","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589","id":1953604897,"node_id":"PR_kwDOA-eq3c5dWJpI","number":1589,"title":"Run copy_from_upstream and test","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-20T06:12:52Z","updated_at":"2023-10-20T07:04:26Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1589","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1589.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1589.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nFixes #1586\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1772196224","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1589#issuecomment-1772196224","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1589","id":1772196224,"node_id":"IC_kwDOA-eq3c5poZGA","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-20T07:04:25Z","updated_at":"2023-10-20T07:04:25Z","author_association":"MEMBER","body":"@SWilson4 @praveksharma @dstebila Please carefully check this: I'm less than certain that the docs have all been generated correctly. The CI test improvement however definitely is needed.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1772196224/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-20T07:04:26Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32723221970","type":"IssueCommentEvent","actor":{"id":5671049,"login":"tranzystorek-io","display_login":"tranzystorek-io","gravatar_id":"","url":"https://api.github.com/users/tranzystorek-io","avatar_url":"https://avatars.githubusercontent.com/u/5671049?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/246","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/246/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/246/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/246/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/246","id":1950393118,"node_id":"PR_kwDODwdmyM5dLQsq","number":246,"title":"fix: adjust liboqs pkgconfig version detection to new scheme","user":{"login":"tranzystorek-io","id":5671049,"node_id":"MDQ6VXNlcjU2NzEwNDk=","avatar_url":"https://avatars.githubusercontent.com/u/5671049?v=4","gravatar_id":"","url":"https://api.github.com/users/tranzystorek-io","html_url":"https://github.com/tranzystorek-io","followers_url":"https://api.github.com/users/tranzystorek-io/followers","following_url":"https://api.github.com/users/tranzystorek-io/following{/other_user}","gists_url":"https://api.github.com/users/tranzystorek-io/gists{/gist_id}","starred_url":"https://api.github.com/users/tranzystorek-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tranzystorek-io/subscriptions","organizations_url":"https://api.github.com/users/tranzystorek-io/orgs","repos_url":"https://api.github.com/users/tranzystorek-io/repos","events_url":"https://api.github.com/users/tranzystorek-io/events{/privacy}","received_events_url":"https://api.github.com/users/tranzystorek-io/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-10-18T18:33:24Z","updated_at":"2023-10-20T13:20:52Z","closed_at":"2023-10-19T08:24:38Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/pulls/246","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/246","diff_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/246.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/246.patch","merged_at":"2023-10-19T08:24:38Z"},"body":"Noticed this part wasn't touched after the versioning update, this works correctly with it.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/246/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/1772730753","html_url":"https://github.com/open-quantum-safe/liboqs-rust/pull/246#issuecomment-1772730753","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/246","id":1772730753,"node_id":"IC_kwDODwdmyM5pqbmB","user":{"login":"tranzystorek-io","id":5671049,"node_id":"MDQ6VXNlcjU2NzEwNDk=","avatar_url":"https://avatars.githubusercontent.com/u/5671049?v=4","gravatar_id":"","url":"https://api.github.com/users/tranzystorek-io","html_url":"https://github.com/tranzystorek-io","followers_url":"https://api.github.com/users/tranzystorek-io/followers","following_url":"https://api.github.com/users/tranzystorek-io/following{/other_user}","gists_url":"https://api.github.com/users/tranzystorek-io/gists{/gist_id}","starred_url":"https://api.github.com/users/tranzystorek-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tranzystorek-io/subscriptions","organizations_url":"https://api.github.com/users/tranzystorek-io/orgs","repos_url":"https://api.github.com/users/tranzystorek-io/repos","events_url":"https://api.github.com/users/tranzystorek-io/events{/privacy}","received_events_url":"https://api.github.com/users/tranzystorek-io/received_events","type":"User","site_admin":false},"created_at":"2023-10-20T13:20:51Z","updated_at":"2023-10-20T13:20:51Z","author_association":"CONTRIBUTOR","body":"Looks like 0.9.1 wasn't released on crates.io, presumably a simple omission?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/1772730753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-20T13:20:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32729374482","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586","id":1952839416,"node_id":"I_kwDOA-eq3c50Zfb4","number":1586,"title":"copy_from_upstream run mistake (also in 0.9.0 release)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-19T18:30:56Z","updated_at":"2023-10-20T17:12:51Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When looking into https://github.com/open-quantum-safe/liboqs/issues/1584 I noticed that \"main\" (and 0.9.0) are not idempotent to a run of `copy_from_upstream` on my machine: See the differences in https://github.com/open-quantum-safe/liboqs/blob/mb-fixcopyfromupstream: Compare for example the documentation of algorithm feature sets for Sphincs.\r\n\r\nWe have [a test protecting against such failures](https://github.com/open-quantum-safe/liboqs/blob/bac716cc91c53529e3fad88e92ff9dfd19c04577/.github/workflows/linux.yml#L21-L36), but this \"silently\" [failed](https://github.com/open-quantum-safe/liboqs/actions/runs/6564959643/job/17832426451) i.e., incorrectly returned OK after reporting a failure. This ought to be investigated I'd gather.\r\n\r\nAlso the [Release process documentation](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) was lacking in this regard (now fixed).\r\n\r\nCould someone else please take a look (maybe first just confirm this finding as I'm not sure my machine is not a bit misconfigured), maybe @praveksharma or @SWilson4 ? If confirmed, we might want to add wording to the release notes of 0.9.0 that the algorithm documentation isn't \"quite right\": At first blush, it seems upstream Sphincs claims support for all OSs while `liboqs` only documents support for Linux&Darwin for optimized Sphincs... Or is this related to the limitations of our shared code in Windows? But why then doesn't `copy_from_upstream` reconcile this?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1773104735","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586#issuecomment-1773104735","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","id":1773104735,"node_id":"IC_kwDOA-eq3c5pr25f","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-10-20T17:12:51Z","updated_at":"2023-10-20T17:12:51Z","author_association":"CONTRIBUTOR","body":"Thanks for catching this, Michael!\r\n\r\n> Could someone else please take a look (maybe first just confirm this finding as I'm not sure my machine is not a bit misconfigured), maybe @praveksharma or @SWilson4 ? If confirmed, we might want to add wording to the release notes of 0.9.0 that the algorithm documentation isn't \"quite right\": At first blush, it seems upstream Sphincs claims support for all OSs while `liboqs` only documents support for Linux&Darwin for optimized Sphincs... Or is this related to the limitations of our shared code in Windows? But why then doesn't `copy_from_upstream` reconcile this?\r\n\r\nI ran `copy_from_upstream` on the same commit and got slightly different results: see here https://github.com/open-quantum-safe/liboqs/commit/45f8db6cc6d0bd1432abe814a65219e07bdbf613. I've also confirmed that my branch is idempotent under `copy_from_upstream`. Not sure why it would be inconsistent across environments. :/\r\n\r\nAs for the Sphincs+ inconsistency with upstream, I believe the documentation is in line with what we want: we [have a patch](https://github.com/open-quantum-safe/liboqs/blob/bac716cc91c53529e3fad88e92ff9dfd19c04577/scripts/copy_from_upstream/patches/pqclean-sphincs.patch) to document the OS restriction.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1773104735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-20T17:12:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32732269737","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586","id":1952839416,"node_id":"I_kwDOA-eq3c50Zfb4","number":1586,"title":"copy_from_upstream run mistake (also in 0.9.0 release)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-19T18:30:56Z","updated_at":"2023-10-20T19:32:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"When looking into https://github.com/open-quantum-safe/liboqs/issues/1584 I noticed that \"main\" (and 0.9.0) are not idempotent to a run of `copy_from_upstream` on my machine: See the differences in https://github.com/open-quantum-safe/liboqs/blob/mb-fixcopyfromupstream: Compare for example the documentation of algorithm feature sets for Sphincs.\r\n\r\nWe have [a test protecting against such failures](https://github.com/open-quantum-safe/liboqs/blob/bac716cc91c53529e3fad88e92ff9dfd19c04577/.github/workflows/linux.yml#L21-L36), but this \"silently\" [failed](https://github.com/open-quantum-safe/liboqs/actions/runs/6564959643/job/17832426451) i.e., incorrectly returned OK after reporting a failure. This ought to be investigated I'd gather.\r\n\r\nAlso the [Release process documentation](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) was lacking in this regard (now fixed).\r\n\r\nCould someone else please take a look (maybe first just confirm this finding as I'm not sure my machine is not a bit misconfigured), maybe @praveksharma or @SWilson4 ? If confirmed, we might want to add wording to the release notes of 0.9.0 that the algorithm documentation isn't \"quite right\": At first blush, it seems upstream Sphincs claims support for all OSs while `liboqs` only documents support for Linux&Darwin for optimized Sphincs... Or is this related to the limitations of our shared code in Windows? But why then doesn't `copy_from_upstream` reconcile this?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1773293625","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586#issuecomment-1773293625","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","id":1773293625,"node_id":"IC_kwDOA-eq3c5pslA5","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-20T19:32:32Z","updated_at":"2023-10-20T19:32:32Z","author_association":"MEMBER","body":"> the documentation is in line with what we want: we [have a patch](https://github.com/open-quantum-safe/liboqs/blob/bac716cc91c53529e3fad88e92ff9dfd19c04577/scripts/copy_from_upstream/patches/pqclean-sphincs.patch) to document the OS restriction.\r\n\r\nAh, yes, something was in the back of my mind: Thanks for the pointer. But then why didn't that get applied by `copy_from_upstream`??\r\n\r\n> My local copy of main is not idempotent under copy_from_upstream.\r\n\r\nVery well, err, not well -- but at least we have a confirmed issue. Just which? #1589 does not appear to apply the sphincs patch (on my machine -- it seems to work on yours). But wait: #1589 now also has a working CI run for `copy_from_upstream` -- and that confirms \"my\" run (not properly applying the sphincs patch). What's going on here? Does `copy_from_upstream` silently discard failing patch applications???\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1773293625/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-20T19:32:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32732965941","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584","id":1949991089,"node_id":"I_kwDOA-eq3c50OoCx","number":1584,"title":"Improve granularity of copy_from_upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-18T15:10:05Z","updated_at":"2023-10-20T20:09:04Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As things currently stand, the `copy_from_upstream` script attempts to integrate updates for _all_ schemes sourced from a given upstream. The update source is given by a git commit SHA for the upstream repo.\r\n\r\nIt would be nice to have the option to override this on a scheme-by-scheme basis so that integrating upstream code doesn't get messy if OQS (deliberately) goes out of sync with an upstream source on some algorithms but not others. For instance, we could specify that the PQClean aarch64 implementations of Dilithium and Kyber should remain at the latest commit before [PQClean updated their implementation to be in sync with the pq-crystals `standard` branches](https://github.com/PQClean/PQClean/pull/511) while still pulling the latest updates to HQC and Sphincs+.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1773333397","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584#issuecomment-1773333397","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","id":1773333397,"node_id":"IC_kwDOA-eq3c5psuuV","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-10-20T20:09:03Z","updated_at":"2023-10-20T20:09:03Z","author_association":"MEMBER","body":"Actually, I think I just \"discovered\" a \"solution\" for this in the code of `copy_from_upstream.py`: Just set the environment variable NOT_READY to families you don't want to copy and they're skipped. Correct @bhess? I know, documenting any feature ([see your commit adding this](https://github.com/open-quantum-safe/liboqs/commit/fc35e09a1491fe3ffaba90999c1767e65a694ac9)) is not great fun -- but not doing it decreases the code's value and causes others to re-invent the wheel (or go ballistic). In any case, not good. In that light, could you please also take a look at #1586, @bhess? Does this ring any bells in your mind? I'm now somewhat demotivated to go through this logic...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1773333397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-10-20T20:09:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
