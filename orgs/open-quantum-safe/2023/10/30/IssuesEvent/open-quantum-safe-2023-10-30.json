{"id":"32937183506","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1586","id":1952839416,"node_id":"I_kwDOA-eq3c50Zfb4","number":1586,"title":"copy_from_upstream run mistake (also in 0.9.0 release)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-10-19T18:30:56Z","updated_at":"2023-10-30T05:32:32Z","closed_at":"2023-10-30T05:32:32Z","author_association":"MEMBER","active_lock_reason":null,"body":"When looking into https://github.com/open-quantum-safe/liboqs/issues/1584 I noticed that \"main\" (and 0.9.0) are not idempotent to a run of `copy_from_upstream` on my machine: See the differences in https://github.com/open-quantum-safe/liboqs/blob/mb-fixcopyfromupstream: Compare for example the documentation of algorithm feature sets for Sphincs.\r\n\r\nWe have [a test protecting against such failures](https://github.com/open-quantum-safe/liboqs/blob/bac716cc91c53529e3fad88e92ff9dfd19c04577/.github/workflows/linux.yml#L21-L36), but this \"silently\" [failed](https://github.com/open-quantum-safe/liboqs/actions/runs/6564959643/job/17832426451) i.e., incorrectly returned OK after reporting a failure. This ought to be investigated I'd gather.\r\n\r\nAlso the [Release process documentation](https://github.com/open-quantum-safe/liboqs/wiki/Release-process) was lacking in this regard (now fixed).\r\n\r\nCould someone else please take a look (maybe first just confirm this finding as I'm not sure my machine is not a bit misconfigured), maybe @praveksharma or @SWilson4 ? If confirmed, we might want to add wording to the release notes of 0.9.0 that the algorithm documentation isn't \"quite right\": At first blush, it seems upstream Sphincs claims support for all OSs while `liboqs` only documents support for Linux&Darwin for optimized Sphincs... Or is this related to the limitations of our shared code in Windows? But why then doesn't `copy_from_upstream` reconcile this?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1586/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-10-30T05:32:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32949909550","type":"IssuesEvent","actor":{"id":974662,"login":"thomwiggers","display_login":"thomwiggers","gravatar_id":"","url":"https://api.github.com/users/thomwiggers","avatar_url":"https://avatars.githubusercontent.com/u/974662?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/190","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/190/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/190/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/190/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/190","id":1607475147,"node_id":"I_kwDODwdmyM5f0B_L","number":190,"title":"Permit unbundling the library","user":{"login":"clausecker","id":328433,"node_id":"MDQ6VXNlcjMyODQzMw==","avatar_url":"https://avatars.githubusercontent.com/u/328433?v=4","gravatar_id":"","url":"https://api.github.com/users/clausecker","html_url":"https://github.com/clausecker","followers_url":"https://api.github.com/users/clausecker/followers","following_url":"https://api.github.com/users/clausecker/following{/other_user}","gists_url":"https://api.github.com/users/clausecker/gists{/gist_id}","starred_url":"https://api.github.com/users/clausecker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clausecker/subscriptions","organizations_url":"https://api.github.com/users/clausecker/orgs","repos_url":"https://api.github.com/users/clausecker/repos","events_url":"https://api.github.com/users/clausecker/events{/privacy}","received_events_url":"https://api.github.com/users/clausecker/received_events","type":"User","site_admin":false},"labels":[{"id":1953447111,"node_id":"MDU6TGFiZWwxOTUzNDQ3MTEx","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-03-02T20:54:58Z","updated_at":"2023-10-30T13:45:59Z","closed_at":"2023-10-30T13:45:59Z","author_association":"NONE","active_lock_reason":null,"body":"I am currently trying to write a FreeBSD port (i.e. distribution package) for the rosenpass project.  In the process of doing that I noticed that it bundles a static copy of liboqs through your crate.  This is unfortunate.  We would strongly prefer if the project instead linked against `liboqs.so` so we can fix potential security issues in a single place.\r\n\r\nWould it be possible for you to permit linking against a shared library instead of building and linking your own static copy of the code?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/190/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-10-30T13:46:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32953983194","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1584","id":1949991089,"node_id":"I_kwDOA-eq3c50OoCx","number":1584,"title":"Improve granularity of copy_from_upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-10-18T15:10:05Z","updated_at":"2023-10-30T15:43:11Z","closed_at":"2023-10-30T15:43:11Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"As things currently stand, the `copy_from_upstream` script attempts to integrate updates for _all_ schemes sourced from a given upstream. The update source is given by a git commit SHA for the upstream repo.\r\n\r\nIt would be nice to have the option to override this on a scheme-by-scheme basis so that integrating upstream code doesn't get messy if OQS (deliberately) goes out of sync with an upstream source on some algorithms but not others. For instance, we could specify that the PQClean aarch64 implementations of Dilithium and Kyber should remain at the latest commit before [PQClean updated their implementation to be in sync with the pq-crystals `standard` branches](https://github.com/PQClean/PQClean/pull/511) while still pulling the latest updates to HQC and Sphincs+.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1584/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-10-30T15:43:12Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32954751109","type":"IssuesEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1596","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1596/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1596/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1596/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1596","id":1968726307,"node_id":"I_kwDOA-eq3c51WGEj","number":1596,"title":"Update HQC AVX2 implementation","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-10-30T16:06:23Z","updated_at":"2023-10-30T16:06:23Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1585 updates HQC to the 2023-04-30 (currently latest) version, but it only includes a \"clean\" portable C implementation. An optimized AVX2 implementation is available from https://pqc-hqc.org, although it has a couple of known issues (see https://github.com/open-quantum-safe/liboqs/issues/995, https://github.com/PQClean/PQClean/issues/482) similar to those of the original implementation. We should patch these issues and pull the AVX2 implementation in.\r\n\r\nMost likely we would want to go the same route as we did for the \"clean\" implementation: merge into PQClean and then run copy_from_upstream.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1596/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-10-30T16:06:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32957331736","type":"IssuesEvent","actor":{"id":6188943,"login":"vsoftco","display_login":"vsoftco","gravatar_id":"","url":"https://api.github.com/users/vsoftco","avatar_url":"https://avatars.githubusercontent.com/u/6188943?"},"repo":{"id":215630242,"name":"open-quantum-safe/liboqs-go","url":"https://api.github.com/repos/open-quantum-safe/liboqs-go"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/events","html_url":"https://github.com/open-quantum-safe/liboqs-go/issues/25","id":1744539786,"node_id":"I_kwDODNpBos5n-5CK","number":25,"title":"Link liboqs statically","user":{"login":"stv0g","id":285829,"node_id":"MDQ6VXNlcjI4NTgyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/285829?v=4","gravatar_id":"","url":"https://api.github.com/users/stv0g","html_url":"https://github.com/stv0g","followers_url":"https://api.github.com/users/stv0g/followers","following_url":"https://api.github.com/users/stv0g/following{/other_user}","gists_url":"https://api.github.com/users/stv0g/gists{/gist_id}","starred_url":"https://api.github.com/users/stv0g/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stv0g/subscriptions","organizations_url":"https://api.github.com/users/stv0g/orgs","repos_url":"https://api.github.com/users/stv0g/repos","events_url":"https://api.github.com/users/stv0g/events{/privacy}","received_events_url":"https://api.github.com/users/stv0g/received_events","type":"User","site_admin":false},"labels":[{"id":1620813322,"node_id":"MDU6TGFiZWwxNjIwODEzMzIy","url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false},"assignees":[{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2023-06-06T20:21:52Z","updated_at":"2023-10-30T17:32:42Z","closed_at":"2023-10-30T17:32:42Z","author_association":"NONE","active_lock_reason":null,"body":"Does liboqs-go support static linking against liboqs?\r\n\r\nI would like to build a statically linked Go executable without external depdendencies..","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-10-30T17:32:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"32959954582","type":"IssuesEvent","actor":{"id":6188943,"login":"vsoftco","display_login":"vsoftco","gravatar_id":"","url":"https://api.github.com/users/vsoftco","avatar_url":"https://avatars.githubusercontent.com/u/6188943?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/events","html_url":"https://github.com/open-quantum-safe/liboqs-python/issues/57","id":1556533746,"node_id":"I_kwDOCa-Cls5cxtHy","number":57,"title":"Question: Worth while automating install?","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":1167238766,"node_id":"MDU6TGFiZWwxMTY3MjM4NzY2","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"},{"id":1167238771,"node_id":"MDU6TGFiZWwxMTY3MjM4Nzcx","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":"This will not be worked on"}],"state":"closed","locked":false,"assignee":{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false},"assignees":[{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2023-01-25T12:04:59Z","updated_at":"2023-10-30T19:15:49Z","closed_at":"2023-10-30T19:15:49Z","author_association":"MEMBER","active_lock_reason":null,"body":"Triggered by https://github.com/open-quantum-safe/liboqs/pull/1367 this is to ask whether it might be worth while extending `setup.py` along the lines shown e.g., [here](https://github.com/pybind/cmake_example/blob/master/setup.py) to build `liboqs` automatically when running the install (e.g., after making `liboqs` a git submodule of `liboqs-python`)? Have you already considered this once, @vsoftco ?\r\nRight now, running `python3 setup.py install` runs successfully even if liboqs has not been built (and/or is not on `LD_LIBRARY_PATH`) -- \"just\" the subsequent commands then don't work: At least confused me somewhat -- but then again, I'm no serious python user...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/57/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-10-30T19:15:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
