{"id":"33098226883","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1601","id":1977451942,"node_id":"PR_kwDOA-eq3c5emgy6","number":1601,"title":"fix kat_kem linkage to make HQC PR pass CI","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-11-04T18:06:36Z","updated_at":"2023-11-05T07:13:01Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1601","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1601","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1601.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1601.patch","merged_at":null},"body":"This fixes the [\"strange MacOS\" CI problem](https://github.com/open-quantum-safe/liboqs/pull/1585#issuecomment-1792422996): Conceptually it isn't quite unlogical that the object file of \"kem.c\" should be made available to the link command of `kat_kem` (even though it should be part of the library). Let's see what CI says about the other platforms now....\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793658382","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1601#issuecomment-1793658382","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601","id":1793658382,"node_id":"IC_kwDOA-eq3c5q6Q4O","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-05T07:13:01Z","updated_at":"2023-11-05T07:13:01Z","author_association":"MEMBER","body":"If we'd want to keep `armhf` support (???) feel free to omit the last commit, but merge https://github.com/open-quantum-safe/ci-containers/pull/68 before.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793658382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-05T07:13:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33099579352","type":"IssueCommentEvent","actor":{"id":1159844,"login":"kriskwiatkowski","display_login":"kriskwiatkowski","gravatar_id":"","url":"https://api.github.com/users/kriskwiatkowski","avatar_url":"https://avatars.githubusercontent.com/u/1159844?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1561","id":1914046827,"node_id":"I_kwDOA-eq3c5yFglr","number":1561,"title":"Falcon-1024 KATs differ from upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"assignees":[{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/22","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/22","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/22/labels","id":9619870,"node_id":"MI_kwDOA-eq3c4Aksme","number":22,"title":"0.9.1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":2,"state":"open","created_at":"2023-07-05T13:41:01Z","updated_at":"2023-10-04T06:10:54Z","due_on":null,"closed_at":null},"comments":8,"created_at":"2023-09-26T18:14:03Z","updated_at":"2023-11-05T10:37:39Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"From #1560:\r\n\r\n> our implementation of Falcon-1024 differs from the upstream on a single KAT, number 82. I put together a demonstration here: https://github.com/SWilson4/falcon-diff\r\n\r\n> This seems to be explained by the signature buffer size used for the KATs: our implementation uses the signature size of 1280 bytes while the upstream code passes a larger buffer of 1330 bytes (even though the signature size upstream is still defined to be 1280 bytes). I'm not sure yet why this is done, but redefining the signature size to be 1330 in liboqs does make all 100 KATs pass.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793699044","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1561#issuecomment-1793699044","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561","id":1793699044,"node_id":"IC_kwDOA-eq3c5q6azk","user":{"login":"kriskwiatkowski","id":1159844,"node_id":"MDQ6VXNlcjExNTk4NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1159844?v=4","gravatar_id":"","url":"https://api.github.com/users/kriskwiatkowski","html_url":"https://github.com/kriskwiatkowski","followers_url":"https://api.github.com/users/kriskwiatkowski/followers","following_url":"https://api.github.com/users/kriskwiatkowski/following{/other_user}","gists_url":"https://api.github.com/users/kriskwiatkowski/gists{/gist_id}","starred_url":"https://api.github.com/users/kriskwiatkowski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kriskwiatkowski/subscriptions","organizations_url":"https://api.github.com/users/kriskwiatkowski/orgs","repos_url":"https://api.github.com/users/kriskwiatkowski/repos","events_url":"https://api.github.com/users/kriskwiatkowski/events{/privacy}","received_events_url":"https://api.github.com/users/kriskwiatkowski/received_events","type":"User","site_admin":false},"created_at":"2023-11-05T10:37:39Z","updated_at":"2023-11-05T10:37:39Z","author_association":"NONE","body":"Hi @ounsworth asked for opinion on that, so there it is.\r\n \r\nI would like to suggest 4th option. So, Falcon has three signature formats: \r\n\r\n* \"Compressed format\": this is the one which was used in the first\r\n  PQC submission of Falcon it has a variable size. The macro\r\n  FALCON_SIG_COMPRESSED_MAXSIZE() returns the theoretical maximum\r\n  size that you could get. In practice you'll get something quite\r\n  shorter.\r\n\r\n* \"Padded format\": it is the compressed format + some padding to get\r\n  to a fixed size, and the signature generator retries if the\r\n  obtained compressed signature does not fit. The output size\r\n  is guaranteed, but sometimes at the cost of doing the signing\r\n  twice. FALCON_SIG_PADDED_SIZE() returns that guaranteed size.\r\n\r\n* \"Constant-time format\": it is an uncompressed format, fixed size\r\n  with macro FALCON_SIG_CT_SIZE() providing the signature size.\r\n\r\nI think OQS uses \"Compressed format\", as that's the only format that has \r\nvariable size signatures. I would like to suggest OQS uses \"Padded format\".\r\n\r\nOne can thing about \"variable size\" signatures in Falcon as form of optimisation.\r\nIt is interesting optimisation, but as any optimisation, may not be suitable\r\nfor all use cases. From my experience, the padded format makes implementation\r\neasier. That's what we do in PQShield's implementation.\r\n\r\nComparing fixed size vs variable size signatures - for Falcon 512 it is always 688 \r\nbytes (1328 for Falcon-1024). For variable size signatures - here below I've statistics\r\nfor running singing on 100K signatures, the median is 614 bytes, which means that on \r\naverage signature is 74 bytes bigger (sorry, don't have those numbers for 1024, but \r\ncan do further checks if that's interesting).\r\n\r\n```\r\n| Signature size | Number of signatures |\r\n|----------------|----------------------|\r\n|            604 |                    1 |\r\n|            605 |                    1 |\r\n|            606 |                   18 |\r\n|            607 |                   79 |\r\n|            608 |                  351 |\r\n|            609 |                 1208 |\r\n|            610 |                 3326 |\r\n|            611 |                 7011 |\r\n|            612 |                12020 |\r\n|            613 |                16594 |\r\n|            614 |                17991 |\r\n|            615 |                16548 |\r\n|            616 |                12001 |\r\n|            617 |                 7217 |\r\n|            618 |                 3471 |\r\n|            619 |                 1458 |\r\n|            620 |                  509 |\r\n|            621 |                  162 |\r\n|            622 |                   29 |\r\n|            623 |                    4 |\r\n|            624 |                    1 |\r\n...\r\n```\r\n\r\nThe switch to padded format requires code changes and re-generation\r\nof KAT vectors. But I think that solution allows to resolve your problem in\r\na clean way. \r\n\r\nLet me know if that's interesting and I can provide a help to do it.\r\n\r\nOtherwise, I would just go with option 3 proposed by @SWilson4 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793699044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-05T10:37:40Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33100664224","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1561","id":1914046827,"node_id":"I_kwDOA-eq3c5yFglr","number":1561,"title":"Falcon-1024 KATs differ from upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"assignees":[{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/22","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/22","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/22/labels","id":9619870,"node_id":"MI_kwDOA-eq3c4Aksme","number":22,"title":"0.9.1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":2,"state":"open","created_at":"2023-07-05T13:41:01Z","updated_at":"2023-10-04T06:10:54Z","due_on":null,"closed_at":null},"comments":9,"created_at":"2023-09-26T18:14:03Z","updated_at":"2023-11-05T12:54:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"From #1560:\r\n\r\n> our implementation of Falcon-1024 differs from the upstream on a single KAT, number 82. I put together a demonstration here: https://github.com/SWilson4/falcon-diff\r\n\r\n> This seems to be explained by the signature buffer size used for the KATs: our implementation uses the signature size of 1280 bytes while the upstream code passes a larger buffer of 1330 bytes (even though the signature size upstream is still defined to be 1280 bytes). I'm not sure yet why this is done, but redefining the signature size to be 1330 in liboqs does make all 100 KATs pass.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793729431","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1561#issuecomment-1793729431","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561","id":1793729431,"node_id":"IC_kwDOA-eq3c5q6iOX","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-05T12:54:54Z","updated_at":"2023-11-05T12:54:54Z","author_association":"MEMBER","body":"Thanks for explanations, tests and measurements, @kriskwiatkowski ! \r\n\r\n> The switch to padded format requires code changes and re-generation of KAT vectors\r\n\r\nIt seems nearly all options require a change of KATs -- and thus a change breaking interop with \"previous\" code.\r\n\r\nNow the question to people doing an interop hackathon: Is there any consensus (maybe a \"preferred\" spec draft) answering this? What's the majority of implementations doing? Otherwise, thanks for supporting option 3 :)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793729431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-05T12:54:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33101823180","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1577","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1577/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1577/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1577/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1577","id":1939284387,"node_id":"PR_kwDOA-eq3c5cmKli","number":1577,"title":"Add support for loongarch64","user":{"login":"fangyaling","id":32088341,"node_id":"MDQ6VXNlcjMyMDg4MzQx","avatar_url":"https://avatars.githubusercontent.com/u/32088341?v=4","gravatar_id":"","url":"https://api.github.com/users/fangyaling","html_url":"https://github.com/fangyaling","followers_url":"https://api.github.com/users/fangyaling/followers","following_url":"https://api.github.com/users/fangyaling/following{/other_user}","gists_url":"https://api.github.com/users/fangyaling/gists{/gist_id}","starred_url":"https://api.github.com/users/fangyaling/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fangyaling/subscriptions","organizations_url":"https://api.github.com/users/fangyaling/orgs","repos_url":"https://api.github.com/users/fangyaling/repos","events_url":"https://api.github.com/users/fangyaling/events{/privacy}","received_events_url":"https://api.github.com/users/fangyaling/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-12T06:39:14Z","updated_at":"2023-11-05T15:08:20Z","closed_at":"2023-11-05T15:08:20Z","author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1577","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1577","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1577.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1577.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1577/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1577/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793763489","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1577#issuecomment-1793763489","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1577","id":1793763489,"node_id":"IC_kwDOA-eq3c5q6qih","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-05T15:08:20Z","updated_at":"2023-11-05T15:08:20Z","author_association":"MEMBER","body":"Closing due to lack of feedback.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793763489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-05T15:08:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33101834667","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1448","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1448/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1448/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1448/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1448","id":1692921160,"node_id":"PR_kwDOA-eq3c5PnOmM","number":1448,"title":"src/kem/kyber/.../*.S, src/sig/dilithium/.../*.S: Return using `ret'","user":{"login":"distorted-mdw","id":10420519,"node_id":"MDQ6VXNlcjEwNDIwNTE5","avatar_url":"https://avatars.githubusercontent.com/u/10420519?v=4","gravatar_id":"","url":"https://api.github.com/users/distorted-mdw","html_url":"https://github.com/distorted-mdw","followers_url":"https://api.github.com/users/distorted-mdw/followers","following_url":"https://api.github.com/users/distorted-mdw/following{/other_user}","gists_url":"https://api.github.com/users/distorted-mdw/gists{/gist_id}","starred_url":"https://api.github.com/users/distorted-mdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/distorted-mdw/subscriptions","organizations_url":"https://api.github.com/users/distorted-mdw/orgs","repos_url":"https://api.github.com/users/distorted-mdw/repos","events_url":"https://api.github.com/users/distorted-mdw/events{/privacy}","received_events_url":"https://api.github.com/users/distorted-mdw/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-05-02T18:42:57Z","updated_at":"2023-11-05T15:09:35Z","closed_at":"2023-11-05T15:09:34Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1448","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1448","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1448.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1448.patch","merged_at":null},"body":"Partly, `lr` isn't a register alias under older versions of GNU `as`. But, mostly, `br` doesn't mean the same thing to the branch predictor, so it will cause unnecessary misprediction stalls.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1448/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1448/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793763838","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1448#issuecomment-1793763838","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1448","id":1793763838,"node_id":"IC_kwDOA-eq3c5q6qn-","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-05T15:09:34Z","updated_at":"2023-11-05T15:09:34Z","author_association":"MEMBER","body":"Closing due to lack of feedback & stale-ness.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793763838/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-05T15:09:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33101874959","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591","id":1960549030,"node_id":"I_kwDOA-eq3c5025qm","number":1591,"title":"Falcon variable length signatures ","user":{"login":"olivamadrigal","id":3107478,"node_id":"MDQ6VXNlcjMxMDc0Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/3107478?v=4","gravatar_id":"","url":"https://api.github.com/users/olivamadrigal","html_url":"https://github.com/olivamadrigal","followers_url":"https://api.github.com/users/olivamadrigal/followers","following_url":"https://api.github.com/users/olivamadrigal/following{/other_user}","gists_url":"https://api.github.com/users/olivamadrigal/gists{/gist_id}","starred_url":"https://api.github.com/users/olivamadrigal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olivamadrigal/subscriptions","organizations_url":"https://api.github.com/users/olivamadrigal/orgs","repos_url":"https://api.github.com/users/olivamadrigal/repos","events_url":"https://api.github.com/users/olivamadrigal/events{/privacy}","received_events_url":"https://api.github.com/users/olivamadrigal/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-10-25T05:08:29Z","updated_at":"2023-11-05T15:14:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nBoth Falcon-512 and Falcon-1024 variants return a variable length signature. This is observed in the **test_sig** correctness test by\r\nprinting the output variable **signature_len**  after the sign() function is called:  https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c. The test will pass because **signature_len** is an output computed internally by the sign() function specifying the length of the generated signature returned and the same length signature is verified by the verify() function.  **signature_len** is given as input to verify().\r\n\r\nsign() and verify() should be updated to fixed length signatures.\r\n\r\nrc = OQS_SIG_sign(sig, _signature_, **&signature_len**, message, message_len, secret_key);\r\n\r\nrc = OQS_SIG_verify(sig, message, message_len, _signature_, **signature_len**, public_key);\r\n\r\nfor [pqclean_falcon-512_clean](https://github.com/open-quantum-safe/liboqs/tree/main/src/sig/falcon/pqclean_falcon-512_clean), internally that would be: \r\n**PQCLEAN_FALCON512_CLEAN_comp_encode()**\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/codec.c\r\n\r\ncalled by:\r\nstatic int do_sign(uint8_t *nonce, uint8_t *sigbuf, size_t *sigbuflen, const uint8_t *m, size_t mlen, const uint8_t *sk) ()\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\nwhich is called by:\r\nPQCLEAN_FALCON512_CLEAN_crypto_sign_signature() \r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Edit: https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c\r\n2. Print **sig->length_signature** after line 61, the allocated buffer length according to constants defined in https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/sig_falcon.h\r\n3. Print **signature_len** after line 95\r\n4. compile and test both variants:\r\n./test_sig Falcon-512\r\n./test_sig Falcon-1024\r\n\r\n**Expected behavior**\r\n./test_sig Falcon-512\r\nsig->length_signature = 666\r\nsignature_len = 654\r\n\r\n./test_sig Falcon-1024\r\nsig->length_signature = 1280\r\nsignature_len = 1277\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. Linux]\r\n - OpenSSL version [1.1.1.t]\r\n - Compiler version used [gcc]\r\n - Build variables used [e.g., \"-DOQS_DIST_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DOQS_OPENSSL=OFF -DRUN_RESULT__TRYRUN_OUTPUT=stdout ..\" ]\r\n - liboqs version [0.8.0 and latest 0.9.0]\r\n\r\n**Additional context**\r\ncross-compiled for aarch64.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793765054","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591#issuecomment-1793765054","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","id":1793765054,"node_id":"IC_kwDOA-eq3c5q6q6-","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-05T15:14:15Z","updated_at":"2023-11-05T15:14:15Z","author_association":"MEMBER","body":"> So I guess it would be a non-trivial amount of work to bring the PADDED and CT falcon formats into liboqs\r\n\r\nCross-referencing to https://github.com/open-quantum-safe/liboqs/issues/1561#issuecomment-1793699044\r\n\r\n> do recall reading/hearing somewhere (yes citation needed, but sadly I don't have one :-() that the \"final\" version of Falcon will be fixed length\r\n\r\nA reference would be good. @dstebila Are you aware of something? Otherwise it seems, Falcon will go the same way as Kyber: Not updateable due to differences between authors and NIST (competition).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793765054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-05T15:14:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33101931281","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1560","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1560/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1560/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1560/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1560","id":1913861036,"node_id":"PR_kwDOA-eq3c5bQAmr","number":1560,"title":"Test against all 100 KAT values","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-09-26T16:13:48Z","updated_at":"2023-11-05T15:20:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1560","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1560","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1560.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1560.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nAdd functionality to test against all 100 NIST KAT values.\r\n\r\n- [x] Extend the `kat_kem` and `kat_sig` programs to generate all 100 KAT values\r\n- [x] Collect SHA256 hashes for the extended KAT values\r\n- [x] Create a Python script analogous to `test_nistkat.py` to run all 100 tests\r\n- [ ] Integrate the tests into a CI workflow\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\nFixes #1418 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1560/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1560/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793766597","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1560#issuecomment-1793766597","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1560","id":1793766597,"node_id":"IC_kwDOA-eq3c5q6rTF","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-05T15:20:28Z","updated_at":"2023-11-05T15:20:28Z","author_association":"MEMBER","body":"> redefining the signature size to be 1330 in liboqs does make all 100 KATs pass.\r\n\r\nThis also speaks for your option 3 in https://github.com/open-quantum-safe/liboqs/issues/1561#issuecomment-1791559434. Yes, @dstebila this may be a deviation from the \"sig size\" number given in the Falcon spec, but a) that number seems to be an \"arbitrary choice\" and b) aren't KATs there to \"tie down\" any spec ambiguities?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793766597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-05T15:20:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33104669182","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591","id":1960549030,"node_id":"I_kwDOA-eq3c5025qm","number":1591,"title":"Falcon variable length signatures ","user":{"login":"olivamadrigal","id":3107478,"node_id":"MDQ6VXNlcjMxMDc0Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/3107478?v=4","gravatar_id":"","url":"https://api.github.com/users/olivamadrigal","html_url":"https://github.com/olivamadrigal","followers_url":"https://api.github.com/users/olivamadrigal/followers","following_url":"https://api.github.com/users/olivamadrigal/following{/other_user}","gists_url":"https://api.github.com/users/olivamadrigal/gists{/gist_id}","starred_url":"https://api.github.com/users/olivamadrigal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olivamadrigal/subscriptions","organizations_url":"https://api.github.com/users/olivamadrigal/orgs","repos_url":"https://api.github.com/users/olivamadrigal/repos","events_url":"https://api.github.com/users/olivamadrigal/events{/privacy}","received_events_url":"https://api.github.com/users/olivamadrigal/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-10-25T05:08:29Z","updated_at":"2023-11-05T20:57:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nBoth Falcon-512 and Falcon-1024 variants return a variable length signature. This is observed in the **test_sig** correctness test by\r\nprinting the output variable **signature_len**  after the sign() function is called:  https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c. The test will pass because **signature_len** is an output computed internally by the sign() function specifying the length of the generated signature returned and the same length signature is verified by the verify() function.  **signature_len** is given as input to verify().\r\n\r\nsign() and verify() should be updated to fixed length signatures.\r\n\r\nrc = OQS_SIG_sign(sig, _signature_, **&signature_len**, message, message_len, secret_key);\r\n\r\nrc = OQS_SIG_verify(sig, message, message_len, _signature_, **signature_len**, public_key);\r\n\r\nfor [pqclean_falcon-512_clean](https://github.com/open-quantum-safe/liboqs/tree/main/src/sig/falcon/pqclean_falcon-512_clean), internally that would be: \r\n**PQCLEAN_FALCON512_CLEAN_comp_encode()**\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/codec.c\r\n\r\ncalled by:\r\nstatic int do_sign(uint8_t *nonce, uint8_t *sigbuf, size_t *sigbuflen, const uint8_t *m, size_t mlen, const uint8_t *sk) ()\r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\nwhich is called by:\r\nPQCLEAN_FALCON512_CLEAN_crypto_sign_signature() \r\nin https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/pqclean_falcon-512_clean/pqclean.c\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Edit: https://github.com/open-quantum-safe/liboqs/blob/main/tests/test_sig.c\r\n2. Print **sig->length_signature** after line 61, the allocated buffer length according to constants defined in https://github.com/open-quantum-safe/liboqs/blob/main/src/sig/falcon/sig_falcon.h\r\n3. Print **signature_len** after line 95\r\n4. compile and test both variants:\r\n./test_sig Falcon-512\r\n./test_sig Falcon-1024\r\n\r\n**Expected behavior**\r\n./test_sig Falcon-512\r\nsig->length_signature = 666\r\nsignature_len = 654\r\n\r\n./test_sig Falcon-1024\r\nsig->length_signature = 1280\r\nsignature_len = 1277\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. Linux]\r\n - OpenSSL version [1.1.1.t]\r\n - Compiler version used [gcc]\r\n - Build variables used [e.g., \"-DOQS_DIST_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DOQS_OPENSSL=OFF -DRUN_RESULT__TRYRUN_OUTPUT=stdout ..\" ]\r\n - liboqs version [0.8.0 and latest 0.9.0]\r\n\r\n**Additional context**\r\ncross-compiled for aarch64.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793843654","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1591#issuecomment-1793843654","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1591","id":1793843654,"node_id":"IC_kwDOA-eq3c5q6-HG","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-11-05T20:57:23Z","updated_at":"2023-11-05T20:57:23Z","author_association":"MEMBER","body":"> > do recall reading/hearing somewhere (yes citation needed, but sadly I don't have one :-() that the \"final\" version of Falcon will be fixed length\r\n> \r\n> A reference would be good. @dstebila Are you aware of something? Otherwise it seems, Falcon will go the same way as Kyber: Not updateable due to differences between authors and NIST (competition).\r\n\r\nI don't know off the top of my head what the intentions are with respect to the NIST version of Falcon.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793843654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-05T20:57:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33104707741","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1601","id":1977451942,"node_id":"PR_kwDOA-eq3c5emgy6","number":1601,"title":"fix kat_kem linkage to make HQC PR pass CI","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-11-04T18:06:36Z","updated_at":"2023-11-05T21:02:26Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1601","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1601","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1601.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1601.patch","merged_at":null},"body":"This fixes the [\"strange MacOS\" CI problem](https://github.com/open-quantum-safe/liboqs/pull/1585#issuecomment-1792422996): Conceptually it isn't quite unlogical that the object file of \"kem.c\" should be made available to the link command of `kat_kem` (even though it should be part of the library). Let's see what CI says about the other platforms now....\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793844821","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1601#issuecomment-1793844821","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1601","id":1793844821,"node_id":"IC_kwDOA-eq3c5q6-ZV","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-11-05T21:02:26Z","updated_at":"2023-11-05T21:02:26Z","author_association":"MEMBER","body":"> If we'd want to keep `armhf` support (???) feel free to omit the last commit, but merge [open-quantum-safe/ci-containers#68](https://github.com/open-quantum-safe/ci-containers/pull/68) before.\r\n\r\nSome Raspberry Pis are armhf, if I'm not mistaken, so it's probably still somewhat desirable as a target.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1793844821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-05T21:02:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
