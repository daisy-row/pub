{"id":"33032546559","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1549","id":1891002354,"node_id":"PR_kwDOA-eq3c5aDJ8h","number":1549,"title":"Call Keccak_(X4_)Dispatch with pthread_once","user":{"login":"zxjtan","id":32562011,"node_id":"MDQ6VXNlcjMyNTYyMDEx","avatar_url":"https://avatars.githubusercontent.com/u/32562011?v=4","gravatar_id":"","url":"https://api.github.com/users/zxjtan","html_url":"https://github.com/zxjtan","followers_url":"https://api.github.com/users/zxjtan/followers","following_url":"https://api.github.com/users/zxjtan/following{/other_user}","gists_url":"https://api.github.com/users/zxjtan/gists{/gist_id}","starred_url":"https://api.github.com/users/zxjtan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxjtan/subscriptions","organizations_url":"https://api.github.com/users/zxjtan/orgs","repos_url":"https://api.github.com/users/zxjtan/repos","events_url":"https://api.github.com/users/zxjtan/events{/privacy}","received_events_url":"https://api.github.com/users/zxjtan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2023-09-11T18:03:27Z","updated_at":"2023-11-02T05:54:49Z","closed_at":"2023-11-01T09:09:09Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1549","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1549","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1549.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1549.patch","merged_at":"2023-11-01T09:09:09Z"},"body":"Fixes #1548.\r\n\r\nCall Keccak_(X4_)Dispatch using pthread_once to ensure setting of global function pointers is atomic and done only once.\r\n\r\n* [x] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  NO\r\n* [x] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? NO\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790113669","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1549#issuecomment-1790113669","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549","id":1790113669,"node_id":"IC_kwDOA-eq3c5qsveF","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T05:54:48Z","updated_at":"2023-11-02T05:54:48Z","author_association":"MEMBER","body":"> The `sed` in [this line](https://github.com/open-quantum-safe/oqs-demos/blob/a6f60e5fc1c28f90a14e6780e40f94d1db38d229/quic/Dockerfile-server#L27) might have something to do with it?\r\n\r\nI don't think so: This doesn't change (presence of) `-lpthread` but just adds `liboqs`. HOWEVER, looking further into the build log, [this line](https://app.circleci.com/pipelines/github/open-quantum-safe/oqs-demos/1046/workflows/e474db0c-43e2-4628-b634-23b9f3b5d95a/jobs/5979?invite=true#step-104-9581_85) is key, I'd gather: \r\n\r\n> ./config --prefix=/opt/oqs-openssl-quic/.openssl no-shared no-threads \r\n\r\nThis configures the OpenSSL installation within `quic-nginx` to be built without pthreads. Then, in turn, the open symbols in `liboqs` cannot resolve as `liboqs` is (needed to be) linked into `openssl111`.\r\n\r\nI see two ways out of this:\r\n1) Upgrade the nginx-quic demo to use OpenSSL3 (as per https://github.com/open-quantum-safe/oqs-demos/issues/182)\r\n2) Disable pthreads usage in the `liboqs` build for this demo\r\n\r\nFor 1) I am out of my depth (having to ask the original contributor @igorbarshteyn for help/advice); 2) would require a `cmake` variable in `liboqs` to disable the use of pthreads.\r\n\r\nAny other options? We could of course also completely discontinue support of the QUIC demo as it is based on unsupported software (OpenSSL111). The more I think about this, the more I like it. Several people have voiced willingness to help on https://github.com/open-quantum-safe/oqs-demos/issues/182 but nothing has been forthcoming. And OpenSSL111 by now is EOL. Thus I think we should sunset this PQ-OpenSSL1-QUIC integration.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790113669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T05:54:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33032589853","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/182","id":1599645010,"node_id":"I_kwDODP--n85fWKVS","number":182,"title":"replace oqs-openssl111","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":1643196497,"node_id":"MDU6TGFiZWwxNjQzMTk2NDk3","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Asking for support from non-core team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-02-25T10:10:37Z","updated_at":"2023-11-02T05:57:37Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"With https://github.com/openssl/openssl/pull/19312 merged, oqs-provider together with OpenSSL3 (master) now deliver the same level of functionality as oqs-openssl111. \r\nThis issue is to propose replacing oqs-openssl111 with openssl3+oqs-provider where possible in the demos.\r\n\r\nApplicable integrations (tick if done) -- suggested order of importance\r\n- [x] openssl3\r\n- [x] OpenVPN\r\n- [x] curl\r\n- [x] nginx\r\n- [x] httpd\r\n- [x] epiphany\r\n- [ ] envoy\r\n- [ ] quic\r\n- [ ] mosquitto\r\n- [x] ngtcp2\r\n- [ ] unbound\r\n~- [ ] haproxy~\r\n\r\nNot applicable: Wireshark, Chromium, openssh, openlitespeed\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1790115747","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/182#issuecomment-1790115747","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182","id":1790115747,"node_id":"IC_kwDODP--n85qsv-j","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T05:57:37Z","updated_at":"2023-11-02T05:57:37Z","author_association":"MEMBER","body":"OpenSSL111 has gone end of life. The demos not yet moved off OpenSSL111 should be sunset, too. Until someone finds time to do the upgrade of `envoy`, `quic` and `mosquitto` I'd suggest to drop them from the list of supported integrations (and of CI), similar to `haproxy` that also has nobody interested in supporting it any more.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1790115747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T05:57:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33034403423","type":"IssueCommentEvent","actor":{"id":47549,"login":"ueno","display_login":"ueno","gravatar_id":"","url":"https://api.github.com/users/ueno","avatar_url":"https://avatars.githubusercontent.com/u/47549?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1599","id":1971866457,"node_id":"I_kwDOA-eq3c51iEtZ","number":1599,"title":"Make low-level crypto algorithms implementation switchable","user":{"login":"ueno","id":47549,"node_id":"MDQ6VXNlcjQ3NTQ5","avatar_url":"https://avatars.githubusercontent.com/u/47549?v=4","gravatar_id":"","url":"https://api.github.com/users/ueno","html_url":"https://github.com/ueno","followers_url":"https://api.github.com/users/ueno/followers","following_url":"https://api.github.com/users/ueno/following{/other_user}","gists_url":"https://api.github.com/users/ueno/gists{/gist_id}","starred_url":"https://api.github.com/users/ueno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ueno/subscriptions","organizations_url":"https://api.github.com/users/ueno/orgs","repos_url":"https://api.github.com/users/ueno/repos","events_url":"https://api.github.com/users/ueno/events{/privacy}","received_events_url":"https://api.github.com/users/ueno/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-11-01T07:40:45Z","updated_at":"2023-11-02T07:37:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently liboqs uses OpenSSL as the default backend for low-level support algorithms, such as AES and SHA3 if the `OQS_USE_OPENSSL` build flag is `ON`; otherwise it will use the bundled implementation of those algorithms. While integrating liboqs in GnuTLS, we found neither of them optimal: it is not desirable to bring in OpenSSL as a dependency[1], while we also don't want to have the same algorithms implemented in multiple places. Therefore I would suggest providing a way to make those algorithm implementation pluggable at either compile time or runtime.\r\n\r\nMore concretely, what I have in mind is something along the following lines:\r\n\r\n* liboqs could provide a build option `OQS_COMMON_CRYPTO`, which takes a combo value, either `OPENSSL`, `DEFAULT`, or `NONE`. `OQS_COMMON_CRYPTO=OPENSSL` is the same as what `OQS_USE_OPENSSL=ON` currently does, `DEFAULT` is equivalent to `OQS_USE_OPENSSL=OFF`, and `NONE` means only a stub implementation (all functions return error) is compiled in\r\n* Consumer applications (such as oqs-provider) could register implementation of those algorithms in their favorite libraries at runtime, maybe through a new API, say `OQS_AES_register_implementation`, `OQS_SHA3_register_implementation`, etc.\r\n* To make the previous step easier, maybe liboqs could provide the default implementation as a static helper library (e.g., `liboqs_openssl.a`, `liboqs_default.a`)\r\n\r\nThis is similar to the approach taken by tpm2-tss[2].\r\n\r\n1. https://gitlab.com/gnutls/gnutls/-/merge_requests/1786#note_1611785601\r\n2. https://github.com/tpm2-software/tpm2-tss/pull/2365","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790216635","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1599#issuecomment-1790216635","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599","id":1790216635,"node_id":"IC_kwDOA-eq3c5qtIm7","user":{"login":"ueno","id":47549,"node_id":"MDQ6VXNlcjQ3NTQ5","avatar_url":"https://avatars.githubusercontent.com/u/47549?v=4","gravatar_id":"","url":"https://api.github.com/users/ueno","html_url":"https://github.com/ueno","followers_url":"https://api.github.com/users/ueno/followers","following_url":"https://api.github.com/users/ueno/following{/other_user}","gists_url":"https://api.github.com/users/ueno/gists{/gist_id}","starred_url":"https://api.github.com/users/ueno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ueno/subscriptions","organizations_url":"https://api.github.com/users/ueno/orgs","repos_url":"https://api.github.com/users/ueno/repos","events_url":"https://api.github.com/users/ueno/events{/privacy}","received_events_url":"https://api.github.com/users/ueno/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T07:37:31Z","updated_at":"2023-11-02T07:37:31Z","author_association":"NONE","body":"Thanks for the prompt response!\r\n\r\n> I wonder though, to which level of algorithm detail this needs to go: Is a distinction AES/SHA2/SHA3/RAND sufficient? Or should there be \"redirection stubs\" for all detail APIs e.g., as currently documented [here for AES](https://github.com/open-quantum-safe/liboqs/blob/main/src/common/aes/aes.h) -- and equivalent for the other common crypto elements? Would you want to make a strawman proposal based on how you could envision a mapping onto GnuTLS APIs?\r\n\r\nYes; I think that'd be sufficient. Let me try to create a PoC.\r\n\r\n> In my personal opinion, it would be beneficial if this could be a compile-time switch (maybe macros based on the current common APIs, such as OQS_AES256_ECB_enc_sch?) as otherwise the currently single, standalone library liboqs would be split into different pieces/shared libs.\r\n\r\nOne idea to make this transition easier might be to delay the loading of libcrypto.so.* with dlopen, so the application can swap the implementation before OpenSSL is actually being used. I guess that wouldn't be too hard, as I see only 18 functions from libcrypto.so.* are used.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790216635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T07:37:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33034429738","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1466","id":1712273094,"node_id":"I_kwDOA-eq3c5mDzbG","number":1466,"title":"Integrate Kyber implementation from libjade","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"assignees":[{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/23","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23/labels","id":9830315,"node_id":"MI_kwDOA-eq3c4Alf-r","number":23,"title":"0.10.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":0,"state":"open","created_at":"2023-08-23T17:18:24Z","updated_at":"2023-08-23T17:24:33Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2023-05-16T15:37:31Z","updated_at":"2023-11-02T07:38:50Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"libjade is a Jasmin project involving @cryptojedi and others that has a formally verified implementation of Kyber for some platforms. We have talked about incorporating that into liboqs.\r\n\r\nFrom an email to me by @cryptojedi:\r\n\r\n> On May 6, 2023, at 8:24 AM, Peter Schwabe <peter@cryptojedi.org> wrote:\r\n> \r\n> As we discussed interfacing between OQS/OpenSSL/Sandwich and Libjade in\r\n> Lisbon, I thought I'd let you know that yesterday we got a second\r\n> release of Libjade out, which is hopefully a good starting point:\r\n> https://github.com/formosa-crypto/libjade/releases/latest\r\n> \r\n> We mostly made sure that the Kyber code matches the code we formally\r\n> verified, added a derandomized API, and improved documentation; see\r\n> https://github.com/formosa-crypto/libjade/blob/release/2023.05/README.md\r\n> https://github.com/formosa-crypto/libjade/blob/release/2023.05/doc/api.md\r\n> \r\n> As a word of warning: the AVX2 implementation of Kyber in Libjade is\r\n> currently the \"fully optimized\" one and not the \"fully verified\" one,\r\n> i.e., the matrix generation is not proven. See\r\n> https://eprint.iacr.org/2023/215, just before Section 5. Also, we\r\n> haven't integrated the proofs with Libjade, yet, and consequently\r\n> they're not covered by CI. That's one of the plans for the next release.\r\n> \r\n> We are, of course, happy for any kind of feedback by mail or in the\r\n> Formosa-Crypto Zulip: https://formosa-crypto.zulipchat.com/login/","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790217881","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1466#issuecomment-1790217881","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466","id":1790217881,"node_id":"IC_kwDOA-eq3c5qtI6Z","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T07:38:49Z","updated_at":"2023-11-02T07:38:49Z","author_association":"MEMBER","body":"To state something probably painfully obvious: This integration ought to be automatically repeatable after the first time, e.g., by way of using `copy_from_upstream` or github submodule, right? And this is still intended for 0.10.0?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790217881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T07:38:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33034886880","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1599","id":1971866457,"node_id":"I_kwDOA-eq3c51iEtZ","number":1599,"title":"Make low-level crypto algorithms implementation switchable","user":{"login":"ueno","id":47549,"node_id":"MDQ6VXNlcjQ3NTQ5","avatar_url":"https://avatars.githubusercontent.com/u/47549?v=4","gravatar_id":"","url":"https://api.github.com/users/ueno","html_url":"https://github.com/ueno","followers_url":"https://api.github.com/users/ueno/followers","following_url":"https://api.github.com/users/ueno/following{/other_user}","gists_url":"https://api.github.com/users/ueno/gists{/gist_id}","starred_url":"https://api.github.com/users/ueno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ueno/subscriptions","organizations_url":"https://api.github.com/users/ueno/orgs","repos_url":"https://api.github.com/users/ueno/repos","events_url":"https://api.github.com/users/ueno/events{/privacy}","received_events_url":"https://api.github.com/users/ueno/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-11-01T07:40:45Z","updated_at":"2023-11-02T08:00:19Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently liboqs uses OpenSSL as the default backend for low-level support algorithms, such as AES and SHA3 if the `OQS_USE_OPENSSL` build flag is `ON`; otherwise it will use the bundled implementation of those algorithms. While integrating liboqs in GnuTLS, we found neither of them optimal: it is not desirable to bring in OpenSSL as a dependency[1], while we also don't want to have the same algorithms implemented in multiple places. Therefore I would suggest providing a way to make those algorithm implementation pluggable at either compile time or runtime.\r\n\r\nMore concretely, what I have in mind is something along the following lines:\r\n\r\n* liboqs could provide a build option `OQS_COMMON_CRYPTO`, which takes a combo value, either `OPENSSL`, `DEFAULT`, or `NONE`. `OQS_COMMON_CRYPTO=OPENSSL` is the same as what `OQS_USE_OPENSSL=ON` currently does, `DEFAULT` is equivalent to `OQS_USE_OPENSSL=OFF`, and `NONE` means only a stub implementation (all functions return error) is compiled in\r\n* Consumer applications (such as oqs-provider) could register implementation of those algorithms in their favorite libraries at runtime, maybe through a new API, say `OQS_AES_register_implementation`, `OQS_SHA3_register_implementation`, etc.\r\n* To make the previous step easier, maybe liboqs could provide the default implementation as a static helper library (e.g., `liboqs_openssl.a`, `liboqs_default.a`)\r\n\r\nThis is similar to the approach taken by tpm2-tss[2].\r\n\r\n1. https://gitlab.com/gnutls/gnutls/-/merge_requests/1786#note_1611785601\r\n2. https://github.com/tpm2-software/tpm2-tss/pull/2365","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790241247","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1599#issuecomment-1790241247","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599","id":1790241247,"node_id":"IC_kwDOA-eq3c5qtOnf","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T08:00:18Z","updated_at":"2023-11-02T08:00:18Z","author_association":"MEMBER","body":"> One idea to make this transition easier might be to delay the loading of libcrypto.so.* with dlopen, so the application can swap the implementation before OpenSSL is actually being used. I guess that wouldn't be too hard, as I see only 18 functions from libcrypto.so.* are used.\r\n\r\nAgreed, there's not so many entry points. Would a `dlopen`-based solution work equally well for static and shared builds of the lib? On all platforms? Looking forward to the PoC/PR!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790241247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T08:00:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33041220517","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1466","id":1712273094,"node_id":"I_kwDOA-eq3c5mDzbG","number":1466,"title":"Integrate Kyber implementation from libjade","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"assignees":[{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/23","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23/labels","id":9830315,"node_id":"MI_kwDOA-eq3c4Alf-r","number":23,"title":"0.10.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":0,"state":"open","created_at":"2023-08-23T17:18:24Z","updated_at":"2023-08-23T17:24:33Z","due_on":null,"closed_at":null},"comments":4,"created_at":"2023-05-16T15:37:31Z","updated_at":"2023-11-02T11:57:19Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"libjade is a Jasmin project involving @cryptojedi and others that has a formally verified implementation of Kyber for some platforms. We have talked about incorporating that into liboqs.\r\n\r\nFrom an email to me by @cryptojedi:\r\n\r\n> On May 6, 2023, at 8:24 AM, Peter Schwabe <peter@cryptojedi.org> wrote:\r\n> \r\n> As we discussed interfacing between OQS/OpenSSL/Sandwich and Libjade in\r\n> Lisbon, I thought I'd let you know that yesterday we got a second\r\n> release of Libjade out, which is hopefully a good starting point:\r\n> https://github.com/formosa-crypto/libjade/releases/latest\r\n> \r\n> We mostly made sure that the Kyber code matches the code we formally\r\n> verified, added a derandomized API, and improved documentation; see\r\n> https://github.com/formosa-crypto/libjade/blob/release/2023.05/README.md\r\n> https://github.com/formosa-crypto/libjade/blob/release/2023.05/doc/api.md\r\n> \r\n> As a word of warning: the AVX2 implementation of Kyber in Libjade is\r\n> currently the \"fully optimized\" one and not the \"fully verified\" one,\r\n> i.e., the matrix generation is not proven. See\r\n> https://eprint.iacr.org/2023/215, just before Section 5. Also, we\r\n> haven't integrated the proofs with Libjade, yet, and consequently\r\n> they're not covered by CI. That's one of the plans for the next release.\r\n> \r\n> We are, of course, happy for any kind of feedback by mail or in the\r\n> Formosa-Crypto Zulip: https://formosa-crypto.zulipchat.com/login/","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790595228","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1466#issuecomment-1790595228","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1466","id":1790595228,"node_id":"IC_kwDOA-eq3c5qulCc","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T11:57:19Z","updated_at":"2023-11-02T11:57:19Z","author_association":"MEMBER","body":"> To state something probably painfully obvious: This integration ought to be automatically repeatable after the first time, e.g., by way of using `copy_from_upstream` or github submodule, right? And this is still intended for 0.10.0?\r\n\r\nYes, it is intended for this to be repeatable. Unclear at this point whether it'll be for 0.10.0, this is also tied up with #1521.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1790595228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T11:57:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33042628093","type":"IssueCommentEvent","actor":{"id":56026339,"login":"dr7ana","display_login":"dr7ana","gravatar_id":"","url":"https://api.github.com/users/dr7ana","avatar_url":"https://avatars.githubusercontent.com/u/56026339?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/182","id":1599645010,"node_id":"I_kwDODP--n85fWKVS","number":182,"title":"replace oqs-openssl111","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":1643196497,"node_id":"MDU6TGFiZWwxNjQzMTk2NDk3","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Asking for support from non-core team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-02-25T10:10:37Z","updated_at":"2023-11-02T12:49:05Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"With https://github.com/openssl/openssl/pull/19312 merged, oqs-provider together with OpenSSL3 (master) now deliver the same level of functionality as oqs-openssl111. \r\nThis issue is to propose replacing oqs-openssl111 with openssl3+oqs-provider where possible in the demos.\r\n\r\nApplicable integrations (tick if done) -- suggested order of importance\r\n- [x] openssl3\r\n- [x] OpenVPN\r\n- [x] curl\r\n- [x] nginx\r\n- [x] httpd\r\n- [x] epiphany\r\n- [ ] envoy\r\n- [ ] quic\r\n- [ ] mosquitto\r\n- [x] ngtcp2\r\n- [ ] unbound\r\n~- [ ] haproxy~\r\n\r\nNot applicable: Wireshark, Chromium, openssh, openlitespeed\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1790665840","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/182#issuecomment-1790665840","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182","id":1790665840,"node_id":"IC_kwDODP--n85qu2Rw","user":{"login":"dr7ana","id":56026339,"node_id":"MDQ6VXNlcjU2MDI2MzM5","avatar_url":"https://avatars.githubusercontent.com/u/56026339?v=4","gravatar_id":"","url":"https://api.github.com/users/dr7ana","html_url":"https://github.com/dr7ana","followers_url":"https://api.github.com/users/dr7ana/followers","following_url":"https://api.github.com/users/dr7ana/following{/other_user}","gists_url":"https://api.github.com/users/dr7ana/gists{/gist_id}","starred_url":"https://api.github.com/users/dr7ana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dr7ana/subscriptions","organizations_url":"https://api.github.com/users/dr7ana/orgs","repos_url":"https://api.github.com/users/dr7ana/repos","events_url":"https://api.github.com/users/dr7ana/events{/privacy}","received_events_url":"https://api.github.com/users/dr7ana/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T12:49:05Z","updated_at":"2023-11-02T12:49:05Z","author_association":"CONTRIBUTOR","body":"@baentsch I know I'm apologizing for the umpteenth time for not getting this done, but I will do it soon I promise! I will also fix the oversize binary issue","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1790665840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T12:49:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33042889315","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/182","id":1599645010,"node_id":"I_kwDODP--n85fWKVS","number":182,"title":"replace oqs-openssl111","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":1643196497,"node_id":"MDU6TGFiZWwxNjQzMTk2NDk3","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Asking for support from non-core team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-02-25T10:10:37Z","updated_at":"2023-11-02T12:58:00Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"With https://github.com/openssl/openssl/pull/19312 merged, oqs-provider together with OpenSSL3 (master) now deliver the same level of functionality as oqs-openssl111. \r\nThis issue is to propose replacing oqs-openssl111 with openssl3+oqs-provider where possible in the demos.\r\n\r\nApplicable integrations (tick if done) -- suggested order of importance\r\n- [x] openssl3\r\n- [x] OpenVPN\r\n- [x] curl\r\n- [x] nginx\r\n- [x] httpd\r\n- [x] epiphany\r\n- [ ] envoy\r\n- [ ] quic\r\n- [ ] mosquitto\r\n- [x] ngtcp2\r\n- [ ] unbound\r\n~- [ ] haproxy~\r\n\r\nNot applicable: Wireshark, Chromium, openssh, openlitespeed\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1790678381","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/182#issuecomment-1790678381","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/182","id":1790678381,"node_id":"IC_kwDODP--n85qu5Vt","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T12:58:00Z","updated_at":"2023-11-02T12:58:00Z","author_association":"MEMBER","body":"> @baentsch I know I'm apologizing for the umpteenth time for not getting this done, but I will do it soon I promise! I will also fix the oversize binary issue\r\n\r\nAbsolutely no reason to apologize. We all do this on our spare time and voluntarily -- and at least I am grateful for any contribution, regardless of timing. All I want to achieve with the above is set proper user expectations.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1790678381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T12:58:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33056525824","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1561","id":1914046827,"node_id":"I_kwDOA-eq3c5yFglr","number":1561,"title":"Falcon-1024 KATs differ from upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"assignees":[{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/22","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/22","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/22/labels","id":9619870,"node_id":"MI_kwDOA-eq3c4Aksme","number":22,"title":"0.9.1","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":2,"state":"open","created_at":"2023-07-05T13:41:01Z","updated_at":"2023-10-04T06:10:54Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2023-09-26T18:14:03Z","updated_at":"2023-11-02T21:25:36Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"From #1560:\r\n\r\n> our implementation of Falcon-1024 differs from the upstream on a single KAT, number 82. I put together a demonstration here: https://github.com/SWilson4/falcon-diff\r\n\r\n> This seems to be explained by the signature buffer size used for the KATs: our implementation uses the signature size of 1280 bytes while the upstream code passes a larger buffer of 1330 bytes (even though the signature size upstream is still defined to be 1280 bytes). I'm not sure yet why this is done, but redefining the signature size to be 1330 in liboqs does make all 100 KATs pass.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1791559434","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1561#issuecomment-1791559434","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1561","id":1791559434,"node_id":"IC_kwDOA-eq3c5qyQcK","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T21:25:36Z","updated_at":"2023-11-02T21:25:36Z","author_association":"CONTRIBUTOR","body":"I recently received insight into this issue from Gregor Seiler of the Falcon team. This is my paraphrase of what was written to me:\r\n\r\nThe scheme samples (and resamples) signatures until one which is short enough to fit in the given buffer is found. The \"maximum size\" (quotation mine) of 1280 bytes was chosen somewhat arbitrarily. It's a \"nice\" (presumably meaning divisible by 128) number such that signatures usually are small enough on the first try. However, the buffer size for the KAT testing was chosen such that no retrying would be required---hence the larger value of 1330 bytes.\r\n\r\nI've confirmed that this is the cause of the mismatch by modifying the Falcon reference KAT generation program to use a 1280-byte buffer and to retry signatures if necessary. With these modifications, it agrees with the ([yet unmerged](https://github.com/open-quantum-safe/liboqs/pull/1560)) OQS test program on all 100 KATs.\r\n\r\nI see three different approaches we could take to resolve this:\r\n1. Use our own KAT program's output (equal to that of the modified reference KAT program) as the source of truth.\r\n2. Modify our KAT test program to use a larger buffer size for Falcon-1024, so that it agrees with the reference KAT program.\r\n3. Change the Falcon signature size macro to 1330 from 1280.\r\n\r\nI don't love any of these, especially not the third option. I lean toward the first. If anyone would like to weigh in on one of these or present a different path, please do so here.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1791559434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T21:25:38Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33058718102","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1521","id":1841452867,"node_id":"I_kwDOA-eq3c5twldD","number":1521,"title":"Update Kyber and Dilithium to FIPS versions","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":423520878,"node_id":"MDU6TGFiZWw0MjM1MjA4Nzg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/23","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/23/labels","id":9830315,"node_id":"MI_kwDOA-eq3c4Alf-r","number":23,"title":"0.10.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":0,"state":"open","created_at":"2023-08-23T17:18:24Z","updated_at":"2023-08-23T17:24:33Z","due_on":null,"closed_at":null},"comments":24,"created_at":"2023-08-08T14:39:08Z","updated_at":"2023-11-02T23:45:39Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Once the FIPS drafts are released, we'll need to update Kyber and Dilithium based on the tweaks added by NIST.  \r\n\r\nUpstream already has started on this:\r\n- https://github.com/pq-crystals/kyber/tree/standard\r\n- https://github.com/pq-crystals/dilithium/tree/standard","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1791711617","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1521#issuecomment-1791711617","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1521","id":1791711617,"node_id":"IC_kwDOA-eq3c5qy1mB","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2023-11-02T23:45:39Z","updated_at":"2023-11-02T23:45:39Z","author_association":"MEMBER","body":"NIST now published some test vectors for the ML-KEM and ML-DSA drafts:\r\nhttps://csrc.nist.gov/Projects/post-quantum-cryptography/post-quantum-cryptography-standardization/example-files\r\n\r\nI've tested them against the pq-crystals Kyber and Dilithium \"standard\" branches, and they seem to match (although it's only one test per algorithm).\r\n\r\nThe tests are \"intermediate values\" and can't be used exactly the same way as the KAT, but I'll look at adding them to the liboqs \"standard\" branch.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1791711617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-02T23:45:40Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
