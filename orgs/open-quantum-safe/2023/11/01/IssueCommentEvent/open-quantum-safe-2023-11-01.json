{"id":"32998579144","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910","id":806964735,"node_id":"MDU6SXNzdWU4MDY5NjQ3MzU=","number":910,"title":"Establish interop with Circl","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-02-12T05:45:39Z","updated_at":"2023-11-01T00:35:28Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"[Circl](https://github.com/cloudflare/circl) implements several algorithms also provided by liboqs. An automated interop test set would be good to avoid issues like #909 in the future. Possibly an application for [liboqs-go](https://github.com/open-quantum-safe/liboqs-go)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788221589","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910#issuecomment-1788221589","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","id":1788221589,"node_id":"IC_kwDOA-eq3c5qlhiV","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T00:35:28Z","updated_at":"2023-11-01T00:35:28Z","author_association":"MEMBER","body":"@baentsch Can we close this due as having been satisfactorily resolved via https://github.com/open-quantum-safe/oqs-provider/pull/278?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788221589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T00:35:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33001149395","type":"IssueCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1588","id":1953408370,"node_id":"PR_kwDOA-eq3c5dVe2w","number":1588,"title":"Update XMSS secret key object APIs, sync with LMS ","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-10-20T02:51:17Z","updated_at":"2023-11-01T03:46:02Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1588","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1588","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1588.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1588.patch","merged_at":null},"body":"# XMSS changes\r\n\r\n\r\n\r\n## Changelogs\r\n\r\n- Made code compatible with MSVC in order to merge into `main` branch: Remove variable length array in `XMSS/external/` by converting them to `malloc/calloc` and `OQS_insecure_free()`\r\n- Cleaned up unused files: `sign.c` and `sign.h`. \r\n- Fixed all segfaults. \r\n- Added `katfile` to test that takes too long to generate a key pair. \r\n- Removed a lot of LOC, so the code base of XMSS parameters are shorter, and easier to edit. \r\n- Changed in memory allocation: `sk->secret_key_data` is allocated by default. The `OQS_SECRET_KEY_XMSS_deserialize_key` is simply copy memory, instead of allocation new memory and copy. I think this should also be applied to LMS as well. I see itâ€™s error-prone and inefficient to allocate memory each time the `deserialize` happens. \r\n\r\n\r\n## Introduce `is_locked` to `OQS_SIG_STFL_SECRET_KEY` structure\r\n\r\nDuring my investigation of why the current code is hanging in the test, I realized we have overlap locks, the scenario is as follows:\r\n\r\n1. User wants to sign\r\n2. XMSS locks the secret key in the sign operation. \r\n3. Sign operation invokes `serialize_key`, which locks the secret key again. \r\n4. Cause hangs. \r\n\r\nTo eliminate the double locks problem, I add `bool is_locked` into `OQS_SIG_STFL_SECRET_KEY` structure. The default value at object initialization is `is_locked = false`. \r\n\r\nNow the `OQS_SIG_STFL_SECRET_KEY` object will have information about the lock status. \r\n\r\n## Tests\r\n\r\nThis code will work with either `OQS_USE_PTHREADS_IN_TESTS` on or off. I tested both cases. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788362328","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1588#issuecomment-1788362328","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588","id":1788362328,"node_id":"IC_kwDOA-eq3c5qmD5Y","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T03:46:02Z","updated_at":"2023-11-01T03:46:02Z","author_association":"COLLABORATOR","body":"I don't know why the test duration increase by 50%.\r\nI think our case is simple enough to use recursive mutex and it's nicer to do so. \r\nI guess the major time execution is thread state management. We can improve the our test with thread to see if it's better.\r\n\r\nI'll think about it, if we are short on time then increase runtime is another solution. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788362328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T03:46:03Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33002239238","type":"IssueCommentEvent","actor":{"id":6188943,"login":"vsoftco","display_login":"vsoftco","gravatar_id":"","url":"https://api.github.com/users/vsoftco","avatar_url":"https://avatars.githubusercontent.com/u/6188943?"},"repo":{"id":170719151,"name":"open-quantum-safe/liboqs-cpp","url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/events","html_url":"https://github.com/open-quantum-safe/liboqs-cpp/issues/12","id":1969504590,"node_id":"I_kwDOCiz3r851ZEFO","number":12,"title":"The project doesn't install anything","user":{"login":"yurivict","id":271906,"node_id":"MDQ6VXNlcjI3MTkwNg==","avatar_url":"https://avatars.githubusercontent.com/u/271906?v=4","gravatar_id":"","url":"https://api.github.com/users/yurivict","html_url":"https://github.com/yurivict","followers_url":"https://api.github.com/users/yurivict/followers","following_url":"https://api.github.com/users/yurivict/following{/other_user}","gists_url":"https://api.github.com/users/yurivict/gists{/gist_id}","starred_url":"https://api.github.com/users/yurivict/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurivict/subscriptions","organizations_url":"https://api.github.com/users/yurivict/orgs","repos_url":"https://api.github.com/users/yurivict/repos","events_url":"https://api.github.com/users/yurivict/events{/privacy}","received_events_url":"https://api.github.com/users/yurivict/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false},"assignees":[{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2023-10-31T02:11:00Z","updated_at":"2023-11-01T05:09:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"You need to add 'install' instructions to install the headers and cmake files, if any.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/comments/1788417409","html_url":"https://github.com/open-quantum-safe/liboqs-cpp/issues/12#issuecomment-1788417409","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/12","id":1788417409,"node_id":"IC_kwDOCiz3r85qmRWB","user":{"login":"vsoftco","id":6188943,"node_id":"MDQ6VXNlcjYxODg5NDM=","avatar_url":"https://avatars.githubusercontent.com/u/6188943?v=4","gravatar_id":"","url":"https://api.github.com/users/vsoftco","html_url":"https://github.com/vsoftco","followers_url":"https://api.github.com/users/vsoftco/followers","following_url":"https://api.github.com/users/vsoftco/following{/other_user}","gists_url":"https://api.github.com/users/vsoftco/gists{/gist_id}","starred_url":"https://api.github.com/users/vsoftco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsoftco/subscriptions","organizations_url":"https://api.github.com/users/vsoftco/orgs","repos_url":"https://api.github.com/users/vsoftco/repos","events_url":"https://api.github.com/users/vsoftco/events{/privacy}","received_events_url":"https://api.github.com/users/vsoftco/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T05:09:20Z","updated_at":"2023-11-01T05:09:20Z","author_association":"MEMBER","body":"@yurivict Done, fixed by https://github.com/open-quantum-safe/liboqs-cpp/commit/a8d38ec522f1875f238db3ab1a21df348eea0442","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-cpp/issues/comments/1788417409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T05:09:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33003344520","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910","id":806964735,"node_id":"MDU6SXNzdWU4MDY5NjQ3MzU=","number":910,"title":"Establish interop with Circl","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-02-12T05:45:39Z","updated_at":"2023-11-01T06:22:12Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"[Circl](https://github.com/cloudflare/circl) implements several algorithms also provided by liboqs. An automated interop test set would be good to avoid issues like #909 in the future. Possibly an application for [liboqs-go](https://github.com/open-quantum-safe/liboqs-go)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788474728","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910#issuecomment-1788474728","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","id":1788474728,"node_id":"IC_kwDOA-eq3c5qmfVo","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T06:22:12Z","updated_at":"2023-11-01T06:22:12Z","author_association":"MEMBER","body":"OK for me if the only truly supported PQ feature CIRCL has is two specific TLS KEMs (which https://github.com/open-quantum-safe/oqs-provider/pull/278 ascertains interop of). My original impression was that it is much broader in scope, both in terms of algorithms as well as protocols supported.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788474728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T06:22:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33006580294","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1599","id":1971866457,"node_id":"I_kwDOA-eq3c51iEtZ","number":1599,"title":"Make low-level crypto algorithms implementation switchable","user":{"login":"ueno","id":47549,"node_id":"MDQ6VXNlcjQ3NTQ5","avatar_url":"https://avatars.githubusercontent.com/u/47549?v=4","gravatar_id":"","url":"https://api.github.com/users/ueno","html_url":"https://github.com/ueno","followers_url":"https://api.github.com/users/ueno/followers","following_url":"https://api.github.com/users/ueno/following{/other_user}","gists_url":"https://api.github.com/users/ueno/gists{/gist_id}","starred_url":"https://api.github.com/users/ueno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ueno/subscriptions","organizations_url":"https://api.github.com/users/ueno/orgs","repos_url":"https://api.github.com/users/ueno/repos","events_url":"https://api.github.com/users/ueno/events{/privacy}","received_events_url":"https://api.github.com/users/ueno/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-11-01T07:40:45Z","updated_at":"2023-11-01T09:06:44Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Currently liboqs uses OpenSSL as the default backend for low-level support algorithms, such as AES and SHA3 if the `OQS_USE_OPENSSL` build flag is `ON`; otherwise it will use the bundled implementation of those algorithms. While integrating liboqs in GnuTLS, we found neither of them optimal: it is not desirable to bring in OpenSSL as a dependency[1], while we also don't want to have the same algorithms implemented in multiple places. Therefore I would suggest providing a way to make those algorithm implementation pluggable at either compile time or runtime.\r\n\r\nMore concretely, what I have in mind is something along the following lines:\r\n\r\n* liboqs could provide a build option `OQS_COMMON_CRYPTO`, which takes a combo value, either `OPENSSL`, `DEFAULT`, or `NONE`. `OQS_COMMON_CRYPTO=OPENSSL` is the same as what `OQS_USE_OPENSSL=ON` currently does, `DEFAULT` is equivalent to `OQS_USE_OPENSSL=OFF`, and `NONE` means only a stub implementation (all functions return error) is compiled in\r\n* Consumer applications (such as oqs-provider) could register implementation of those algorithms in their favorite libraries at runtime, maybe through a new API, say `OQS_AES_register_implementation`, `OQS_SHA3_register_implementation`, etc.\r\n* To make the previous step easier, maybe liboqs could provide the default implementation as a static helper library (e.g., `liboqs_openssl.a`, `liboqs_default.a`)\r\n\r\nThis is similar to the approach taken by tpm2-tss[2].\r\n\r\n1. https://gitlab.com/gnutls/gnutls/-/merge_requests/1786#note_1611785601\r\n2. https://github.com/tpm2-software/tpm2-tss/pull/2365","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788632682","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1599#issuecomment-1788632682","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1599","id":1788632682,"node_id":"IC_kwDOA-eq3c5qnF5q","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T09:06:43Z","updated_at":"2023-11-01T09:06:43Z","author_association":"MEMBER","body":"Thanks for this proposal. Eliminating this OpenSSL dependency definitely makes sense for `liboqs` integrations to other crypto libs. \r\n\r\nI wonder though, to which level of algorithm detail this needs to go: Is a distinction AES/SHA2/SHA3/RAND sufficient? Or should there be \"redirection stubs\" for all detail APIs e.g., as currently documented [here for AES](https://github.com/open-quantum-safe/liboqs/blob/main/src/common/aes/aes.h) -- and equivalent for the other common crypto elements? Would you want to make a strawman proposal based on how you could envision a mapping onto GnuTLS APIs?\r\n\r\nIn my personal opinion, it would be beneficial if this could be a compile-time switch (maybe macros based on the current common APIs, such as `OQS_AES256_ECB_enc_sch`?) as otherwise the currently single, standalone library `liboqs` would be split into different pieces/shared libs. This could be inconvenient for (or even be mis-handled by) users of the common case where OpenSSL is providing the \"production quality\" common code for standalone `liboqs` applications; oqsprovider surely could be adapted to any sensible configuration -- although rather clearly none other than an OpenSSL config makes sense for an OpenSSL provider.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788632682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T09:06:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33006864201","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1585","id":1952352705,"node_id":"PR_kwDOA-eq3c5dR64z","number":1585,"title":"Pull new HQC implementation from upstream","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-10-19T14:05:18Z","updated_at":"2023-11-01T09:18:48Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1585","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1585","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1585.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1585.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nRun copy_from_upstream to pull the [recently merged](https://github.com/PQClean/PQClean/pull/512) HQC updates from PQClean. Ignore Kyber and Dilithium updates as we don't yet want to move to the \"standard\" version.\r\n\r\nThis is unfortunately a bit of a \"kitchen sink\" PR: it contains\r\n1. a new version of HQC from https://github.com/PQClean/PQClean/pull/512,\r\n2. updates to Falcon and Sphincs+ which landed in PQClean before the HQC code was merged, and\r\n3. support for the HQC custom PRNG for KAT checking.\r\n\r\nNotably, this PR does _not_ contain the latest [Kyber](https://github.com/PQClean/PQClean/pull/504) and [Dilithium](https://github.com/PQClean/PQClean/pull/511) updates from PQClean, as this would entail updating liboqs to be in sync with the \"standard\" track. If/when this is merged, we will be out of sync with PQClean.\r\n\r\nWhen patching HQC, I made a number of minor changes to the upstream code, mostly to address undefined or implementation-defined behaviour and endianness issues. I also wrote a new modular reduction routine to address https://github.com/PQClean/PQClean/issues/482; this can be found in `vector.c`. It might be easier to review my changes directly against the reference implementation; you can view the patches [here](https://github.com/SWilson4/package-pqclean/tree/main/hqc/patches).\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1319.\r\nFixes #995.\r\n\r\n<!-- Any PR adding a new feature is expected to contain a test; the test should be part of CI testing, preferably within the \".github/workflows\" directory tree. Please add an explanation to the PR if/when (why) this cannot be done. -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [x] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788646760","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1585#issuecomment-1788646760","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1585","id":1788646760,"node_id":"IC_kwDOA-eq3c5qnJVo","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T09:18:48Z","updated_at":"2023-11-01T09:18:48Z","author_association":"MEMBER","body":"@SWilson4 Please feel free to re-request my review if you feel the changes needed to get CI to pass warrant another glance. Otherwise, Thanks again for this \"deep dive\"!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788646760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T09:18:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33006888319","type":"IssueCommentEvent","actor":{"id":33428419,"login":"timopheyKuznetsov","display_login":"timopheyKuznetsov","gravatar_id":"","url":"https://api.github.com/users/timopheyKuznetsov","avatar_url":"https://avatars.githubusercontent.com/u/33428419?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1232","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1232/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1232/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1232/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1232","id":1277966852,"node_id":"I_kwDOA-eq3c5MLDoE","number":1232,"title":"Undefined references while compiling tests/example_sig.c ","user":{"login":"eimalnuaimi","id":72304830,"node_id":"MDQ6VXNlcjcyMzA0ODMw","avatar_url":"https://avatars.githubusercontent.com/u/72304830?v=4","gravatar_id":"","url":"https://api.github.com/users/eimalnuaimi","html_url":"https://github.com/eimalnuaimi","followers_url":"https://api.github.com/users/eimalnuaimi/followers","following_url":"https://api.github.com/users/eimalnuaimi/following{/other_user}","gists_url":"https://api.github.com/users/eimalnuaimi/gists{/gist_id}","starred_url":"https://api.github.com/users/eimalnuaimi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eimalnuaimi/subscriptions","organizations_url":"https://api.github.com/users/eimalnuaimi/orgs","repos_url":"https://api.github.com/users/eimalnuaimi/repos","events_url":"https://api.github.com/users/eimalnuaimi/events{/privacy}","received_events_url":"https://api.github.com/users/eimalnuaimi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-06-21T06:42:52Z","updated_at":"2023-11-01T09:19:50Z","closed_at":"2022-06-28T20:24:28Z","author_association":"NONE","active_lock_reason":null,"body":"I tried compiling the tests/example_sig.c example using the command `gcc -Ibuild/include -Lbuild/lib tests/example_sig.c -o example_sig -loqs` and got the following dump: \r\n\r\n> /usr/bin/ld: build/lib/liboqs.a(rand.c.o): in function `OQS_randombytes_openssl':\r\n> rand.c:(.text.OQS_randombytes_openssl+0x1d): undefined reference to `RAND_status'\r\n> /usr/bin/ld: rand.c:(.text.OQS_randombytes_openssl+0x27): undefined reference to `RAND_poll'\r\n> /usr/bin/ld: rand.c:(.text.OQS_randombytes_openssl+0x35): undefined reference to `RAND_bytes'\r\n> /usr/bin/ld: build/lib/liboqs.a(rand_nist.c.o): in function `handleErrors':\r\n> rand_nist.c:(.text.handleErrors+0x11): undefined reference to `ERR_print_errors_fp'\r\n> /usr/bin/ld: build/lib/liboqs.a(rand_nist.c.o): in function `AES256_CTR_DRBG_Update.constprop.0':\r\n> rand_nist.c:(.text.AES256_CTR_DRBG_Update.constprop.0+0x19a): undefined reference to `EVP_CIPHER_CTX_new'\r\n> /usr/bin/ld: rand_nist.c:(.text.AES256_CTR_DRBG_Update.constprop.0+0x1ab): undefined reference to `EVP_aes_256_ecb'\r\n> /usr/bin/ld: rand_nist.c:(.text.AES256_CTR_DRBG_Update.constprop.0+0x1c2): undefined reference to `EVP_EncryptInit_ex'\r\n> /usr/bin/ld: rand_nist.c:(.text.AES256_CTR_DRBG_Update.constprop.0+0x1e4): undefined reference to `EVP_EncryptUpdate'\r\n> /usr/bin/ld: rand_nist.c:(.text.AES256_CTR_DRBG_Update.constprop.0+0x1f9): undefined reference to `EVP_CIPHER_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(rand_nist.c.o): in function `OQS_randombytes_nist_kat':\r\n> rand_nist.c:(.text.OQS_randombytes_nist_kat+0x19a): undefined reference to `EVP_CIPHER_CTX_new'\r\n> /usr/bin/ld: rand_nist.c:(.text.OQS_randombytes_nist_kat+0x1ab): undefined reference to `EVP_aes_256_ecb'\r\n> /usr/bin/ld: rand_nist.c:(.text.OQS_randombytes_nist_kat+0x1c2): undefined reference to `EVP_EncryptInit_ex'\r\n> /usr/bin/ld: rand_nist.c:(.text.OQS_randombytes_nist_kat+0x1ed): undefined reference to `EVP_EncryptUpdate'\r\n> /usr/bin/ld: rand_nist.c:(.text.OQS_randombytes_nist_kat+0x1fe): undefined reference to `EVP_CIPHER_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha256':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha256+0x2b): undefined reference to `EVP_sha256'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256+0x33): undefined reference to `EVP_MD_CTX_new'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256+0x43): undefined reference to `EVP_DigestInit_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256+0x51): undefined reference to `EVP_DigestUpdate'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256+0x61): undefined reference to `EVP_DigestFinal_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256+0x69): undefined reference to `EVP_MD_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha384':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha384+0x2b): undefined reference to `EVP_sha384'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384+0x33): undefined reference to `EVP_MD_CTX_new'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384+0x43): undefined reference to `EVP_DigestInit_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384+0x51): undefined reference to `EVP_DigestUpdate'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384+0x61): undefined reference to `EVP_DigestFinal_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384+0x69): undefined reference to `EVP_MD_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha512':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha512+0x2b): undefined reference to `EVP_sha512'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512+0x33): undefined reference to `EVP_MD_CTX_new'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512+0x43): undefined reference to `EVP_DigestInit_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512+0x51): undefined reference to `EVP_DigestUpdate'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512+0x61): undefined reference to `EVP_DigestFinal_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512+0x69): undefined reference to `EVP_MD_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha256_inc_init':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_init+0xc): undefined reference to `EVP_sha256'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_init+0x19): undefined reference to `EVP_MD_CTX_new'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_init+0x29): undefined reference to `EVP_DigestInit_ex'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha256_inc_blocks':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_blocks+0xc): undefined reference to `EVP_DigestUpdate'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha256_inc_finalize':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_finalize+0x31): undefined reference to `EVP_DigestFinal_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_finalize+0x39): undefined reference to `EVP_MD_CTX_free'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_finalize+0x5f): undefined reference to `EVP_DigestUpdate'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha256_inc_ctx_release':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_ctx_release+0x8): undefined reference to `EVP_MD_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha256_inc_ctx_clone':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_ctx_clone+0x15): undefined reference to `EVP_sha256'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_ctx_clone+0x22): undefined reference to `EVP_MD_CTX_new'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_ctx_clone+0x32): undefined reference to `EVP_DigestInit_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha256_inc_ctx_clone+0x4b): undefined reference to `EVP_MD_CTX_copy_ex'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha384_inc_init':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_init+0xc): undefined reference to `EVP_sha384'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_init+0x19): undefined reference to `EVP_MD_CTX_new'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_init+0x29): undefined reference to `EVP_DigestInit_ex'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha384_inc_blocks':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_blocks+0xc): undefined reference to `EVP_DigestUpdate'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha384_inc_finalize':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_finalize+0x31): undefined reference to `EVP_DigestFinal_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_finalize+0x39): undefined reference to `EVP_MD_CTX_free'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_finalize+0x5f): undefined reference to `EVP_DigestUpdate'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha384_inc_ctx_release':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_ctx_release+0x8): undefined reference to `EVP_MD_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha384_inc_ctx_clone':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_ctx_clone+0x15): undefined reference to `EVP_sha384'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_ctx_clone+0x22): undefined reference to `EVP_MD_CTX_new'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_ctx_clone+0x32): undefined reference to `EVP_DigestInit_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha384_inc_ctx_clone+0x4b): undefined reference to `EVP_MD_CTX_copy_ex'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha512_inc_init':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_init+0xc): undefined reference to `EVP_sha512'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_init+0x19): undefined reference to `EVP_MD_CTX_new'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_init+0x29): undefined reference to `EVP_DigestInit_ex'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha512_inc_blocks':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_blocks+0xc): undefined reference to `EVP_DigestUpdate'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha512_inc_finalize':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_finalize+0x31): undefined reference to `EVP_DigestFinal_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_finalize+0x39): undefined reference to `EVP_MD_CTX_free'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_finalize+0x5f): undefined reference to `EVP_DigestUpdate'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha512_inc_ctx_release':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_ctx_release+0x8): undefined reference to `EVP_MD_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(sha2_ossl.c.o): in function `OQS_SHA2_sha512_inc_ctx_clone':\r\n> sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_ctx_clone+0x15): undefined reference to `EVP_sha512'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_ctx_clone+0x22): undefined reference to `EVP_MD_CTX_new'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_ctx_clone+0x32): undefined reference to `EVP_DigestInit_ex'\r\n> /usr/bin/ld: sha2_ossl.c:(.text.OQS_SHA2_sha512_inc_ctx_clone+0x4b): undefined reference to `EVP_MD_CTX_copy_ex'\r\n> /usr/bin/ld: build/lib/liboqs.a(aes_ossl.c.o): in function `OQS_AES128_ECB_load_schedule':\r\n> aes_ossl.c:(.text.OQS_AES128_ECB_load_schedule+0x2b): undefined reference to `EVP_CIPHER_CTX_new'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES128_ECB_load_schedule+0x39): undefined reference to `EVP_aes_128_ecb'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES128_ECB_load_schedule+0x4d): undefined reference to `EVP_EncryptInit_ex'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES128_ECB_load_schedule+0x61): undefined reference to `EVP_CIPHER_CTX_set_padding'\r\n> /usr/bin/ld: build/lib/liboqs.a(aes_ossl.c.o): in function `OQS_AES128_free_schedule':\r\n> aes_ossl.c:(.text.OQS_AES128_free_schedule+0x17): undefined reference to `EVP_CIPHER_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(aes_ossl.c.o): in function `OQS_AES128_ECB_enc':\r\n> aes_ossl.c:(.text.OQS_AES128_ECB_enc+0x71): undefined reference to `EVP_EncryptUpdate'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES128_ECB_enc+0x8c): undefined reference to `EVP_EncryptFinal_ex'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES128_ECB_enc+0xa9): undefined reference to `EVP_CIPHER_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(aes_ossl.c.o): in function `OQS_AES128_ECB_enc_sch':\r\n> aes_ossl.c:(.text.OQS_AES128_ECB_enc_sch+0x4f): undefined reference to `EVP_EncryptUpdate'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES128_ECB_enc_sch+0x6a): undefined reference to `EVP_EncryptFinal_ex'\r\n> /usr/bin/ld: build/lib/liboqs.a(aes_ossl.c.o): in function `OQS_AES256_ECB_load_schedule':\r\n> aes_ossl.c:(.text.OQS_AES256_ECB_load_schedule+0x2b): undefined reference to `EVP_CIPHER_CTX_new'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_ECB_load_schedule+0x39): undefined reference to `EVP_aes_256_ecb'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_ECB_load_schedule+0x4d): undefined reference to `EVP_EncryptInit_ex'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_ECB_load_schedule+0x61): undefined reference to `EVP_CIPHER_CTX_set_padding'\r\n> /usr/bin/ld: build/lib/liboqs.a(aes_ossl.c.o): in function `OQS_AES256_free_schedule':\r\n> aes_ossl.c:(.text.OQS_AES256_free_schedule+0x17): undefined reference to `EVP_CIPHER_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(aes_ossl.c.o): in function `OQS_AES256_ECB_enc':\r\n> aes_ossl.c:(.text.OQS_AES256_ECB_enc+0x71): undefined reference to `EVP_EncryptUpdate'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_ECB_enc+0x8c): undefined reference to `EVP_EncryptFinal_ex'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_ECB_enc+0xa9): undefined reference to `EVP_CIPHER_CTX_free'\r\n> /usr/bin/ld: build/lib/liboqs.a(aes_ossl.c.o): in function `OQS_AES256_ECB_enc_sch':\r\n> aes_ossl.c:(.text.OQS_AES256_ECB_enc_sch+0x4f): undefined reference to `EVP_EncryptUpdate'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_ECB_enc_sch+0x6a): undefined reference to `EVP_EncryptFinal_ex'\r\n> /usr/bin/ld: build/lib/liboqs.a(aes_ossl.c.o): in function `OQS_AES256_CTR_sch':\r\n> aes_ossl.c:(.text.OQS_AES256_CTR_sch+0x32): undefined reference to `EVP_CIPHER_CTX_new'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_CTR_sch+0x62): undefined reference to `EVP_aes_256_ctr'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_CTR_sch+0x79): undefined reference to `EVP_EncryptInit_ex'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_CTR_sch+0xb5): undefined reference to `EVP_EncryptUpdate'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_CTR_sch+0xcd): undefined reference to `EVP_EncryptFinal_ex'\r\n> /usr/bin/ld: aes_ossl.c:(.text.OQS_AES256_CTR_sch+0xda): undefined reference to `EVP_CIPHER_CTX_free'\r\n> collect2: error: ld returned 1 exit status\r\n\r\nPrior to that, I have built liboqs library sucessfully using these commands: \r\n```\r\nmkdir build && cd build\r\ncmake -GNinja .. \r\nninja \r\n```\r\nRunning the complete test suite using the command `ninja run_tests` was succesful. \r\n\r\nI had an issue with running the compile command eailer but it was 'fixed' by setting the default compiler to gcc (`export cc=gcc`) #1230 \r\n\r\nI'm using Ubuntu 20.04.3 LTS\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1232/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788648021","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1232#issuecomment-1788648021","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1232","id":1788648021,"node_id":"IC_kwDOA-eq3c5qnJpV","user":{"login":"timopheyKuznetsov","id":33428419,"node_id":"MDQ6VXNlcjMzNDI4NDE5","avatar_url":"https://avatars.githubusercontent.com/u/33428419?v=4","gravatar_id":"","url":"https://api.github.com/users/timopheyKuznetsov","html_url":"https://github.com/timopheyKuznetsov","followers_url":"https://api.github.com/users/timopheyKuznetsov/followers","following_url":"https://api.github.com/users/timopheyKuznetsov/following{/other_user}","gists_url":"https://api.github.com/users/timopheyKuznetsov/gists{/gist_id}","starred_url":"https://api.github.com/users/timopheyKuznetsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/timopheyKuznetsov/subscriptions","organizations_url":"https://api.github.com/users/timopheyKuznetsov/orgs","repos_url":"https://api.github.com/users/timopheyKuznetsov/repos","events_url":"https://api.github.com/users/timopheyKuznetsov/events{/privacy}","received_events_url":"https://api.github.com/users/timopheyKuznetsov/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T09:19:49Z","updated_at":"2023-11-01T09:19:49Z","author_association":"NONE","body":"> These are OpenSSL symbols -> Add `-lcrypto` to your compile/link run. In the future, please use the [Discussions](https://github.com/open-quantum-safe/liboqs/discussions) feature to clarify such questions.\r\n\r\nHi, I have the same problem with liboqs-java. I tried to add -lcrypto to pom.xml but nothing changed","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1788648021/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T09:19:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33017444219","type":"IssueCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1588","id":1953408370,"node_id":"PR_kwDOA-eq3c5dVe2w","number":1588,"title":"Update XMSS secret key object APIs, sync with LMS ","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-20T02:51:17Z","updated_at":"2023-11-01T15:59:03Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1588","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1588","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1588.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1588.patch","merged_at":null},"body":"# XMSS changes\r\n\r\n\r\n\r\n## Changelogs\r\n\r\n- Made code compatible with MSVC in order to merge into `main` branch: Remove variable length array in `XMSS/external/` by converting them to `malloc/calloc` and `OQS_insecure_free()`\r\n- Cleaned up unused files: `sign.c` and `sign.h`. \r\n- Fixed all segfaults. \r\n- Added `katfile` to test that takes too long to generate a key pair. \r\n- Removed a lot of LOC, so the code base of XMSS parameters are shorter, and easier to edit. \r\n- Changed in memory allocation: `sk->secret_key_data` is allocated by default. The `OQS_SECRET_KEY_XMSS_deserialize_key` is simply copy memory, instead of allocation new memory and copy. I think this should also be applied to LMS as well. I see itâ€™s error-prone and inefficient to allocate memory each time the `deserialize` happens. \r\n\r\n\r\n## Tests\r\n\r\nThis code will work with either `OQS_USE_PTHREADS_IN_TESTS` on or off. I tested both cases. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789216454","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1588#issuecomment-1789216454","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588","id":1789216454,"node_id":"IC_kwDOA-eq3c5qpUbG","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T15:59:03Z","updated_at":"2023-11-01T15:59:03Z","author_association":"COLLABORATOR","body":"@ashman-p , I removed the recursive mutex, it works right away. \r\nTo do so, I create an `inner_serialize` function, which is identical to `serialize` except the `acquire_lock` and `release_lock`. \r\n\r\nOther than that I simplify the logic code in `test_sig_stfl.c`. I think you would want to take a look at it. \r\nFor short, let's just use a the simple mutex.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789216454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T15:59:04Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33017821363","type":"IssueCommentEvent","actor":{"id":23340773,"login":"ashman-p","display_login":"ashman-p","gravatar_id":"","url":"https://api.github.com/users/ashman-p","avatar_url":"https://avatars.githubusercontent.com/u/23340773?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1588","id":1953408370,"node_id":"PR_kwDOA-eq3c5dVe2w","number":1588,"title":"Update XMSS secret key object APIs, sync with LMS ","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-10-20T02:51:17Z","updated_at":"2023-11-01T16:12:09Z","closed_at":"2023-11-01T16:12:09Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1588","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1588","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1588.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1588.patch","merged_at":null},"body":"# XMSS changes\r\n\r\n\r\n\r\n## Changelogs\r\n\r\n- Made code compatible with MSVC in order to merge into `main` branch: Remove variable length array in `XMSS/external/` by converting them to `malloc/calloc` and `OQS_insecure_free()`\r\n- Cleaned up unused files: `sign.c` and `sign.h`. \r\n- Fixed all segfaults. \r\n- Added `katfile` to test that takes too long to generate a key pair. \r\n- Removed a lot of LOC, so the code base of XMSS parameters are shorter, and easier to edit. \r\n- Changed in memory allocation: `sk->secret_key_data` is allocated by default. The `OQS_SECRET_KEY_XMSS_deserialize_key` is simply copy memory, instead of allocation new memory and copy. I think this should also be applied to LMS as well. I see itâ€™s error-prone and inefficient to allocate memory each time the `deserialize` happens. \r\n\r\n\r\n## Tests\r\n\r\nThis code will work with either `OQS_USE_PTHREADS_IN_TESTS` on or off. I tested both cases. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789239884","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1588#issuecomment-1789239884","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1588","id":1789239884,"node_id":"IC_kwDOA-eq3c5qpaJM","user":{"login":"ashman-p","id":23340773,"node_id":"MDQ6VXNlcjIzMzQwNzcz","avatar_url":"https://avatars.githubusercontent.com/u/23340773?v=4","gravatar_id":"","url":"https://api.github.com/users/ashman-p","html_url":"https://github.com/ashman-p","followers_url":"https://api.github.com/users/ashman-p/followers","following_url":"https://api.github.com/users/ashman-p/following{/other_user}","gists_url":"https://api.github.com/users/ashman-p/gists{/gist_id}","starred_url":"https://api.github.com/users/ashman-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashman-p/subscriptions","organizations_url":"https://api.github.com/users/ashman-p/orgs","repos_url":"https://api.github.com/users/ashman-p/repos","events_url":"https://api.github.com/users/ashman-p/events{/privacy}","received_events_url":"https://api.github.com/users/ashman-p/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T16:12:09Z","updated_at":"2023-11-01T16:12:09Z","author_association":"COLLABORATOR","body":"> @ashman-p , I removed the recursive mutex, it works right away. To do so, I create an `inner_serialize` function, which is identical to `serialize` except it does not have the `acquire_lock` and `release_lock` functions.\r\n> \r\n> Other than that I simplify the logic code in `test_sig_stfl.c`. I think you would want to take a look at it. For short, let's just use a the simple mutex.\r\n\r\nYep, this sounds good. Thank you.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789239884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T16:12:10Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33019261210","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1549","id":1891002354,"node_id":"PR_kwDOA-eq3c5aDJ8h","number":1549,"title":"Call Keccak_(X4_)Dispatch with pthread_once","user":{"login":"zxjtan","id":32562011,"node_id":"MDQ6VXNlcjMyNTYyMDEx","avatar_url":"https://avatars.githubusercontent.com/u/32562011?v=4","gravatar_id":"","url":"https://api.github.com/users/zxjtan","html_url":"https://github.com/zxjtan","followers_url":"https://api.github.com/users/zxjtan/followers","following_url":"https://api.github.com/users/zxjtan/following{/other_user}","gists_url":"https://api.github.com/users/zxjtan/gists{/gist_id}","starred_url":"https://api.github.com/users/zxjtan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxjtan/subscriptions","organizations_url":"https://api.github.com/users/zxjtan/orgs","repos_url":"https://api.github.com/users/zxjtan/repos","events_url":"https://api.github.com/users/zxjtan/events{/privacy}","received_events_url":"https://api.github.com/users/zxjtan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2023-09-11T18:03:27Z","updated_at":"2023-11-01T17:04:45Z","closed_at":"2023-11-01T09:09:09Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1549","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1549","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1549.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1549.patch","merged_at":"2023-11-01T09:09:09Z"},"body":"Fixes #1548.\r\n\r\nCall Keccak_(X4_)Dispatch using pthread_once to ensure setting of global function pointers is atomic and done only once.\r\n\r\n* [x] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  NO\r\n* [x] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? NO\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789326596","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1549#issuecomment-1789326596","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549","id":1789326596,"node_id":"IC_kwDOA-eq3c5qpvUE","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T17:04:45Z","updated_at":"2023-11-01T17:04:45Z","author_association":"MEMBER","body":"@zxjtan Thanks again for the contribution; it turned out it causes a failure in one downstream integration: https://app.circleci.com/pipelines/github/open-quantum-safe/oqs-demos/1046/workflows/e474db0c-43e2-4628-b634-23b9f3b5d95a/jobs/5979. Does this ring a bell? At first glance this should work as `-lpthread` is clearly configured in....","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789326596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T17:04:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33019625108","type":"IssueCommentEvent","actor":{"id":32562011,"login":"zxjtan","display_login":"zxjtan","gravatar_id":"","url":"https://api.github.com/users/zxjtan","avatar_url":"https://avatars.githubusercontent.com/u/32562011?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1549","id":1891002354,"node_id":"PR_kwDOA-eq3c5aDJ8h","number":1549,"title":"Call Keccak_(X4_)Dispatch with pthread_once","user":{"login":"zxjtan","id":32562011,"node_id":"MDQ6VXNlcjMyNTYyMDEx","avatar_url":"https://avatars.githubusercontent.com/u/32562011?v=4","gravatar_id":"","url":"https://api.github.com/users/zxjtan","html_url":"https://github.com/zxjtan","followers_url":"https://api.github.com/users/zxjtan/followers","following_url":"https://api.github.com/users/zxjtan/following{/other_user}","gists_url":"https://api.github.com/users/zxjtan/gists{/gist_id}","starred_url":"https://api.github.com/users/zxjtan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxjtan/subscriptions","organizations_url":"https://api.github.com/users/zxjtan/orgs","repos_url":"https://api.github.com/users/zxjtan/repos","events_url":"https://api.github.com/users/zxjtan/events{/privacy}","received_events_url":"https://api.github.com/users/zxjtan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2023-09-11T18:03:27Z","updated_at":"2023-11-01T17:18:11Z","closed_at":"2023-11-01T09:09:09Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1549","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1549","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1549.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1549.patch","merged_at":"2023-11-01T09:09:09Z"},"body":"Fixes #1548.\r\n\r\nCall Keccak_(X4_)Dispatch using pthread_once to ensure setting of global function pointers is atomic and done only once.\r\n\r\n* [x] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  NO\r\n* [x] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? NO\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789347469","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1549#issuecomment-1789347469","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1549","id":1789347469,"node_id":"IC_kwDOA-eq3c5qp0aN","user":{"login":"zxjtan","id":32562011,"node_id":"MDQ6VXNlcjMyNTYyMDEx","avatar_url":"https://avatars.githubusercontent.com/u/32562011?v=4","gravatar_id":"","url":"https://api.github.com/users/zxjtan","html_url":"https://github.com/zxjtan","followers_url":"https://api.github.com/users/zxjtan/followers","following_url":"https://api.github.com/users/zxjtan/following{/other_user}","gists_url":"https://api.github.com/users/zxjtan/gists{/gist_id}","starred_url":"https://api.github.com/users/zxjtan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxjtan/subscriptions","organizations_url":"https://api.github.com/users/zxjtan/orgs","repos_url":"https://api.github.com/users/zxjtan/repos","events_url":"https://api.github.com/users/zxjtan/events{/privacy}","received_events_url":"https://api.github.com/users/zxjtan/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T17:18:11Z","updated_at":"2023-11-01T17:18:11Z","author_association":"CONTRIBUTOR","body":"> @zxjtan Thanks again for the contribution; it turned out it causes a failure in one downstream integration: https://app.circleci.com/pipelines/github/open-quantum-safe/oqs-demos/1046/workflows/e474db0c-43e2-4628-b634-23b9f3b5d95a/jobs/5979. Does this ring a bell? At first glance this should work as `-lpthread` is clearly configured in.... Edit/correct: `-lpthread` is requested to be configured in but the final `openssl` link command doesn't contain that instruction... Hmm.....\r\n\r\nThe `sed` in [this line](https://github.com/open-quantum-safe/oqs-demos/blob/a6f60e5fc1c28f90a14e6780e40f94d1db38d229/quic/Dockerfile-server#L27) might have something to do with it?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789347469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T17:18:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33022431324","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910","id":806964735,"node_id":"MDU6SXNzdWU4MDY5NjQ3MzU=","number":910,"title":"Establish interop with Circl","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2021-02-12T05:45:39Z","updated_at":"2023-11-01T19:12:34Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"[Circl](https://github.com/cloudflare/circl) implements several algorithms also provided by liboqs. An automated interop test set would be good to avoid issues like #909 in the future. Possibly an application for [liboqs-go](https://github.com/open-quantum-safe/liboqs-go)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789510573","html_url":"https://github.com/open-quantum-safe/liboqs/issues/910#issuecomment-1789510573","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/910","id":1789510573,"node_id":"IC_kwDOA-eq3c5qqcOt","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-11-01T19:12:34Z","updated_at":"2023-11-01T19:12:34Z","author_association":"MEMBER","body":"> OK for me if the only truly supported PQ feature CIRCL has is two specific TLS KEMs (which [open-quantum-safe/oqs-provider#278](https://github.com/open-quantum-safe/oqs-provider/pull/278) ascertains interop of). My original impression was that it is much broader in scope, both in terms of algorithms as well as protocols supported.\r\n\r\nYou're right, there's also Dilithium and FrodoKEM in Circle.  Nevermind.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1789510573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-11-01T19:12:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
