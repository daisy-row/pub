{"id":"27336414984","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1407","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1407/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1407/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1407/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1407","id":1599981210,"node_id":"I_kwDOA-eq3c5fXcaa","number":1407,"title":"Use python code in python (CBOM again)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-02-26T09:08:51Z","updated_at":"2023-02-26T09:08:51Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"@Martyrshot @bhess See this code: https://github.com/open-quantum-safe/liboqs/blob/341cf224270535e1a5769263f2dd2641fcf2c301/scripts/copy_from_upstream/copy_from_upstream.py#L619-L622\r\n\r\nIt is a) weird (as already stated in your own comment) and b) makes (remote/CI) debugging [see e.g. this error log](https://github.com/open-quantum-safe/liboqs/actions/runs/4273832035/jobs/7440002427) hard.\r\n\r\n--> Would you be willing to do a PR to call python code the way it should be called from within python? That way it should be possible to get python stack traces/more easily understand the errors in code called (`update_cbom.py` in this case)?\r\n\r\n@bhess: This is ultimately triggered by #1337 for which I already had to do a workaround to #1406... All this --also due to very long CI run times-- by now cost me 2 hours and I am unwilling to invest more time to debug & work around these issues. Please let me know whether you'd be willing to fix this issue, #1406, and find the CBOM-generation error in #1405, currently visible in [the error log](https://github.com/open-quantum-safe/liboqs/actions/runs/4273832035/jobs/7440002427). ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1407/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1407/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-02-26T09:08:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27336507660","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1408","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1408/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1408/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1408/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1408","id":1599985142,"node_id":"I_kwDOA-eq3c5fXdX2","number":1408,"title":"Test all scripts","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-02-26T09:24:36Z","updated_at":"2023-02-26T09:24:36Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This issue is to suggest adding tests to (automatically) exercise all scripts within this project. \r\n\r\nThe goals would be \r\n- to ensure no \"local setup\" problems will hit anyone (new) using any `liboqs` script\r\n- scripts are resilient (e.g., idempotent, not changing code on a given `git` state)\r\n- script run results are reproducible (also in CI)\r\n\r\nProposed list:\r\n\r\n- [x] ./tests/test_code_conventions.py\r\n- [x] ./tests/test_distbuild.py\r\n- [x] ./tests/test_leaks.py\r\n- [x] ./tests/test_binary.py\r\n- [x] ./tests/test_speed.py\r\n- [x] ./tests/test_constant_time.py\r\n- [x] ./tests/test_kat.py\r\n- [x] ./tests/helpers.py\r\n- [x] ./tests/test_alg_info.py\r\n- [x] ./tests/test_hash.py\r\n- [x] ./tests/test_mem.py\r\n- [x] ./tests/test_cmdline.py\r\n- [ ] ./scripts/update_docs_from_yaml.py\r\n- [ ] ./scripts/genkatdict.py\r\n- [ ] ./scripts/doxyfy.py\r\n- [ ] ./scripts/update_cbom.py\r\n- [ ] ./scripts/format_docs_yaml.py\r\n- [ ] ./scripts/noregress.py\r\n- [ ] ./scripts/copy_from_upstream/copy_from_upstream.py\r\n- [ ] ./scripts/copy_from_upstream/update_upstream_alg_docs.py\r\n- [x] ./tests/run_astyle.sh\r\n- [x] ./tests/test_spdx.sh\r\n- [ ] ./scripts/build-android.sh\r\n- [ ] ./scripts/git_commit.sh\r\n- [ ] ./scripts/copy_from_xkcp/checkout.sh\r\n- [ ] ./scripts/copy_from_xkcp/update_patches.sh\r\n- [ ] ./scripts/copy_from_xkcp/package.sh\r\n- [ ] ./scripts/run_doxygen.sh\r\n- [ ] ./scripts/validate_cbom.sh\r\n- [ ] ./scripts/genkatsha256.sh\r\n- [ ] ./scripts/noregress.sh\r\n\r\nFurther additions welcome as are suggestions to prune scripts not deemed necessary any more. Scripts run in CI already checked off.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1408/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-02-26T09:24:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
