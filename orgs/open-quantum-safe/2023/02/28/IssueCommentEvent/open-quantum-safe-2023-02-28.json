{"id":"27375901500","type":"IssueCommentEvent","actor":{"id":25055813,"login":"dkostic","display_login":"dkostic","gravatar_id":"","url":"https://api.github.com/users/dkostic","avatar_url":"https://avatars.githubusercontent.com/u/25055813?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","id":1596238831,"node_id":"PR_kwDOA-eq3c5Kktdm","number":1400,"title":"Make BIKE decode function void to avoid ct issues","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-02-23T05:15:22Z","updated_at":"2023-02-28T05:53:42Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1400","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe `decode` function in BIKE was made void to avoid any potential constant-time issues.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nPartially addresses #1396 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1447623412","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400#issuecomment-1447623412","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","id":1447623412,"node_id":"IC_kwDOA-eq3c5WSPr0","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"created_at":"2023-02-28T05:53:42Z","updated_at":"2023-02-28T05:53:42Z","author_association":"COLLABORATOR","body":"As I commented in #1397, this PR addresses one of the issues reported by Valgrind that is valid. I believe the other issues are false positives but I'd appreciate another set of eyes on it to confirm that. Sorry, I should have left the comment on this PR instead. I can wait until tomorrow and if no-one objects until then I'll add the suppression files.\r\n\r\nValgrind reports these two errors that I think are false positives:\r\n```\r\n==7198== Use of uninitialised value of size 1\r\n==7198==    at 0x114055: _mm256_slli_epi64 (avx2intrin.h:698)\r\n==7198==    by 0x114055: OQS_KEM_bike_l5_secure_set_bits_avx2 (sampling_avx2.c:67)\r\n...\r\n==7198== Use of uninitialised value of size 1\r\n==7198==    at 0x1AA559: _mm256_srli_epi64 (avx2intrin.h:789)\r\n==7198==    by 0x1AA559: rotate256_small (decode_avx2.c:88)\r\n```\r\n^^Both values in those function calls are initialized afaict.\r\n\r\n```\r\n==7198== Conditional jump or move depends on uninitialised value(s)\r\n==7198==    at 0x1A6AF1: get_threshold (decode.c:103)\r\n```\r\n^^There is no conditional jump in this function and all the variables are initialized before use.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1447623412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-28T05:53:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27388233678","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":33,"created_at":"2022-08-03T16:14:21Z","updated_at":"2023-02-28T14:41:33Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448303948","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1448303948","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1448303948,"node_id":"IC_kwDOA-eq3c5WU11M","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-02-28T14:41:33Z","updated_at":"2023-02-28T14:41:33Z","author_association":"MEMBER","body":"@xvzcf It's been awfully silent on this issue: Are you still looking into this? Any new problem areas identified (that someone may help with)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448303948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-28T14:41:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27390495684","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","id":1596238831,"node_id":"PR_kwDOA-eq3c5Kktdm","number":1400,"title":"Make BIKE decode function void to avoid ct issues","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2023-02-23T05:15:22Z","updated_at":"2023-02-28T15:58:50Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1400","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe `decode` function in BIKE was made void to avoid any potential constant-time issues.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nPartially addresses #1396 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448433766","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400#issuecomment-1448433766","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","id":1448433766,"node_id":"IC_kwDOA-eq3c5WVVhm","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-02-28T15:58:49Z","updated_at":"2023-02-28T15:58:49Z","author_association":"MEMBER","body":"> Valgrind reports these two errors that I think are false positives:\r\n> \r\n> ```\r\n> ==7198== Use of uninitialised value of size 1\r\n> ==7198==    at 0x114055: _mm256_slli_epi64 (avx2intrin.h:698)\r\n> ==7198==    by 0x114055: OQS_KEM_bike_l5_secure_set_bits_avx2 (sampling_avx2.c:67)\r\n> ```\r\n\r\nMaybe this is being triggered by the `w` value that has been set from `wlist` on line sampling_avx2.c:65?  Does `wlist` contain data derived from secret data?\r\n\r\n> ```\r\n> ==7198== Use of uninitialised value of size 1\r\n> ==7198==    at 0x1AA559: _mm256_srli_epi64 (avx2intrin.h:789)\r\n> ==7198==    by 0x1AA559: rotate256_small (decode_avx2.c:88)\r\n> ```\r\n\r\nI can't tell from reading the code.\r\n\r\n> ```\r\n> ==7198== Conditional jump or move depends on uninitialised value(s)\r\n> ==7198==    at 0x1A6AF1: get_threshold (decode.c:103)\r\n> ```\r\n> \r\n> ^^There is no conditional jump in this function and all the variables are initialized before use.\r\n\r\nWeird... am I reading correctly that this seems to be about the `DMSG` macro which prints out debugging information?  ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448433766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-28T15:58:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27391326090","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","id":1327479465,"node_id":"PR_kwDOA-eq3c48lz53","number":1275,"title":"Addition of stateful hash-based signatures","user":{"login":"kj3moraes","id":25700338,"node_id":"MDQ6VXNlcjI1NzAwMzM4","avatar_url":"https://avatars.githubusercontent.com/u/25700338?v=4","gravatar_id":"","url":"https://api.github.com/users/kj3moraes","html_url":"https://github.com/kj3moraes","followers_url":"https://api.github.com/users/kj3moraes/followers","following_url":"https://api.github.com/users/kj3moraes/following{/other_user}","gists_url":"https://api.github.com/users/kj3moraes/gists{/gist_id}","starred_url":"https://api.github.com/users/kj3moraes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kj3moraes/subscriptions","organizations_url":"https://api.github.com/users/kj3moraes/orgs","repos_url":"https://api.github.com/users/kj3moraes/repos","events_url":"https://api.github.com/users/kj3moraes/events{/privacy}","received_events_url":"https://api.github.com/users/kj3moraes/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":34,"created_at":"2022-08-03T16:14:21Z","updated_at":"2023-02-28T16:26:35Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1275","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1275.patch","merged_at":null},"body":" ## Addition of XMSS to the codebase\r\n\r\nI have added code for ![XMSS](https://datatracker.ietf.org/doc/html/rfc8391) into the `src/sig_stateful` directory. The algorithm variants supported are :- \r\n* all the XMSS variants (SHA256, SHA512, SHAKE256, SHAKE512)\r\n* all the RFC recommended ![XMSS^MT variants](https://datatracker.ietf.org/doc/html/rfc8391#section-8). \r\n\r\nThe continuous integration tests pass and I have made the respective test files for testing the SIG_STFL API.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448479507","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1275#issuecomment-1448479507","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1275","id":1448479507,"node_id":"IC_kwDOA-eq3c5WVgsT","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2023-02-28T16:26:35Z","updated_at":"2023-02-28T16:26:35Z","author_association":"MEMBER","body":"> @xvzcf It's been awfully silent on this issue: Are you still looking into this? Any new problem areas identified (that someone may help with)?\r\n\r\nWe're thinking of reworking this PR from the ground up and we're currently trying to determine what the best source to take the implementation from is; I can elaborate in the weekly meeting.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448479507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-28T16:26:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27391756275","type":"IssueCommentEvent","actor":{"id":25055813,"login":"dkostic","display_login":"dkostic","gravatar_id":"","url":"https://api.github.com/users/dkostic","avatar_url":"https://avatars.githubusercontent.com/u/25055813?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","id":1596238831,"node_id":"PR_kwDOA-eq3c5Kktdm","number":1400,"title":"Make BIKE decode function void to avoid ct issues","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2023-02-23T05:15:22Z","updated_at":"2023-02-28T16:42:40Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1400","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe `decode` function in BIKE was made void to avoid any potential constant-time issues.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nPartially addresses #1396 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448503105","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400#issuecomment-1448503105","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","id":1448503105,"node_id":"IC_kwDOA-eq3c5WVmdB","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"created_at":"2023-02-28T16:42:40Z","updated_at":"2023-02-28T16:42:40Z","author_association":"COLLABORATOR","body":">==7198== Use of uninitialised value of size 1\r\n==7198==    at 0x114055: _mm256_slli_epi64 (avx2intrin.h:698)\r\n==7198==    by 0x114055: OQS_KEM_bike_l5_secure_set_bits_avx2 (sampling_avx2.c:67)\r\nMaybe this is being triggered by the w value that has been set from wlist on line sampling_avx2.c:65? Does wlist contain data derived from secret data?\r\n\r\nyes, `wlist` is part of the secret key but I don't see any \"non safe\" operations with `w`, or non-ct accesses to `wlist`.\r\n\r\n>==7198== Conditional jump or move depends on uninitialised value(s)\r\n==7198==    at 0x1A6AF1: get_threshold (decode.c:103)\r\nWeird... am I reading correctly that this seems to be about the DMSG macro which prints out debugging information?\r\n\r\nThis is line 103: https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/additional_r4/decode.c#L103.\r\nI don't think it's about DMSG, that's a no-op macro (https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/additional_r4/defs.h#L106).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448503105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-28T16:42:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27392007889","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","id":1596238831,"node_id":"PR_kwDOA-eq3c5Kktdm","number":1400,"title":"Make BIKE decode function void to avoid ct issues","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2023-02-23T05:15:22Z","updated_at":"2023-02-28T16:52:14Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1400","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe `decode` function in BIKE was made void to avoid any potential constant-time issues.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nPartially addresses #1396 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448517142","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400#issuecomment-1448517142","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","id":1448517142,"node_id":"IC_kwDOA-eq3c5WVp4W","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-02-28T16:52:13Z","updated_at":"2023-02-28T16:52:13Z","author_association":"MEMBER","body":"> > ==7198== Use of uninitialised value of size 1\r\n> > ==7198==    at 0x114055: _mm256_slli_epi64 (avx2intrin.h:698)\r\n> > ==7198==    by 0x114055: OQS_KEM_bike_l5_secure_set_bits_avx2 (sampling_avx2.c:67)\r\n> > Maybe this is being triggered by the w value that has been set from wlist on line sampling_avx2.c:65? Does wlist contain data derived from secret data?\r\n> \r\n> yes, `wlist` is part of the secret key but I don't see any \"non safe\" operations with `w`, or non-ct accesses to `wlist`.\r\n\r\nIndeed, it seems like `w` is just being used as the offset in the shift operation, so unless `_mm256_slli_epi64` has some weird non constant-time behaviour in its second argument, I can't see anything.\r\n\r\n> > ==7198== Conditional jump or move depends on uninitialised value(s)\r\n> > ==7198==    at 0x1A6AF1: get_threshold (decode.c:103)\r\n> > Weird... am I reading correctly that this seems to be about the DMSG macro which prints out debugging information?\r\n> \r\n> This is line 103: https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/additional_r4/decode.c#L103. I don't think it's about DMSG, that's a no-op macro (https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/additional_r4/defs.h#L106).\r\n\r\nWouldn't it be https://github.com/dkostic/liboqs/blob/bike-fix-ct-issues/src/kem/bike/additional_r4/decode.c#L103 ?  Which version of the code are you running Valgrind on?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448517142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-28T16:52:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27396053493","type":"IssueCommentEvent","actor":{"id":25055813,"login":"dkostic","display_login":"dkostic","gravatar_id":"","url":"https://api.github.com/users/dkostic","avatar_url":"https://avatars.githubusercontent.com/u/25055813?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","id":1596238831,"node_id":"PR_kwDOA-eq3c5Kktdm","number":1400,"title":"Make BIKE decode function void to avoid ct issues","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2023-02-23T05:15:22Z","updated_at":"2023-02-28T19:48:39Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1400","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe `decode` function in BIKE was made void to avoid any potential constant-time issues.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nPartially addresses #1396 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448770341","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400#issuecomment-1448770341","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","id":1448770341,"node_id":"IC_kwDOA-eq3c5WWnsl","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"created_at":"2023-02-28T19:48:39Z","updated_at":"2023-02-28T19:48:39Z","author_association":"COLLABORATOR","body":">Indeed, it seems like w is just being used as the offset in the shift operation, so unless _mm256_slli_epi64 has some weird non constant-time behaviour in its second argument, I can't see anything.\r\n\r\nok, I'll add that in a suppression file.\r\n\r\n>Wouldn't it be https://github.com/dkostic/liboqs/blob/bike-fix-ct-issues/src/kem/bike/additional_r4/decode.c#L103 ? Which version of the code are you running Valgrind on?\r\n\r\nnope, the Valgrind error message is coming from the code in the main branch, so https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/additional_r4/decode.c#L103\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448770341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-28T19:48:40Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27397030161","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","id":1596238831,"node_id":"PR_kwDOA-eq3c5Kktdm","number":1400,"title":"Make BIKE decode function void to avoid ct issues","user":{"login":"dkostic","id":25055813,"node_id":"MDQ6VXNlcjI1MDU1ODEz","avatar_url":"https://avatars.githubusercontent.com/u/25055813?v=4","gravatar_id":"","url":"https://api.github.com/users/dkostic","html_url":"https://github.com/dkostic","followers_url":"https://api.github.com/users/dkostic/followers","following_url":"https://api.github.com/users/dkostic/following{/other_user}","gists_url":"https://api.github.com/users/dkostic/gists{/gist_id}","starred_url":"https://api.github.com/users/dkostic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkostic/subscriptions","organizations_url":"https://api.github.com/users/dkostic/orgs","repos_url":"https://api.github.com/users/dkostic/repos","events_url":"https://api.github.com/users/dkostic/events{/privacy}","received_events_url":"https://api.github.com/users/dkostic/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2023-02-23T05:15:22Z","updated_at":"2023-02-28T20:35:57Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1400","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1400.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nThe `decode` function in BIKE was made void to avoid any potential constant-time issues.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nPartially addresses #1396 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448879880","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1400#issuecomment-1448879880","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1400","id":1448879880,"node_id":"IC_kwDOA-eq3c5WXCcI","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-02-28T20:35:56Z","updated_at":"2023-02-28T20:35:56Z","author_association":"MEMBER","body":"> nope, the Valgrind error message is coming from the code in the main branch, so https://github.com/open-quantum-safe/liboqs/blob/main/src/kem/bike/additional_r4/decode.c#L103\r\n\r\nOkay. I can't see any reason why decode.c#L103 would raise that warning -- it's just uint32_t addition and multiplication. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1448879880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-02-28T20:35:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
