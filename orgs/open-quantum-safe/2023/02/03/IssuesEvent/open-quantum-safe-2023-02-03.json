{"id":"26852959092","type":"IssuesEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1375","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1375/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1375/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1375/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1375","id":1565920200,"node_id":"I_kwDOA-eq3c5dVgvI","number":1375,"title":"gcc 13 build failure","user":{"login":"beldmit","id":13785747,"node_id":"MDQ6VXNlcjEzNzg1NzQ3","avatar_url":"https://avatars.githubusercontent.com/u/13785747?v=4","gravatar_id":"","url":"https://api.github.com/users/beldmit","html_url":"https://github.com/beldmit","followers_url":"https://api.github.com/users/beldmit/followers","following_url":"https://api.github.com/users/beldmit/following{/other_user}","gists_url":"https://api.github.com/users/beldmit/gists{/gist_id}","starred_url":"https://api.github.com/users/beldmit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beldmit/subscriptions","organizations_url":"https://api.github.com/users/beldmit/orgs","repos_url":"https://api.github.com/users/beldmit/repos","events_url":"https://api.github.com/users/beldmit/events{/privacy}","received_events_url":"https://api.github.com/users/beldmit/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2023-02-01T11:12:40Z","updated_at":"2023-02-03T12:32:12Z","closed_at":"2023-02-03T12:32:12Z","author_association":"NONE","active_lock_reason":null,"body":"Building the 0.7.2 release using Fedora Rawhide, get the following error:\r\n```\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o \r\n/usr/bin/gcc  -I/builddir/build/BUILD/liboqs-0.7.2/redhat-linux-build/include -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1  -m64  -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -g -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -std=gnu11 -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o -c /builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes.c\r\nIn file included from /builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes.c:6:\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes_params.h:28:39: error: conflicting types for 'OQS_KEM_frodokem_640_aes_keypair' due to enum/integer mismatch; have 'int(unsigned char *, unsigned char *)' [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_640_aes_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro 'crypto_kem_keypair'\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes.c:4:\r\n/builddir/build/BUILD/liboqs-0.7.2/redhat-linux-build/include/oqs/kem_frodokem.h:14:20: note: previous declaration of 'OQS_KEM_frodokem_640_aes_keypair' with type 'OQS_STATUS(uint8_t *, uint8_t *)' {aka 'OQS_STATUS(unsigned char *, unsigned char *)'}\r\n   14 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_aes_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes_params.h:29:39: error: conflicting types for 'OQS_KEM_frodokem_640_aes_encaps' due to enum/integer mismatch; have 'int(unsigned char *, unsigned char *, const unsigned char *)' [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_640_aes_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro 'crypto_kem_enc'\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/redhat-linux-build/include/oqs/kem_frodokem.h:15:20: note: previous declaration of 'OQS_KEM_frodokem_640_aes_encaps' with type 'OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)' {aka 'OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)'}\r\n   15 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_aes_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes_params.h:30:39: error: conflicting types for 'OQS_KEM_frodokem_640_aes_decaps' due to enum/integer mismatch; have 'int(unsigned char *, const unsigned char *, const unsigned char *)' [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_640_aes_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro 'crypto_kem_dec'\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/redhat-linux-build/include/oqs/kem_frodokem.h:16:20: note: previous declaration of 'OQS_KEM_frodokem_640_aes_decaps' with type 'OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)' {aka 'OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)'}\r\n   16 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_aes_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[58/2307] /usr/bin/gcc  -I/builddir/build/BUILD/liboqs-0.7.2/redhat-linux-build/include -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1  -m64  -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -g -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -std=gnu11 -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o -c /builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o \r\n/usr/bin/gcc  -I/builddir/build/BUILD/liboqs-0.7.2/redhat-linux-build/include -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1  -m64  -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -g -fPIC -fvisibility=hidden -march=native -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -Wstrict-overflow -ggdb3 -std=gnu11 -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o -c /builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c\r\nIn file included from /builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c:6:\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake_params.h:28:39: error: conflicting types for 'OQS_KEM_frodokem_640_shake_keypair' due to enum/integer mismatch; have 'int(unsigned char *, unsigned char *)' [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_640_shake_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro 'crypto_kem_keypair'\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c:4:\r\n/builddir/build/BUILD/liboqs-0.7.2/redhat-linux-build/include/oqs/kem_frodokem.h:25:20: note: previous declaration of 'OQS_KEM_frodokem_640_shake_keypair' with type 'OQS_STATUS(uint8_t *, uint8_t *)' {aka 'OQS_STATUS(unsigned char *, unsigned char *)'}\r\n   25 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_shake_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake_params.h:29:39: error: conflicting types for 'OQS_KEM_frodokem_640_shake_encaps' due to enum/integer mismatch; have 'int(unsigned char *, unsigned char *, const unsigned char *)' [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_640_shake_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro 'crypto_kem_enc'\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/redhat-linux-build/include/oqs/kem_frodokem.h:26:20: note: previous declaration of 'OQS_KEM_frodokem_640_shake_encaps' with type 'OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)' {aka 'OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)'}\r\n   26 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_shake_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake_params.h:30:39: error: conflicting types for 'OQS_KEM_frodokem_640_shake_decaps' due to enum/integer mismatch; have 'int(unsigned char *, const unsigned char *, const unsigned char *)' [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_640_shake_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro 'crypto_kem_dec'\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/builddir/build/BUILD/liboqs-0.7.2/redhat-linux-build/include/oqs/kem_frodokem.h:27:20: note: previous declaration of 'OQS_KEM_frodokem_640_shake_decaps' with type 'OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)' {aka 'OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)'}\r\n   27 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_shake_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1375/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-02-03T12:32:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26859530724","type":"IssuesEvent","actor":{"id":24617764,"login":"csosto-pk","display_login":"csosto-pk","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","avatar_url":"https://avatars.githubusercontent.com/u/24617764?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/134","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/134/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/134/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/134/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/134","id":1570168583,"node_id":"I_kwDOBsoLV85dlt8H","number":134,"title":"PQ KEM method names per draft iteration","user":{"login":"csosto-pk","id":24617764,"node_id":"MDQ6VXNlcjI0NjE3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/24617764?v=4","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","html_url":"https://github.com/csosto-pk","followers_url":"https://api.github.com/users/csosto-pk/followers","following_url":"https://api.github.com/users/csosto-pk/following{/other_user}","gists_url":"https://api.github.com/users/csosto-pk/gists{/gist_id}","starred_url":"https://api.github.com/users/csosto-pk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/csosto-pk/subscriptions","organizations_url":"https://api.github.com/users/csosto-pk/orgs","repos_url":"https://api.github.com/users/csosto-pk/repos","events_url":"https://api.github.com/users/csosto-pk/events{/privacy}","received_events_url":"https://api.github.com/users/csosto-pk/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-02-03T17:09:16Z","updated_at":"2023-02-03T17:09:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi folks, \r\n\r\nSome collaborators are trying to interop our PQ SSH key exchange in NIST NCCOE's PQ Migration effort. As we are working through this we well all try to interop with the ```ecdh-nistp256-kyber-512-sha256``` which is also supported in OQS OpenSSH and wolfSSH, which is great. \r\n\r\nNow there is one concern about backwards compatibility. Someone that implements the method name ```ecdh-nistp256-kyber-512-sha256``` today may have interop issues in a couple of years when Kyber has been slightly tweaked or something in the method has been tweaked in the draft and the server is updated to the latest but the client is not. That is a concern for any RFC draft which changes over time. \r\n\r\nTo prevent such problems we could introduce a temporary identifier that basically creates a snapshot of the method in time. For example, we could rename ```ecdh-nistp256-kyber-512-sha256`` tomethod name ```ecdh-nistp256-kyber-512r3-sha256-d00```. That basically means the method is specific to the time it was implemented (Kyber-512 round 3 the way draft -00 explained the method. In the next change its name will change to something like ```ecdh-nistp256-kyber-512r4-sha256-d01``` or something like that. So, old clients that were not upgraded would not be able to negotiate ```ecdh-nistp256-kyber-512r3-sha256-d00``` any more and they would still interop using classical methods. \r\n\r\nI know this is not something we have done for TLS 1.3 group names, or SSH methods. But have you given it any thought? \r\n\r\nWould it be too much overhead to rename the method every time something underlying (KEM algorithm, or implementation detail) changes?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/134/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-02-03T17:09:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26861987785","type":"IssuesEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/135","id":1570324001,"node_id":"I_kwDOBsoLV85dmT4h","number":135,"title":"Migrate to OpenSSH 9.2","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-02-03T19:17:26Z","updated_at":"2023-02-03T19:17:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Migrate to the 9.x branch. Interestingly, hybrid PQC is now the *default* since 9.0.\r\n\r\nFrom the 9.0 [release notes](https://www.openssh.com/releasenotes.html):\r\n```\r\n* [ssh(1)](https://man.openbsd.org/ssh.1), [sshd(8)](https://man.openbsd.org/sshd.8): use the hybrid Streamlined NTRU Prime + x25519 key\r\n   exchange method by default (\"sntrup761x25519-sha512@openssh.com\").\r\n   The NTRU algorithm is believed to resist attacks enabled by future\r\n   quantum computers and is paired with the X25519 ECDH key exchange\r\n   (the previous default) as a backstop against any weaknesses in\r\n   NTRU Prime that may be discovered in the future. The combination\r\n   ensures that the hybrid exchange offers at least as good security\r\n   as the status quo.\r\n\r\n   We are making this change now (i.e. ahead of cryptographically-\r\n   relevant quantum computers) to prevent \"capture now, decrypt\r\n   later\" attacks where an adversary who can record and store SSH\r\n   session ciphertext would be able to decrypt it once a sufficiently\r\n   advanced quantum computer is available.\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/135/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-02-03T19:17:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
