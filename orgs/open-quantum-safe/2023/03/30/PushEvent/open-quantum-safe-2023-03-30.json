{"id":"28079962452","type":"PushEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"repository_id":334511511,"push_id":13125375246,"size":1,"distinct_size":1,"ref":"refs/heads/main","head":"1cc0166cffa9a6854533927c830ce11e70841d1c","before":"53cc629877412766d44e2a53723fb02d904cc845","commits":[{"sha":"1cc0166cffa9a6854533927c830ce11e70841d1c","author":{"email":"57787676+baentsch@users.noreply.github.com","name":"Michael Baentsch"},"message":"enable OSX CI (#135)\n\n* enable OSX CI","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/commits/1cc0166cffa9a6854533927c830ce11e70841d1c"}]},"public":true,"created_at":"2023-03-30T05:10:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"28092266365","type":"PushEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"repository_id":113904471,"push_id":13131408428,"size":8,"distinct_size":8,"ref":"refs/heads/OQS-v8","head":"cbac1b13c002c8993c65adeb9042bdced9c8f198","before":"7d752e301c51e831678afa02203d941cc4221fe7","commits":[{"sha":"1fdbc16bb16e01f500e035d50bc5530ffb5d1a83","author":{"email":"pankab@gmail.com","name":"Panos K"},"message":"Fixing encoding issue 136\n\nFixing a interop issue with how the ECDH shared secret is represented before passed as input into the SSH KDF. It should no longer be an `mpint`, it is should be raw data / `byte` array. Btw, that is what OpenSSH does with its X25519+SNTRU PQ-hybrid key exchange method. \r\n\r\nMore details in [issue #136](https://github.com/open-quantum-safe/openssh/issues/136)\r\n\r\nPatch courtesy of @geedo0 .\r\n\r\n\r\nMore details in https://github.com/open-quantum-safe/openssh/issues/136","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/1fdbc16bb16e01f500e035d50bc5530ffb5d1a83"},{"sha":"16c98d1f34b7d38d2fa792e520e16a5913acf65e","author":{"email":"pankab@gmail.com","name":"Panos K"},"message":"Update kex.h with updated method names in draft\n\nAdding updates as per draft after the backwards compatibility change in https://github.com/csosto-pk/opensshpq-136","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/16c98d1f34b7d38d2fa792e520e16a5913acf65e"},{"sha":"5fd6eabe5614e5ba5f26a572b73bbcb6c41b9dcb","author":{"email":"pankab@gmail.com","name":"Panos K"},"message":"Update the rest of the hybrid method names\n\n[PR 136](https://github.com/csosto-pk/opensshpq-136/pull/1) broke backwards compatibility. As agreed in [Issue #137](https://github.com/open-quantum-safe/openssh/issues/136) we ought to update the names so we don't break backwards compatibility. [PR 137](https://github.com/open-quantum-safe/openssh/pull/137) updates the three method names which are in [the draft](https://github.com/csosto-pk/pq-ssh/blob/master/draft-kampanakis-ssh-pq-ke.txt). \r\n\r\nThis PR updates the rest of the PQ-hybrid key exchange method names. \r\n- It does not use `-d00` as these are not in the draft.\r\n- It uses `-r2` for Frodo since it was not picker in Round 3. For the rest it uses `-r3`.","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/5fd6eabe5614e5ba5f26a572b73bbcb6c41b9dcb"},{"sha":"386b81a840b2e3c9e393b27b9510f4d06e72df97","author":{"email":"dstebila@uwaterloo.ca","name":"Douglas Stebila"},"message":"Update oqs-template for KEX method names","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/386b81a840b2e3c9e393b27b9510f4d06e72df97"},{"sha":"e3788db8de3fe7aa57309506f1066a3ffd861369","author":{"email":"dstebila@uwaterloo.ca","name":"Douglas Stebila"},"message":"Update KEX method names elsewhere","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/e3788db8de3fe7aa57309506f1066a3ffd861369"},{"sha":"73f98a571e039a0bc022c343d65f30fe029fc791","author":{"email":"pankab@gmail.com","name":"Panos K"},"message":"Merge branch 'open-quantum-safe:OQS-v8' into OQS-v8","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/73f98a571e039a0bc022c343d65f30fe029fc791"},{"sha":"d77a521d674b657d87148689eac5103b81a644ac","author":{"email":"pankab@gmail.com","name":"Panos K"},"message":"Merge pull request #1 from csosto-pk/patch-issue-136\n\nFixing encoding issue 136","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/d77a521d674b657d87148689eac5103b81a644ac"},{"sha":"cbac1b13c002c8993c65adeb9042bdced9c8f198","author":{"email":"cpaquin@microsoft.com","name":"Christian Paquin"},"message":"Merge pull request #138 from csosto-pk/OQS-v8\n\nUpdate method names in kex.h","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/cbac1b13c002c8993c65adeb9042bdced9c8f198"}]},"public":true,"created_at":"2023-03-30T13:46:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"28092285195","type":"PushEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"repository_id":113904471,"push_id":13131417366,"size":2,"distinct_size":2,"ref":"refs/heads/OQS-v8","head":"abaa4375f729270f1b77ec2ab9743ec53b23df48","before":"cbac1b13c002c8993c65adeb9042bdced9c8f198","commits":[{"sha":"584ce4124e90276ee417b4a7a7a870d174a63464","author":{"email":"pankab@gmail.com","name":"Panos K"},"message":"Merge branch 'open-quantum-safe:OQS-v8' into patch-issue-136","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/584ce4124e90276ee417b4a7a7a870d174a63464"},{"sha":"abaa4375f729270f1b77ec2ab9743ec53b23df48","author":{"email":"cpaquin@microsoft.com","name":"Christian Paquin"},"message":"Merge pull request #137 from csosto-pk/patch-issue-136\n\nFixing encoding issue 136","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/openssh/commits/abaa4375f729270f1b77ec2ab9743ec53b23df48"}]},"public":true,"created_at":"2023-03-30T13:47:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"28104365179","type":"PushEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":397651453,"name":"open-quantum-safe/libssh","url":"https://api.github.com/repos/open-quantum-safe/libssh"},"payload":{"repository_id":397651453,"push_id":13137320656,"size":2,"distinct_size":2,"ref":"refs/heads/kkane/readmefix","head":"414bab4e1e7654fb8128b146cea94d39cd42eecc","before":"0f8f05215acdb917558287e10a01d75ddca966e1","commits":[{"sha":"9aa36c32f60e1f4599e0f7bd704c552e4d2134f4","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Add g++ and libpam0g-dev to list of Ubuntu build dependencies for libssh, and always build OpenSSH with PAM support\n\nlibssh client tests always put a UsePAM directive in the config file when running OpenSSH's sshd as the server. They'll fail immediately if OpenSSH is built without PAM support because it will reject the config file outright.","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/9aa36c32f60e1f4599e0f7bd704c552e4d2134f4"},{"sha":"414bab4e1e7654fb8128b146cea94d39cd42eecc","author":{"email":"kkane@microsoft.com","name":"Kevin Kane"},"message":"Add a Dockerfile to simulate CI for local runs","distinct":true,"url":"https://api.github.com/repos/open-quantum-safe/libssh/commits/414bab4e1e7654fb8128b146cea94d39cd42eecc"}]},"public":true,"created_at":"2023-03-30T22:29:48Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
