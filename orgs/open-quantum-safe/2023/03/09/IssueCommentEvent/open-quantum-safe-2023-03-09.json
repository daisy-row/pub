{"id":"27593464192","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1315","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1315/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1315/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1315/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1315","id":1434869943,"node_id":"I_kwDOA-eq3c5VhmC3","number":1315,"title":"Malleable Falcon signatures, may need upgrade to v1.2 spec","user":{"login":"WizardOfMenlo","id":9511741,"node_id":"MDQ6VXNlcjk1MTE3NDE=","avatar_url":"https://avatars.githubusercontent.com/u/9511741?v=4","gravatar_id":"","url":"https://api.github.com/users/WizardOfMenlo","html_url":"https://github.com/WizardOfMenlo","followers_url":"https://api.github.com/users/WizardOfMenlo/followers","following_url":"https://api.github.com/users/WizardOfMenlo/following{/other_user}","gists_url":"https://api.github.com/users/WizardOfMenlo/gists{/gist_id}","starred_url":"https://api.github.com/users/WizardOfMenlo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WizardOfMenlo/subscriptions","organizations_url":"https://api.github.com/users/WizardOfMenlo/orgs","repos_url":"https://api.github.com/users/WizardOfMenlo/repos","events_url":"https://api.github.com/users/WizardOfMenlo/events{/privacy}","received_events_url":"https://api.github.com/users/WizardOfMenlo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/18","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18/labels","id":7069955,"node_id":"MI_kwDOA-eq3c4Aa-ED","number":18,"title":"0.8.0","description":"See https://github.com/open-quantum-safe/liboqs/issues/1245#issuecomment-1319218926 for table of algorithm updates.","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":6,"state":"open","created_at":"2021-08-18T14:40:17Z","updated_at":"2023-03-09T03:18:19Z","due_on":"2023-03-31T07:00:00Z","closed_at":null},"comments":3,"created_at":"2022-11-03T15:37:15Z","updated_at":"2023-03-09T03:18:19Z","closed_at":"2023-03-09T03:18:18Z","author_association":"NONE","active_lock_reason":null,"body":"Hi there,\r\n\r\nThe clean/avx2 implementations of Falcon-512 and Falcon-1024 seem to be unaligned with some changes introduced in v1.2 of the spec.\r\n\r\nIn particular, the implementation of the signature verification algorithm currently in libOQS accepts mauled signatures due to how `comp_decode` in `codec.c` is implemented. I attached an example program for ease of inspection.\r\n\r\nFollowing Section 3.11.2 and Algorithms 17-18 in the Falcon spec v1.2, I believe that in order to enforce a unique encoding of compressed signatures, the decode implementation should not accept 100000001 (\"-0\") as a valid encoding of 0, and should check that signatures are padded using zeroes.\r\n\r\nKind Regards,\r\nGiacomo Fenzi\r\n\r\nAttached bug: [bug.c](https://gist.github.com/WizardOfMenlo/59e6e0457f94bf5caf13909f319007de)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1315/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1461207783","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1315#issuecomment-1461207783","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1315","id":1461207783,"node_id":"IC_kwDOA-eq3c5XGELn","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T03:18:18Z","updated_at":"2023-03-09T03:18:18Z","author_association":"MEMBER","body":"Closed by #1395 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1461207783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T03:18:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27593557049","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/136","id":1592791838,"node_id":"I_kwDOBsoLV85e8BMe","number":136,"title":"PQ-hybrid key exchange encodings","user":{"login":"csosto-pk","id":24617764,"node_id":"MDQ6VXNlcjI0NjE3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/24617764?v=4","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","html_url":"https://github.com/csosto-pk","followers_url":"https://api.github.com/users/csosto-pk/followers","following_url":"https://api.github.com/users/csosto-pk/following{/other_user}","gists_url":"https://api.github.com/users/csosto-pk/gists{/gist_id}","starred_url":"https://api.github.com/users/csosto-pk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/csosto-pk/subscriptions","organizations_url":"https://api.github.com/users/csosto-pk/orgs","repos_url":"https://api.github.com/users/csosto-pk/repos","events_url":"https://api.github.com/users/csosto-pk/events{/privacy}","received_events_url":"https://api.github.com/users/csosto-pk/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2023-02-21T04:56:06Z","updated_at":"2023-03-09T03:25:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\n\r\nAs we are interop testing we found an issue in how OQS OpenSSH encodes the exchanged keys.\r\n\r\nThe way it works today in OQS OpenSSH, the shared secret is `K = HASH((PQ shared key) || (ECDH shared key))`\r\n- The ```PQ shared key``` is encoded as raw data (`byte` in the SSH RFC https://www.rfc-editor.org/rfc/rfc4251#section-5 ). \r\n- The ```ECDH shared key``` is encoded as ```mpint``` as per the SSH RFC https://www.rfc-editor.org/rfc/rfc4251#section-5 . That is probably because that it was done previously as per RFC4253 and because the exchanged ECDH shared key is a big integer and `K` ended up being `mpint`. \r\n- `K = HASH((PQ shared key) || (ECDH shared key))` is used as a `byte` array for deriving encryption keys for SSH https://github.com/open-quantum-safe/openssh/blob/92c59cf2f25fb32b21ce8d7b11a8af246ea17062/kexoqsecdh.c#L94 \r\n\r\nThe PQ SSH draft is currently a little ambiguous on this, and I will update it to be more prescriptive, but we want to make a suggestion here to make sure we are all implementers on the same page: \r\n\r\nBoth ```PQ shared key``` and ```ECDH shared key``` would rather be a simple `byte` array padded to the nearest byte boundary. Previously `mpint` worked because ```ECDH shared key``` was going directly into `K`, but that is not the case any more. ```PQ shared key``` and ```ECDH shared key``` go into a hash, so they ought to be raw data, fixed-length, simple `byte` array padded to the nearest byte boundary. Using `mpint` for one shared key and raw data for the other is inconsistent and `mpint` adds some predictability into the content of the hash input buffer. \r\n\r\nBtw, that is what OpenSSH does with its X25519+SNTRU PQ-hybrid key exchange method. \r\n\r\n@dstebila , @baentsch , @christianpaquin , what do you think? ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1461212271","html_url":"https://github.com/open-quantum-safe/openssh/issues/136#issuecomment-1461212271","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136","id":1461212271,"node_id":"IC_kwDOBsoLV85XGFRv","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T03:25:48Z","updated_at":"2023-03-09T03:25:48Z","author_association":"MEMBER","body":"> > I don't think this addresses my concern though. Within OQS-OpenSSH, what is being called ecdh-nistp384-kyber-768-sha384 has changed from before this commit to after, and thus a user of the version from before this commit will be incompatible with a user of the version from after this commit for the same method name ecdh-nistp384-kyber-768-sha384.\r\n> \r\n> Agreed. Maybe you want to add versioning to all previous compatibility breaking names, but that is probably a lot of work given all the method names and the iterations.\r\n\r\nYes, I guess we haven't been very good about that, so most method names we're using now have this problem.  Is it worth doing it here since we know about it?  @baentsch @xvzcf @christianpaquin @kevinmkane any opinions?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1461212271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T03:25:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27593569998","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/events","html_url":"https://github.com/open-quantum-safe/openssh/pull/137","id":1615654103,"node_id":"PR_kwDOBsoLV85Ll2Il","number":137,"title":"Fixing encoding issue 136","user":{"login":"csosto-pk","id":24617764,"node_id":"MDQ6VXNlcjI0NjE3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/24617764?v=4","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","html_url":"https://github.com/csosto-pk","followers_url":"https://api.github.com/users/csosto-pk/followers","following_url":"https://api.github.com/users/csosto-pk/following{/other_user}","gists_url":"https://api.github.com/users/csosto-pk/gists{/gist_id}","starred_url":"https://api.github.com/users/csosto-pk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/csosto-pk/subscriptions","organizations_url":"https://api.github.com/users/csosto-pk/orgs","repos_url":"https://api.github.com/users/csosto-pk/repos","events_url":"https://api.github.com/users/csosto-pk/events{/privacy}","received_events_url":"https://api.github.com/users/csosto-pk/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-03-08T17:35:30Z","updated_at":"2023-03-09T03:26:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/pulls/137","html_url":"https://github.com/open-quantum-safe/openssh/pull/137","diff_url":"https://github.com/open-quantum-safe/openssh/pull/137.diff","patch_url":"https://github.com/open-quantum-safe/openssh/pull/137.patch","merged_at":null},"body":"Fixing a interop issue with how the ECDH shared secret is represented before passed as input into the SSH KDF. It should no longer be an `mpint`, it is should be raw data / `byte` array. Btw, that is what OpenSSH does with its X25519+SNTRU PQ-hybrid key exchange method. \r\n\r\nMore details in [issue #136](https://github.com/open-quantum-safe/openssh/issues/136)\r\n\r\nPatch courtesy of @geedo0 .\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1461212881","html_url":"https://github.com/open-quantum-safe/openssh/pull/137#issuecomment-1461212881","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137","id":1461212881,"node_id":"IC_kwDOBsoLV85XGFbR","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T03:26:55Z","updated_at":"2023-03-09T03:26:55Z","author_association":"MEMBER","body":"The AppVeyor build is failing (https://ci.appveyor.com/project/dstebila/openssh/builds/46446128) but this seems to be unrelated to the changes in this PR.  @christianpaquin any ideas?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1461212881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T03:26:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27593577877","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/66","id":727806598,"node_id":"MDU6SXNzdWU3Mjc4MDY1OTg=","number":66,"title":"Update hybrid key exchange format to match Internet-Draft","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-10-23T00:32:17Z","updated_at":"2023-03-09T03:27:35Z","closed_at":"2023-03-09T03:27:35Z","author_association":"MEMBER","active_lock_reason":null,"body":"https://tools.ietf.org/html/draft-kampanakis-curdle-pq-ssh-00","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1461213222","html_url":"https://github.com/open-quantum-safe/openssh/issues/66#issuecomment-1461213222","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66","id":1461213222,"node_id":"IC_kwDOBsoLV85XGFgm","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T03:27:35Z","updated_at":"2023-03-09T03:27:35Z","author_association":"MEMBER","body":"Obsoleted by #136.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1461213222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T03:27:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27607359545","type":"IssueCommentEvent","actor":{"id":24617764,"login":"csosto-pk","display_login":"csosto-pk","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","avatar_url":"https://avatars.githubusercontent.com/u/24617764?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/66","id":727806598,"node_id":"MDU6SXNzdWU3Mjc4MDY1OTg=","number":66,"title":"Update hybrid key exchange format to match Internet-Draft","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-10-23T00:32:17Z","updated_at":"2023-03-09T13:51:56Z","closed_at":"2023-03-09T03:27:35Z","author_association":"MEMBER","active_lock_reason":null,"body":"https://tools.ietf.org/html/draft-kampanakis-curdle-pq-ssh-00","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1462104844","html_url":"https://github.com/open-quantum-safe/openssh/issues/66#issuecomment-1462104844","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/66","id":1462104844,"node_id":"IC_kwDOBsoLV85XJfMM","user":{"login":"csosto-pk","id":24617764,"node_id":"MDQ6VXNlcjI0NjE3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/24617764?v=4","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","html_url":"https://github.com/csosto-pk","followers_url":"https://api.github.com/users/csosto-pk/followers","following_url":"https://api.github.com/users/csosto-pk/following{/other_user}","gists_url":"https://api.github.com/users/csosto-pk/gists{/gist_id}","starred_url":"https://api.github.com/users/csosto-pk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/csosto-pk/subscriptions","organizations_url":"https://api.github.com/users/csosto-pk/orgs","repos_url":"https://api.github.com/users/csosto-pk/repos","events_url":"https://api.github.com/users/csosto-pk/events{/privacy}","received_events_url":"https://api.github.com/users/csosto-pk/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T13:51:56Z","updated_at":"2023-03-09T13:51:56Z","author_association":"NONE","body":"There is still a missing method from the draft which is not supported in OQS OpenSSH. That is the x25519+Kyber512 one. \r\nI could submit that in a separate ticket, that is not a problem. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1462104844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T13:51:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27609783433","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/events","html_url":"https://github.com/open-quantum-safe/openssh/pull/137","id":1615654103,"node_id":"PR_kwDOBsoLV85Ll2Il","number":137,"title":"Fixing encoding issue 136","user":{"login":"csosto-pk","id":24617764,"node_id":"MDQ6VXNlcjI0NjE3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/24617764?v=4","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","html_url":"https://github.com/csosto-pk","followers_url":"https://api.github.com/users/csosto-pk/followers","following_url":"https://api.github.com/users/csosto-pk/following{/other_user}","gists_url":"https://api.github.com/users/csosto-pk/gists{/gist_id}","starred_url":"https://api.github.com/users/csosto-pk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/csosto-pk/subscriptions","organizations_url":"https://api.github.com/users/csosto-pk/orgs","repos_url":"https://api.github.com/users/csosto-pk/repos","events_url":"https://api.github.com/users/csosto-pk/events{/privacy}","received_events_url":"https://api.github.com/users/csosto-pk/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-03-08T17:35:30Z","updated_at":"2023-03-09T15:15:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/pulls/137","html_url":"https://github.com/open-quantum-safe/openssh/pull/137","diff_url":"https://github.com/open-quantum-safe/openssh/pull/137.diff","patch_url":"https://github.com/open-quantum-safe/openssh/pull/137.patch","merged_at":null},"body":"Fixing a interop issue with how the ECDH shared secret is represented before passed as input into the SSH KDF. It should no longer be an `mpint`, it is should be raw data / `byte` array. Btw, that is what OpenSSH does with its X25519+SNTRU PQ-hybrid key exchange method. \r\n\r\nMore details in [issue #136](https://github.com/open-quantum-safe/openssh/issues/136)\r\n\r\nPatch courtesy of @geedo0 .\r\n\r\nFixes #136 ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1462230506","html_url":"https://github.com/open-quantum-safe/openssh/pull/137#issuecomment-1462230506","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/137","id":1462230506,"node_id":"IC_kwDOBsoLV85XJ93q","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T15:15:58Z","updated_at":"2023-03-09T15:15:58Z","author_association":"NONE","body":"Looks like a permission issue with the test key files; indeed unrelated to this PR. I checked that last merged PR, but I don't see a trace of the AppVeyor test anymore, so can't compare. AppVeyor still uses cygwin in this project (vs. msBuild in openssl); probably time for a revamp.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1462230506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T15:15:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27610441753","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/121","id":1617366426,"node_id":"I_kwDOE_A9l85gZw2a","number":121,"title":"Error: signature algorithms with excessive message size","user":{"login":"VeronikaNguyen","id":82515642,"node_id":"MDQ6VXNlcjgyNTE1NjQy","avatar_url":"https://avatars.githubusercontent.com/u/82515642?v=4","gravatar_id":"","url":"https://api.github.com/users/VeronikaNguyen","html_url":"https://github.com/VeronikaNguyen","followers_url":"https://api.github.com/users/VeronikaNguyen/followers","following_url":"https://api.github.com/users/VeronikaNguyen/following{/other_user}","gists_url":"https://api.github.com/users/VeronikaNguyen/gists{/gist_id}","starred_url":"https://api.github.com/users/VeronikaNguyen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VeronikaNguyen/subscriptions","organizations_url":"https://api.github.com/users/VeronikaNguyen/orgs","repos_url":"https://api.github.com/users/VeronikaNguyen/repos","events_url":"https://api.github.com/users/VeronikaNguyen/events{/privacy}","received_events_url":"https://api.github.com/users/VeronikaNguyen/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-03-09T14:28:57Z","updated_at":"2023-03-09T15:38:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When trying to run TLS with the signature algorithms `sphincssha256128frobust`, `sphincsharaka128frobust`, `sphincsharaka128fsimple`, `sphincsshake256128fsimple`, I get the following errors.\r\nServer error: \r\n```\r\n7C240000:error:0A000417:SSL routines:ssl3_read_bytes:ssl/tls alert illegal parameter:ssl\\record\\rec_layer_s3.c:839:SSL alert number 47\r\n```\r\nClient error:\r\n```\r\n142B0000:error:0A000098:SSL routines:read_state_machine:excessive message size:ssl\\statem\\statem.c:648:\r\n```\r\n\r\nSome further comments:\r\n- I double-checked if the algorithms above were enabled by liboqs and indeed they are. \r\n- TLS works with `sphincssha256128ssimple` and the other enabled signature algorithms.\r\n\r\nI debugged into the openssl library. \r\nIn `statem.c`:\r\n```\r\n            if (s->s3.tmp.message_size > max_message_size(s)) {\r\n                SSLfatal(s, SSL_AD_ILLEGAL_PARAMETER,\r\n                         SSL_R_EXCESSIVE_MESSAGE_SIZE);\r\n                return SUB_STATE_ERROR;\r\n            }\r\n```\r\n`max_message_size(s)` is set by `SSL3_RT_MAX_PLAIN_LENGTH = 16384`. However,  `s->s3.tmp.message_size` is larger than `16384` this resulting in the `SSLfatal` error. \r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1462270119","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/121#issuecomment-1462270119","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121","id":1462270119,"node_id":"IC_kwDOE_A9l85XKHin","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T15:38:56Z","updated_at":"2023-03-09T15:38:56Z","author_association":"MEMBER","body":"Yes. This reminds me of https://github.com/openssl/openssl/issues/10512#issuecomment-1263184329: As you also point out, this is an OpenSSL `master` (constants) issue. Let's raise it there: Do you want to do this or shall I, e.g., referencing my statement made in September:\r\n\r\n> My suggestion would be to defer this until this issue is closed, though.\r\n\r\n?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1462270119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T15:38:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27610768233","type":"IssueCommentEvent","actor":{"id":18724089,"login":"kevinmkane","display_login":"kevinmkane","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","avatar_url":"https://avatars.githubusercontent.com/u/18724089?"},"repo":{"id":113904471,"name":"open-quantum-safe/openssh","url":"https://api.github.com/repos/open-quantum-safe/openssh"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136","repository_url":"https://api.github.com/repos/open-quantum-safe/openssh","labels_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/events","html_url":"https://github.com/open-quantum-safe/openssh/issues/136","id":1592791838,"node_id":"I_kwDOBsoLV85e8BMe","number":136,"title":"PQ-hybrid key exchange encodings","user":{"login":"csosto-pk","id":24617764,"node_id":"MDQ6VXNlcjI0NjE3NzY0","avatar_url":"https://avatars.githubusercontent.com/u/24617764?v=4","gravatar_id":"","url":"https://api.github.com/users/csosto-pk","html_url":"https://github.com/csosto-pk","followers_url":"https://api.github.com/users/csosto-pk/followers","following_url":"https://api.github.com/users/csosto-pk/following{/other_user}","gists_url":"https://api.github.com/users/csosto-pk/gists{/gist_id}","starred_url":"https://api.github.com/users/csosto-pk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/csosto-pk/subscriptions","organizations_url":"https://api.github.com/users/csosto-pk/orgs","repos_url":"https://api.github.com/users/csosto-pk/repos","events_url":"https://api.github.com/users/csosto-pk/events{/privacy}","received_events_url":"https://api.github.com/users/csosto-pk/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2023-02-21T04:56:06Z","updated_at":"2023-03-09T15:50:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\n\r\nAs we are interop testing we found an issue in how OQS OpenSSH encodes the exchanged keys.\r\n\r\nThe way it works today in OQS OpenSSH, the shared secret is `K = HASH((PQ shared key) || (ECDH shared key))`\r\n- The ```PQ shared key``` is encoded as raw data (`byte` in the SSH RFC https://www.rfc-editor.org/rfc/rfc4251#section-5 ). \r\n- The ```ECDH shared key``` is encoded as ```mpint``` as per the SSH RFC https://www.rfc-editor.org/rfc/rfc4251#section-5 . That is probably because that it was done previously as per RFC4253 and because the exchanged ECDH shared key is a big integer and `K` ended up being `mpint`. \r\n- `K = HASH((PQ shared key) || (ECDH shared key))` is used as a `byte` array for deriving encryption keys for SSH https://github.com/open-quantum-safe/openssh/blob/92c59cf2f25fb32b21ce8d7b11a8af246ea17062/kexoqsecdh.c#L94 \r\n\r\nThe PQ SSH draft is currently a little ambiguous on this, and I will update it to be more prescriptive, but we want to make a suggestion here to make sure we are all implementers on the same page: \r\n\r\nBoth ```PQ shared key``` and ```ECDH shared key``` would rather be a simple `byte` array padded to the nearest byte boundary. Previously `mpint` worked because ```ECDH shared key``` was going directly into `K`, but that is not the case any more. ```PQ shared key``` and ```ECDH shared key``` go into a hash, so they ought to be raw data, fixed-length, simple `byte` array padded to the nearest byte boundary. Using `mpint` for one shared key and raw data for the other is inconsistent and `mpint` adds some predictability into the content of the hash input buffer. \r\n\r\nBtw, that is what OpenSSH does with its X25519+SNTRU PQ-hybrid key exchange method. \r\n\r\n@dstebila , @baentsch , @christianpaquin , what do you think? ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1462297034","html_url":"https://github.com/open-quantum-safe/openssh/issues/136#issuecomment-1462297034","issue_url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/136","id":1462297034,"node_id":"IC_kwDOBsoLV85XKOHK","user":{"login":"kevinmkane","id":18724089,"node_id":"MDQ6VXNlcjE4NzI0MDg5","avatar_url":"https://avatars.githubusercontent.com/u/18724089?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinmkane","html_url":"https://github.com/kevinmkane","followers_url":"https://api.github.com/users/kevinmkane/followers","following_url":"https://api.github.com/users/kevinmkane/following{/other_user}","gists_url":"https://api.github.com/users/kevinmkane/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinmkane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinmkane/subscriptions","organizations_url":"https://api.github.com/users/kevinmkane/orgs","repos_url":"https://api.github.com/users/kevinmkane/repos","events_url":"https://api.github.com/users/kevinmkane/events{/privacy}","received_events_url":"https://api.github.com/users/kevinmkane/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T15:50:32Z","updated_at":"2023-03-09T15:50:32Z","author_association":"NONE","body":"I would encourage changing the name for any method whose operation will be different after this change just to prevent the pain of two parties using versions on different sides of this change.\r\n\r\nAre all these names considered experimental, anyway? Will there be any expectation of interop when the standards is finalized and implementations snap to them?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssh/issues/comments/1462297034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T15:50:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27611187601","type":"IssueCommentEvent","actor":{"id":82515642,"login":"VeronikaNguyen","display_login":"VeronikaNguyen","gravatar_id":"","url":"https://api.github.com/users/VeronikaNguyen","avatar_url":"https://avatars.githubusercontent.com/u/82515642?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/121","id":1617366426,"node_id":"I_kwDOE_A9l85gZw2a","number":121,"title":"Error: signature algorithms with excessive message size","user":{"login":"VeronikaNguyen","id":82515642,"node_id":"MDQ6VXNlcjgyNTE1NjQy","avatar_url":"https://avatars.githubusercontent.com/u/82515642?v=4","gravatar_id":"","url":"https://api.github.com/users/VeronikaNguyen","html_url":"https://github.com/VeronikaNguyen","followers_url":"https://api.github.com/users/VeronikaNguyen/followers","following_url":"https://api.github.com/users/VeronikaNguyen/following{/other_user}","gists_url":"https://api.github.com/users/VeronikaNguyen/gists{/gist_id}","starred_url":"https://api.github.com/users/VeronikaNguyen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VeronikaNguyen/subscriptions","organizations_url":"https://api.github.com/users/VeronikaNguyen/orgs","repos_url":"https://api.github.com/users/VeronikaNguyen/repos","events_url":"https://api.github.com/users/VeronikaNguyen/events{/privacy}","received_events_url":"https://api.github.com/users/VeronikaNguyen/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-03-09T14:28:57Z","updated_at":"2023-03-09T16:05:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When trying to run TLS with the signature algorithms `sphincssha256128frobust`, `sphincsharaka128frobust`, `sphincsharaka128fsimple`, `sphincsshake256128fsimple`, I get the following errors.\r\nServer error: \r\n```\r\n7C240000:error:0A000417:SSL routines:ssl3_read_bytes:ssl/tls alert illegal parameter:ssl\\record\\rec_layer_s3.c:839:SSL alert number 47\r\n```\r\nClient error:\r\n```\r\n142B0000:error:0A000098:SSL routines:read_state_machine:excessive message size:ssl\\statem\\statem.c:648:\r\n```\r\n\r\nSome further comments:\r\n- I double-checked if the algorithms above were enabled by liboqs and indeed they are. \r\n- TLS works with `sphincssha256128ssimple` and the other enabled signature algorithms.\r\n\r\nI debugged into the openssl library. \r\nIn `statem.c`:\r\n```\r\n            if (s->s3.tmp.message_size > max_message_size(s)) {\r\n                SSLfatal(s, SSL_AD_ILLEGAL_PARAMETER,\r\n                         SSL_R_EXCESSIVE_MESSAGE_SIZE);\r\n                return SUB_STATE_ERROR;\r\n            }\r\n```\r\n`max_message_size(s)` is set by `SSL3_RT_MAX_PLAIN_LENGTH = 16384`. However,  `s->s3.tmp.message_size` is larger than `16384` this resulting in the `SSLfatal` error. \r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1462326800","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/121#issuecomment-1462326800","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/121","id":1462326800,"node_id":"IC_kwDOE_A9l85XKVYQ","user":{"login":"VeronikaNguyen","id":82515642,"node_id":"MDQ6VXNlcjgyNTE1NjQy","avatar_url":"https://avatars.githubusercontent.com/u/82515642?v=4","gravatar_id":"","url":"https://api.github.com/users/VeronikaNguyen","html_url":"https://github.com/VeronikaNguyen","followers_url":"https://api.github.com/users/VeronikaNguyen/followers","following_url":"https://api.github.com/users/VeronikaNguyen/following{/other_user}","gists_url":"https://api.github.com/users/VeronikaNguyen/gists{/gist_id}","starred_url":"https://api.github.com/users/VeronikaNguyen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VeronikaNguyen/subscriptions","organizations_url":"https://api.github.com/users/VeronikaNguyen/orgs","repos_url":"https://api.github.com/users/VeronikaNguyen/repos","events_url":"https://api.github.com/users/VeronikaNguyen/events{/privacy}","received_events_url":"https://api.github.com/users/VeronikaNguyen/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T16:05:24Z","updated_at":"2023-03-09T16:05:24Z","author_association":"NONE","body":"Thanks for the fast reply and pointer to [https://github.com/openssl/openssl/issues/10512#issuecomment-1263184329](https://github.com/openssl/openssl/issues/10512#issuecomment-1263184329). I will open an issue in OpenSSL `master` and reference your comment there.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1462326800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T16:05:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27611700688","type":"IssueCommentEvent","actor":{"id":20669141,"login":"takao8","display_login":"takao8","gravatar_id":"","url":"https://api.github.com/users/takao8","avatar_url":"https://avatars.githubusercontent.com/u/20669141?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/92","id":940937833,"node_id":"MDU6SXNzdWU5NDA5Mzc4MzM=","number":92,"title":"Add OQS to libnss (enabling loading quantum safe certificate into Chromium)","user":{"login":"tylerleblond","id":87200668,"node_id":"MDQ6VXNlcjg3MjAwNjY4","avatar_url":"https://avatars.githubusercontent.com/u/87200668?v=4","gravatar_id":"","url":"https://api.github.com/users/tylerleblond","html_url":"https://github.com/tylerleblond","followers_url":"https://api.github.com/users/tylerleblond/followers","following_url":"https://api.github.com/users/tylerleblond/following{/other_user}","gists_url":"https://api.github.com/users/tylerleblond/gists{/gist_id}","starred_url":"https://api.github.com/users/tylerleblond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tylerleblond/subscriptions","organizations_url":"https://api.github.com/users/tylerleblond/orgs","repos_url":"https://api.github.com/users/tylerleblond/repos","events_url":"https://api.github.com/users/tylerleblond/events{/privacy}","received_events_url":"https://api.github.com/users/tylerleblond/received_events","type":"User","site_admin":false},"labels":[{"id":1643196491,"node_id":"MDU6TGFiZWwxNjQzMTk2NDkx","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/labels/future%20work","name":"future work","color":"cfd3d7","default":false,"description":"This issue is something that may be dealt with"},{"id":1643196497,"node_id":"MDU6TGFiZWwxNjQzMTk2NDk3","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2021-07-09T17:12:04Z","updated_at":"2023-03-09T16:24:08Z","closed_at":"2022-04-13T07:09:57Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, \r\n\r\nI am currently trying to use the quantum-safe Chromium (0.5.0) build as a client to connect to the OQS haproxy container using its default certificate generation settings (the default signature algorithm used is dilithium3 according to this page: https://github.com/open-quantum-safe/oqs-demos/tree/main/haproxy). I tried to load the CA certificate from the haproxy container into Chromium but got the following error: \r\n\r\n<img width=\"1443\" alt=\"Screen Shot 2021-07-09 at 12 51 02 PM\" src=\"https://user-images.githubusercontent.com/87200668/125111931-82e96100-e0b4-11eb-9ab4-58343277228b.png\">\r\n\r\nI have verified that I am able to use Curl with this certificate for authentication to access the haproxy, so it is not an issue with the certificate. \r\n\r\nIt appears that I obtain this error when I try to install certificates that use quantum-safe digital signature algorithms. For example, making use of the OQS fork of OpenSSL contained within the Curl container, I run the following command with <SIG_ALGO> = dilithium2, dilithium3, RSA, and falcon512: \r\n\r\ndocker run -v `pwd`:/opt/tmp -it openquantumsafe/curl openssl req -x509 -new -newkey <SIG_ALGO> -keyout /opt/tmp/CA.key -out /opt/tmp/CA.crt -nodes -subj \"/CN=oqstest CA\" -days 365\r\n\r\nThe certificates that used dilithium2, dilithium3, and falcon512 failed to load, but the certificate that used RSA loaded just fine.\r\n\r\nAny help is appreciated! \r\n\r\nHere is the certificate that I grabbed from within the haproxy container:\r\n\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1462357646","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/92#issuecomment-1462357646","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92","id":1462357646,"node_id":"IC_kwDODP--n85XKc6O","user":{"login":"takao8","id":20669141,"node_id":"MDQ6VXNlcjIwNjY5MTQx","avatar_url":"https://avatars.githubusercontent.com/u/20669141?v=4","gravatar_id":"","url":"https://api.github.com/users/takao8","html_url":"https://github.com/takao8","followers_url":"https://api.github.com/users/takao8/followers","following_url":"https://api.github.com/users/takao8/following{/other_user}","gists_url":"https://api.github.com/users/takao8/gists{/gist_id}","starred_url":"https://api.github.com/users/takao8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/takao8/subscriptions","organizations_url":"https://api.github.com/users/takao8/orgs","repos_url":"https://api.github.com/users/takao8/repos","events_url":"https://api.github.com/users/takao8/events{/privacy}","received_events_url":"https://api.github.com/users/takao8/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T16:24:08Z","updated_at":"2023-03-09T16:24:08Z","author_association":"NONE","body":"Hello, I just wanted to reopen this issue since @taylormadehdz and I have plans to try and adjust NSS to accommodate for PQC certificates on Chromium. @baentsch, since last year have you heard of any developments to updates `libnss` for this feature? We've done some basic exploration of the `libnss` codebase, but I wanted to check with you to see if anybody has gotten anywhere so we don't replicate other efforts.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1462357646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T16:24:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"27614006623","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/92","id":940937833,"node_id":"MDU6SXNzdWU5NDA5Mzc4MzM=","number":92,"title":"Add OQS to libnss (enabling loading quantum safe certificate into Chromium)","user":{"login":"tylerleblond","id":87200668,"node_id":"MDQ6VXNlcjg3MjAwNjY4","avatar_url":"https://avatars.githubusercontent.com/u/87200668?v=4","gravatar_id":"","url":"https://api.github.com/users/tylerleblond","html_url":"https://github.com/tylerleblond","followers_url":"https://api.github.com/users/tylerleblond/followers","following_url":"https://api.github.com/users/tylerleblond/following{/other_user}","gists_url":"https://api.github.com/users/tylerleblond/gists{/gist_id}","starred_url":"https://api.github.com/users/tylerleblond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tylerleblond/subscriptions","organizations_url":"https://api.github.com/users/tylerleblond/orgs","repos_url":"https://api.github.com/users/tylerleblond/repos","events_url":"https://api.github.com/users/tylerleblond/events{/privacy}","received_events_url":"https://api.github.com/users/tylerleblond/received_events","type":"User","site_admin":false},"labels":[{"id":1643196491,"node_id":"MDU6TGFiZWwxNjQzMTk2NDkx","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/labels/future%20work","name":"future work","color":"cfd3d7","default":false,"description":"This issue is something that may be dealt with"},{"id":1643196497,"node_id":"MDU6TGFiZWwxNjQzMTk2NDk3","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2021-07-09T17:12:04Z","updated_at":"2023-03-09T17:54:18Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello, \r\n\r\nI am currently trying to use the quantum-safe Chromium (0.5.0) build as a client to connect to the OQS haproxy container using its default certificate generation settings (the default signature algorithm used is dilithium3 according to this page: https://github.com/open-quantum-safe/oqs-demos/tree/main/haproxy). I tried to load the CA certificate from the haproxy container into Chromium but got the following error: \r\n\r\n<img width=\"1443\" alt=\"Screen Shot 2021-07-09 at 12 51 02 PM\" src=\"https://user-images.githubusercontent.com/87200668/125111931-82e96100-e0b4-11eb-9ab4-58343277228b.png\">\r\n\r\nI have verified that I am able to use Curl with this certificate for authentication to access the haproxy, so it is not an issue with the certificate. \r\n\r\nIt appears that I obtain this error when I try to install certificates that use quantum-safe digital signature algorithms. For example, making use of the OQS fork of OpenSSL contained within the Curl container, I run the following command with <SIG_ALGO> = dilithium2, dilithium3, RSA, and falcon512: \r\n\r\ndocker run -v `pwd`:/opt/tmp -it openquantumsafe/curl openssl req -x509 -new -newkey <SIG_ALGO> -keyout /opt/tmp/CA.key -out /opt/tmp/CA.crt -nodes -subj \"/CN=oqstest CA\" -days 365\r\n\r\nThe certificates that used dilithium2, dilithium3, and falcon512 failed to load, but the certificate that used RSA loaded just fine.\r\n\r\nAny help is appreciated! \r\n\r\nHere is the certificate that I grabbed from within the haproxy container:\r\n\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92/timeline","performed_via_github_app":null,"state_reason":"reopened"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1462505853","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/92#issuecomment-1462505853","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/92","id":1462505853,"node_id":"IC_kwDODP--n85XLBF9","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2023-03-09T17:54:18Z","updated_at":"2023-03-09T17:54:18Z","author_association":"MEMBER","body":"For OQS in NSS, I'm aware of [this](https://phabricator.services.mozilla.com/D162246#5618252).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1462505853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-03-09T17:54:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
