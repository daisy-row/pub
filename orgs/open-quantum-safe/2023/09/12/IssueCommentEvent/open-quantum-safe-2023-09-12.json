{"id":"31757670226","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","id":1890936772,"node_id":"PR_kwDOA-eq3c5aC7wA","number":1547,"title":"Pull Neon implementation of Falcon from PQClean","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-09-11T17:16:54Z","updated_at":"2023-09-12T00:52:14Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1547","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nPull the ARM Neon implementation of Falcon from PQClean on behalf of @cothan. See https://github.com/PQClean/PQClean/pull/493, https://github.com/PQClean/PQClean/pull/497\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1714806255","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547#issuecomment-1714806255","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","id":1714806255,"node_id":"IC_kwDOA-eq3c5mNd3v","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T00:52:14Z","updated_at":"2023-09-12T00:52:14Z","author_association":"MEMBER","body":"> > @SWilson4 Thank you, it's type confusion between signed and unsigned integer. Should I make a fix in this PR, or is it better to make a PR in pqclean and update here?\r\n> \r\n> I would say it's better to fix it in PQClean and then run `copy_from_upstream` again, but there's been some unrelated activity in PQClean since your initial two commits, and we presumably wouldn't want to pull that in at the same time. So I'm unsure. Thoughts on this @dstebila?\r\n\r\nIt's not a problem if there are other PQClean updates upstream alongside it, that's sometimes unavoidable based on how our pull-from-upstream process works.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1714806255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T00:52:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31760082908","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","id":1890936772,"node_id":"PR_kwDOA-eq3c5aC7wA","number":1547,"title":"Pull Neon implementation of Falcon from PQClean","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-09-11T17:16:54Z","updated_at":"2023-09-12T03:59:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1547","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nPull the ARM Neon implementation of Falcon from PQClean on behalf of @cothan. See https://github.com/PQClean/PQClean/pull/493, https://github.com/PQClean/PQClean/pull/497\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1714925188","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547#issuecomment-1714925188","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","id":1714925188,"node_id":"IC_kwDOA-eq3c5mN66E","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T03:59:24Z","updated_at":"2023-09-12T03:59:24Z","author_association":"NONE","body":"Commit https://github.com/open-quantum-safe/liboqs/pull/1547/commits/91065c8a38de045fd4095db44f875cb5ae5cf9c8 makes CI/CD green. \r\n\r\nSo I made a PR to fix type confusion in PQClean https://github.com/PQClean/PQClean/pull/506. \r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1714925188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T03:59:25Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31760868453","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Is this provider supposed to work with OpenSSL API?","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-09-08T14:40:38Z","updated_at":"2023-09-12T05:00:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1714970534","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-1714970534","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":1714970534,"node_id":"IC_kwDOE_A9l85mOF-m","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T05:00:20Z","updated_at":"2023-09-12T05:00:20Z","author_association":"MEMBER","body":"Just did a quick API check: This seems to activate the PKCS7 logic of OpenSSL. I am unsure as to whether this is fully provider enabled. At least, no reference to providers are made there -- unlike in the code for CMS, which does work OK with provider-based signature algorithms. Maybe @levitte can provide insight?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1714970534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T05:00:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31761343680","type":"IssueCommentEvent","actor":{"id":33097828,"login":"roelds","display_login":"roelds","gravatar_id":"","url":"https://api.github.com/users/roelds","avatar_url":"https://avatars.githubusercontent.com/u/33097828?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/94","id":1496666867,"node_id":"I_kwDOE_A9l85ZNVLz","number":94,"title":"Make available binaries","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":2701983056,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU2","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":2701983059,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU5","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/futurework","name":"futurework","color":"ffffff","default":false,"description":"This may or may not be worked on"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-12-14T13:46:47Z","updated_at":"2023-09-12T05:30:51Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Create ready-to-deploy binaries for \r\n- [x] Linux (.DEB)\r\n- [x] OSX , ideally via [homebrew](https://brew.sh/) ~(resolving https://github.com/open-quantum-safe/oqs-provider/issues/46)~\r\n- [x] Windows (.DLL) ~(resolving https://github.com/open-quantum-safe/oqs-provider/issues/47 and https://github.com/open-quantum-safe/oqs-provider/issues/80)~\r\n- [ ] RedHat (.RPM)\r\n\r\nAvailability via GitHub artifact(s) or via other means? www.openquantumsafe.org? Input welcome (@dstebila ?)\r\n\r\nPreferably for standardized algorithms ~(requires resolving https://github.com/open-quantum-safe/oqs-provider/issues/95 first)~\r\n\r\nIn all cases, except for Windows, a separate install of `liboqs` shall be performed/used/triggered by the install package for `oqsprovider`. \r\n\r\nIn the case of Windows, it is considered better for usability (for the average Windows user) to only create a single DLL also including all required `liboqs` symbols and not requiring a separate `liboqs` install first. Suggestions welcome as to which install mechanism to use for the DLL (Ideas, @christianpaquin ?)\r\n\r\nIn the case of OSX, build and install shall be able to make use of the [already existing `homebrew` formula for `liboqs`](https://formulae.brew.sh/formula/liboqs#default).\r\n\r\nIn the case of Linux distributions, build and install shall be able to make use of possibly already pre-installed `liboqs` packages.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1714998133","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/94#issuecomment-1714998133","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94","id":1714998133,"node_id":"IC_kwDOE_A9l85mOMt1","user":{"login":"roelds","id":33097828,"node_id":"MDQ6VXNlcjMzMDk3ODI4","avatar_url":"https://avatars.githubusercontent.com/u/33097828?v=4","gravatar_id":"","url":"https://api.github.com/users/roelds","html_url":"https://github.com/roelds","followers_url":"https://api.github.com/users/roelds/followers","following_url":"https://api.github.com/users/roelds/following{/other_user}","gists_url":"https://api.github.com/users/roelds/gists{/gist_id}","starred_url":"https://api.github.com/users/roelds/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roelds/subscriptions","organizations_url":"https://api.github.com/users/roelds/orgs","repos_url":"https://api.github.com/users/roelds/repos","events_url":"https://api.github.com/users/roelds/events{/privacy}","received_events_url":"https://api.github.com/users/roelds/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T05:30:51Z","updated_at":"2023-09-12T05:30:51Z","author_association":"NONE","body":"Since this relates to Windows builds, I assume I don't need to make new issue.\r\n[fail.txt](https://github.com/open-quantum-safe/oqs-provider/files/12582613/fail.txt)\r\nI'm on fresh Windows 10 VM, latest Win SDK installed, with defaults & all requested libs found at:\r\n`C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x64`\r\nUsing VC2022Pro since Community seemed to be missing libs. Trying to build: I get attached error in cmd admin output.\r\nWhere does the linker or makefile expect to find the libs? I have tried copying the libs from their default to almost every folder in C:\\b & also by hardcoding the path in the makefile, which it interprets full path correctly, but still says it can't find it.\r\nI was able to build liboqs ok, on this same PC, minutes before attempting building oqs-provider, so I'm confident this is not a pebkac issue. I'd like to do a native MSVC Windows build of this, since it's stated cross builds are not optimized on Windows, & my main use case is in Windows. If I can build this ok as requested, I can chime in with my preferences for deploying/packaging. Thanks!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1714998133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T05:30:51Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31761718397","type":"IssueCommentEvent","actor":{"id":30979983,"login":"Muzosh","display_login":"Muzosh","gravatar_id":"","url":"https://api.github.com/users/Muzosh","avatar_url":"https://avatars.githubusercontent.com/u/30979983?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Using PKCS#7 OpenSSL API","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-09-08T14:40:38Z","updated_at":"2023-09-12T05:55:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1715019853","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-1715019853","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":1715019853,"node_id":"IC_kwDOE_A9l85mOSBN","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T05:55:02Z","updated_at":"2023-09-12T05:55:02Z","author_association":"NONE","body":">  I am unsure as to whether this is fully provider enabled.\r\n\r\nIs this related only to oqsprovider? I.e. would using OQS-OpenSSL@1.1 fork solve this (I'm aware it is discontinued)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1715019853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T05:55:03Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31770562999","type":"IssueCommentEvent","actor":{"id":30979983,"login":"Muzosh","display_login":"Muzosh","gravatar_id":"","url":"https://api.github.com/users/Muzosh","avatar_url":"https://avatars.githubusercontent.com/u/30979983?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251","id":1887819402,"node_id":"I_kwDOE_A9l85whdaK","number":251,"title":"Using PKCS#7 OpenSSL API","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-09-08T14:40:38Z","updated_at":"2023-09-12T11:31:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello!\r\n\r\nI'm having issues running [timestamping server](https://github.com/kakwa/uts-server) with oqsprovider.\r\n\r\nI have this Dockerfile:\r\n\r\n```dockerfile\r\nFROM bitnami/minideb:bullseye\r\n\r\nRUN install_packages \\\r\n    ca-certificates curl libssl-dev cmake libcivetweb-dev gcc g++ make git build-essential cmake ninja-build checkinstall zlib1g-dev wget\r\n\r\n# OPENSSL@3\r\nWORKDIR /root/opensslv3\r\nRUN wget https://github.com/openssl/openssl/releases/download/openssl-3.1.2/openssl-3.1.2.tar.gz \\\r\n    && tar --strip-components=1 -zxvf openssl-3.1.2.tar.gz \\\r\n    && ./config \\\r\n    && make \\\r\n    && make install \\\r\n    && ldconfig\r\n\r\n# OQS-PROVIDER\r\nWORKDIR /root/oqsprovider\r\nRUN git clone --branch 0.5.1 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git .\\\r\n    && ./scripts/fullbuild.sh\r\nRUN sed -i 's/default = default_sect/default = default_sect\\noqsprovider = oqsprovider_sect\\n\\n\\[oqsprovider_sect\\]\\nactivate = 1/g' /usr/local/ssl/openssl.cnf && sed -i 's/# activate = 1/activate = 1/g' /usr/local/ssl/openssl.cnf\r\nRUN cp /root/oqsprovider/_build/lib/oqsprovider.so /usr/local/lib/ossl-modules/oqsprovider.so\r\n\r\n# UTS-SERVER\r\nWORKDIR /root/uts-server\r\nRUN wget https://codeload.github.com/kakwa/uts-server/tar.gz/refs/tags/0.2.1 \\\r\n    && tar --strip-components=1 -zxvf 0.2.1\\\r\n    && cmake . \\\r\n    && make\r\n\r\nWORKDIR /opt/uts-server\r\n\r\nRUN groupadd -r uts-server \\\r\n    && useradd -r -g uts-server uts-server \\\r\n    && mkdir /etc/uts-server \\\r\n    && chown uts-server:uts-server /etc/uts-server\r\n\r\nVOLUME /etc/uts-server\r\n\r\nCOPY --from=builder /root/uts-server .\r\n\r\nEXPOSE 2020\r\n\r\nENTRYPOINT [\"./uts-server\"]\r\n```\r\n\r\nI can verify that `oqsprovider` is installed:\r\n```bash\r\nroot@48d18a97c59f:/opt/uts-server# openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.2\r\n    status: active\r\n  oqsprovider\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.1\r\n    status: active\r\n```\r\n\r\nAll certificates and private keys I'm feeding it, are Dilithium5. Console openssl with oqsprovider can work with them without any issues.\r\n\r\nIn the software (using OpenSSL API), I was having issues with populating config values, proper keys, etc. But now, I'm stuck at function `TS_RESP_create_response`, which trows multiple OPENSSL errors (the software obtains them by repeatedly calling ERR_get_error() and printing them):\r\n```\r\nLOG_DEBUG. : OpenSSL exception: 'error:10800094:PKCS7 routines::signing not supported for this key type'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800076:time stamp routines::pkcs7 add signature error'\r\nLOG_DEBUG  : OpenSSL exception: 'error:17800079:time stamp routines::response setup error'\r\n```\r\n\r\nI tried to fix that by running this code before-hand (with `#include <openssl/provider.h>`):\r\n\r\n```c\r\nOSSL_PROVIDER *oqsprovider;\r\n\r\noqsprovider = OSSL_PROVIDER_load(NULL, \"oqsprovider\");\r\nif (oqsprovider == NULL) {\r\n    printf(\"Failed to load Legacy provider\\n\");\r\n    exit(EXIT_FAILURE);\r\n}\r\n\r\nif (ERR_get_error() == 0){\r\n    uts_logger(ct, LOG_DEBUG, \"no openssl error\");\r\n}\r\n\r\nprintf(\"Successfully loaded provider\\n\");\r\n```\r\n, which runs successfully (I see both `no openssl error` and `Successfully loaded provider` in the output. But still, **this does not solve the issue and I'm still getting error:10800094:PKCS7 routines::signing not supported for this key type error**.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: docker minideb\r\n - OpenSSL version: 3.2.1\r\n - oqsprovider version: 0.5.1\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version`: `OpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)`\r\n - For oqsprovider: `openssl list -providers`: already posted here\r\n\r\nHere is the certificate of a public key, associated with the private key used for signing.\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n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\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI won't post private key here even if it is just a testing value, but I checked it's ASN1 structure and it's just regular `PrivateKeyInfo` with `1.3.6.1.4.1.2.267.7.8.7` algorithm and 7456B octet string. Also, as I said, console openssl does not have issues working with this key.\r\n\r\nIs there something I'm missing? Is this even an issue related to OQSProvider?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1715550357","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/251#issuecomment-1715550357","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/251","id":1715550357,"node_id":"IC_kwDOE_A9l85mQTiV","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T11:31:12Z","updated_at":"2023-09-12T11:31:12Z","author_association":"NONE","body":"So I tried it with [OQS-OpenSSL@1.1.1-stable](https://github.com/open-quantum-safe/openssl) fork and I get two more detailed errors:\r\n\r\n```\r\nerror:1012F040:elliptic curve routines:pkey_oqs_ctrl:fatal\r\nerror:21081093:PKCS7 routines:PKCS7_SIGNER_INFO_set:signing ctrl failure\r\nerror:2F088076:time stamp routines:ts_RESP_sign:pkcs7 add signature error\r\nerror:2F07A079:time stamp routines:TS_RESP_create_response:response setup error\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1715550357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T11:31:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31774085390","type":"IssueCommentEvent","actor":{"id":106774416,"login":"ducnguyen-sb","display_login":"ducnguyen-sb","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","avatar_url":"https://avatars.githubusercontent.com/u/106774416?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","id":1890936772,"node_id":"PR_kwDOA-eq3c5aC7wA","number":1547,"title":"Pull Neon implementation of Falcon from PQClean","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-09-11T17:16:54Z","updated_at":"2023-09-12T13:29:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1547","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nPull the ARM Neon implementation of Falcon from PQClean on behalf of @cothan. See https://github.com/PQClean/PQClean/pull/493, https://github.com/PQClean/PQClean/pull/497\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1715729953","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547#issuecomment-1715729953","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","id":1715729953,"node_id":"IC_kwDOA-eq3c5mQ_Yh","user":{"login":"ducnguyen-sb","id":106774416,"node_id":"U_kgDOBl0_kA","avatar_url":"https://avatars.githubusercontent.com/u/106774416?v=4","gravatar_id":"","url":"https://api.github.com/users/ducnguyen-sb","html_url":"https://github.com/ducnguyen-sb","followers_url":"https://api.github.com/users/ducnguyen-sb/followers","following_url":"https://api.github.com/users/ducnguyen-sb/following{/other_user}","gists_url":"https://api.github.com/users/ducnguyen-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/ducnguyen-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ducnguyen-sb/subscriptions","organizations_url":"https://api.github.com/users/ducnguyen-sb/orgs","repos_url":"https://api.github.com/users/ducnguyen-sb/repos","events_url":"https://api.github.com/users/ducnguyen-sb/events{/privacy}","received_events_url":"https://api.github.com/users/ducnguyen-sb/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T13:29:42Z","updated_at":"2023-09-12T13:29:42Z","author_association":"COLLABORATOR","body":"The PR https://github.com/PQClean/PQClean/pull/506 is merged recently. I think it's alright to proceed. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1715729953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T13:29:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31775784003","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1545","id":1889235564,"node_id":"PR_kwDOA-eq3c5Z9M89","number":1545,"title":"Add Windows ARM64 support","user":{"login":"res0nance","id":31362124,"node_id":"MDQ6VXNlcjMxMzYyMTI0","avatar_url":"https://avatars.githubusercontent.com/u/31362124?v=4","gravatar_id":"","url":"https://api.github.com/users/res0nance","html_url":"https://github.com/res0nance","followers_url":"https://api.github.com/users/res0nance/followers","following_url":"https://api.github.com/users/res0nance/following{/other_user}","gists_url":"https://api.github.com/users/res0nance/gists{/gist_id}","starred_url":"https://api.github.com/users/res0nance/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/res0nance/subscriptions","organizations_url":"https://api.github.com/users/res0nance/orgs","repos_url":"https://api.github.com/users/res0nance/repos","events_url":"https://api.github.com/users/res0nance/events{/privacy}","received_events_url":"https://api.github.com/users/res0nance/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-09-10T16:53:38Z","updated_at":"2023-09-12T14:21:08Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1545","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1545","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1545.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1545.patch","merged_at":null},"body":"Allows liboqs to compile on Windows ARM64\r\n\r\nFixes #1264 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1715823128","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1545#issuecomment-1715823128","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545","id":1715823128,"node_id":"IC_kwDOA-eq3c5mRWIY","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T14:21:08Z","updated_at":"2023-09-12T14:21:08Z","author_association":"MEMBER","body":"I noticed that the new Github Windows job didn't actually run, is that because it's a new file or possibly because it's in a fork rather than the main repo?  Also our other existing AppVeyor CI didn't run, again I believe because it's in a fork. @baentsch, am I right in remembering that we can trigger the jobs in our CI by pushing this branch into our repo?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1715823128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T14:21:09Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31779453116","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","id":1890936772,"node_id":"PR_kwDOA-eq3c5aC7wA","number":1547,"title":"Pull Neon implementation of Falcon from PQClean","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-09-11T17:16:54Z","updated_at":"2023-09-12T16:22:02Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1547","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nPull the ARM Neon implementation of Falcon from PQClean on behalf of @cothan. See https://github.com/PQClean/PQClean/pull/493, https://github.com/PQClean/PQClean/pull/497\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1716040254","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547#issuecomment-1716040254","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","id":1716040254,"node_id":"IC_kwDOA-eq3c5mSLI-","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T16:22:01Z","updated_at":"2023-09-12T16:22:01Z","author_association":"CONTRIBUTOR","body":"I ran `copy_from_upstream` at commit [8e220a87308154d48fdfac40abbb191ac7fce06a](https://github.com/PQClean/PQClean/commit/8e220a87308154d48fdfac40abbb191ac7fce06a) of PQClean and everything is passing.\r\n\r\nBesides the Neon implementation of Falcon, there are some minor changes to McEliece from PQClean commit [afcebe31ae6c636f39ce6852b8ee95c3f6e7670d](https://github.com/PQClean/PQClean/commit/afcebe31ae6c636f39ce6852b8ee95c3f6e7670d). A bunch of newlines were deleted, which has made the diff light up like a Christmas tree. Another slight change there is outlined in https://github.com/PQClean/PQClean/pull/503: it makes one of our patches unnecessary.\r\n\r\nhttps://github.com/PQClean/PQClean/pull/501 made another patch unnecessary. I deleted these patches and updated `copy_from_upstream` accordingly.\r\n\r\nI also took the liberty of adding `scripts/copy_from_upstream/verify_from_upstream` to the `.gitignore` to prevent me from accidentally committing it after running `./copy_from_upstream -k verify` (oops).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1716040254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T16:22:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31781385997","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1545","id":1889235564,"node_id":"PR_kwDOA-eq3c5Z9M89","number":1545,"title":"Add Windows ARM64 support","user":{"login":"res0nance","id":31362124,"node_id":"MDQ6VXNlcjMxMzYyMTI0","avatar_url":"https://avatars.githubusercontent.com/u/31362124?v=4","gravatar_id":"","url":"https://api.github.com/users/res0nance","html_url":"https://github.com/res0nance","followers_url":"https://api.github.com/users/res0nance/followers","following_url":"https://api.github.com/users/res0nance/following{/other_user}","gists_url":"https://api.github.com/users/res0nance/gists{/gist_id}","starred_url":"https://api.github.com/users/res0nance/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/res0nance/subscriptions","organizations_url":"https://api.github.com/users/res0nance/orgs","repos_url":"https://api.github.com/users/res0nance/repos","events_url":"https://api.github.com/users/res0nance/events{/privacy}","received_events_url":"https://api.github.com/users/res0nance/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-09-10T16:53:38Z","updated_at":"2023-09-12T17:41:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1545","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1545","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1545.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1545.patch","merged_at":null},"body":"Allows liboqs to compile on Windows ARM64\r\n\r\nFixes #1264 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1716162216","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1545#issuecomment-1716162216","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1545","id":1716162216,"node_id":"IC_kwDOA-eq3c5mSo6o","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T17:41:58Z","updated_at":"2023-09-12T17:41:58Z","author_association":"MEMBER","body":"> > Thanks for these improvements (incl CI)! LGTM.\r\n> > Have you tested the resultant binary on a Windows ARM64 box? Or do you see a way to test/run this emulated in CI?\r\n> \r\n> I have a aarch64 windows vm on my personal m1 mac that I can test this on if you want me to give it a sanity check. Won't be able to until a bit later this week though. :)\r\n\r\nThat would be very much appreciated! It's definitely not urgent but would be the next best thing to a regular CI test. Let's call it \"induction CI\": Builds, tests and runs OK the 1st time; if it builds the next time, we'll assume it'll also run the next time and ever after :-) Will merge after you confirm things are good for you.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1716162216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T17:41:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31786552913","type":"IssueCommentEvent","actor":{"id":9219016,"login":"cothan","display_login":"cothan","gravatar_id":"","url":"https://api.github.com/users/cothan","avatar_url":"https://avatars.githubusercontent.com/u/9219016?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","id":1890936772,"node_id":"PR_kwDOA-eq3c5aC7wA","number":1547,"title":"Pull Neon implementation of Falcon from PQClean","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-09-11T17:16:54Z","updated_at":"2023-09-12T21:43:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1547","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1547.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\nPull the ARM Neon implementation of Falcon from PQClean on behalf of @cothan. See https://github.com/PQClean/PQClean/pull/493, https://github.com/PQClean/PQClean/pull/497\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1716494958","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1547#issuecomment-1716494958","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1547","id":1716494958,"node_id":"IC_kwDOA-eq3c5mT6Ju","user":{"login":"cothan","id":9219016,"node_id":"MDQ6VXNlcjkyMTkwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/9219016?v=4","gravatar_id":"","url":"https://api.github.com/users/cothan","html_url":"https://github.com/cothan","followers_url":"https://api.github.com/users/cothan/followers","following_url":"https://api.github.com/users/cothan/following{/other_user}","gists_url":"https://api.github.com/users/cothan/gists{/gist_id}","starred_url":"https://api.github.com/users/cothan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cothan/subscriptions","organizations_url":"https://api.github.com/users/cothan/orgs","repos_url":"https://api.github.com/users/cothan/repos","events_url":"https://api.github.com/users/cothan/events{/privacy}","received_events_url":"https://api.github.com/users/cothan/received_events","type":"User","site_admin":false},"created_at":"2023-09-12T21:43:32Z","updated_at":"2023-09-12T21:43:32Z","author_association":"NONE","body":"Thanks @baentsch , sure I will update license of Falcon goind forward. \r\nSorry I didn't know, I was following the Falcon ref License header example. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1716494958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-12T21:43:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
