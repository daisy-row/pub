{"id":"31551743420","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/240","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/240/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/240/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/240/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/240","id":1874545032,"node_id":"PR_kwDOE_A9l85ZL7f_","number":240,"title":"1 add support for hash n sign with pqc algorithms","user":{"login":"opencrypto","id":7943812,"node_id":"MDQ6VXNlcjc5NDM4MTI=","avatar_url":"https://avatars.githubusercontent.com/u/7943812?v=4","gravatar_id":"","url":"https://api.github.com/users/opencrypto","html_url":"https://github.com/opencrypto","followers_url":"https://api.github.com/users/opencrypto/followers","following_url":"https://api.github.com/users/opencrypto/following{/other_user}","gists_url":"https://api.github.com/users/opencrypto/gists{/gist_id}","starred_url":"https://api.github.com/users/opencrypto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opencrypto/subscriptions","organizations_url":"https://api.github.com/users/opencrypto/orgs","repos_url":"https://api.github.com/users/opencrypto/repos","events_url":"https://api.github.com/users/opencrypto/events{/privacy}","received_events_url":"https://api.github.com/users/opencrypto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-08-31T00:13:58Z","updated_at":"2023-09-02T06:10:39Z","closed_at":"2023-09-02T06:10:39Z","author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/240","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/240","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/240.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/240.patch","merged_at":null},"body":"This pull request enables the use of hash-n-sign with QS algorithms and addresses #239 .\r\n\r\nHere's the summary of the changes:\r\n- Added support for hash-n-sign by adding support for digest_sign (`oqs_digest_sign()`) and digest_verify (`oqs_digest_verify()`) that are called when using the hash-n-sign paradigm\r\n- Updated the `get_aid()` internal function to return the correct algorithm based on the CTX configuration (i.e., if MD/MDNAME is present, then the data is pre-hashed before it is signed)\r\n- Added `is_pre_hashed` integer field in the CTX to prevent double hashing when signing with the traditional part of a signature so that both algorithms sign the same data (hybrid)\r\n- Removed the use of 'NULL' mandatory digest algorithm while keeping it as the default for the quantum-safe algorithms\r\n- Modified the `oqs_oid_alg_list` by adding new entries for the hash-n-sign variants of the algorithms and changed the number of elements for the 'row' from 2 to 5 (the additional fields allow to specify a description, the pkey algorithm, and the hash algorithm separately). Updated the for...loop that registers the OIDs accordingly.\r\n- Updated the `nid_names` table in oqsprov_keys.c to by adding the additional hash-n-sign variants of the algorithms (base algorithm plus hash algorithm)\r\n\r\nWhat still needs to happen is the updating of the template part to reflect the changes for the proper generation of the `oqs_oid_alg_list` and the `nid_names`. It should be possible to modify the generate.yml file and add the hash-n-sign algorithms as variants, for example:\r\n```yml\r\n-\r\n        name: 'dilithium2WithSha256'\r\n        pretty_name: 'DILITHIUM2-SHA256'\r\n        oqs_meth: 'OQS_SIG_alg_dilithium_2'\r\n        oid: '1.3.6.1.4.1.18227.999.1.1.1'\r\n        digest: SHA256\r\n        code_point: '0xfea0'\r\n        supported_encodings: ['draft-uni-qsckeys-dilithium-00/sk-pk']\r\n        enable: true\r\n      -\r\n        name: 'dilithium2WithSha384'\r\n        pretty_name: 'DILITHIUM2-SHA384'\r\n        oqs_meth: 'OQS_SIG_alg_dilithium_2'\r\n        oid: '1.3.6.1.4.1.18227.999.1.1.2'\r\n        digest: SHA384\r\n        code_point: '0xfea0'\r\n        supported_encodings: ['draft-uni-qsckeys-dilithium-00/sk-pk']\r\n        enable: true\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/240/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1703722742","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/240#issuecomment-1703722742","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/240","id":1703722742,"node_id":"IC_kwDOE_A9l85ljL72","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-02T06:10:39Z","updated_at":"2023-09-02T06:10:39Z","author_association":"MEMBER","body":"Adding this (latest commit to this PR) to the main code base of `oqsprovider` does not make any sense:\r\n\r\n![image](https://github.com/open-quantum-safe/oqs-provider/assets/57787676/2154503f-b123-4a91-88aa-0f53175fcb59)\r\n\r\nIf I understand this right(?), your decision is to maintain this code as a separate fork for now and don't want to contribute this to our project. Thus closing this PR. Please feel free to re-create a new PR as and when you re-consider (and have addressed our open questions --and rebased). Apologies if you felt the questions were inappropriate -- any feedback to #239 still would be welcome.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1703722742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-02T06:10:40Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
