{"id":"31852996101","type":"IssueCommentEvent","actor":{"id":33097828,"login":"roelds","display_login":"roelds","gravatar_id":"","url":"https://api.github.com/users/roelds","avatar_url":"https://avatars.githubusercontent.com/u/33097828?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/94","id":1496666867,"node_id":"I_kwDOE_A9l85ZNVLz","number":94,"title":"Make available binaries","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":2701983056,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU2","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"},{"id":2701983059,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU5","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/futurework","name":"futurework","color":"ffffff","default":false,"description":"This may or may not be worked on"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-12-14T13:46:47Z","updated_at":"2023-09-15T04:27:11Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Create ready-to-deploy binaries for \r\n- [x] Linux (.DEB)\r\n- [x] OSX , ideally via [homebrew](https://brew.sh/) ~(resolving https://github.com/open-quantum-safe/oqs-provider/issues/46)~\r\n- [x] Windows (.DLL) ~(resolving https://github.com/open-quantum-safe/oqs-provider/issues/47 and https://github.com/open-quantum-safe/oqs-provider/issues/80)~\r\n- [ ] RedHat (.RPM)\r\n\r\nAvailability via GitHub artifact(s) or via other means? www.openquantumsafe.org? Input welcome (@dstebila ?)\r\n\r\nPreferably for standardized algorithms ~(requires resolving https://github.com/open-quantum-safe/oqs-provider/issues/95 first)~\r\n\r\nIn all cases, except for Windows, a separate install of `liboqs` shall be performed/used/triggered by the install package for `oqsprovider`. \r\n\r\nIn the case of Windows, it is considered better for usability (for the average Windows user) to only create a single DLL also including all required `liboqs` symbols and not requiring a separate `liboqs` install first. Suggestions welcome as to which install mechanism to use for the DLL (Ideas, @christianpaquin ?)\r\n\r\nIn the case of OSX, build and install shall be able to make use of the [already existing `homebrew` formula for `liboqs`](https://formulae.brew.sh/formula/liboqs#default).\r\n\r\nIn the case of Linux distributions, build and install shall be able to make use of possibly already pre-installed `liboqs` packages.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1720574114","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/94#issuecomment-1720574114","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/94","id":1720574114,"node_id":"IC_kwDOE_A9l85mjeCi","user":{"login":"roelds","id":33097828,"node_id":"MDQ6VXNlcjMzMDk3ODI4","avatar_url":"https://avatars.githubusercontent.com/u/33097828?v=4","gravatar_id":"","url":"https://api.github.com/users/roelds","html_url":"https://github.com/roelds","followers_url":"https://api.github.com/users/roelds/followers","following_url":"https://api.github.com/users/roelds/following{/other_user}","gists_url":"https://api.github.com/users/roelds/gists{/gist_id}","starred_url":"https://api.github.com/users/roelds/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roelds/subscriptions","organizations_url":"https://api.github.com/users/roelds/orgs","repos_url":"https://api.github.com/users/roelds/repos","events_url":"https://api.github.com/users/roelds/events{/privacy}","received_events_url":"https://api.github.com/users/roelds/received_events","type":"User","site_admin":false},"created_at":"2023-09-15T04:27:11Z","updated_at":"2023-09-15T04:27:11Z","author_association":"NONE","body":"Thanks, I found out I was missing Ninja to build it, since I didn't need that for liboqs but I do for oqs-provider. Added ninja, then got syntax error during build, so I made new issue: #255 \r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1720574114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-15T04:27:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31854346549","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/255","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/255/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/255/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/255/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/255","id":1897683687,"node_id":"I_kwDOE_A9l85xHFrn","number":255,"title":"main branch build error in Win11 amd64 MSVC","user":{"login":"roelds","id":33097828,"node_id":"MDQ6VXNlcjMzMDk3ODI4","avatar_url":"https://avatars.githubusercontent.com/u/33097828?v=4","gravatar_id":"","url":"https://api.github.com/users/roelds","html_url":"https://github.com/roelds","followers_url":"https://api.github.com/users/roelds/followers","following_url":"https://api.github.com/users/roelds/following{/other_user}","gists_url":"https://api.github.com/users/roelds/gists{/gist_id}","starred_url":"https://api.github.com/users/roelds/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roelds/subscriptions","organizations_url":"https://api.github.com/users/roelds/orgs","repos_url":"https://api.github.com/users/roelds/repos","events_url":"https://api.github.com/users/roelds/events{/privacy}","received_events_url":"https://api.github.com/users/roelds/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-09-15T04:23:26Z","updated_at":"2023-09-15T06:06:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nmain branch build error in Win11 amd64 MSVC\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nWindows Sandbox (or VM in VMware Workstation 16)\r\n\r\ninstalled all prereqs & added to PATH:\r\nVS Pro 2022\r\n\tall current desktop C/C++ options\r\nWin64OpenSSL-3_1_2.msi\r\n\tPATH env var += C:\\Program Files\\OpenSSL-Win64\\bin\\\r\nninja\r\n\tPATH env var += C:\\a\\ninja-win\r\nps7\r\npython\r\ncmake\r\ngraphviz\r\ngit\r\ndoxygen\r\npip install pytest pytest-xdist pyyaml\r\n\r\nbuilt liboqs ok using MSVC, not Ninja (see cmd output at bottom)\r\ntried oqs-provider build using Ninja, fails with this error:\r\n...\r\nC:\\b\\oqs-provider\\oqsprov\\oqsprov_capabilities.c(222): error C2059: syntax error: '}'\r\n...\r\n(or see cmd output at bottom)\r\n**Expected behavior**\r\nbuild ok\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\nsee cmd output at bottom, from msvc x64 cmd prompt run as admin\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. Ubuntu 20] Win11 amd64 all updates, in Windows Sandbox (also occurs in Win10 VM in VMware Workstation 16)\r\n - OpenSSL version [e.g., 3.2.0-dev] Win64OpenSSL-3_1_2.msi installed & found by build script\r\n - oqsprovider version [e.g. 0.4.0] current main branch\r\n\r\nPlease run the following commands to obtain the version information:\r\n - For OpenSSL: `openssl version` \r\n - For oqsprovider: `openssl list -providers` N/A : this is build error report\r\nI have manually added openssl to PATH\r\nC:\\b\\oqs-provider\\_build>openssl version -a\r\nOpenSSL 3.1.2 1 Aug 2023 (Library: OpenSSL 3.1.2 1 Aug 2023)\r\nbuilt on: Wed Aug  2 14:43:24 2023 UTC\r\nplatform: VC-WIN64A\r\noptions:  bn(64,64)\r\ncompiler: cl  /Z7 /Fdossl_static.pdb /Gs0 /GF /Gy /MD /W3 /wd4090 /nologo /O2 -DL_ENDIAN -DOPENSSL_PIC -D_USING_V110_SDK71_ -D_WINSOCK_DEPRECATED_NO_WARNINGS -D_WIN32_WINNT=0x0502\r\nOPENSSLDIR: \"C:\\Program Files\\Common Files\\SSL\"\r\nENGINESDIR: \"C:\\Program Files\\OpenSSL\\lib\\engines-3\"\r\nMODULESDIR: \"C:\\Program Files\\OpenSSL\\lib\\ossl-modules\"\r\nSeeding source: os-specific\r\nCPUINFO: OPENSSL_ia32cap=0xfefab2035f8bffff:0x405f46f2bf27a9\r\n\r\nIf `oqsprovider` is not listed as active, be sure to first follow all\r\n[USAGE guidance](https://github.com/open-quantum-safe/oqs-provider/blob/main/USAGE.md).\r\nN/A : this is build error report\r\n\r\nIf reporting bugs triggered by OpenSSL API integrations, e.g. running\r\na provider build [statically](https://github.com/open-quantum-safe/oqs-provider/blob/main/CONFIGURE.md#oqs_provider_build_static)\r\nor directly invoking any OpenSSL API, be sure to retrieve and report all errors\r\nreported by using the OpenSSL [ERR_get_error_all](https://www.openssl.org/docs/man3.1/man3/ERR_get_error_all.html)\r\nfunction.\r\nN/A : this is build error report\r\n\r\nBug reports generated from [Debug builds](https://github.com/open-quantum-safe/oqs-provider/wiki/Debugging)\r\nwth the debug environment variable \"OQSPROV=1\" set will be particularly helpful to find underlying\r\nproblems.\r\nN/A : this is build error report\r\n\r\n**Additional context**\r\nI'd like to build win bin so I can try out the sphincsshake256 alg, since I don't see it provided by the released win bin\r\n\r\n**Hints**\r\nTo exclude a build/setup error, please consider running your test\r\ncommands to reproduce the problem in our [pre-build docker image](https://hub.docker.com/repository/docker/openquantumsafe/oqs-ossl3/general),\r\ne.g. as such: `docker run -it openquantumsafe/oqs-ossl3` and\r\nprovide full command input and output traces in the bug report.\r\n\r\nI don't see sphincsshake256ssimple or sphincsshake256256srobust listed as available in this docker image\r\n\r\n[syntax_err.txt](https://github.com/open-quantum-safe/oqs-provider/files/12615463/syntax_err.txt)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/255/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1720726427","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/255#issuecomment-1720726427","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/255","id":1720726427,"node_id":"IC_kwDOE_A9l85mkDOb","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-15T06:06:08Z","updated_at":"2023-09-15T06:06:08Z","author_association":"MEMBER","body":"Thanks for the complete bug report\r\n\r\n> I'd like to build win bin so I can try out the sphincsshake256 alg, since I don't see it provided by the released win bin\r\n> I don't see sphincsshake256ssimple or sphincsshake256256srobust listed as available in this docker image\r\n\r\nBoth is expected/intentional as per [documentation](https://github.com/open-quantum-safe/oqs-provider/blob/main/CONFIGURE.md#pre-build-configuration). Those algs need to be enabled before build via the mechanism documented.\r\n\r\n> tried oqs-provider build using Ninja, fails with this error:\r\n...\r\nC:\\b\\oqs-provider\\oqsprov\\oqsprov_capabilities.c(222): error C2059: syntax error: '}'\r\n...\r\n\r\nThis is a pretty unusual error; as I don't have a platform to reproduce it, can I ask you to generate and take a look at the C-preprocessor output for this file? Most notably, what code is generated for the struct `oqs_param_group_list`? Are the macros expanded correctly, for example?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1720726427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-15T06:06:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31854751366","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1552","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1552/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1552/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1552/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1552","id":1896822482,"node_id":"PR_kwDOA-eq3c5aW07j","number":1552,"title":"Document Falcon constant time errors","user":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"labels":[{"id":423520874,"node_id":"MDU6TGFiZWw0MjM1MjA4NzQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Something isn't working; high priority to fix"}],"state":"open","locked":false,"assignee":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"assignees":[{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":16,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-09-14T19:18:12Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2023-09-14T15:29:11Z","updated_at":"2023-09-15T06:28:32Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1552","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1552","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1552.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1552.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nDocuments Falcon constant time errors being caught by CI.\r\nAdds updates to Classic McEliece docs that were missed in #1541.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n[No] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n[No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1552/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1720745961","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1552#issuecomment-1720745961","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1552","id":1720745961,"node_id":"IC_kwDOA-eq3c5mkH_p","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-15T06:28:32Z","updated_at":"2023-09-15T06:28:32Z","author_association":"MEMBER","body":"> The contents of the PR look OK and logical. But it seems to document a regression in Falcon and the `liboqs`-built-in SHA3 code (not being CT any more), do I understand this right? Is Falcon indeed the only algorithm affected by this common code CT-failure?\r\n\r\nCorrecting myself: I mis-read the YML indentation level documenting the CT error (falsely thinking common SHA3 is the problem). Assuming I now read correctly: Is this Falcon failure only in the AVX2 optimization? If so, what is the reason that all Falcon code is now considered to have secret dependent branching (assuming I read the YML right this time...)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1720745961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-15T06:28:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31875508916","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/194","id":1769543757,"node_id":"I_kwDOE_A9l85peRhN","number":194,"title":"Implement KEM en-/decoders","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[{"id":2701983054,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU0","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2023-06-22T12:06:33Z","updated_at":"2023-09-15T22:04:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In #123, PKCS#8 encoders for Dilithium, Falcon and Sphincs+ were added.\r\nHowever, the initial message also links draft for Kyber. Why was it not included in the PR (I can't see any mention of Kyber in Files changed)?\r\n\r\nIn https://github.com/open-quantum-safe/oqs-provider/issues/84#issuecomment-1296125057, @baentsch mentions that KEM algorithms do not need to have encoder/decoder functions. What if I want to use openssl to generate Kyber1024 keypair? I didn't find a way to do it, even in raw form.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1721913742","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/194#issuecomment-1721913742","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194","id":1721913742,"node_id":"IC_kwDOE_A9l85molGO","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-15T22:04:34Z","updated_at":"2023-09-15T22:04:34Z","author_association":"MEMBER","body":"> To tinker with a post-quantum KEM, you'll need a KEM certificate. At the moment I have no elegant of producing one (normally I'd do it with OpenSSL :-)\r\n\r\nCould you please provide `openssl` commands you'd use to do this? The only suitable command(s) I can think of are `genpkey` and `req -new`. The former works fine for the private key (also storing it with a suitably added encoder works OK), but the latter (intended to create and store the public key) doesn't quite work -- arguably because it (correctly) cannot use the (KEM!) algorithm to sign (the CSR).\r\n\r\nSo, beyond the CMP example above (beginning only when key & cert exists), can you please provide `openssl` commands you can use right now to create a classic crypto KEM certificate (without --internally-- triggering the use of a signature function for that algorithm)? Those would be the first commands I'd like to check correct function of the new KEM en/decoders with. If such `openssl` commands don't (yet) exist, I guess this use-case/issue will need to move \"upstream\".","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1721913742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-15T22:04:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
