{"id":"31657011790","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/155","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/155/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/155/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/155/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/155","id":1698437386,"node_id":"I_kwDOE_A9l85lPBkK","number":155,"title":"Improve (heap) memory consumption","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[{"id":2701983051,"node_id":"MDU6TGFiZWwyNzAxOTgzMDUx","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2701983054,"node_id":"MDU6TGFiZWwyNzAxOTgzMDU0","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-05-06T04:28:06Z","updated_at":"2023-09-07T06:12:58Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"[Profiling runs](https://openquantumsafe.org/benchmarking/visualization/handshakes.html) for TLS handshaking showed a marked increase in heap usage when switching from oqs-openssl111 to oqsprovider+openssl3. Most likely, things like [this](https://github.com/open-quantum-safe/oqs-provider/blob/12a6418f1b6c532a88bccd2d6dac5c10a2460af4/oqsprov/oqs_sig.c#L488) need to be improved. In general, review all uses of `OPENSSL_*_malloc` in oqsprovider.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/155/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1709534868","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/155#issuecomment-1709534868","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/155","id":1709534868,"node_id":"IC_kwDOE_A9l85l5W6U","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-07T06:12:58Z","updated_at":"2023-09-07T06:12:58Z","author_association":"MEMBER","body":"Thanks for the feedback, @dstebila !\r\n\r\n> I believe people with HSMs like pre-hashing because otherwise you have to feed the full message into the HSM for Dilithium.\r\n\r\nCompletely understandable given an HSM's technical bandwidth limitations. So then let's wait and see whether the standard evolves to prioritize those bandwidth limitations over \"certain types of robustness properties\" (that our implementation currently gives precedence).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1709534868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-07T06:12:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31657183617","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/246","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/246/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/246/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/246/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/246","id":1882492377,"node_id":"PR_kwDOE_A9l85ZmhhK","number":246,"title":"Add a CircleCI job to test oqs-provider against memory leaks.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-09-05T18:06:05Z","updated_at":"2023-09-07T06:22:11Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/246","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/246","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/246.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/246.patch","merged_at":null},"body":"This commit introduces a new CircleCI job called `check-ASan-tests` that compiles OpenSSL 3, liboqs and oqs-provider with ASan (`-fsanitize=address`). Then, it runs the CTest suite.\r\n\r\nIf any memory leak occurs somewhere and is triggered in one of the various unit tests, then this CircleCI job fails and displays the ASan trace.\r\n\r\nThis job should fail until https://github.com/open-quantum-safe/oqs-provider/pull/245 is merged.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/246/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1709543252","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/246#issuecomment-1709543252","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/246","id":1709543252,"node_id":"IC_kwDOE_A9l85l5Y9U","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-07T06:22:10Z","updated_at":"2023-09-07T06:22:10Z","author_association":"MEMBER","body":"> Should I put it in the .github/workflows/linux.yml file then?\r\n\r\nThat would (have) be(en) my preference, Yes. Before you do it, please read on.\r\n\r\n> I really don't know what the CI status buttons display actually…\r\n\r\nThey simply show whether the latest run (on the given branch --\"main\" in our case) was successful or not. So _any_ test failure would be flagged (and make us aware of something wrong).\r\n\r\n> I know that we can compile everything with ASan on MacOS, but I'm not sure about Windows.\r\nI can add a ASan test in the .github/workflows/macos.yml file too\r\n\r\nI just very nearly stated \"If we can do MacOS too, then Yes, please also add it there.\" But I'm reconsidering/wondering: Is Asan _really_ finding platform-specific problems or _any_ issues with the code (happening on _every_ platform)? If the latter were the case, I'd revisit my statements from above and keep things as you did them now (and only ask you to change the job title to \"Safety Checks\" and add that job's CI button to the README): What's your take, @thb-sb ?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1709543252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-07T06:22:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31659231785","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245","id":1882227365,"node_id":"PR_kwDOE_A9l85Zlnfi","number":245,"title":"Fix various memory leaks.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-09-05T15:40:50Z","updated_at":"2023-09-07T07:52:47Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/245","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245.patch","merged_at":null},"body":"This commit fixes various memory leaks that have been found using ASan.\r\n\r\nNote: I will soon add a CI job for testing oqs-provider against memory leaks with ASan.\r\n\r\n\r\n## 1. Memory leak in `oqs_test_signatures`.\r\n\r\nIn `oqs_test_signatures`, [`OPENSSL_free`] was used with `EVP_PKEY_CTX`. However, the right destructor function for `EVP_PKEY_CTX` is [`EVP_PKEY_CTX_free`].\r\n\r\n## 2. a selftest key that wasn't freed.\r\n\r\nIn `oqsprov/oqsprov_keys.c`, `d2i_PrivateKey` is used to verify that we the key we've just generated is sound.\r\nHowever, the returned object wasn't freed.\r\nASan trace that helped me finding this one:\r\n\r\n```\r\nIndirect leak of 96 byte(s) in 4 object(s) allocated from:\r\n    #0 0x5651eef1428e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_signatures+0xb928e) (BuildId: 6cc7ebd4bc73a0c78b2ab8d7b9dcb8b165d88e74)\r\n    #1 0x7fb7a23a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7fb7a23a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7fb7a209cdcd in BN_new /home/pawn/work/openssl/crypto/bn/bn_lib.c:247:16\r\n    #4 0x7fb7a2224a00 in ossl_ec_GFp_mont_group_set_curve /home/pawn/work/openssl/crypto/ec/ecp_mont.c:169:11\r\n    #5 0x7fb7a220f5fa in EC_GROUP_set_curve /home/pawn/work/openssl/crypto/ec/ec_lib.c:562:12\r\n    #6 0x7fb7a2202d75 in EC_GROUP_new_curve_GFp /home/pawn/work/openssl/crypto/ec/ec_cvt.c:61:10\r\n    #7 0x7fb7a220184d in ec_group_new_from_data /home/pawn/work/openssl/crypto/ec/ec_curve.c:3179:22\r\n    #8 0x7fb7a2200ff9 in EC_GROUP_new_by_curve_name_ex /home/pawn/work/openssl/crypto/ec/ec_curve.c:3287:19\r\n    #9 0x7fb7a2201ed9 in EC_GROUP_new_by_curve_name /home/pawn/work/openssl/crypto/ec/ec_curve.c:3303:12\r\n    #10 0x7fb7a21f84e2 in EC_GROUP_new_from_ecpkparameters /home/pawn/work/openssl/crypto/ec/ec_asn1.c:863:20\r\n    #11 0x7fb7a21f8f28 in d2i_ECPrivateKey /home/pawn/work/openssl/crypto/ec/ec_asn1.c:956:22\r\n    #12 0x7fb7a270b4b5 in der2key_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_der2key.c:220:19\r\n    #13 0x7fb7a226eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #14 0x7fb7a226d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #15 0x7fb7a226f007 in OSSL_DECODER_from_data /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:157:9\r\n    #16 0x7fb7a200e123 in d2i_PrivateKey_decoder /home/pawn/work/openssl/crypto/asn1/d2i_pr.c:74:11\r\n    #17 0x7fb7a200dbba in d2i_PrivateKey_ex /home/pawn/work/openssl/crypto/asn1/d2i_pr.c:162:11\r\n    #18 0x7fb7a200e3d2 in d2i_PrivateKey /home/pawn/work/openssl/crypto/asn1/d2i_pr.c:172:12\r\n    #19 0x7fb79dc6a22e in oqsx_key_gen_evp_key /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:1036:25\r\n    #20 0x7fb79dc68f3f in oqsx_key_gen /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:1077:16\r\n    #21 0x7fb79dc7164a in oqsx_genkey /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:496:9\r\n    #22 0x7fb79dc6d9f8 in oqsx_gen /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:509:12\r\n    #23 0x7fb7a23373c7 in evp_keymgmt_gen /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:366:12\r\n    #24 0x7fb7a2334b58 in evp_keymgmt_util_gen /home/pawn/work/openssl/crypto/evp/keymgmt_lib.c:517:20\r\n    #25 0x7fb7a235a775 in EVP_PKEY_generate /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:189:13\r\n    #26 0x5651eef4f2bd in test_oqs_signatures /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:39:48\r\n    #27 0x5651eef4ee3d in main /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:114:17\r\n    #28 0x7fb7a1b671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n```\r\n\r\n## 3. a `EVP_PKEY_CTX` that wasn't freed.\r\n\r\nIn `oqsx_key_free`, `key->oqsx_provider_ctx.oqsx_evp_ctx->ctx` is freed if the keytype is `ECP_HYB_KEM` or `ECX_HYB_KEM`. However, `key->oqsx_provider_ctx.oqsx_evp_ctx->ctx` is also used for signatures. In that case, a call to `EVP_PKEY_CTX_free` was missing. ASan trace that helped me finding this one:\r\n\r\n```\r\nIndirect leak of 7 byte(s) in 2 object(s) allocated from:\r\n    #0 0x55b6fc8d427e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_signatures+0xb927e) (BuildId: 3a8bff15d3315ba7ac1746fdc7b67eb464c607a1)\r\n    #1 0x7ff34dfa946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7ff34dfac50a in CRYPTO_strndup /home/pawn/work/openssl/crypto/o_str.c:43:11\r\n    #3 0x7ff34df9d152 in ossl_algorithm_get1_first_name /home/pawn/work/openssl/crypto/core_algorithm.c:195:11\r\n    #4 0x7ff34df353a1 in keymgmt_from_algorithm /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:50:31\r\n    #5 0x7ff34df15e44 in construct_evp_method /home/pawn/work/openssl/crypto/evp/evp_fetch.c:219:14\r\n    #6 0x7ff34df9e3ce in ossl_method_construct_this /home/pawn/work/openssl/crypto/core_fetch.c:109:19\r\n    #7 0x7ff34df9d740 in algorithm_do_map /home/pawn/work/openssl/crypto/core_algorithm.c:77:13\r\n    #8 0x7ff34df9ce88 in algorithm_do_this /home/pawn/work/openssl/crypto/core_algorithm.c:122:15\r\n    #9 0x7ff34dfcce3e in ossl_provider_doall_activated /home/pawn/work/openssl/crypto/provider_core.c:1423:14\r\n    #10 0x7ff34df9ca64 in ossl_algorithm_do_all /home/pawn/work/openssl/crypto/core_algorithm.c:162:9\r\n    #11 0x7ff34df9dd64 in ossl_method_construct /home/pawn/work/openssl/crypto/core_fetch.c:153:5\r\n    #12 0x7ff34df13b6f in inner_evp_generic_fetch /home/pawn/work/openssl/crypto/evp/evp_fetch.c:312:23\r\n    #13 0x7ff34df13226 in evp_generic_fetch /home/pawn/work/openssl/crypto/evp/evp_fetch.c:364:14\r\n    #14 0x7ff34df36a42 in EVP_KEYMGMT_fetch /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:220:12\r\n    #15 0x7ff34df5d6e4 in int_ctx_new /home/pawn/work/openssl/crypto/evp/pmeth_lib.c:280:23\r\n    #16 0x7ff34df5f0a9 in EVP_PKEY_CTX_new_id /home/pawn/work/openssl/crypto/evp/pmeth_lib.c:469:12\r\n    #17 0x7ff349865bcb in oqsx_hybsig_init /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:578:20\r\n    #18 0x7ff349865157 in oqsx_key_new /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:791:16\r\n    #19 0x7ff3498715a3 in oqsx_genkey /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:487:16\r\n    #20 0x7ff34986da08 in oqsx_gen /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:509:12\r\n    #21 0x7ff34df373c7 in evp_keymgmt_gen /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:366:12\r\n    #22 0x7ff34df34b58 in evp_keymgmt_util_gen /home/pawn/work/openssl/crypto/evp/keymgmt_lib.c:517:20\r\n    #23 0x7ff34df5a775 in EVP_PKEY_generate /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:189:13\r\n    #24 0x55b6fc90f2ad in test_oqs_signatures /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:39:48\r\n    #25 0x55b6fc90ee2d in main /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:114:17\r\n    #26 0x7ff34d8461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n```\r\n\r\n## 4. Missing `EVP_PKEY_CTX_free` in case of error.\r\n\r\nIn `oqsx_hybsig_init`, a `EVP_PKEY_CTX` is initialized using `EVP_PKEY_CTX_new_id`. However, later in the code, some extra work is done, and in case of error, the `EVP_PKEY_CTX` wasn't freed.\r\n\r\n(I couldn't recover the ASan message for this one…)\r\n\r\n\r\n## 5. `OPENSSL_free` instead of `EVP_PKEY_free`.\r\n\r\nIn `oqsx_key_gen`, when a classical private key is generated, the field `classical_pkey` of a `OQSX_KEY` is set with a value of type `EVP_PKEY`.\r\n\r\nHowever, in `oqsx_key_free`, `OPENSSL_free` was used on `classical_pkey` instead of `EVP_PKEY_free`.\r\n\r\nASan trace that helped me finding this one:\r\n\r\n```\r\n   #0 0x555a6b1b728e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_signatures+0xb928e) (BuildId: 6cc7ebd4bc73a0c78b2ab8d7b9dcb8b165d88e74)\r\n    #1 0x7f59a93a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f59a93a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7f59a909cdcd in BN_new /home/pawn/work/openssl/crypto/bn/bn_lib.c:247:16\r\n    #4 0x7f59a920b955 in ossl_ec_group_new_ex /home/pawn/work/openssl/crypto/ec/ec_lib.c:61:25\r\n    #5 0x7f59a920dd55 in EC_GROUP_dup /home/pawn/work/openssl/crypto/ec/ec_lib.c:273:14\r\n    #6 0x7f59a9207774 in EC_KEY_set_group /home/pawn/work/openssl/crypto/ec/ec_key.c:733:18\r\n    #7 0x7f59a975b3b5 in ec_gen_assign_group /home/pawn/work/openssl/providers/implementations/keymgmt/ec_kmgmt.c:1236:12\r\n    #8 0x7f59a9758bdb in ec_gen /home/pawn/work/openssl/providers/implementations/keymgmt/ec_kmgmt.c:1274:11\r\n    #9 0x7f59a93373c7 in evp_keymgmt_gen /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:366:12\r\n    #10 0x7f59a9334b58 in evp_keymgmt_util_gen /home/pawn/work/openssl/crypto/evp/keymgmt_lib.c:517:20\r\n    #11 0x7f59a935a775 in EVP_PKEY_generate /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:189:13\r\n    #12 0x7f59a935b404 in EVP_PKEY_keygen /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:274:12\r\n    #13 0x7f59a4c69a51 in oqsx_key_gen_evp_key /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:1012:12\r\n    #14 0x7f59a4c68faf in oqsx_key_gen /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:1084:16\r\n    #15 0x7f59a4c716ca in oqsx_genkey /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:496:9\r\n    #16 0x7f59a4c6da78 in oqsx_gen /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:509:12\r\n    #17 0x7f59a93373c7 in evp_keymgmt_gen /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:366:12\r\n    #18 0x7f59a9334b58 in evp_keymgmt_util_gen /home/pawn/work/openssl/crypto/evp/keymgmt_lib.c:517:20\r\n    #19 0x7f59a935a775 in EVP_PKEY_generate /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:189:13\r\n    #20 0x555a6b1f2890 in test_oqs_signatures /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:68:44\r\n    #21 0x555a6b1f1e3d in main /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:114:17\r\n    #22 0x7f59a8c461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n```\r\n\r\n## 6. Some `OPENSSL_free` were missing in `oqs_test_kems.c`\r\n\r\n```\r\n==569479==ERROR: LeakSanitizer: detected memory leaks\r\n\r\nDirect leak of 346035 byte(s) in 42 object(s) allocated from:\r\n    #0 0x559c76ef524e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_kems+0xb924e) (BuildId: 76a98f5859ba3c90334cef4286e89aa76436b1ae)\r\n    #1 0x7f04407a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x559c76f30389 in test_oqs_kems /home/pawn/work/oqs-provider/test/oqs_test_kems.c:44:26\r\n    #3 0x559c76f2fdfd in main /home/pawn/work/oqs-provider/test/oqs_test_kems.c:93:17\r\n    #4 0x7f04400461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nDirect leak of 2690 byte(s) in 42 object(s) allocated from:\r\n    #0 0x559c76ef524e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_kems+0xb924e) (BuildId: 76a98f5859ba3c90334cef4286e89aa76436b1ae)\r\n    #1 0x7f04407a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x559c76f304a5 in test_oqs_kems /home/pawn/work/oqs-provider/test/oqs_test_kems.c:47:29\r\n    #3 0x559c76f2fdfd in main /home/pawn/work/oqs-provider/test/oqs_test_kems.c:93:17\r\n    #4 0x7f04400461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nDirect leak of 2690 byte(s) in 42 object(s) allocated from:\r\n    #0 0x559c76ef524e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_kems+0xb924e) (BuildId: 76a98f5859ba3c90334cef4286e89aa76436b1ae)\r\n    #1 0x7f04407a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x559c76f303e4 in test_oqs_kems /home/pawn/work/oqs-provider/test/oqs_test_kems.c:45:29\r\n    #3 0x559c76f2fdfd in main /home/pawn/work/oqs-provider/test/oqs_test_kems.c:93:17\r\n    #4 0x7f04400461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n```\r\n\r\n## 7. Missing `X509_PUBKEY_free` in `oqsx_d2i_PUBKEY`.<a name=\"pubkey\"></a>\r\n\r\nThis was probably the hardest one for me to track down.\r\n\r\nIn `oqsx_d2i_PUBKEY`, a call is done to `oqsx_d2i_X509_PUBKEY_INTERNAL`.\r\nHowever, the returned value (of type `X509_PUBKEY`) wasn't freed.\r\n\r\nASan:\r\n\r\n```\r\nDirect leak of 48 byte(s) in 1 object(s) allocated from:\r\n    #0 0x55610d68132e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_endecode+0xb932e) (BuildId: 53bfaa0a3b850edc7328f30be8b047ab6675ba3c)\r\n    #1 0x7f68999a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f68999a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7f6895295897  (<unknown module>)\r\n    #4 0x7f6895295ce4  (<unknown module>)\r\n    #5 0x7f6895296a6c  (<unknown module>)\r\n    #6 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #7 0x7f6899d13383 in spki2typespki_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_spki2typespki.c:111:10\r\n    #8 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #9 0x7f6899d114d3 in pem2der_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_pem2der.c:204:14\r\n    #10 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #11 0x7f689986d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #12 0x55610d6bd407 in decode_EVP_PKEY_prov /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:151:10\r\n    #13 0x55610d6bc75b in test_oqs_encdec /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:188:14\r\n    #14 0x55610d6bbf37 in main /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:240:17\r\n    #15 0x7f68991671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nIndirect leak of 1312 byte(s) in 1 object(s) allocated from:\r\n    #0 0x55610d68132e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_endecode+0xb932e) (BuildId: 53bfaa0a3b850edc7328f30be8b047ab6675ba3c)\r\n    #1 0x7f68999a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f68995d6b99 in ossl_c2i_ASN1_BIT_STRING /home/pawn/work/openssl/crypto/asn1/a_bitstr.c:117:13\r\n    #3 0x7f689961f659 in asn1_ex_c2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:885:14\r\n    #4 0x7f689961bbc9 in asn1_d2i_ex_primitive /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:818:10\r\n    #5 0x7f6899618054 in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:217:16\r\n    #6 0x7f689961e02f in asn1_template_noexp_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:682:15\r\n    #7 0x7f689961a7b4 in asn1_template_ex_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:558:16\r\n    #8 0x7f689961986a in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:422:19\r\n    #9 0x7f68996175c8 in asn1_item_ex_d2i_intern /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:118:10\r\n    #10 0x7f68996177da in ASN1_item_d2i_ex /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:144:9\r\n    #11 0x7f6895295926  (<unknown module>)\r\n    #12 0x7f6895295ce4  (<unknown module>)\r\n    #13 0x7f6895296a6c  (<unknown module>)\r\n    #14 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #15 0x7f6899d13383 in spki2typespki_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_spki2typespki.c:111:10\r\n    #16 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #17 0x7f6899d114d3 in pem2der_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_pem2der.c:204:14\r\n    #18 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #19 0x7f689986d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #20 0x55610d6bd407 in decode_EVP_PKEY_prov /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:151:10\r\n    #21 0x55610d6bc75b in test_oqs_encdec /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:188:14\r\n    #22 0x55610d6bbf37 in main /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:240:17\r\n    #23 0x7f68991671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0x55610d68132e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_endecode+0xb932e) (BuildId: 53bfaa0a3b850edc7328f30be8b047ab6675ba3c)\r\n    #1 0x7f68999a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f68999a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7f68995fde90 in ASN1_STRING_type_new /home/pawn/work/openssl/crypto/asn1/asn1_lib.c:350:11\r\n    #4 0x7f689962a7dd in ASN1_BIT_STRING_new /home/pawn/work/openssl/crypto/asn1/tasn_typ.c:31:1\r\n    #5 0x7f68995d6a0f in ossl_c2i_ASN1_BIT_STRING /home/pawn/work/openssl/crypto/asn1/a_bitstr.c:98:20\r\n    #6 0x7f689961f659 in asn1_ex_c2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:885:14\r\n    #7 0x7f689961bbc9 in asn1_d2i_ex_primitive /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:818:10\r\n    #8 0x7f6899618054 in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:217:16\r\n    #9 0x7f689961e02f in asn1_template_noexp_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:682:15\r\n    #10 0x7f689961a7b4 in asn1_template_ex_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:558:16\r\n    #11 0x7f689961986a in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:422:19\r\n    #12 0x7f68996175c8 in asn1_item_ex_d2i_intern /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:118:10\r\n    #13 0x7f68996177da in ASN1_item_d2i_ex /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:144:9\r\n    #14 0x7f6895295926  (<unknown module>)\r\n    #15 0x7f6895295ce4  (<unknown module>)\r\n    #16 0x7f6895296a6c  (<unknown module>)\r\n    #17 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #18 0x7f6899d13383 in spki2typespki_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_spki2typespki.c:111:10\r\n    #19 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #20 0x7f6899d114d3 in pem2der_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_pem2der.c:204:14\r\n    #21 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #22 0x7f689986d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #23 0x55610d6bd407 in decode_EVP_PKEY_prov /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:151:10\r\n    #24 0x55610d6bc75b in test_oqs_encdec /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:188:14\r\n    #25 0x55610d6bbf37 in main /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:240:17\r\n    #26 0x7f68991671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nIndirect leak of 16 byte(s) in 1 object(s) allocated from:\r\n    #0 0x55610d68132e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_endecode+0xb932e) (BuildId: 53bfaa0a3b850edc7328f30be8b047ab6675ba3c)\r\n    #1 0x7f68999a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f68999a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7f6899625ed4 in asn1_item_embed_new /home/pawn/work/openssl/crypto/asn1/tasn_new.c:136:21\r\n    #4 0x7f689962620e in ossl_asn1_item_ex_new_intern /home/pawn/work/openssl/crypto/asn1/tasn_new.c:52:12\r\n    #5 0x7f68996191a5 in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:366:21\r\n    #6 0x7f689961e02f in asn1_template_noexp_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:682:15\r\n    #7 0x7f689961a7b4 in asn1_template_ex_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:558:16\r\n    #8 0x7f689961986a in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:422:19\r\n    #9 0x7f68996175c8 in asn1_item_ex_d2i_intern /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:118:10\r\n    #10 0x7f68996177da in ASN1_item_d2i_ex /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:144:9\r\n    #11 0x7f6895295926  (<unknown module>)\r\n    #12 0x7f6895295ce4  (<unknown module>)\r\n    #13 0x7f6895296a6c  (<unknown module>)\r\n    #14 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #15 0x7f6899d13383 in spki2typespki_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_spki2typespki.c:111:10\r\n    #16 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #17 0x7f6899d114d3 in pem2der_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_pem2der.c:204:14\r\n    #18 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #19 0x7f689986d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #20 0x55610d6bd407 in decode_EVP_PKEY_prov /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:151:10\r\n    #21 0x55610d6bc75b in test_oqs_encdec /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:188:14\r\n    #22 0x55610d6bbf37 in main /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:240:17\r\n    #23 0x7f68991671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nSUMMARY: AddressSanitizer: 1400 byte(s) leaked in 4 allocation(s).\r\n```\r\n\r\n## 8. Bonus point: fix a potential double-free.\r\n\r\nIn `oqsx_key_gen`, when the keytype isn't `KEY_TYPE_HYB_SIG`, the generated `pkey` is freed, and the flow goes down to the `err` label:\r\n\r\nhttps://github.com/open-quantum-safe/oqs-provider/blob/cc3895f208730abfe1efc15f7c3ff4358ac6e4c0/oqsprov/oqsprov_keys.c#L1089-L1104\r\n\r\nThere is a potential double-free bug here: if `oqsx_key_gen_oqs` fails, then `EVP_PKEY_free` will be called twice on the same `pkey` pointer.\r\n\r\nNote that it is very unlikely that `oqsx_key_gen_oqs` fails, since it only calls `OQS_KEM_keypair`/`OQS_SIG_keypair`.\r\n\r\n[`OPENSSL_free`]: https://www.openssl.org/docs/man3.0/man3/OPENSSL_free.html\r\n[`EVP_PKEY_CTX_free`]: https://www.openssl.org/docs/man3.0/man3/EVP_PKEY_CTX_free.html\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1709651691","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245#issuecomment-1709651691","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245","id":1709651691,"node_id":"IC_kwDOE_A9l85l5zbr","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-07T07:52:46Z","updated_at":"2023-09-07T07:52:46Z","author_association":"MEMBER","body":"> > > @baentsch the CI seems to be stuck, do you know why?\r\n> > \r\n> > \r\n> > What do you mean with \"stuck\"? All jobs completed, no?\r\n> \r\n> I still see the following: ![image](https://user-images.githubusercontent.com/108470890/266243467-4828c1cb-804c-4a27-af44-ec669fabe941.png)\r\n> \r\n> but perhaps GitHub is broken here…\r\n\r\nYou mean the \"Unauthorized\" error? That's a CCI problem that #250 should fix.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1709651691/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-07T07:52:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31661610402","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245","id":1882227365,"node_id":"PR_kwDOE_A9l85Zlnfi","number":245,"title":"Fix various memory leaks.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-09-05T15:40:50Z","updated_at":"2023-09-07T09:20:46Z","closed_at":"2023-09-07T09:20:29Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/245","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245.patch","merged_at":"2023-09-07T09:20:28Z"},"body":"This commit fixes various memory leaks that have been found using ASan.\r\n\r\nNote: I will soon add a CI job for testing oqs-provider against memory leaks with ASan.\r\n\r\n\r\n## 1. Memory leak in `oqs_test_signatures`.\r\n\r\nIn `oqs_test_signatures`, [`OPENSSL_free`] was used with `EVP_PKEY_CTX`. However, the right destructor function for `EVP_PKEY_CTX` is [`EVP_PKEY_CTX_free`].\r\n\r\n## 2. a selftest key that wasn't freed.\r\n\r\nIn `oqsprov/oqsprov_keys.c`, `d2i_PrivateKey` is used to verify that we the key we've just generated is sound.\r\nHowever, the returned object wasn't freed.\r\nASan trace that helped me finding this one:\r\n\r\n```\r\nIndirect leak of 96 byte(s) in 4 object(s) allocated from:\r\n    #0 0x5651eef1428e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_signatures+0xb928e) (BuildId: 6cc7ebd4bc73a0c78b2ab8d7b9dcb8b165d88e74)\r\n    #1 0x7fb7a23a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7fb7a23a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7fb7a209cdcd in BN_new /home/pawn/work/openssl/crypto/bn/bn_lib.c:247:16\r\n    #4 0x7fb7a2224a00 in ossl_ec_GFp_mont_group_set_curve /home/pawn/work/openssl/crypto/ec/ecp_mont.c:169:11\r\n    #5 0x7fb7a220f5fa in EC_GROUP_set_curve /home/pawn/work/openssl/crypto/ec/ec_lib.c:562:12\r\n    #6 0x7fb7a2202d75 in EC_GROUP_new_curve_GFp /home/pawn/work/openssl/crypto/ec/ec_cvt.c:61:10\r\n    #7 0x7fb7a220184d in ec_group_new_from_data /home/pawn/work/openssl/crypto/ec/ec_curve.c:3179:22\r\n    #8 0x7fb7a2200ff9 in EC_GROUP_new_by_curve_name_ex /home/pawn/work/openssl/crypto/ec/ec_curve.c:3287:19\r\n    #9 0x7fb7a2201ed9 in EC_GROUP_new_by_curve_name /home/pawn/work/openssl/crypto/ec/ec_curve.c:3303:12\r\n    #10 0x7fb7a21f84e2 in EC_GROUP_new_from_ecpkparameters /home/pawn/work/openssl/crypto/ec/ec_asn1.c:863:20\r\n    #11 0x7fb7a21f8f28 in d2i_ECPrivateKey /home/pawn/work/openssl/crypto/ec/ec_asn1.c:956:22\r\n    #12 0x7fb7a270b4b5 in der2key_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_der2key.c:220:19\r\n    #13 0x7fb7a226eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #14 0x7fb7a226d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #15 0x7fb7a226f007 in OSSL_DECODER_from_data /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:157:9\r\n    #16 0x7fb7a200e123 in d2i_PrivateKey_decoder /home/pawn/work/openssl/crypto/asn1/d2i_pr.c:74:11\r\n    #17 0x7fb7a200dbba in d2i_PrivateKey_ex /home/pawn/work/openssl/crypto/asn1/d2i_pr.c:162:11\r\n    #18 0x7fb7a200e3d2 in d2i_PrivateKey /home/pawn/work/openssl/crypto/asn1/d2i_pr.c:172:12\r\n    #19 0x7fb79dc6a22e in oqsx_key_gen_evp_key /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:1036:25\r\n    #20 0x7fb79dc68f3f in oqsx_key_gen /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:1077:16\r\n    #21 0x7fb79dc7164a in oqsx_genkey /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:496:9\r\n    #22 0x7fb79dc6d9f8 in oqsx_gen /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:509:12\r\n    #23 0x7fb7a23373c7 in evp_keymgmt_gen /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:366:12\r\n    #24 0x7fb7a2334b58 in evp_keymgmt_util_gen /home/pawn/work/openssl/crypto/evp/keymgmt_lib.c:517:20\r\n    #25 0x7fb7a235a775 in EVP_PKEY_generate /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:189:13\r\n    #26 0x5651eef4f2bd in test_oqs_signatures /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:39:48\r\n    #27 0x5651eef4ee3d in main /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:114:17\r\n    #28 0x7fb7a1b671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n```\r\n\r\n## 3. a `EVP_PKEY_CTX` that wasn't freed.\r\n\r\nIn `oqsx_key_free`, `key->oqsx_provider_ctx.oqsx_evp_ctx->ctx` is freed if the keytype is `ECP_HYB_KEM` or `ECX_HYB_KEM`. However, `key->oqsx_provider_ctx.oqsx_evp_ctx->ctx` is also used for signatures. In that case, a call to `EVP_PKEY_CTX_free` was missing. ASan trace that helped me finding this one:\r\n\r\n```\r\nIndirect leak of 7 byte(s) in 2 object(s) allocated from:\r\n    #0 0x55b6fc8d427e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_signatures+0xb927e) (BuildId: 3a8bff15d3315ba7ac1746fdc7b67eb464c607a1)\r\n    #1 0x7ff34dfa946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7ff34dfac50a in CRYPTO_strndup /home/pawn/work/openssl/crypto/o_str.c:43:11\r\n    #3 0x7ff34df9d152 in ossl_algorithm_get1_first_name /home/pawn/work/openssl/crypto/core_algorithm.c:195:11\r\n    #4 0x7ff34df353a1 in keymgmt_from_algorithm /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:50:31\r\n    #5 0x7ff34df15e44 in construct_evp_method /home/pawn/work/openssl/crypto/evp/evp_fetch.c:219:14\r\n    #6 0x7ff34df9e3ce in ossl_method_construct_this /home/pawn/work/openssl/crypto/core_fetch.c:109:19\r\n    #7 0x7ff34df9d740 in algorithm_do_map /home/pawn/work/openssl/crypto/core_algorithm.c:77:13\r\n    #8 0x7ff34df9ce88 in algorithm_do_this /home/pawn/work/openssl/crypto/core_algorithm.c:122:15\r\n    #9 0x7ff34dfcce3e in ossl_provider_doall_activated /home/pawn/work/openssl/crypto/provider_core.c:1423:14\r\n    #10 0x7ff34df9ca64 in ossl_algorithm_do_all /home/pawn/work/openssl/crypto/core_algorithm.c:162:9\r\n    #11 0x7ff34df9dd64 in ossl_method_construct /home/pawn/work/openssl/crypto/core_fetch.c:153:5\r\n    #12 0x7ff34df13b6f in inner_evp_generic_fetch /home/pawn/work/openssl/crypto/evp/evp_fetch.c:312:23\r\n    #13 0x7ff34df13226 in evp_generic_fetch /home/pawn/work/openssl/crypto/evp/evp_fetch.c:364:14\r\n    #14 0x7ff34df36a42 in EVP_KEYMGMT_fetch /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:220:12\r\n    #15 0x7ff34df5d6e4 in int_ctx_new /home/pawn/work/openssl/crypto/evp/pmeth_lib.c:280:23\r\n    #16 0x7ff34df5f0a9 in EVP_PKEY_CTX_new_id /home/pawn/work/openssl/crypto/evp/pmeth_lib.c:469:12\r\n    #17 0x7ff349865bcb in oqsx_hybsig_init /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:578:20\r\n    #18 0x7ff349865157 in oqsx_key_new /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:791:16\r\n    #19 0x7ff3498715a3 in oqsx_genkey /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:487:16\r\n    #20 0x7ff34986da08 in oqsx_gen /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:509:12\r\n    #21 0x7ff34df373c7 in evp_keymgmt_gen /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:366:12\r\n    #22 0x7ff34df34b58 in evp_keymgmt_util_gen /home/pawn/work/openssl/crypto/evp/keymgmt_lib.c:517:20\r\n    #23 0x7ff34df5a775 in EVP_PKEY_generate /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:189:13\r\n    #24 0x55b6fc90f2ad in test_oqs_signatures /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:39:48\r\n    #25 0x55b6fc90ee2d in main /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:114:17\r\n    #26 0x7ff34d8461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n```\r\n\r\n## 4. Missing `EVP_PKEY_CTX_free` in case of error.\r\n\r\nIn `oqsx_hybsig_init`, a `EVP_PKEY_CTX` is initialized using `EVP_PKEY_CTX_new_id`. However, later in the code, some extra work is done, and in case of error, the `EVP_PKEY_CTX` wasn't freed.\r\n\r\n(I couldn't recover the ASan message for this one…)\r\n\r\n\r\n## 5. `OPENSSL_free` instead of `EVP_PKEY_free`.\r\n\r\nIn `oqsx_key_gen`, when a classical private key is generated, the field `classical_pkey` of a `OQSX_KEY` is set with a value of type `EVP_PKEY`.\r\n\r\nHowever, in `oqsx_key_free`, `OPENSSL_free` was used on `classical_pkey` instead of `EVP_PKEY_free`.\r\n\r\nASan trace that helped me finding this one:\r\n\r\n```\r\n   #0 0x555a6b1b728e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_signatures+0xb928e) (BuildId: 6cc7ebd4bc73a0c78b2ab8d7b9dcb8b165d88e74)\r\n    #1 0x7f59a93a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f59a93a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7f59a909cdcd in BN_new /home/pawn/work/openssl/crypto/bn/bn_lib.c:247:16\r\n    #4 0x7f59a920b955 in ossl_ec_group_new_ex /home/pawn/work/openssl/crypto/ec/ec_lib.c:61:25\r\n    #5 0x7f59a920dd55 in EC_GROUP_dup /home/pawn/work/openssl/crypto/ec/ec_lib.c:273:14\r\n    #6 0x7f59a9207774 in EC_KEY_set_group /home/pawn/work/openssl/crypto/ec/ec_key.c:733:18\r\n    #7 0x7f59a975b3b5 in ec_gen_assign_group /home/pawn/work/openssl/providers/implementations/keymgmt/ec_kmgmt.c:1236:12\r\n    #8 0x7f59a9758bdb in ec_gen /home/pawn/work/openssl/providers/implementations/keymgmt/ec_kmgmt.c:1274:11\r\n    #9 0x7f59a93373c7 in evp_keymgmt_gen /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:366:12\r\n    #10 0x7f59a9334b58 in evp_keymgmt_util_gen /home/pawn/work/openssl/crypto/evp/keymgmt_lib.c:517:20\r\n    #11 0x7f59a935a775 in EVP_PKEY_generate /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:189:13\r\n    #12 0x7f59a935b404 in EVP_PKEY_keygen /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:274:12\r\n    #13 0x7f59a4c69a51 in oqsx_key_gen_evp_key /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:1012:12\r\n    #14 0x7f59a4c68faf in oqsx_key_gen /home/pawn/work/oqs-provider/oqsprov/oqsprov_keys.c:1084:16\r\n    #15 0x7f59a4c716ca in oqsx_genkey /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:496:9\r\n    #16 0x7f59a4c6da78 in oqsx_gen /home/pawn/work/oqs-provider/oqsprov/oqs_kmgmt.c:509:12\r\n    #17 0x7f59a93373c7 in evp_keymgmt_gen /home/pawn/work/openssl/crypto/evp/keymgmt_meth.c:366:12\r\n    #18 0x7f59a9334b58 in evp_keymgmt_util_gen /home/pawn/work/openssl/crypto/evp/keymgmt_lib.c:517:20\r\n    #19 0x7f59a935a775 in EVP_PKEY_generate /home/pawn/work/openssl/crypto/evp/pmeth_gn.c:189:13\r\n    #20 0x555a6b1f2890 in test_oqs_signatures /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:68:44\r\n    #21 0x555a6b1f1e3d in main /home/pawn/work/oqs-provider/test/oqs_test_signatures.c:114:17\r\n    #22 0x7f59a8c461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n```\r\n\r\n## 6. Some `OPENSSL_free` were missing in `oqs_test_kems.c`\r\n\r\n```\r\n==569479==ERROR: LeakSanitizer: detected memory leaks\r\n\r\nDirect leak of 346035 byte(s) in 42 object(s) allocated from:\r\n    #0 0x559c76ef524e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_kems+0xb924e) (BuildId: 76a98f5859ba3c90334cef4286e89aa76436b1ae)\r\n    #1 0x7f04407a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x559c76f30389 in test_oqs_kems /home/pawn/work/oqs-provider/test/oqs_test_kems.c:44:26\r\n    #3 0x559c76f2fdfd in main /home/pawn/work/oqs-provider/test/oqs_test_kems.c:93:17\r\n    #4 0x7f04400461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nDirect leak of 2690 byte(s) in 42 object(s) allocated from:\r\n    #0 0x559c76ef524e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_kems+0xb924e) (BuildId: 76a98f5859ba3c90334cef4286e89aa76436b1ae)\r\n    #1 0x7f04407a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x559c76f304a5 in test_oqs_kems /home/pawn/work/oqs-provider/test/oqs_test_kems.c:47:29\r\n    #3 0x559c76f2fdfd in main /home/pawn/work/oqs-provider/test/oqs_test_kems.c:93:17\r\n    #4 0x7f04400461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nDirect leak of 2690 byte(s) in 42 object(s) allocated from:\r\n    #0 0x559c76ef524e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_kems+0xb924e) (BuildId: 76a98f5859ba3c90334cef4286e89aa76436b1ae)\r\n    #1 0x7f04407a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x559c76f303e4 in test_oqs_kems /home/pawn/work/oqs-provider/test/oqs_test_kems.c:45:29\r\n    #3 0x559c76f2fdfd in main /home/pawn/work/oqs-provider/test/oqs_test_kems.c:93:17\r\n    #4 0x7f04400461c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n```\r\n\r\n## 7. Missing `X509_PUBKEY_free` in `oqsx_d2i_PUBKEY`.<a name=\"pubkey\"></a>\r\n\r\nThis was probably the hardest one for me to track down.\r\n\r\nIn `oqsx_d2i_PUBKEY`, a call is done to `oqsx_d2i_X509_PUBKEY_INTERNAL`.\r\nHowever, the returned value (of type `X509_PUBKEY`) wasn't freed.\r\n\r\nASan:\r\n\r\n```\r\nDirect leak of 48 byte(s) in 1 object(s) allocated from:\r\n    #0 0x55610d68132e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_endecode+0xb932e) (BuildId: 53bfaa0a3b850edc7328f30be8b047ab6675ba3c)\r\n    #1 0x7f68999a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f68999a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7f6895295897  (<unknown module>)\r\n    #4 0x7f6895295ce4  (<unknown module>)\r\n    #5 0x7f6895296a6c  (<unknown module>)\r\n    #6 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #7 0x7f6899d13383 in spki2typespki_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_spki2typespki.c:111:10\r\n    #8 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #9 0x7f6899d114d3 in pem2der_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_pem2der.c:204:14\r\n    #10 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #11 0x7f689986d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #12 0x55610d6bd407 in decode_EVP_PKEY_prov /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:151:10\r\n    #13 0x55610d6bc75b in test_oqs_encdec /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:188:14\r\n    #14 0x55610d6bbf37 in main /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:240:17\r\n    #15 0x7f68991671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nIndirect leak of 1312 byte(s) in 1 object(s) allocated from:\r\n    #0 0x55610d68132e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_endecode+0xb932e) (BuildId: 53bfaa0a3b850edc7328f30be8b047ab6675ba3c)\r\n    #1 0x7f68999a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f68995d6b99 in ossl_c2i_ASN1_BIT_STRING /home/pawn/work/openssl/crypto/asn1/a_bitstr.c:117:13\r\n    #3 0x7f689961f659 in asn1_ex_c2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:885:14\r\n    #4 0x7f689961bbc9 in asn1_d2i_ex_primitive /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:818:10\r\n    #5 0x7f6899618054 in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:217:16\r\n    #6 0x7f689961e02f in asn1_template_noexp_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:682:15\r\n    #7 0x7f689961a7b4 in asn1_template_ex_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:558:16\r\n    #8 0x7f689961986a in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:422:19\r\n    #9 0x7f68996175c8 in asn1_item_ex_d2i_intern /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:118:10\r\n    #10 0x7f68996177da in ASN1_item_d2i_ex /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:144:9\r\n    #11 0x7f6895295926  (<unknown module>)\r\n    #12 0x7f6895295ce4  (<unknown module>)\r\n    #13 0x7f6895296a6c  (<unknown module>)\r\n    #14 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #15 0x7f6899d13383 in spki2typespki_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_spki2typespki.c:111:10\r\n    #16 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #17 0x7f6899d114d3 in pem2der_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_pem2der.c:204:14\r\n    #18 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #19 0x7f689986d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #20 0x55610d6bd407 in decode_EVP_PKEY_prov /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:151:10\r\n    #21 0x55610d6bc75b in test_oqs_encdec /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:188:14\r\n    #22 0x55610d6bbf37 in main /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:240:17\r\n    #23 0x7f68991671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0x55610d68132e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_endecode+0xb932e) (BuildId: 53bfaa0a3b850edc7328f30be8b047ab6675ba3c)\r\n    #1 0x7f68999a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f68999a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7f68995fde90 in ASN1_STRING_type_new /home/pawn/work/openssl/crypto/asn1/asn1_lib.c:350:11\r\n    #4 0x7f689962a7dd in ASN1_BIT_STRING_new /home/pawn/work/openssl/crypto/asn1/tasn_typ.c:31:1\r\n    #5 0x7f68995d6a0f in ossl_c2i_ASN1_BIT_STRING /home/pawn/work/openssl/crypto/asn1/a_bitstr.c:98:20\r\n    #6 0x7f689961f659 in asn1_ex_c2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:885:14\r\n    #7 0x7f689961bbc9 in asn1_d2i_ex_primitive /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:818:10\r\n    #8 0x7f6899618054 in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:217:16\r\n    #9 0x7f689961e02f in asn1_template_noexp_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:682:15\r\n    #10 0x7f689961a7b4 in asn1_template_ex_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:558:16\r\n    #11 0x7f689961986a in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:422:19\r\n    #12 0x7f68996175c8 in asn1_item_ex_d2i_intern /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:118:10\r\n    #13 0x7f68996177da in ASN1_item_d2i_ex /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:144:9\r\n    #14 0x7f6895295926  (<unknown module>)\r\n    #15 0x7f6895295ce4  (<unknown module>)\r\n    #16 0x7f6895296a6c  (<unknown module>)\r\n    #17 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #18 0x7f6899d13383 in spki2typespki_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_spki2typespki.c:111:10\r\n    #19 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #20 0x7f6899d114d3 in pem2der_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_pem2der.c:204:14\r\n    #21 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #22 0x7f689986d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #23 0x55610d6bd407 in decode_EVP_PKEY_prov /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:151:10\r\n    #24 0x55610d6bc75b in test_oqs_encdec /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:188:14\r\n    #25 0x55610d6bbf37 in main /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:240:17\r\n    #26 0x7f68991671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nIndirect leak of 16 byte(s) in 1 object(s) allocated from:\r\n    #0 0x55610d68132e in malloc (/home/pawn/work/oqs-provider/build/test/oqs_test_endecode+0xb932e) (BuildId: 53bfaa0a3b850edc7328f30be8b047ab6675ba3c)\r\n    #1 0x7f68999a946b in CRYPTO_malloc /home/pawn/work/openssl/crypto/mem.c:190:12\r\n    #2 0x7f68999a94a2 in CRYPTO_zalloc /home/pawn/work/openssl/crypto/mem.c:197:11\r\n    #3 0x7f6899625ed4 in asn1_item_embed_new /home/pawn/work/openssl/crypto/asn1/tasn_new.c:136:21\r\n    #4 0x7f689962620e in ossl_asn1_item_ex_new_intern /home/pawn/work/openssl/crypto/asn1/tasn_new.c:52:12\r\n    #5 0x7f68996191a5 in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:366:21\r\n    #6 0x7f689961e02f in asn1_template_noexp_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:682:15\r\n    #7 0x7f689961a7b4 in asn1_template_ex_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:558:16\r\n    #8 0x7f689961986a in asn1_item_embed_d2i /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:422:19\r\n    #9 0x7f68996175c8 in asn1_item_ex_d2i_intern /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:118:10\r\n    #10 0x7f68996177da in ASN1_item_d2i_ex /home/pawn/work/openssl/crypto/asn1/tasn_dec.c:144:9\r\n    #11 0x7f6895295926  (<unknown module>)\r\n    #12 0x7f6895295ce4  (<unknown module>)\r\n    #13 0x7f6895296a6c  (<unknown module>)\r\n    #14 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #15 0x7f6899d13383 in spki2typespki_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_spki2typespki.c:111:10\r\n    #16 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #17 0x7f6899d114d3 in pem2der_decode /home/pawn/work/openssl/providers/implementations/encode_decode/decode_pem2der.c:204:14\r\n    #18 0x7f689986eae8 in decoder_process /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:971:14\r\n    #19 0x7f689986d106 in OSSL_DECODER_from_bio /home/pawn/work/openssl/crypto/encode_decode/decoder_lib.c:82:10\r\n    #20 0x55610d6bd407 in decode_EVP_PKEY_prov /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:151:10\r\n    #21 0x55610d6bc75b in test_oqs_encdec /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:188:14\r\n    #22 0x55610d6bbf37 in main /home/pawn/work/oqs-provider/test/oqs_test_endecode.c:240:17\r\n    #23 0x7f68991671c9 in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\r\n\r\nSUMMARY: AddressSanitizer: 1400 byte(s) leaked in 4 allocation(s).\r\n```\r\n\r\n## 8. Bonus point: fix a potential double-free.\r\n\r\nIn `oqsx_key_gen`, when the keytype isn't `KEY_TYPE_HYB_SIG`, the generated `pkey` is freed, and the flow goes down to the `err` label:\r\n\r\nhttps://github.com/open-quantum-safe/oqs-provider/blob/cc3895f208730abfe1efc15f7c3ff4358ac6e4c0/oqsprov/oqsprov_keys.c#L1089-L1104\r\n\r\nThere is a potential double-free bug here: if `oqsx_key_gen_oqs` fails, then `EVP_PKEY_free` will be called twice on the same `pkey` pointer.\r\n\r\nNote that it is very unlikely that `oqsx_key_gen_oqs` fails, since it only calls `OQS_KEM_keypair`/`OQS_SIG_keypair`.\r\n\r\n[`OPENSSL_free`]: https://www.openssl.org/docs/man3.0/man3/OPENSSL_free.html\r\n[`EVP_PKEY_CTX_free`]: https://www.openssl.org/docs/man3.0/man3/EVP_PKEY_CTX_free.html\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1709797061","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/245#issuecomment-1709797061","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/245","id":1709797061,"node_id":"IC_kwDOE_A9l85l6W7F","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-07T09:20:46Z","updated_at":"2023-09-07T09:20:46Z","author_association":"MEMBER","body":"> I think we can merge this one now.\r\n\r\nDone. Thanks again for the work!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1709797061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-07T09:20:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31672982246","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/229","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/229/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/229/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/229/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/229","id":1885660916,"node_id":"I_kwDODP--n85wZOb0","number":229,"title":"Cannot switch off OQS_HAVE_GETENTROPY, OQS_HAVE_EXPLICIT_BZERO","user":{"login":"marcbrevoort-cyberhive","id":69469731,"node_id":"MDQ6VXNlcjY5NDY5NzMx","avatar_url":"https://avatars.githubusercontent.com/u/69469731?v=4","gravatar_id":"","url":"https://api.github.com/users/marcbrevoort-cyberhive","html_url":"https://github.com/marcbrevoort-cyberhive","followers_url":"https://api.github.com/users/marcbrevoort-cyberhive/followers","following_url":"https://api.github.com/users/marcbrevoort-cyberhive/following{/other_user}","gists_url":"https://api.github.com/users/marcbrevoort-cyberhive/gists{/gist_id}","starred_url":"https://api.github.com/users/marcbrevoort-cyberhive/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marcbrevoort-cyberhive/subscriptions","organizations_url":"https://api.github.com/users/marcbrevoort-cyberhive/orgs","repos_url":"https://api.github.com/users/marcbrevoort-cyberhive/repos","events_url":"https://api.github.com/users/marcbrevoort-cyberhive/events{/privacy}","received_events_url":"https://api.github.com/users/marcbrevoort-cyberhive/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-09-07T10:59:31Z","updated_at":"2023-09-07T16:18:13Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When linking against OQS for `armv6`, I've been experiencing issues with undefined references for symbols `__explicit_bzero` and 'getentropy'. This is down to using `rpi_tools` for linking (pretty much required to build this for armv6), but unfortunately this only provides gcc v4.9.3 which is too low a version to compile OQS, so I end up with a mixed toolchain. As a result, cmake thinks these symbols will be available during link time, but they're not.\r\n\r\nIt appears the code caters for this eventuality, and contains both checks and fallback code depending on whether `OQS_HAVE_GETENTROPY` and `OQS_HAVE_EXPLICIT_BZERO` are defined. There's even a mechanism to switch these values to ON /defined, but unfortunately there doesn't seem to be a way to _undefine_ these. \r\n\r\nAs a workaround, I'm now patching CMakeLists.txt by commenting out the symbol checks:\r\n```\r\n# patch CMakeLists file so \"getentropy\" and \"explicit_bzero\" are undefined\r\nsed -i 's/check_symbol_exists[\\(]getentropy/#check_symbol_exists(getentropy/' src/common/CMakeLists.txt\r\nsed -i 's/check_symbol_exists[\\(]explicit_bzero/#check_symbol_exists(explicit_bzero/' src/common/CMakeLists.txt\r\n```\r\n\r\nThis allows me to complete my builds, but I'd much rather do this via an environment variable or \r\n`-DOQS_HAVE_GETENTROPY=OFF` / `-DOQS_HAVE_EXPLICIT_BZERO=OFF` settings. Sadly this doesn't work.\r\n\r\nBoth code snippets use `#if defined(....)`, perhaps this could check for the value of the variables instead?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/229/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1710440953","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/229#issuecomment-1710440953","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/229","id":1710440953,"node_id":"IC_kwDODP--n85l80H5","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-09-07T16:18:13Z","updated_at":"2023-09-07T16:18:13Z","author_association":"MEMBER","body":"> but unfortunately there doesn't seem to be a way to undefine these.\r\n\r\nBy default they should be undefined by default if my quick code review is correct.\r\n\r\n> This allows me to complete my builds, but I'd much rather do this via an environment variable or\r\n-DOQS_HAVE_GETENTROPY=OFF / -DOQS_HAVE_EXPLICIT_BZERO=OFF settings. Sadly this doesn't work.\r\n\r\nMaking the defines user settable via `cmake` option surely would be possible, but looking at the code setting these [e.g. here](https://github.com/open-quantum-safe/liboqs/blob/0dafd4f02c5a8fc000502ae51005a9962b671860/src/common/CMakeLists.txt#L89) it seems intentional to not have this manually settable as it's driven by a symbol found (or not). So it seems our current logic is flawed in your setup: Could you pinpoint why (the define gets set)? Would you possibly have a suggestion what to change in this CMakeLists.txt file to cater for your case? \r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/comments/1710440953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-07T16:18:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31679298481","type":"IssueCommentEvent","actor":{"id":132921394,"login":"praveksharma","display_login":"praveksharma","gravatar_id":"","url":"https://api.github.com/users/praveksharma","avatar_url":"https://avatars.githubusercontent.com/u/132921394?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1541","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1541/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1541/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1541/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1541","id":1886582490,"node_id":"PR_kwDOA-eq3c5Z0bWQ","number":1541,"title":"Update Classic McEliece suppression files","user":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":15,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-09-07T21:26:19Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2023-09-07T21:26:19Z","updated_at":"2023-09-07T21:33:03Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1541","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1541","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1541.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1541.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nUpdates suppression files to include potential leaks document in #1540.\r\nUpdates Classic McEliece advisories to include information about environment-specific constant time leaks.\r\nRemoves Classic-McEliece-6XX from weekly constant time test skip list. \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [No] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1541/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1710796137","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1541#issuecomment-1710796137","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1541","id":1710796137,"node_id":"IC_kwDOA-eq3c5l-K1p","user":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"created_at":"2023-09-07T21:33:02Z","updated_at":"2023-09-07T21:33:02Z","author_association":"CONTRIBUTOR","body":"@bhess I was hoping you could help me work on this issue, since I can't reproduce these errors locally. Could you check if Valgrind still complains about potential constant time leaks? \r\n\r\nIt might be a good idea to add `--error-limit=no` to valgrind's [options list](https://github.com/open-quantum-safe/liboqs/blob/0dafd4f02c5a8fc000502ae51005a9962b671860/tests/test_constant_time.py#L193) to ensure valgrind reports all errors.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1710796137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-07T21:33:03Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"31679389859","type":"IssueCommentEvent","actor":{"id":132921394,"login":"praveksharma","display_login":"praveksharma","gravatar_id":"","url":"https://api.github.com/users/praveksharma","avatar_url":"https://avatars.githubusercontent.com/u/132921394?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1540","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1540/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1540/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1540/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1540","id":1886576129,"node_id":"I_kwDOA-eq3c5wct4B","number":1540,"title":"Environment-specific Classic McEliece constant-time leaks","user":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"labels":[{"id":423520874,"node_id":"MDU6TGFiZWw0MjM1MjA4NzQ=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/bug","name":"bug","color":"ee0701","default":true,"description":"Something isn't working; high priority to fix"}],"state":"open","locked":false,"assignee":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"assignees":[{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/20","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/20/labels","id":9137673,"node_id":"MI_kwDOA-eq3c4Ai24J","number":20,"title":"0.9.0","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":15,"state":"open","created_at":"2023-03-09T03:37:15Z","updated_at":"2023-09-07T21:26:19Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2023-09-07T21:19:04Z","updated_at":"2023-09-07T21:38:47Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nThe testing suite is reporting [potential memory leaks](https://github.com/open-quantum-safe/liboqs/pull/1527#issuecomment-1701305585) ([test_constant_time.txt](https://github.com/open-quantum-safe/liboqs/files/12553409/test_constant_time.txt)) for Classic McEliece which are not documented in the suppression files.\r\n\r\n**To Reproduce**\r\nI am unable to reproduce this issue locally. Additionally, these errors aren't being caught by the CI during weekly constant time tests. One might try to reproduce this with following steps:\r\n```\r\ndocker run -dti openquantumsafe/ci-ubuntu-focal-x86_64 /bin/bash\r\ndocker attach (output of docker run command)\r\ncd\r\ngit clone https://github.com/open-quantum-safe/liboqs\r\ncd liboqs\r\nmkdir build\r\ncd build\r\ncmake -GNinja -DOQS_OPT_TARGET=generic -DCMAKE_BUILD_TYPE=Debug -DOQS_ENABLE_TEST_CONSTANT_TIME=ON ..\r\nninja\r\ncd ..\r\nSKIP_ALGS='BIKE*,Frodo*,HQC*,Kyber*,NTRU*,stru*,ntru*,LightSaber,Saber,FireSaber,Dilithium*,Falcon*,,SPHINCS*' python3 tests/test_constant_time.py  --verbose\r\n```\r\n\r\nThank you for sharing this issue @bhess! Could you please share information about your environment: \r\n**Environment (please complete the following information):**\r\n - OS: [e.g. Ubuntu 20]\r\n - OpenSSL version [e.g., 3.0.2]\r\n - Compiler version used [e.g., clang 9.0.0]\r\n - Build variables used [e.g., \"-DOQS_ALGS_ENABLED=STD\"]\r\n - liboqs version [e.g. 0.7.2 or main branch]\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1540/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1540/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1710801421","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1540#issuecomment-1710801421","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1540","id":1710801421,"node_id":"IC_kwDOA-eq3c5l-MIN","user":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"created_at":"2023-09-07T21:38:46Z","updated_at":"2023-09-07T21:38:46Z","author_association":"CONTRIBUTOR","body":"Addressing the (potential) leaks documented in this issue doesn't fix the larger issue of the current Classic McEliece implementation (potentially) not being constant time in certain environments. Aside from documenting this in the advisories (as in #1541) should we be taking additional measures for the final 0.9.0 release?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1710801421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-09-07T21:38:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
