{"id":"33900291826","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1605","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1605/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1605/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1605/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1605","id":1979029016,"node_id":"PR_kwDOA-eq3c5erqhT","number":1605,"title":"platform support documentation [skip ci]","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-11-06T12:26:47Z","updated_at":"2023-12-05T11:24:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1605","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1605","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1605.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1605.patch","merged_at":null},"body":"Implements results of [discussion on platforms supported](https://github.com/orgs/open-quantum-safe/discussions/1583).\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in fully supported downstream projects dependent on these, i.e., [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1605/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1840557646","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1605#issuecomment-1840557646","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1605","id":1840557646,"node_id":"IC_kwDOA-eq3c5ttK5O","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-12-05T11:24:48Z","updated_at":"2023-12-05T11:24:48Z","author_association":"MEMBER","body":"Additional thought: \"Tier 0\" sounds a bit .... \"close to negative\" :), i.e., to me feels not properly denominating the \"highest\" tier. Also, what about platforms for which there shall be formally verified implementations available (that also should be CT & side-channel attack resistant & code-reviewed & fuzzed & .... etc.): Shouldn't those represent the highest tier? Slight disadvantage of such tier: It would have no entries right now...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1840557646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-12-05T11:24:50Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33900419168","type":"IssueCommentEvent","actor":{"id":5159151,"login":"Frauschi","display_login":"Frauschi","gravatar_id":"","url":"https://api.github.com/users/Frauschi","avatar_url":"https://avatars.githubusercontent.com/u/5159151?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1621","id":2023261475,"node_id":"PR_kwDOA-eq3c5hBbND","number":1621,"title":"Add support for Zephyr RTOS","user":{"login":"Frauschi","id":5159151,"node_id":"MDQ6VXNlcjUxNTkxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/5159151?v=4","gravatar_id":"","url":"https://api.github.com/users/Frauschi","html_url":"https://github.com/Frauschi","followers_url":"https://api.github.com/users/Frauschi/followers","following_url":"https://api.github.com/users/Frauschi/following{/other_user}","gists_url":"https://api.github.com/users/Frauschi/gists{/gist_id}","starred_url":"https://api.github.com/users/Frauschi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frauschi/subscriptions","organizations_url":"https://api.github.com/users/Frauschi/orgs","repos_url":"https://api.github.com/users/Frauschi/repos","events_url":"https://api.github.com/users/Frauschi/events{/privacy}","received_events_url":"https://api.github.com/users/Frauschi/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-12-04T08:07:27Z","updated_at":"2023-12-05T11:29:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1621","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1621","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1621.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1621.patch","merged_at":null},"body":"Hi everybody,\r\n\r\nThis PR adds support for the [Zephyr RTOS](https://github.com/zephyrproject-rtos/zephyr), so liboqs can be used as a module (see [here](https://docs.zephyrproject.org/latest/develop/modules.html)). \r\n\r\nThe main changes to the existing library code are focussed on the CMake build environment to enable the library to be built with the Zephyr SDK. All changes should not influence existing builds outside the Zephyr environment. (However, some changes also improve the integration of liboqs directly in a CMake-based project without installing it system-wide.) \r\n\r\nOne bigger source code change is related to random number generation. Zephyr doesn't support any of the currently present RNG interfaces. To be most flexible, I added a generic `OQS_USE_EXTERNAL_RNG` option (disabled by default). In this case, an externally defined method `OQS_randombytes_external()` must be present during link time, which is then used to obtain random data. For Zephyr, I implemented that method to generate random data using their RNG interface. \r\n\r\nThe main Zephyr integration is all contained in the new `zephyr` folder in the root directory (common practice for Zephyr modules to have this folder). In that directory, there is a custom `CMakeLists.txt` to integrate the existing CMake infrastructure into Zephyr. Furthermore, a Kconfig file is provided to configure the build (and especially the algorithm selection). Finally, the new `OQS_randombytes_external` method is implemented in a small C source file here. \r\n\r\nAs this is my first PR for this project, I'm not sure if the changes are upstreamable in the current form. But I'm looking forward to your feedback.\r\n\r\nKind regards,\r\nTobi","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1840568235","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1621#issuecomment-1840568235","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621","id":1840568235,"node_id":"IC_kwDOA-eq3c5ttNer","user":{"login":"Frauschi","id":5159151,"node_id":"MDQ6VXNlcjUxNTkxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/5159151?v=4","gravatar_id":"","url":"https://api.github.com/users/Frauschi","html_url":"https://github.com/Frauschi","followers_url":"https://api.github.com/users/Frauschi/followers","following_url":"https://api.github.com/users/Frauschi/following{/other_user}","gists_url":"https://api.github.com/users/Frauschi/gists{/gist_id}","starred_url":"https://api.github.com/users/Frauschi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frauschi/subscriptions","organizations_url":"https://api.github.com/users/Frauschi/orgs","repos_url":"https://api.github.com/users/Frauschi/repos","events_url":"https://api.github.com/users/Frauschi/events{/privacy}","received_events_url":"https://api.github.com/users/Frauschi/received_events","type":"User","site_admin":false},"created_at":"2023-12-05T11:29:10Z","updated_at":"2023-12-05T11:29:10Z","author_association":"NONE","body":"> Is there a 1:1 match regarding the platforms that Zephyr supports and [the ones that `liboqs` supports](https://github.com/open-quantum-safe/liboqs/pull/1605)? Or is there some deficiency that would need to be addressed in `liboqs` to get there? Or is that not necessary?\r\n\r\nCurrently, the matching platforms are 32-bit ARM, 64-bit ARM, x86 and “native build” on Linux (which is then probably one of 32/64-bit ARM, x86, or x86_64). In the latest changes of the commits, I added a dependency from within Zephyr to only enable the module if one of these supported platforms is selected. Otherwise, the liboqs module is disabled and a warning is raised in Zephyr.\r\n\r\nTo fully support all platforms of Zephyr in liboqs, we would have to add support for `arc`, `mips`, `riscv`, `sparc`, and `xtensa`. I think the most popular platforms of these are `riscv` and `xtensa` (ESP32 controllers). On these platforms, the native C code should run without problems. \r\n\r\nI think it doesn't make sense to add those platforms now until there is actual request (also, I don't have hardware to test liboqs on those platforms, actually). ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1840568235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-12-05T11:29:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33900495455","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1621","id":2023261475,"node_id":"PR_kwDOA-eq3c5hBbND","number":1621,"title":"Add support for Zephyr RTOS","user":{"login":"Frauschi","id":5159151,"node_id":"MDQ6VXNlcjUxNTkxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/5159151?v=4","gravatar_id":"","url":"https://api.github.com/users/Frauschi","html_url":"https://github.com/Frauschi","followers_url":"https://api.github.com/users/Frauschi/followers","following_url":"https://api.github.com/users/Frauschi/following{/other_user}","gists_url":"https://api.github.com/users/Frauschi/gists{/gist_id}","starred_url":"https://api.github.com/users/Frauschi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frauschi/subscriptions","organizations_url":"https://api.github.com/users/Frauschi/orgs","repos_url":"https://api.github.com/users/Frauschi/repos","events_url":"https://api.github.com/users/Frauschi/events{/privacy}","received_events_url":"https://api.github.com/users/Frauschi/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-12-04T08:07:27Z","updated_at":"2023-12-05T11:31:37Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1621","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1621","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1621.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1621.patch","merged_at":null},"body":"Hi everybody,\r\n\r\nThis PR adds support for the [Zephyr RTOS](https://github.com/zephyrproject-rtos/zephyr), so liboqs can be used as a module (see [here](https://docs.zephyrproject.org/latest/develop/modules.html)). \r\n\r\nThe main changes to the existing library code are focussed on the CMake build environment to enable the library to be built with the Zephyr SDK. All changes should not influence existing builds outside the Zephyr environment. (However, some changes also improve the integration of liboqs directly in a CMake-based project without installing it system-wide.) \r\n\r\nOne bigger source code change is related to random number generation. Zephyr doesn't support any of the currently present RNG interfaces. To be most flexible, I added a generic `OQS_USE_EXTERNAL_RNG` option (disabled by default). In this case, an externally defined method `OQS_randombytes_external()` must be present during link time, which is then used to obtain random data. For Zephyr, I implemented that method to generate random data using their RNG interface. \r\n\r\nThe main Zephyr integration is all contained in the new `zephyr` folder in the root directory (common practice for Zephyr modules to have this folder). In that directory, there is a custom `CMakeLists.txt` to integrate the existing CMake infrastructure into Zephyr. Furthermore, a Kconfig file is provided to configure the build (and especially the algorithm selection). Finally, the new `OQS_randombytes_external` method is implemented in a small C source file here. \r\n\r\nAs this is my first PR for this project, I'm not sure if the changes are upstreamable in the current form. But I'm looking forward to your feedback.\r\n\r\nKind regards,\r\nTobi","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1840576762","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1621#issuecomment-1840576762","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621","id":1840576762,"node_id":"IC_kwDOA-eq3c5ttPj6","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-12-05T11:31:36Z","updated_at":"2023-12-05T11:31:36Z","author_association":"MEMBER","body":"> I think it doesn't make sense to add those platforms now until there is actual request\r\n\r\nFully agree.\r\n\r\n> I added a dependency from within Zephyr to only enable the module if one of these supported platforms is selected.\r\n\r\nGood addition. Resolves my concerns around platforms: Thanks!\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1840576762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-12-05T11:31:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"33916009699","type":"IssueCommentEvent","actor":{"id":39264796,"login":"SWilson4","display_login":"SWilson4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","avatar_url":"https://avatars.githubusercontent.com/u/39264796?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1621","id":2023261475,"node_id":"PR_kwDOA-eq3c5hBbND","number":1621,"title":"Add support for Zephyr RTOS","user":{"login":"Frauschi","id":5159151,"node_id":"MDQ6VXNlcjUxNTkxNTE=","avatar_url":"https://avatars.githubusercontent.com/u/5159151?v=4","gravatar_id":"","url":"https://api.github.com/users/Frauschi","html_url":"https://github.com/Frauschi","followers_url":"https://api.github.com/users/Frauschi/followers","following_url":"https://api.github.com/users/Frauschi/following{/other_user}","gists_url":"https://api.github.com/users/Frauschi/gists{/gist_id}","starred_url":"https://api.github.com/users/Frauschi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frauschi/subscriptions","organizations_url":"https://api.github.com/users/Frauschi/orgs","repos_url":"https://api.github.com/users/Frauschi/repos","events_url":"https://api.github.com/users/Frauschi/events{/privacy}","received_events_url":"https://api.github.com/users/Frauschi/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-12-04T08:07:27Z","updated_at":"2023-12-05T19:59:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1621","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1621","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1621.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1621.patch","merged_at":null},"body":"Hi everybody,\r\n\r\nThis PR adds support for the [Zephyr RTOS](https://github.com/zephyrproject-rtos/zephyr), so liboqs can be used as a module (see [here](https://docs.zephyrproject.org/latest/develop/modules.html)). \r\n\r\nThe main changes to the existing library code are focussed on the CMake build environment to enable the library to be built with the Zephyr SDK. All changes should not influence existing builds outside the Zephyr environment. (However, some changes also improve the integration of liboqs directly in a CMake-based project without installing it system-wide.) \r\n\r\nOne bigger source code change is related to random number generation. Zephyr doesn't support any of the currently present RNG interfaces. To be most flexible, I added a generic `OQS_USE_EXTERNAL_RNG` option (disabled by default). In this case, an externally defined method `OQS_randombytes_external()` must be present during link time, which is then used to obtain random data. For Zephyr, I implemented that method to generate random data using their RNG interface. \r\n\r\nThe main Zephyr integration is all contained in the new `zephyr` folder in the root directory (common practice for Zephyr modules to have this folder). In that directory, there is a custom `CMakeLists.txt` to integrate the existing CMake infrastructure into Zephyr. Furthermore, a Kconfig file is provided to configure the build (and especially the algorithm selection). Finally, the new `OQS_randombytes_external` method is implemented in a small C source file here. \r\n\r\nAs this is my first PR for this project, I'm not sure if the changes are upstreamable in the current form. But I'm looking forward to your feedback.\r\n\r\nKind regards,\r\nTobi","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1841527394","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1621#issuecomment-1841527394","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1621","id":1841527394,"node_id":"IC_kwDOA-eq3c5tw3pi","user":{"login":"SWilson4","id":39264796,"node_id":"MDQ6VXNlcjM5MjY0Nzk2","avatar_url":"https://avatars.githubusercontent.com/u/39264796?v=4","gravatar_id":"","url":"https://api.github.com/users/SWilson4","html_url":"https://github.com/SWilson4","followers_url":"https://api.github.com/users/SWilson4/followers","following_url":"https://api.github.com/users/SWilson4/following{/other_user}","gists_url":"https://api.github.com/users/SWilson4/gists{/gist_id}","starred_url":"https://api.github.com/users/SWilson4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SWilson4/subscriptions","organizations_url":"https://api.github.com/users/SWilson4/orgs","repos_url":"https://api.github.com/users/SWilson4/repos","events_url":"https://api.github.com/users/SWilson4/events{/privacy}","received_events_url":"https://api.github.com/users/SWilson4/received_events","type":"User","site_admin":false},"created_at":"2023-12-05T19:59:34Z","updated_at":"2023-12-05T19:59:34Z","author_association":"CONTRIBUTOR","body":"Hi @Frauschi, thanks for the PR. Is it absolutely necessary to introduce the `OQS_USE_EXTERNAL_RNG` option? We have an API function to [set a custom RNG](https://github.com/open-quantum-safe/liboqs/blob/78e65bf143edeceae3179c40b511e1313621ffde/src/common/rand/rand.h#L44); might this suffice for your purposes?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1841527394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-12-05T19:59:36Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
