{"id":"34126923841","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/317","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/317/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/317/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/317/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/317","id":2038631114,"node_id":"PR_kwDOE_A9l85h1wHo","number":317,"title":"Implementation of Composite Sig","user":{"login":"feventura","id":37639194,"node_id":"MDQ6VXNlcjM3NjM5MTk0","avatar_url":"https://avatars.githubusercontent.com/u/37639194?v=4","gravatar_id":"","url":"https://api.github.com/users/feventura","html_url":"https://github.com/feventura","followers_url":"https://api.github.com/users/feventura/followers","following_url":"https://api.github.com/users/feventura/following{/other_user}","gists_url":"https://api.github.com/users/feventura/gists{/gist_id}","starred_url":"https://api.github.com/users/feventura/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/feventura/subscriptions","organizations_url":"https://api.github.com/users/feventura/orgs","repos_url":"https://api.github.com/users/feventura/repos","events_url":"https://api.github.com/users/feventura/events{/privacy}","received_events_url":"https://api.github.com/users/feventura/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-12-12T22:17:26Z","updated_at":"2023-12-13T05:19:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/317","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/317","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/317.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/317.patch","merged_at":null},"body":"This is an implementation of the version 10 [Composite Signatures For Use In Internet PKI](https://datatracker.ietf.org/doc/draft-ounsworth-pq-composite-sigs/).\r\nCurrent status of this work:\r\n- I'm working on fixing the issues pointed by the Git Actions workflow tests.\r\n- There will be alterations to update this for version 11 when it is released.\r\n- To be precise with the IETF draft, we need to wait for ML-DSA-ipd to be implemented.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/317/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1853285600","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/317#issuecomment-1853285600","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/317","id":1853285600,"node_id":"IC_kwDOE_A9l85uduTg","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-12-13T05:19:51Z","updated_at":"2023-12-13T05:19:51Z","author_association":"MEMBER","body":"Hi Felipe, very glad to see this contribution to the project. It's now coming at a suboptimal moment though: We're going through an external code security audit and can't accept large commits to \"main\" until that is complete. Would you consider contributing to a separate branch (say \"entrust-composite\") for now? That'd also give us opportunity to tune and complete together, e.g. pertaining to testing and integrating the pending addition of ml-dsa?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1853285600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-12-13T05:19:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"34127255103","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/316","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/316/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/316/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/316/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/316","id":2037961191,"node_id":"PR_kwDOE_A9l85hzdye","number":316,"title":"Generate code coverage using source-based LLVM code coverage.","user":{"login":"thb-sb","id":108470890,"node_id":"U_kgDOBnciag","avatar_url":"https://avatars.githubusercontent.com/u/108470890?v=4","gravatar_id":"","url":"https://api.github.com/users/thb-sb","html_url":"https://github.com/thb-sb","followers_url":"https://api.github.com/users/thb-sb/followers","following_url":"https://api.github.com/users/thb-sb/following{/other_user}","gists_url":"https://api.github.com/users/thb-sb/gists{/gist_id}","starred_url":"https://api.github.com/users/thb-sb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thb-sb/subscriptions","organizations_url":"https://api.github.com/users/thb-sb/orgs","repos_url":"https://api.github.com/users/thb-sb/repos","events_url":"https://api.github.com/users/thb-sb/events{/privacy}","received_events_url":"https://api.github.com/users/thb-sb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-12-12T15:04:41Z","updated_at":"2023-12-13T05:41:20Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/316","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/316","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/316.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/316.patch","merged_at":null},"body":null,"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/316/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1853302185","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/316#issuecomment-1853302185","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/316","id":1853302185,"node_id":"IC_kwDOE_A9l85udyWp","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-12-13T05:41:19Z","updated_at":"2023-12-13T05:41:19Z","author_association":"MEMBER","body":"Hi Thomas, I like the potential of this PR for continuous improvement. But I wonder whether it wouldn't be better as a script (either new or option to 'fullbuild.sh\"): In CI it only adds runtime but no additional insight as it basically cannot fail --at least for as long as the test does not compare prior run results to flag regressions in code coverage (and fail CI in such cases). Or is your intention to enhance the PR in this way? If so, does it need to build everything (incl. OpenSSL) from scratch, or could it use a pre-existing binary (or cache) to avoid slowing down overall CI performance?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1853302185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-12-13T05:41:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
