{"id":"29089372743","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1420","id":1630363451,"node_id":"PR_kwDOA-eq3c5MXD0D","number":1420,"title":"Update SPHINCS+","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/18","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18/labels","id":7069955,"node_id":"MI_kwDOA-eq3c4Aa-ED","number":18,"title":"0.8.0","description":"See https://github.com/open-quantum-safe/liboqs/issues/1245#issuecomment-1319218926 for table of algorithm updates.","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":9,"state":"open","created_at":"2021-08-18T14:40:17Z","updated_at":"2023-05-12T01:37:36Z","due_on":"2023-03-31T07:00:00Z","closed_at":null},"comments":33,"created_at":"2023-03-18T15:11:57Z","updated_at":"2023-05-16T04:41:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1420","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1420","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1420.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1420.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1249.\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [Yes] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [Yes] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n* [ ] TODO: Ensure all references to the removed variants (Haraka) are removed.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1548980815","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1420#issuecomment-1548980815","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420","id":1548980815,"node_id":"IC_kwDOA-eq3c5cU5JP","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T04:41:33Z","updated_at":"2023-05-16T04:41:33Z","author_association":"MEMBER","body":"> If I can get a once over and 1-2 approvals on this it should be good to merge\r\n\r\nDone. But it doesn't feel quite right that I give an approval on this as all changes done to get this to \"green\" were done by me in #1460. But if that got a good review, I think we're good to move forward.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1548980815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T04:41:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29089387398","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1458","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1458/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1458/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1458/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1458","id":1708602568,"node_id":"PR_kwDOA-eq3c5QcDvt","number":1458,"title":"AVX2 support for Sphincs","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-05-13T13:23:53Z","updated_at":"2023-05-16T04:42:53Z","closed_at":"2023-05-16T04:42:53Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1458","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1458","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1458.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1458.patch","merged_at":null},"body":"Fixes #1249. Improves / builds on #1420,\r\n\r\n- correcting documentation\r\n- adding AVX2 support for Sphincs (with suitable patchfile)\r\n- excluding new aarch64 upstream code package\r\n\r\n* [Yes] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [Yes] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1458/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1548981557","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1458#issuecomment-1548981557","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1458","id":1548981557,"node_id":"IC_kwDOA-eq3c5cU5U1","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T04:42:53Z","updated_at":"2023-05-16T04:42:53Z","author_association":"MEMBER","body":"Closing as #1460 merged into #1420.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1548981557/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T04:42:54Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29089394035","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1455","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1455/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1455/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1455/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1455","id":1707307502,"node_id":"PR_kwDOA-eq3c5QXvQy","number":1455,"title":"removing Kyber90s, DilithiumAES","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-05-12T09:43:15Z","updated_at":"2023-05-16T04:43:28Z","closed_at":"2023-05-16T04:43:28Z","author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1455","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1455","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1455.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1455.patch","merged_at":null},"body":"Fixes #1417\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [yes] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\nPlease note that this code is used to prepare downstream PRs for merging #1420. \r\n\r\nActual code changes are not part of this PR to not cause unnecessary conflicts in #1420. \r\n\r\nThe idea is to merge this PR only when all issues in #1420 are resolved: Please merge this PR, rebase #1420 on this and run `copy_from_upstream` as a final step in #1420 to trigger the actual algorithm removal (or just update the 3 file contents in #1420 -- whatever is easier).\r\n\r\n@dstebila As I assume you will do the final merge of #1420, please let me know how you want to proceed. Until then, leaving this at Draft state.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1455/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1548981879","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1455#issuecomment-1548981879","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1455","id":1548981879,"node_id":"IC_kwDOA-eq3c5cU5Z3","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T04:43:27Z","updated_at":"2023-05-16T04:43:27Z","author_association":"MEMBER","body":"Closing as equivalent #1460 merged into #1420.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1548981879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T04:43:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29089444338","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1452","id":1702470757,"node_id":"I_kwDOA-eq3c5leaRl","number":1452,"title":"Bug in OSX integration of OpenSSL","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-05-09T17:48:04Z","updated_at":"2023-05-16T04:47:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nOn a newly-prepared platform , I'm getting a ton of errors trying to run test-suite:\r\n```text\r\n.  .  .\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256f-simple] ___________________________________\r\n[gw11] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256f-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256f-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256f-simple -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-192f-robust] ___________________________________\r\n[gw4] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-192f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-192f-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-192f-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256s-simple] ___________________________________\r\n[gw2] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256s-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-simple -f\r\n\r\n___________________________________ test_sig[SPHINCS+-SHA256-128f-robust] ____________________________________\r\n[gw9] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHA256-128f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       output = helpers.run_subprocess(\r\n            [helpers.path_to_executable('kat_sig'), sig_name],\r\n        )\r\n\r\ntests/test_kat.py:29: \r\n.  .  .\r\n```\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone, build optimized version, as per README.\r\n2. Go to `build` subdirectory.\r\n3. `ninja run_tests`\r\n4. See error\r\n\r\n**Expected behavior**\r\nTests passing or being skipped, test-scripts not crashing.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.3.1 (a)\r\n - OpenSSL version: 3.2.0-dev\r\n - Compiler version used: Apple Clang \r\n - Build variables used:\r\n ```\r\nOPT=\"-DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release\"\r\nenv RUN_TESTS_PARALLEL_UPPER=FALSE cmake -GNinja .. -DOQS_USE_OPENSSL=ON ${OPT} -DCMAKE_INSTALL_PREFIX=\"${HOME}/openssl-3\"\r\n```\r\n - liboqs version: current main\r\n\r\n**Additional context**\r\nI hope you can point me at where/what in Python environment seems missing - maybe an older version of some module, or such...?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/timeline","performed_via_github_app":null,"state_reason":"reopened"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1548984292","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1452#issuecomment-1548984292","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452","id":1548984292,"node_id":"IC_kwDOA-eq3c5cU5_k","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T04:47:51Z","updated_at":"2023-05-16T04:47:51Z","author_association":"MEMBER","body":"> But on Apple Silicon, OpenSSL-3.2.0-dev crashes several times, with this:\r\n\r\nSo we re-open. Is this dependent on other providers being active? Any way you see how we can reproduce (also for CI)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1548984292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T04:47:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29089474456","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/150","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/150/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/150/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/150/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/150","id":1689930615,"node_id":"PR_kwDOE_A9l85PdLke","number":150,"title":"test/CMakeLists.txt: Tolerate out-of-tree builds of OpenSSL","user":{"login":"distorted-mdw","id":10420519,"node_id":"MDQ6VXNlcjEwNDIwNTE5","avatar_url":"https://avatars.githubusercontent.com/u/10420519?v=4","gravatar_id":"","url":"https://api.github.com/users/distorted-mdw","html_url":"https://github.com/distorted-mdw","followers_url":"https://api.github.com/users/distorted-mdw/followers","following_url":"https://api.github.com/users/distorted-mdw/following{/other_user}","gists_url":"https://api.github.com/users/distorted-mdw/gists{/gist_id}","starred_url":"https://api.github.com/users/distorted-mdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/distorted-mdw/subscriptions","organizations_url":"https://api.github.com/users/distorted-mdw/orgs","repos_url":"https://api.github.com/users/distorted-mdw/repos","events_url":"https://api.github.com/users/distorted-mdw/events{/privacy}","received_events_url":"https://api.github.com/users/distorted-mdw/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-04-30T14:05:09Z","updated_at":"2023-05-16T04:50:27Z","closed_at":"2023-05-16T04:50:27Z","author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/150","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/150","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/150.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/150.patch","merged_at":null},"body":"Add a new variable `OEPNSSL_SRCTOP` to parallel the existing `OPENSSL_BLDTOP`.  This refers to the actual source directory, from which we find header files, rather than the build directory which contains libraries, most notably `libtestutil.a`.\r\n\r\nAs I've set things up, each variable defaults from the other.  This is probably not great long-term: it's intended as a transition measure.  It seems more sensible to me to have the source directory be the primary setting, and have the build directory be subsidiary; but existing scripts (and finger-macros) know nothing of the new source-directory setting, so preserving compatibility seems valuable for now.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/150/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1548985739","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/150#issuecomment-1548985739","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/150","id":1548985739,"node_id":"IC_kwDOE_A9l85cU6WL","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T04:50:26Z","updated_at":"2023-05-16T04:50:26Z","author_association":"MEMBER","body":"Closing due to lack of feedback. Please re-open if NOK (#153 not achieving your goal).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1548985739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T04:50:27Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29089517701","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/148","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/148/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/148/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/148/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/148","id":1689139267,"node_id":"I_kwDOE_A9l85krjhD","number":148,"title":"Key import is nonfunctional","user":{"login":"distorted-mdw","id":10420519,"node_id":"MDQ6VXNlcjEwNDIwNTE5","avatar_url":"https://avatars.githubusercontent.com/u/10420519?v=4","gravatar_id":"","url":"https://api.github.com/users/distorted-mdw","html_url":"https://github.com/distorted-mdw","followers_url":"https://api.github.com/users/distorted-mdw/followers","following_url":"https://api.github.com/users/distorted-mdw/following{/other_user}","gists_url":"https://api.github.com/users/distorted-mdw/gists{/gist_id}","starred_url":"https://api.github.com/users/distorted-mdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/distorted-mdw/subscriptions","organizations_url":"https://api.github.com/users/distorted-mdw/orgs","repos_url":"https://api.github.com/users/distorted-mdw/repos","events_url":"https://api.github.com/users/distorted-mdw/events{/privacy}","received_events_url":"https://api.github.com/users/distorted-mdw/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-04-28T21:10:45Z","updated_at":"2023-05-16T04:54:05Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The short version is: `oqsx_key_fromdata` is missing a call to `oqsx_key_set_composites`.  Without this, the `comp_privkey` and `comp_pubkey` vectors are left unitialized, which could lead to all sorts of bad things, though I ended up debugging this as a result of mysterious signature verification failures.\r\n\r\nTwo-line MR on its way.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/148/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1548987799","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/148#issuecomment-1548987799","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/148","id":1548987799,"node_id":"IC_kwDOE_A9l85cU62X","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T04:54:05Z","updated_at":"2023-05-16T04:54:05Z","author_association":"MEMBER","body":"Same question as in #149: Can you please provide a (bug) reproducer?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1548987799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T04:54:06Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29090036453","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1437","id":1670652404,"node_id":"I_kwDOA-eq3c5jlCH0","number":1437,"title":"CC0 license is an obstacle","user":{"login":"beldmit","id":13785747,"node_id":"MDQ6VXNlcjEzNzg1NzQ3","avatar_url":"https://avatars.githubusercontent.com/u/13785747?v=4","gravatar_id":"","url":"https://api.github.com/users/beldmit","html_url":"https://github.com/beldmit","followers_url":"https://api.github.com/users/beldmit/followers","following_url":"https://api.github.com/users/beldmit/following{/other_user}","gists_url":"https://api.github.com/users/beldmit/gists{/gist_id}","starred_url":"https://api.github.com/users/beldmit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beldmit/subscriptions","organizations_url":"https://api.github.com/users/beldmit/orgs","repos_url":"https://api.github.com/users/beldmit/repos","events_url":"https://api.github.com/users/beldmit/events{/privacy}","received_events_url":"https://api.github.com/users/beldmit/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-04-17T08:13:06Z","updated_at":"2023-05-16T05:30:17Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Dear colleagues, \r\n\r\nwe are planning to package liboqs for Fedora. We build liboqs with `-DOQS_ALGS_ENABLED=STD` to minimize support of non-standardized algorithms.\r\n\r\nWe found that the folders\r\n```\r\n./src/kem/kyber/pqclean_kyber*_aarch64\r\n./src/sig/dilithium/pqclean_dilithium*_aarch64\r\n./src/sig/sphincs/pqclean_sphincs*\r\n```\r\ncontain CC0 license which is not acceptable for Fedora by default (and AFAIU, other Linux distributions).\r\n\r\nI believe that for aarch64 we could fallback to a generic (slower) implementation in the compile time, but it's obviously not the best possible option.\r\n\r\nIs it possible to get in contact with the authors of these implementation to get an agreement about double-licensing of these implementations? MIT, Apache2 or smth else is fine for our purpose.\r\n\r\nMany thanks in advance!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549014050","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1437#issuecomment-1549014050","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437","id":1549014050,"node_id":"IC_kwDOA-eq3c5cVBQi","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T05:30:17Z","updated_at":"2023-05-16T05:30:17Z","author_association":"MEMBER","body":"@beldmit As this \"big company license madness\" (pardon the quip from someone believing in all benefits of open source) apparently isn't sth easily resolved what about this proposal: Would it make sense/resolve your issue to add a (`cmake`) build define that ensures only MIT code gets included in a build? Or do you(r downstream :) need _all code_ (incl. unbuild pieces) to be \"license clean\" from your perspective?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549014050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T05:30:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29091493246","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/132","id":1642717023,"node_id":"I_kwDOE_A9l85h6d9f","number":132,"title":"Unable to run tests on OSX","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":68,"created_at":"2023-03-27T19:52:52Z","updated_at":"2023-05-16T06:55:00Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Updated\r\nTo make some details clear, as previous overly-generic description invited useless overly-generic observations, like \"could not replicate on Windows\".\r\n\r\n**Describe the bug**\r\n`ctest` crashes with `SIGTRAP`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Build or get installed OpenSSL _system-wide_, e.g., in `/opt/local/libexec/openssl3`. For this test I used OpenSSL-3.1.0, and used Macports to get the binary installed.\r\n2. Build and install `liboqs` _system-wide_. I used `liboqs` master, and installed it in `opt/local`: `/opt/local/lib` for the shared library, `/opt/local/include` for the header files.\r\n3. Clone, build, and install this provider (don't forget to edit `openssl.cnf` as appropriate).\r\n4. `export OPENSSL_APP=/opt/local/libexec/openssl3/bin/openssl`, `export OPENSSL_MODULES=/opt/local/libexec/openssl3/lib/ossl-modules`\r\n5. _Optional?_ To make the environment closer to mine, install `pkcs11-provider` and GOST engine system-wide, and adjust `openssl.cnf` to point at them. \r\n6. _Further complication_ Install `oqs-provider` and make it available system-wide by adding it to `openssl.cnf`.\r\n7. Go to `_build` and do `ctest --output-on-failure`\r\n8. Observe the error report.\r\n\r\n**Expected behavior**\r\nTests passing.\r\n\r\n**Screenshots**\r\n<img width=\"718\" alt=\"Screenshot 2023-03-27 at 3 49 24 PM\" src=\"https://user-images.githubusercontent.com/5923577/228050759-876766f2-d3de-4c42-bf1c-1f4dab9978a2.png\">\r\n\r\n**Crash report**\r\n```\r\nTranslated Report (Full Report Below)\r\n-------------------------------------\r\n\r\nProcess:               oqs_test_kems [17508]\r\nPath:                  /Users/USER/*/oqs_test_kems\r\nIdentifier:            oqs_test_kems\r\nVersion:               ???\r\nCode Type:             ARM-64 (Native)\r\nParent Process:        ctest [17500]\r\nResponsible:           Terminal [983]\r\nUser ID:               501\r\n\r\nDate/Time:             2023-03-27 15:39:40.6519 -0400\r\nOS Version:            macOS 13.2.1 (22D68)\r\nReport Version:        12\r\nAnonymous UUID:        161C054B-E964-CDD3-5EBC-5A9DBE3E2AE2\r\n\r\n\r\nTime Awake Since Boot: 66000 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BREAKPOINT (SIGTRAP)\r\nException Codes:       0x0000000000000001, 0x00000001a6283108\r\n\r\nTermination Reason:    Namespace SIGNAL, Code 5 Trace/BPT trap: 5\r\nTerminating Process:   exc handler [17508]\r\n\r\nApplication Specific Information:\r\nBUG IN CLIENT OF LIBPLATFORM: Trying to recursively lock an os_once_t\r\nAbort Cause 259\r\n\r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   libsystem_platform.dylib      \t       0x1a6283108 _os_once_gate_recursive_abort + 36\r\n1   libsystem_platform.dylib      \t       0x1a627f710 _os_once_gate_wait + 348\r\n2   libsystem_pthread.dylib       \t       0x1a624dd84 pthread_once + 100\r\n3   libcrypto.3.dylib             \t       0x1012bdfcc CRYPTO_THREAD_run_once + 12\r\n4   libcrypto.3.dylib             \t       0x1012d0ea4 ossl_obj_add_object + 236\r\n5   gostprov.dylib                \t       0x1015bf5b4 populate_gost_engine + 116\r\n6   gostprov.dylib                \t       0x1015bd478 OSSL_provider_init + 116\r\n7   libcrypto.3.dylib             \t       0x1012bbddc provider_activate + 260\r\n8   libcrypto.3.dylib             \t       0x1012bbc48 ossl_provider_activate + 56\r\n9   libcrypto.3.dylib             \t       0x1012ba93c provider_conf_init + 608\r\n10  libcrypto.3.dylib             \t       0x101212c4c CONF_modules_load + 856\r\n11  libcrypto.3.dylib             \t       0x101212ee8 CONF_modules_load_file_ex + 120\r\n12  libcrypto.3.dylib             \t       0x101213738 ossl_config_int + 68\r\n13  libcrypto.3.dylib             \t       0x1012b2400 ossl_init_config_ossl_ + 16\r\n14  libsystem_pthread.dylib       \t       0x1a624ddec __pthread_once_handler + 76\r\n15  libsystem_platform.dylib      \t       0x1a627d7e0 _os_once_callout + 32\r\n16  libsystem_pthread.dylib       \t       0x1a624dd84 pthread_once + 100\r\n17  libcrypto.3.dylib             \t       0x1012bdfcc CRYPTO_THREAD_run_once + 12\r\n18  libcrypto.3.dylib             \t       0x1012b2208 OPENSSL_init_crypto + 1104\r\n19  libcrypto.3.dylib             \t       0x1012d1098 obj_lock_initialise_ossl_ + 20\r\n20  libsystem_pthread.dylib       \t       0x1a624ddec __pthread_once_handler + 76\r\n21  libsystem_platform.dylib      \t       0x1a627d7e0 _os_once_callout + 32\r\n22  libsystem_pthread.dylib       \t       0x1a624dd84 pthread_once + 100\r\n23  libcrypto.3.dylib             \t       0x1012bdfcc CRYPTO_THREAD_run_once + 12\r\n24  libcrypto.3.dylib             \t       0x1012d0408 OBJ_sn2nid + 112\r\n25  libcrypto.3.dylib             \t       0x1012d02f4 OBJ_txt2obj + 216\r\n26  libcrypto.3.dylib             \t       0x1012d0944 OBJ_txt2nid + 20\r\n27  libcrypto.3.dylib             \t       0x1012bd048 core_obj_create + 36\r\n28  oqsprovider.0.5.0-dev.dylib   \t       0x100f73678 OSSL_provider_init + 292\r\n29  libcrypto.3.dylib             \t       0x1012bbddc provider_activate + 260\r\n30  libcrypto.3.dylib             \t       0x1012bbc48 ossl_provider_activate + 56\r\n31  libcrypto.3.dylib             \t       0x1012ba93c provider_conf_init + 608\r\n32  libcrypto.3.dylib             \t       0x101212c4c CONF_modules_load + 856\r\n33  libcrypto.3.dylib             \t       0x101212ee8 CONF_modules_load_file_ex + 120\r\n34  libcrypto.3.dylib             \t       0x1012af1a4 OSSL_LIB_CTX_load_config + 20\r\n35  oqs_test_kems                 \t       0x100de7420 main + 80\r\n36  dyld                          \t       0x1a5f27e50 start + 2544\r\n\r\n\r\nThread 0 crashed with ARM Thread State (64-bit):\r\n    x0: 0x0000000000000103   x1: 0x000000016f019b90   x2: 0x00000001a624dda0   x3: 0x0000000000000103\r\n    x4: 0x000000000000000a   x5: 0x0000000024200000   x6: 0x0000000000000000   x7: 0x0000000000000500\r\n    x8: 0x0000000000000103   x9: 0x0000000000000103  x10: 0x0000000000000103  x11: 0x0000600000fb8000\r\n   x12: 0x0000000000000010  x13: 0x00000000fffffcee  x14: 0x00000000000007fb  x15: 0x00000000a4188ffb\r\n   x16: 0x00000001a627d760  x17: 0x00000002066400a0  x18: 0x0000000000000000  x19: 0x0000000101438d58\r\n   x20: 0x0000000000000103  x21: 0x00000001a624dda0  x22: 0x000000016f019b90  x23: 0x0000000000000103\r\n   x24: 0x0000000000000103  x25: 0x0000000000000000  x26: 0x0000000000000002  x27: 0x0000000000000002\r\n   x28: 0x0000600000fa4000   fp: 0x000000016f019b80   lr: 0x00000001a627f710\r\n    sp: 0x000000016f019b50   pc: 0x00000001a6283108 cpsr: 0x60001000\r\n   far: 0x00000001ff2bc0b8  esr: 0xf2000001 (Breakpoint) brk 1\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.2.1\r\n - OpenSSL version 3.1.0\r\n - This provider version: current master (0.5.0-dev)\r\n\r\n**Additional context**\r\nThis is on MacBook Pro - Apple Silicon M2 chip. Similar problem on Intel-based iMac (used same process as above).\r\n\r\n**Note:** commenting out, e.g., GOST provider in `openssl.cnf` did not help.\r\n\r\n```\r\n$ openssl version\r\nOpenSSL 3.1.0 14 Mar 2023 (Library: OpenSSL 3.1.0 14 Mar 2023)\r\n$ openssl list -providers\r\nProviders:\r\n  base\r\n    name: OpenSSL Base Provider\r\n    version: 3.1.0\r\n    status: active\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.0\r\n    status: active\r\n  gost\r\n    name: OpenSSL GOST Provider\r\n    status: active\r\n  legacy\r\n    name: OpenSSL Legacy Provider\r\n    version: 3.1.0\r\n    status: active\r\n  oqs\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.0-dev\r\n    status: active\r\n  pkcs11\r\n    name: PKCS#11 Provider\r\n    version: 3.1.0\r\n    status: active\r\n$ \r\n```\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1549089451","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/132#issuecomment-1549089451","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132","id":1549089451,"node_id":"IC_kwDOE_A9l85cVTqr","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T06:54:59Z","updated_at":"2023-05-16T06:54:59Z","author_association":"MEMBER","body":"Finally finding time to work on oqsprovider again... :-/ So, thanks, @mouse07410 for the report above. I could reproduce and track in #160. If you agree this is the same (remaining) issue in this issue thread (?), let's close this and continue in #160.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1549089451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T06:55:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29093768666","type":"IssueCommentEvent","actor":{"id":13785747,"login":"beldmit","display_login":"beldmit","gravatar_id":"","url":"https://api.github.com/users/beldmit","avatar_url":"https://avatars.githubusercontent.com/u/13785747?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1463","id":1711318122,"node_id":"PR_kwDOA-eq3c5QlBBR","number":1463,"title":"relax OpenSSL initialization error handling","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-05-16T06:19:30Z","updated_at":"2023-05-16T08:27:52Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1463","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1463","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1463.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1463.patch","merged_at":null},"body":"Fixes #1462\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549225581","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1463#issuecomment-1549225581","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463","id":1549225581,"node_id":"IC_kwDOA-eq3c5cV05t","user":{"login":"beldmit","id":13785747,"node_id":"MDQ6VXNlcjEzNzg1NzQ3","avatar_url":"https://avatars.githubusercontent.com/u/13785747?v=4","gravatar_id":"","url":"https://api.github.com/users/beldmit","html_url":"https://github.com/beldmit","followers_url":"https://api.github.com/users/beldmit/followers","following_url":"https://api.github.com/users/beldmit/following{/other_user}","gists_url":"https://api.github.com/users/beldmit/gists{/gist_id}","starred_url":"https://api.github.com/users/beldmit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beldmit/subscriptions","organizations_url":"https://api.github.com/users/beldmit/orgs","repos_url":"https://api.github.com/users/beldmit/repos","events_url":"https://api.github.com/users/beldmit/events{/privacy}","received_events_url":"https://api.github.com/users/beldmit/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T08:27:52Z","updated_at":"2023-05-16T08:27:52Z","author_association":"CONTRIBUTOR","body":"I like this approach but probably it's still worth grouping sha2, sha3, and aes, instead of everything","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549225581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T08:27:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29093999542","type":"IssueCommentEvent","actor":{"id":13785747,"login":"beldmit","display_login":"beldmit","gravatar_id":"","url":"https://api.github.com/users/beldmit","avatar_url":"https://avatars.githubusercontent.com/u/13785747?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1437","id":1670652404,"node_id":"I_kwDOA-eq3c5jlCH0","number":1437,"title":"CC0 license is an obstacle","user":{"login":"beldmit","id":13785747,"node_id":"MDQ6VXNlcjEzNzg1NzQ3","avatar_url":"https://avatars.githubusercontent.com/u/13785747?v=4","gravatar_id":"","url":"https://api.github.com/users/beldmit","html_url":"https://github.com/beldmit","followers_url":"https://api.github.com/users/beldmit/followers","following_url":"https://api.github.com/users/beldmit/following{/other_user}","gists_url":"https://api.github.com/users/beldmit/gists{/gist_id}","starred_url":"https://api.github.com/users/beldmit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beldmit/subscriptions","organizations_url":"https://api.github.com/users/beldmit/orgs","repos_url":"https://api.github.com/users/beldmit/repos","events_url":"https://api.github.com/users/beldmit/events{/privacy}","received_events_url":"https://api.github.com/users/beldmit/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-04-17T08:13:06Z","updated_at":"2023-05-16T08:36:19Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Dear colleagues, \r\n\r\nwe are planning to package liboqs for Fedora. We build liboqs with `-DOQS_ALGS_ENABLED=STD` to minimize support of non-standardized algorithms.\r\n\r\nWe found that the folders\r\n```\r\n./src/kem/kyber/pqclean_kyber*_aarch64\r\n./src/sig/dilithium/pqclean_dilithium*_aarch64\r\n./src/sig/sphincs/pqclean_sphincs*\r\n```\r\ncontain CC0 license which is not acceptable for Fedora by default (and AFAIU, other Linux distributions).\r\n\r\nI believe that for aarch64 we could fallback to a generic (slower) implementation in the compile time, but it's obviously not the best possible option.\r\n\r\nIs it possible to get in contact with the authors of these implementation to get an agreement about double-licensing of these implementations? MIT, Apache2 or smth else is fine for our purpose.\r\n\r\nMany thanks in advance!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549238301","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1437#issuecomment-1549238301","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1437","id":1549238301,"node_id":"IC_kwDOA-eq3c5cV4Ad","user":{"login":"beldmit","id":13785747,"node_id":"MDQ6VXNlcjEzNzg1NzQ3","avatar_url":"https://avatars.githubusercontent.com/u/13785747?v=4","gravatar_id":"","url":"https://api.github.com/users/beldmit","html_url":"https://github.com/beldmit","followers_url":"https://api.github.com/users/beldmit/followers","following_url":"https://api.github.com/users/beldmit/following{/other_user}","gists_url":"https://api.github.com/users/beldmit/gists{/gist_id}","starred_url":"https://api.github.com/users/beldmit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beldmit/subscriptions","organizations_url":"https://api.github.com/users/beldmit/orgs","repos_url":"https://api.github.com/users/beldmit/repos","events_url":"https://api.github.com/users/beldmit/events{/privacy}","received_events_url":"https://api.github.com/users/beldmit/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T08:36:18Z","updated_at":"2023-05-16T08:36:18Z","author_association":"CONTRIBUTOR","body":"I'll ask my colleagues but I have a feeling it's acceptable.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549238301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T08:36:19Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29094061894","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/149","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/149/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/149/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/149/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/149","id":1689143680,"node_id":"PR_kwDOE_A9l85Paucr","number":149,"title":"oqsprov/oqsprov_keys.c (oqsx_key_fromdata): Set composites after import","user":{"login":"distorted-mdw","id":10420519,"node_id":"MDQ6VXNlcjEwNDIwNTE5","avatar_url":"https://avatars.githubusercontent.com/u/10420519?v=4","gravatar_id":"","url":"https://api.github.com/users/distorted-mdw","html_url":"https://github.com/distorted-mdw","followers_url":"https://api.github.com/users/distorted-mdw/followers","following_url":"https://api.github.com/users/distorted-mdw/following{/other_user}","gists_url":"https://api.github.com/users/distorted-mdw/gists{/gist_id}","starred_url":"https://api.github.com/users/distorted-mdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/distorted-mdw/subscriptions","organizations_url":"https://api.github.com/users/distorted-mdw/orgs","repos_url":"https://api.github.com/users/distorted-mdw/repos","events_url":"https://api.github.com/users/distorted-mdw/events{/privacy}","received_events_url":"https://api.github.com/users/distorted-mdw/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-04-28T21:15:48Z","updated_at":"2023-05-16T08:38:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/149","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/149","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/149.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/149.patch","merged_at":null},"body":"Import is nonfunctional otherwise: the `comp_privkey' and `comp_pubkey' vectors are left unpopulated.  Trying to do anything with the key is then dicey: in testing, I've had `oqs_sig_verify' bail because the slot was null, but I've also seen junk data used as a public key; for some reason, I've not seen a segfault, but it seems distinctly possible.\r\n\r\nI did a superficial survey of the other places in the code where `privkey' and `pubkey' get set: `oqsx_key_fromdata' is the only function which does it by hand; `oqsx_key_op' and `oqsx_key_gen' are the only callers of `oqsx_allocate_keymaterial', even though it's an external function.\r\n\r\nIt seems common to leave the `privkey' and `pubkey' buffers allocated in the event of a subsequent failure, so I just returned the failure indicator, assuming that `oqsx_key_set_composites' would have already noted the problem with OpenSSL; but in fact, `oqsx_key_set_composites' is secretly infallible anyway, so the question doesn't arise in practice.\r\n\r\nFixes #148\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/149/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1549241625","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/149#issuecomment-1549241625","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/149","id":1549241625,"node_id":"IC_kwDOE_A9l85cV40Z","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T08:38:38Z","updated_at":"2023-05-16T08:38:38Z","author_association":"MEMBER","body":"Interestingly, #160 triggers #148. So, thanks for this fix, @distorted-mdw !","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1549241625/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T08:38:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29095118085","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1463","id":1711318122,"node_id":"PR_kwDOA-eq3c5QlBBR","number":1463,"title":"relax OpenSSL initialization error handling","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-05-16T06:19:30Z","updated_at":"2023-05-16T09:16:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1463","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1463","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1463.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1463.patch","merged_at":null},"body":"Fixes #1462\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549298950","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1463#issuecomment-1549298950","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463","id":1549298950,"node_id":"IC_kwDOA-eq3c5cWG0G","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T09:16:15Z","updated_at":"2023-05-16T09:16:15Z","author_association":"MEMBER","body":"> I like this approach but probably it's still worth grouping sha2, sha3, and aes, instead of everything\r\n\r\nI thought about this -- but this generates simply 3 error lines instead of 1 -- with no additional value: It's simply the default provider missing after all....","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549298950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T09:16:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29095265940","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T09:21:42Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549306784","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549306784","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549306784,"node_id":"IC_kwDOA-eq3c5cWIug","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T09:21:42Z","updated_at":"2023-05-16T09:21:42Z","author_association":"MEMBER","body":"> Probably it's worth raising this issue to OpenSSL upstream. Provider-interdependency topic is quite weird, and worth discussion.\r\n\r\nWhy? To me this is logical: `liboqs` (with OpenSSL3 enabled) depends on \"default\" provider (in initialization). If it's not there (for whichever reason), initialization of `liboqs` fails. `oqsprovider` needs to initialize `liboqs`. If that (would) fail, `oqsprovider` (would) fail.\r\n\r\n> BTW, have you seen the announcement of the meeting between OpenSSL and provider authors? It's a relevant topic there, I think.\r\n\r\nNo, I did not. Where did this get posted? I'd be interested indeed.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549306784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T09:21:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29095457034","type":"IssueCommentEvent","actor":{"id":13785747,"login":"beldmit","display_login":"beldmit","gravatar_id":"","url":"https://api.github.com/users/beldmit","avatar_url":"https://avatars.githubusercontent.com/u/13785747?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T09:28:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549317107","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549317107","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549317107,"node_id":"IC_kwDOA-eq3c5cWLPz","user":{"login":"beldmit","id":13785747,"node_id":"MDQ6VXNlcjEzNzg1NzQ3","avatar_url":"https://avatars.githubusercontent.com/u/13785747?v=4","gravatar_id":"","url":"https://api.github.com/users/beldmit","html_url":"https://github.com/beldmit","followers_url":"https://api.github.com/users/beldmit/followers","following_url":"https://api.github.com/users/beldmit/following{/other_user}","gists_url":"https://api.github.com/users/beldmit/gists{/gist_id}","starred_url":"https://api.github.com/users/beldmit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beldmit/subscriptions","organizations_url":"https://api.github.com/users/beldmit/orgs","repos_url":"https://api.github.com/users/beldmit/repos","events_url":"https://api.github.com/users/beldmit/events{/privacy}","received_events_url":"https://api.github.com/users/beldmit/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T09:28:44Z","updated_at":"2023-05-16T09:28:44Z","author_association":"CONTRIBUTOR","body":"> > Probably it's worth raising this issue to OpenSSL upstream. Provider-interdependency topic is quite weird, and worth discussion.\r\n> \r\n> Why? To me this is logical: `liboqs` (with OpenSSL3 enabled) depends on \"default\" provider (in initialization). If it's not there (for whichever reason), initialization of `liboqs` fails. `oqsprovider` needs to initialize `liboqs`. If that (would) fail, `oqsprovider` (would) fail.\r\n\r\nThe default provider is not the only provider the application may use - e.g. FIPS provider provides the same algorithm. So from this moment we are talking about more complex initialization/preference setup.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549317107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T09:28:45Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29098347600","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T11:20:34Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549473486","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549473486","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549473486,"node_id":"IC_kwDOA-eq3c5cWxbO","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T11:20:34Z","updated_at":"2023-05-16T11:20:34Z","author_association":"MEMBER","body":"> The annoucement was sent to openssl-users and openssl-project\r\n\r\nThanks -- now also subscribed to openssl-project (and the meeting).\r\n\r\n> So from this moment we are talking about more complex initialization/preference setup.\r\n\r\nCompletely agree. So let me reformulate: Given [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) failure of `oqsprovider` is logical if no other provider for initializing those algorithms is available prior to `oqsprovider` being activated. This can happen and thus a graceful (and helpful) handling of that condition must be possible.\r\n\r\nThe only better way would be if `openssl` were \"automagically\" handling the algorithm initialization (doing away with the need for `liboqs` implementing \"oqs_fetch_ossl_objects\"). Let me try to formulate that as an issue in the OpenSSL issues tracker...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549473486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T11:20:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29099097675","type":"IssueCommentEvent","actor":{"id":17916609,"login":"paulidale","display_login":"paulidale","gravatar_id":"","url":"https://api.github.com/users/paulidale","avatar_url":"https://avatars.githubusercontent.com/u/17916609?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T11:51:33Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549515703","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549515703","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549515703,"node_id":"IC_kwDOA-eq3c5cW7u3","user":{"login":"paulidale","id":17916609,"node_id":"MDQ6VXNlcjE3OTE2NjA5","avatar_url":"https://avatars.githubusercontent.com/u/17916609?v=4","gravatar_id":"","url":"https://api.github.com/users/paulidale","html_url":"https://github.com/paulidale","followers_url":"https://api.github.com/users/paulidale/followers","following_url":"https://api.github.com/users/paulidale/following{/other_user}","gists_url":"https://api.github.com/users/paulidale/gists{/gist_id}","starred_url":"https://api.github.com/users/paulidale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulidale/subscriptions","organizations_url":"https://api.github.com/users/paulidale/orgs","repos_url":"https://api.github.com/users/paulidale/repos","events_url":"https://api.github.com/users/paulidale/events{/privacy}","received_events_url":"https://api.github.com/users/paulidale/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T11:51:33Z","updated_at":"2023-05-16T11:51:33Z","author_association":"NONE","body":"The fetching could be delayed until first use.  Not ideal in some ways, but prudent in others.\r\n\r\nI'm not sure how we can define a provider ordering -- as noted FIPS and default both contain what's needed.  However, 3rd party providers could also be used -- how to specify them?\r\n\r\nThe obvious solution of having a dependency param somewhere, fails.  Depending on specific algorithms also isn't workable.\r\n\r\nIt's late, I'm tired & I'll think more on this tomorrow.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549515703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T11:51:33Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29100096481","type":"IssueCommentEvent","actor":{"id":13785747,"login":"beldmit","display_login":"beldmit","gravatar_id":"","url":"https://api.github.com/users/beldmit","avatar_url":"https://avatars.githubusercontent.com/u/13785747?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T12:28:57Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549569764","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549569764","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549569764,"node_id":"IC_kwDOA-eq3c5cXI7k","user":{"login":"beldmit","id":13785747,"node_id":"MDQ6VXNlcjEzNzg1NzQ3","avatar_url":"https://avatars.githubusercontent.com/u/13785747?v=4","gravatar_id":"","url":"https://api.github.com/users/beldmit","html_url":"https://github.com/beldmit","followers_url":"https://api.github.com/users/beldmit/followers","following_url":"https://api.github.com/users/beldmit/following{/other_user}","gists_url":"https://api.github.com/users/beldmit/gists{/gist_id}","starred_url":"https://api.github.com/users/beldmit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/beldmit/subscriptions","organizations_url":"https://api.github.com/users/beldmit/orgs","repos_url":"https://api.github.com/users/beldmit/repos","events_url":"https://api.github.com/users/beldmit/events{/privacy}","received_events_url":"https://api.github.com/users/beldmit/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T12:28:56Z","updated_at":"2023-05-16T12:28:56Z","author_association":"CONTRIBUTOR","body":"the initialization on first attempt has downsides as it's necessary to deal with multithreading etc","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549569764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T12:28:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29100381203","type":"IssueCommentEvent","actor":{"id":5923577,"login":"mouse07410","display_login":"mouse07410","gravatar_id":"","url":"https://api.github.com/users/mouse07410","avatar_url":"https://avatars.githubusercontent.com/u/5923577?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/132","id":1642717023,"node_id":"I_kwDOE_A9l85h6d9f","number":132,"title":"Unable to run tests on OSX","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":69,"created_at":"2023-03-27T19:52:52Z","updated_at":"2023-05-16T12:39:08Z","closed_at":"2023-05-16T12:39:08Z","author_association":"NONE","active_lock_reason":null,"body":"### Updated\r\nTo make some details clear, as previous overly-generic description invited useless overly-generic observations, like \"could not replicate on Windows\".\r\n\r\n**Describe the bug**\r\n`ctest` crashes with `SIGTRAP`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Build or get installed OpenSSL _system-wide_, e.g., in `/opt/local/libexec/openssl3`. For this test I used OpenSSL-3.1.0, and used Macports to get the binary installed.\r\n2. Build and install `liboqs` _system-wide_. I used `liboqs` master, and installed it in `opt/local`: `/opt/local/lib` for the shared library, `/opt/local/include` for the header files.\r\n3. Clone, build, and install this provider (don't forget to edit `openssl.cnf` as appropriate).\r\n4. `export OPENSSL_APP=/opt/local/libexec/openssl3/bin/openssl`, `export OPENSSL_MODULES=/opt/local/libexec/openssl3/lib/ossl-modules`\r\n5. _Optional?_ To make the environment closer to mine, install `pkcs11-provider` and GOST engine system-wide, and adjust `openssl.cnf` to point at them. \r\n6. _Further complication_ Install `oqs-provider` and make it available system-wide by adding it to `openssl.cnf`.\r\n7. Go to `_build` and do `ctest --output-on-failure`\r\n8. Observe the error report.\r\n\r\n**Expected behavior**\r\nTests passing.\r\n\r\n**Screenshots**\r\n<img width=\"718\" alt=\"Screenshot 2023-03-27 at 3 49 24 PM\" src=\"https://user-images.githubusercontent.com/5923577/228050759-876766f2-d3de-4c42-bf1c-1f4dab9978a2.png\">\r\n\r\n**Crash report**\r\n```\r\nTranslated Report (Full Report Below)\r\n-------------------------------------\r\n\r\nProcess:               oqs_test_kems [17508]\r\nPath:                  /Users/USER/*/oqs_test_kems\r\nIdentifier:            oqs_test_kems\r\nVersion:               ???\r\nCode Type:             ARM-64 (Native)\r\nParent Process:        ctest [17500]\r\nResponsible:           Terminal [983]\r\nUser ID:               501\r\n\r\nDate/Time:             2023-03-27 15:39:40.6519 -0400\r\nOS Version:            macOS 13.2.1 (22D68)\r\nReport Version:        12\r\nAnonymous UUID:        161C054B-E964-CDD3-5EBC-5A9DBE3E2AE2\r\n\r\n\r\nTime Awake Since Boot: 66000 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BREAKPOINT (SIGTRAP)\r\nException Codes:       0x0000000000000001, 0x00000001a6283108\r\n\r\nTermination Reason:    Namespace SIGNAL, Code 5 Trace/BPT trap: 5\r\nTerminating Process:   exc handler [17508]\r\n\r\nApplication Specific Information:\r\nBUG IN CLIENT OF LIBPLATFORM: Trying to recursively lock an os_once_t\r\nAbort Cause 259\r\n\r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   libsystem_platform.dylib      \t       0x1a6283108 _os_once_gate_recursive_abort + 36\r\n1   libsystem_platform.dylib      \t       0x1a627f710 _os_once_gate_wait + 348\r\n2   libsystem_pthread.dylib       \t       0x1a624dd84 pthread_once + 100\r\n3   libcrypto.3.dylib             \t       0x1012bdfcc CRYPTO_THREAD_run_once + 12\r\n4   libcrypto.3.dylib             \t       0x1012d0ea4 ossl_obj_add_object + 236\r\n5   gostprov.dylib                \t       0x1015bf5b4 populate_gost_engine + 116\r\n6   gostprov.dylib                \t       0x1015bd478 OSSL_provider_init + 116\r\n7   libcrypto.3.dylib             \t       0x1012bbddc provider_activate + 260\r\n8   libcrypto.3.dylib             \t       0x1012bbc48 ossl_provider_activate + 56\r\n9   libcrypto.3.dylib             \t       0x1012ba93c provider_conf_init + 608\r\n10  libcrypto.3.dylib             \t       0x101212c4c CONF_modules_load + 856\r\n11  libcrypto.3.dylib             \t       0x101212ee8 CONF_modules_load_file_ex + 120\r\n12  libcrypto.3.dylib             \t       0x101213738 ossl_config_int + 68\r\n13  libcrypto.3.dylib             \t       0x1012b2400 ossl_init_config_ossl_ + 16\r\n14  libsystem_pthread.dylib       \t       0x1a624ddec __pthread_once_handler + 76\r\n15  libsystem_platform.dylib      \t       0x1a627d7e0 _os_once_callout + 32\r\n16  libsystem_pthread.dylib       \t       0x1a624dd84 pthread_once + 100\r\n17  libcrypto.3.dylib             \t       0x1012bdfcc CRYPTO_THREAD_run_once + 12\r\n18  libcrypto.3.dylib             \t       0x1012b2208 OPENSSL_init_crypto + 1104\r\n19  libcrypto.3.dylib             \t       0x1012d1098 obj_lock_initialise_ossl_ + 20\r\n20  libsystem_pthread.dylib       \t       0x1a624ddec __pthread_once_handler + 76\r\n21  libsystem_platform.dylib      \t       0x1a627d7e0 _os_once_callout + 32\r\n22  libsystem_pthread.dylib       \t       0x1a624dd84 pthread_once + 100\r\n23  libcrypto.3.dylib             \t       0x1012bdfcc CRYPTO_THREAD_run_once + 12\r\n24  libcrypto.3.dylib             \t       0x1012d0408 OBJ_sn2nid + 112\r\n25  libcrypto.3.dylib             \t       0x1012d02f4 OBJ_txt2obj + 216\r\n26  libcrypto.3.dylib             \t       0x1012d0944 OBJ_txt2nid + 20\r\n27  libcrypto.3.dylib             \t       0x1012bd048 core_obj_create + 36\r\n28  oqsprovider.0.5.0-dev.dylib   \t       0x100f73678 OSSL_provider_init + 292\r\n29  libcrypto.3.dylib             \t       0x1012bbddc provider_activate + 260\r\n30  libcrypto.3.dylib             \t       0x1012bbc48 ossl_provider_activate + 56\r\n31  libcrypto.3.dylib             \t       0x1012ba93c provider_conf_init + 608\r\n32  libcrypto.3.dylib             \t       0x101212c4c CONF_modules_load + 856\r\n33  libcrypto.3.dylib             \t       0x101212ee8 CONF_modules_load_file_ex + 120\r\n34  libcrypto.3.dylib             \t       0x1012af1a4 OSSL_LIB_CTX_load_config + 20\r\n35  oqs_test_kems                 \t       0x100de7420 main + 80\r\n36  dyld                          \t       0x1a5f27e50 start + 2544\r\n\r\n\r\nThread 0 crashed with ARM Thread State (64-bit):\r\n    x0: 0x0000000000000103   x1: 0x000000016f019b90   x2: 0x00000001a624dda0   x3: 0x0000000000000103\r\n    x4: 0x000000000000000a   x5: 0x0000000024200000   x6: 0x0000000000000000   x7: 0x0000000000000500\r\n    x8: 0x0000000000000103   x9: 0x0000000000000103  x10: 0x0000000000000103  x11: 0x0000600000fb8000\r\n   x12: 0x0000000000000010  x13: 0x00000000fffffcee  x14: 0x00000000000007fb  x15: 0x00000000a4188ffb\r\n   x16: 0x00000001a627d760  x17: 0x00000002066400a0  x18: 0x0000000000000000  x19: 0x0000000101438d58\r\n   x20: 0x0000000000000103  x21: 0x00000001a624dda0  x22: 0x000000016f019b90  x23: 0x0000000000000103\r\n   x24: 0x0000000000000103  x25: 0x0000000000000000  x26: 0x0000000000000002  x27: 0x0000000000000002\r\n   x28: 0x0000600000fa4000   fp: 0x000000016f019b80   lr: 0x00000001a627f710\r\n    sp: 0x000000016f019b50   pc: 0x00000001a6283108 cpsr: 0x60001000\r\n   far: 0x00000001ff2bc0b8  esr: 0xf2000001 (Breakpoint) brk 1\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.2.1\r\n - OpenSSL version 3.1.0\r\n - This provider version: current master (0.5.0-dev)\r\n\r\n**Additional context**\r\nThis is on MacBook Pro - Apple Silicon M2 chip. Similar problem on Intel-based iMac (used same process as above).\r\n\r\n**Note:** commenting out, e.g., GOST provider in `openssl.cnf` did not help.\r\n\r\n```\r\n$ openssl version\r\nOpenSSL 3.1.0 14 Mar 2023 (Library: OpenSSL 3.1.0 14 Mar 2023)\r\n$ openssl list -providers\r\nProviders:\r\n  base\r\n    name: OpenSSL Base Provider\r\n    version: 3.1.0\r\n    status: active\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.1.0\r\n    status: active\r\n  gost\r\n    name: OpenSSL GOST Provider\r\n    status: active\r\n  legacy\r\n    name: OpenSSL Legacy Provider\r\n    version: 3.1.0\r\n    status: active\r\n  oqs\r\n    name: OpenSSL OQS Provider\r\n    version: 0.5.0-dev\r\n    status: active\r\n  pkcs11\r\n    name: PKCS#11 Provider\r\n    version: 3.1.0\r\n    status: active\r\n$ \r\n```\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1549585069","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/132#issuecomment-1549585069","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/132","id":1549585069,"node_id":"IC_kwDOE_A9l85cXMqt","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T12:39:07Z","updated_at":"2023-05-16T12:39:07Z","author_association":"NONE","body":"Sure, whatever's the easiest way for you to track it.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1549585069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T12:39:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29100606196","type":"IssueCommentEvent","actor":{"id":5923577,"login":"mouse07410","display_login":"mouse07410","gravatar_id":"","url":"https://api.github.com/users/mouse07410","avatar_url":"https://avatars.githubusercontent.com/u/5923577?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1452","id":1702470757,"node_id":"I_kwDOA-eq3c5leaRl","number":1452,"title":"Bug in OSX integration of OpenSSL","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2023-05-09T17:48:04Z","updated_at":"2023-05-16T12:47:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nOn a newly-prepared platform , I'm getting a ton of errors trying to run test-suite:\r\n```text\r\n.  .  .\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256f-simple] ___________________________________\r\n[gw11] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256f-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256f-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256f-simple -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-192f-robust] ___________________________________\r\n[gw4] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-192f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-192f-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-192f-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256s-simple] ___________________________________\r\n[gw2] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256s-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-simple -f\r\n\r\n___________________________________ test_sig[SPHINCS+-SHA256-128f-robust] ____________________________________\r\n[gw9] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHA256-128f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       output = helpers.run_subprocess(\r\n            [helpers.path_to_executable('kat_sig'), sig_name],\r\n        )\r\n\r\ntests/test_kat.py:29: \r\n.  .  .\r\n```\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone, build optimized version, as per README.\r\n2. Go to `build` subdirectory.\r\n3. `ninja run_tests`\r\n4. See error\r\n\r\n**Expected behavior**\r\nTests passing or being skipped, test-scripts not crashing.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.3.1 (a)\r\n - OpenSSL version: 3.2.0-dev\r\n - Compiler version used: Apple Clang \r\n - Build variables used:\r\n ```\r\nOPT=\"-DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release\"\r\nenv RUN_TESTS_PARALLEL_UPPER=FALSE cmake -GNinja .. -DOQS_USE_OPENSSL=ON ${OPT} -DCMAKE_INSTALL_PREFIX=\"${HOME}/openssl-3\"\r\n```\r\n - liboqs version: current main\r\n\r\n**Additional context**\r\nI hope you can point me at where/what in Python environment seems missing - maybe an older version of some module, or such...?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452/timeline","performed_via_github_app":null,"state_reason":"reopened"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549596525","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1452#issuecomment-1549596525","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1452","id":1549596525,"node_id":"IC_kwDOA-eq3c5cXPdt","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T12:47:08Z","updated_at":"2023-05-16T12:47:08Z","author_association":"NONE","body":"On Apple Silicon.\r\n\r\nWith minimal set of providers enabled:\r\n```text\r\n=== 464 passed, 220 skipped in 40.24s ===\r\n```\r\nand no crash.\r\n\r\nWith `pkcs11-provider` enabled - same thing as above.\r\n\r\nWith `pkcs11-provider` **disabled** but `oqs-provider` **enabled** - tests still pass `== 464 passed, 220 skipped in 40.80s ==`, **but** crashes in the end:\r\n\r\n```text\r\nTermination Reason:    Namespace SIGNAL, Code 11 Segmentation fault: 11\r\nTerminating Process:   exc handler [18302]\r\n\r\nVM Region Info: 0 is not in any region.  Bytes before following region: 4310319104\r\n      REGION TYPE                    START - END         [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      UNUSED SPACE AT START\r\n--->  \r\n      __TEXT                      100ea4000-100ea8000    [   16K] r-x/r-x SM=COW  .../MacOS/Python\r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   libsystem_pthread.dylib       \t       0x1a1c948c4 pthread_rwlock_wrlock + 0\r\n1   libcrypto.3.dylib             \t       0x10564add4 CRYPTO_THREAD_write_lock + 12 (threads_pthread.c:110)\r\n2   libcrypto.3.dylib             \t       0x1055f2c14 ERR_unload_strings + 92 (err.c:314)\r\n3   libcrypto.3.dylib             \t       0x105647720 ossl_provider_free + 92 (provider_core.c:688)\r\n4   libcrypto.3.dylib             \t       0x1056ad138 OPENSSL_sk_pop_free + 76 (stack.c:439)\r\n5   libcrypto.3.dylib             \t       0x105647104 sk_OSSL_PROVIDER_pop_free + 12 (provider_core.c:199) [inlined]\r\n6   libcrypto.3.dylib             \t       0x105647104 ossl_provider_store_free + 76 (provider_core.c:295)\r\n7   libcrypto.3.dylib             \t       0x105637d6c context_deinit_objs + 124 (context.c:250)\r\n8   libcrypto.3.dylib             \t       0x105637564 context_deinit + 16 (context.c:334) [inlined]\r\n9   libcrypto.3.dylib             \t       0x105637564 OSSL_LIB_CTX_free + 132 (context.c:465)\r\n10  oqsprovider.0.5.0-dev.dylib   \t       0x10436f560 oqsx_freeprovctx + 24 (oqsprov_keys.c:178)\r\n11  oqsprovider.0.5.0-dev.dylib   \t       0x10436e9a0 oqsprovider_teardown + 12 (oqsprov.c:553)\r\n12  libcrypto.3.dylib             \t       0x104547400 ossl_provider_free + 76\r\n13  libcrypto.3.dylib             \t       0x10459b5a0 OPENSSL_sk_pop_free + 60\r\n14  libcrypto.3.dylib             \t       0x104546ec0 ossl_provider_store_free + 72\r\n15  libcrypto.3.dylib             \t       0x10453b5c4 context_deinit_objs + 124\r\n16  libcrypto.3.dylib             \t       0x10453ae5c context_deinit + 32\r\n17  libcrypto.3.dylib             \t       0x10453ae2c ossl_lib_ctx_default_deinit + 20\r\n18  libcrypto.3.dylib             \t       0x10453dd80 OPENSSL_cleanup + 204\r\n19  libsystem_c.dylib             \t       0x1a1b55ed4 __cxa_finalize_ranges + 492\r\n20  libsystem_c.dylib             \t       0x1a1b55c4c exit + 44\r\n21  libdyld.dylib                 \t       0x1a1cb0554 dyld4::LibSystemHelpers::exit(int) const + 20\r\n22  dyld                          \t       0x1a193ff7c start + 2320\r\n```","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549596525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T12:47:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29101133282","type":"IssueCommentEvent","actor":{"id":7125407,"login":"t8m","display_login":"t8m","gravatar_id":"","url":"https://api.github.com/users/t8m","avatar_url":"https://avatars.githubusercontent.com/u/7125407?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T13:04:29Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549628302","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549628302","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549628302,"node_id":"IC_kwDOA-eq3c5cXXOO","user":{"login":"t8m","id":7125407,"node_id":"MDQ6VXNlcjcxMjU0MDc=","avatar_url":"https://avatars.githubusercontent.com/u/7125407?v=4","gravatar_id":"","url":"https://api.github.com/users/t8m","html_url":"https://github.com/t8m","followers_url":"https://api.github.com/users/t8m/followers","following_url":"https://api.github.com/users/t8m/following{/other_user}","gists_url":"https://api.github.com/users/t8m/gists{/gist_id}","starred_url":"https://api.github.com/users/t8m/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/t8m/subscriptions","organizations_url":"https://api.github.com/users/t8m/orgs","repos_url":"https://api.github.com/users/t8m/repos","events_url":"https://api.github.com/users/t8m/events{/privacy}","received_events_url":"https://api.github.com/users/t8m/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T13:04:29Z","updated_at":"2023-05-16T13:04:29Z","author_association":"NONE","body":"One solution would be to split the provider initialization into two steps. After the first step the provider would respond to algorithm fetches but it would not be required to operate. Only after the second step those fetched implementations would be operable.\r\n\r\nAnother option is to do the fetches of subordinate algorithms needed to implement an fetched algorithm during the actual algorithm fetch - in the provider_query_operation function.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549628302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T13:04:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29101242643","type":"IssueCommentEvent","actor":{"id":7125407,"login":"t8m","display_login":"t8m","gravatar_id":"","url":"https://api.github.com/users/t8m","avatar_url":"https://avatars.githubusercontent.com/u/7125407?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T13:08:07Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549638383","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549638383","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549638383,"node_id":"IC_kwDOA-eq3c5cXZrv","user":{"login":"t8m","id":7125407,"node_id":"MDQ6VXNlcjcxMjU0MDc=","avatar_url":"https://avatars.githubusercontent.com/u/7125407?v=4","gravatar_id":"","url":"https://api.github.com/users/t8m","html_url":"https://github.com/t8m","followers_url":"https://api.github.com/users/t8m/followers","following_url":"https://api.github.com/users/t8m/following{/other_user}","gists_url":"https://api.github.com/users/t8m/gists{/gist_id}","starred_url":"https://api.github.com/users/t8m/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/t8m/subscriptions","organizations_url":"https://api.github.com/users/t8m/orgs","repos_url":"https://api.github.com/users/t8m/repos","events_url":"https://api.github.com/users/t8m/events{/privacy}","received_events_url":"https://api.github.com/users/t8m/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T13:08:07Z","updated_at":"2023-05-16T13:08:07Z","author_association":"NONE","body":"> Another option is to do the fetches of subordinate algorithms needed to implement an fetched algorithm during the actual algorithm fetch - in the provider_query_operation function.\r\n\r\nIMO this is actually the right place where the subordinate fetches should be done. And they always should be done there, otherwise replacing the underlying implementation later (for example by unloading the default provider and loading the fips one) would not be possible.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549638383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T13:08:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29104245125","type":"IssueCommentEvent","actor":{"id":7125407,"login":"t8m","display_login":"t8m","gravatar_id":"","url":"https://api.github.com/users/t8m","avatar_url":"https://avatars.githubusercontent.com/u/7125407?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T14:44:17Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549817246","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549817246","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549817246,"node_id":"IC_kwDOA-eq3c5cYFWe","user":{"login":"t8m","id":7125407,"node_id":"MDQ6VXNlcjcxMjU0MDc=","avatar_url":"https://avatars.githubusercontent.com/u/7125407?v=4","gravatar_id":"","url":"https://api.github.com/users/t8m","html_url":"https://github.com/t8m","followers_url":"https://api.github.com/users/t8m/followers","following_url":"https://api.github.com/users/t8m/following{/other_user}","gists_url":"https://api.github.com/users/t8m/gists{/gist_id}","starred_url":"https://api.github.com/users/t8m/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/t8m/subscriptions","organizations_url":"https://api.github.com/users/t8m/orgs","repos_url":"https://api.github.com/users/t8m/repos","events_url":"https://api.github.com/users/t8m/events{/privacy}","received_events_url":"https://api.github.com/users/t8m/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T14:44:17Z","updated_at":"2023-05-16T14:44:17Z","author_association":"NONE","body":"Doing the prefetches during the initialization of liboqs is too early. This way it is basically impossible to reasonably affect the fetch operation.\r\n\r\nIMO the API of liboqs is too simplistic to allow for any reasonable prefetching implementation. At best you could do fetches in the OQS_KEM_new() or ОQS_SIG_new() functions. However that would mean the fetched algos would be reused only within lifetime of these KEM or SIG objects. It would be better to add some kind of library context and prefetch the algorithms during the context initialization. Of course you would then have to pass the context into the ..._new() operations.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549817246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T14:44:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29104357723","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T14:47:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549823819","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549823819","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549823819,"node_id":"IC_kwDOA-eq3c5cYG9L","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T14:47:56Z","updated_at":"2023-05-16T14:47:56Z","author_association":"MEMBER","body":"Can they be fetched on first use and then saved after that?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549823819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T14:47:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29104369900","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-16T14:48:20Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549824495","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1549824495","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1549824495,"node_id":"IC_kwDOA-eq3c5cYHHv","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T14:48:19Z","updated_at":"2023-05-16T14:48:19Z","author_association":"MEMBER","body":"> Can they be fetched on first use and then saved after that?\r\n\r\nNevermind, I see this was discussed a few comments above.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549824495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T14:48:20Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29104955688","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1459","id":1709305590,"node_id":"PR_kwDOA-eq3c5QeNu5","number":1459,"title":"Update McEliece (& Falcon)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-05-15T04:48:49Z","updated_at":"2023-05-16T15:06:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1459","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1459","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1459.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1459.patch","merged_at":null},"body":"Would fix #1314.\r\n\r\nHOWEVER, this is meant to remain a Draft PR as it doesn't pull from PQClean \"master\" and only meant for answering this question of @praveksharma \r\n\r\n> I'm new to both PQClean and liboqs so I'm not sure what to make of this. Does this PR require to include these other implementations before it can be merged?\r\n\r\nThere were some not quite obvious quirks before the contents of the McEliece update in https://github.com/PQClean/PQClean/pull/469 could be integrated to `liboqs`: Please see the changes particularly in `docs/algorithms/kem/classic_mceliece.yml`, `scripts/copy_from_upstream/copy_from_upstream.py`, `scripts/copy_from_upstream/copy_from_upstream.yml` and the addition of `src/common/pqclean_shims/crypto_declassify.h`.\r\n\r\nParticularly on the latter file, asking @dstebila as to whether we really need this -- and whether the addition of the SPDX line is appropriate (wasn't there): Shall this be done upstream before https://github.com/PQClean/PQClean/pull/469 is merged?\r\n\r\nFinal question: This inadvertently also changes Falcon -- and there, the KATs. Why is this so? Is the McEliece branch in PQClean older than https://github.com/PQClean/PQClean/pull/476 ? One more reason to not merge this. But at least CI will show us which impact merging https://github.com/PQClean/PQClean/pull/469 would have on `liboqs`.\r\n\r\n* [Yes] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549858782","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1459#issuecomment-1549858782","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459","id":1549858782,"node_id":"IC_kwDOA-eq3c5cYPfe","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T15:06:48Z","updated_at":"2023-05-16T15:06:48Z","author_association":"MEMBER","body":"> Would fix #1314.\r\n> \r\n> HOWEVER, this is meant to remain a Draft PR as it doesn't pull from PQClean \"master\" and only meant for answering this question of @praveksharma\r\n> \r\n> > I'm new to both PQClean and liboqs so I'm not sure what to make of this. Does this PR require to include these other implementations before it can be merged?\r\n> \r\n> There were some not quite obvious quirks before the contents of the McEliece update in [PQClean/PQClean#469](https://github.com/PQClean/PQClean/pull/469) could be integrated to `liboqs`: Please see the changes particularly in `docs/algorithms/kem/classic_mceliece.yml`, `scripts/copy_from_upstream/copy_from_upstream.py`, `scripts/copy_from_upstream/copy_from_upstream.yml` and the addition of `src/common/pqclean_shims/crypto_declassify.h`.\r\n> \r\n> Particularly on the latter file, asking @dstebila as to whether we really need this -- and whether the addition of the SPDX line is appropriate (wasn't there): Shall this be done upstream before [PQClean/PQClean#469](https://github.com/PQClean/PQClean/pull/469) is merged?\r\n\r\nYes we would need to add `crypto_declassify.h` to `pqclean_shims`.  The only alternative I can see would be to patch the `#include \"crypto_declassify.h\"` lines out of all the places they're called, which seems annoying.\r\n\r\nAs for the SPDX line, according to the [License section of the PQClean README](https://github.com/PQClean/PQClean#license) I think the right line would be CC0.\r\n\r\n> Final question: This inadvertently also changes Falcon -- and there, the KATs. Why is this so? Is the McEliece branch in PQClean older than [PQClean/PQClean#476](https://github.com/PQClean/PQClean/pull/476) ? One more reason to not merge this. But at least CI will show us which impact merging [PQClean/PQClean#469](https://github.com/PQClean/PQClean/pull/469) would have on `liboqs`.\r\n\r\nYes, that's the case: the PQClean McEliece branch was made before the Falcon updates landed, but we're doing things in the reverse order.\r\n\r\nThis is somewhat moot now, as yesterday I merged the PQClean McEliece branch into master, so we can re-do this work based on PQClean master and the Falcon KATs would no longer change.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549858782/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T15:06:49Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29106107161","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1420","id":1630363451,"node_id":"PR_kwDOA-eq3c5MXD0D","number":1420,"title":"Update SPHINCS+","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/18","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18/labels","id":7069955,"node_id":"MI_kwDOA-eq3c4Aa-ED","number":18,"title":"0.8.0","description":"See https://github.com/open-quantum-safe/liboqs/issues/1245#issuecomment-1319218926 for table of algorithm updates.","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":3,"closed_issues":11,"state":"open","created_at":"2021-08-18T14:40:17Z","updated_at":"2023-05-16T15:09:33Z","due_on":"2023-03-31T07:00:00Z","closed_at":null},"comments":34,"created_at":"2023-03-18T15:11:57Z","updated_at":"2023-05-16T15:47:15Z","closed_at":"2023-05-16T14:54:28Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1420","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1420","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1420.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1420.patch","merged_at":"2023-05-16T14:54:28Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1249.\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [Yes] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [Yes] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n* [ ] TODO: Ensure all references to the removed variants (Haraka) are removed.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549927460","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1420#issuecomment-1549927460","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420","id":1549927460,"node_id":"IC_kwDOA-eq3c5cYgQk","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T15:47:15Z","updated_at":"2023-05-16T15:47:15Z","author_association":"MEMBER","body":"Thanks for this merge, @xvzcf . Are you going to look into the downstreams now? For oqs-openssl111 it should be as simple as copying over generate.yml from oqs-provider (if https://github.com/open-quantum-safe/oqs-provider/pull/158 still passes OK after the #1420 merge).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549927460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T15:47:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29106139255","type":"IssueCommentEvent","actor":{"id":21228961,"login":"xvzcf","display_login":"xvzcf","gravatar_id":"","url":"https://api.github.com/users/xvzcf","avatar_url":"https://avatars.githubusercontent.com/u/21228961?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1420","id":1630363451,"node_id":"PR_kwDOA-eq3c5MXD0D","number":1420,"title":"Update SPHINCS+","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"assignees":[{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/18","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/18/labels","id":7069955,"node_id":"MI_kwDOA-eq3c4Aa-ED","number":18,"title":"0.8.0","description":"See https://github.com/open-quantum-safe/liboqs/issues/1245#issuecomment-1319218926 for table of algorithm updates.","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":3,"closed_issues":11,"state":"open","created_at":"2021-08-18T14:40:17Z","updated_at":"2023-05-16T15:09:33Z","due_on":"2023-03-31T07:00:00Z","closed_at":null},"comments":36,"created_at":"2023-03-18T15:11:57Z","updated_at":"2023-05-16T15:48:29Z","closed_at":"2023-05-16T14:54:28Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1420","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1420","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1420.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1420.patch","merged_at":"2023-05-16T14:54:28Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nFixes #1249.\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [Yes] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [Yes] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n* [ ] TODO: Ensure all references to the removed variants (Haraka) are removed.\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549929280","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1420#issuecomment-1549929280","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1420","id":1549929280,"node_id":"IC_kwDOA-eq3c5cYgtA","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T15:48:28Z","updated_at":"2023-05-16T15:48:28Z","author_association":"MEMBER","body":"> Thanks for this merge, @xvzcf . Are you going to look into the downstreams now? For oqs-openssl111 it should be as simple as copying over generate.yml from oqs-provider (if [open-quantum-safe/oqs-provider#158](https://github.com/open-quantum-safe/oqs-provider/pull/158) still passes OK after the #1420 merge).\r\n\r\nI'm working on it, I'm updating the names in liboqs first and then I'll update the downstreams","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1549929280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T15:48:29Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29110240824","type":"IssueCommentEvent","actor":{"id":132921394,"login":"praveksharma","display_login":"praveksharma","gravatar_id":"","url":"https://api.github.com/users/praveksharma","avatar_url":"https://avatars.githubusercontent.com/u/132921394?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1459","id":1709305590,"node_id":"PR_kwDOA-eq3c5QeNu5","number":1459,"title":"Update McEliece (& Falcon)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-05-15T04:48:49Z","updated_at":"2023-05-16T18:46:42Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1459","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1459","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1459.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1459.patch","merged_at":null},"body":"Would fix #1314.\r\n\r\nHOWEVER, this is meant to remain a Draft PR as it doesn't pull from PQClean \"master\" and only meant for answering this question of @praveksharma \r\n\r\n> I'm new to both PQClean and liboqs so I'm not sure what to make of this. Does this PR require to include these other implementations before it can be merged?\r\n\r\nThere were some not quite obvious quirks before the contents of the McEliece update in https://github.com/PQClean/PQClean/pull/469 could be integrated to `liboqs`: Please see the changes particularly in `docs/algorithms/kem/classic_mceliece.yml`, `scripts/copy_from_upstream/copy_from_upstream.py`, `scripts/copy_from_upstream/copy_from_upstream.yml` and the addition of `src/common/pqclean_shims/crypto_declassify.h`.\r\n\r\nParticularly on the latter file, asking @dstebila as to whether we really need this -- and whether the addition of the SPDX line is appropriate (wasn't there): Shall this be done upstream before https://github.com/PQClean/PQClean/pull/469 is merged?\r\n\r\nFinal question: This inadvertently also changes Falcon -- and there, the KATs. Why is this so? Is the McEliece branch in PQClean older than https://github.com/PQClean/PQClean/pull/476 ? One more reason to not merge this. But at least CI will show us which impact merging https://github.com/PQClean/PQClean/pull/469 would have on `liboqs`.\r\n\r\n* [Yes] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550186460","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1459#issuecomment-1550186460","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459","id":1550186460,"node_id":"IC_kwDOA-eq3c5cZffc","user":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T18:46:42Z","updated_at":"2023-05-16T18:46:42Z","author_association":"NONE","body":"@baentsch Yes, I want to make a new PR for this. I'm unable to do this today, however, I will do it tomorrow if this altered schedule works for you.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550186460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T18:46:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29115080436","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1467","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1467/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1467/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1467/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1467","id":1712480842,"node_id":"PR_kwDOA-eq3c5Qo9GF","number":1467,"title":"Renamed sphincs-sha256-X to sphincs-sha2-X and sphincs-shake256-X to …","user":{"login":"xvzcf","id":21228961,"node_id":"MDQ6VXNlcjIxMjI4OTYx","avatar_url":"https://avatars.githubusercontent.com/u/21228961?v=4","gravatar_id":"","url":"https://api.github.com/users/xvzcf","html_url":"https://github.com/xvzcf","followers_url":"https://api.github.com/users/xvzcf/followers","following_url":"https://api.github.com/users/xvzcf/following{/other_user}","gists_url":"https://api.github.com/users/xvzcf/gists{/gist_id}","starred_url":"https://api.github.com/users/xvzcf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xvzcf/subscriptions","organizations_url":"https://api.github.com/users/xvzcf/orgs","repos_url":"https://api.github.com/users/xvzcf/repos","events_url":"https://api.github.com/users/xvzcf/events{/privacy}","received_events_url":"https://api.github.com/users/xvzcf/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-05-16T17:58:14Z","updated_at":"2023-05-16T23:42:05Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1467","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1467","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1467.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1467.patch","merged_at":null},"body":"…sphincs-shake-X.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [x] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1467/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550491217","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1467#issuecomment-1550491217","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1467","id":1550491217,"node_id":"IC_kwDOA-eq3c5cap5R","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T23:42:04Z","updated_at":"2023-05-16T23:42:04Z","author_association":"MEMBER","body":"I've reviewed and approve. I did find a few more name changes in non-autogenerated files, see 9ff2be6.  Go ahead and merge when you're ready @xvzcf (assuming the CI passes on my commit and you agree with it).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550491217/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T23:42:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29115092835","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1459","id":1709305590,"node_id":"PR_kwDOA-eq3c5QeNu5","number":1459,"title":"Update McEliece (& Falcon)","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-05-15T04:48:49Z","updated_at":"2023-05-16T23:43:15Z","closed_at":"2023-05-16T23:43:15Z","author_association":"MEMBER","active_lock_reason":null,"draft":true,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1459","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1459","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1459.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1459.patch","merged_at":null},"body":"Would fix #1314.\r\n\r\nHOWEVER, this is meant to remain a Draft PR as it doesn't pull from PQClean \"master\" and only meant for answering this question of @praveksharma \r\n\r\n> I'm new to both PQClean and liboqs so I'm not sure what to make of this. Does this PR require to include these other implementations before it can be merged?\r\n\r\nThere were some not quite obvious quirks before the contents of the McEliece update in https://github.com/PQClean/PQClean/pull/469 could be integrated to `liboqs`: Please see the changes particularly in `docs/algorithms/kem/classic_mceliece.yml`, `scripts/copy_from_upstream/copy_from_upstream.py`, `scripts/copy_from_upstream/copy_from_upstream.yml` and the addition of `src/common/pqclean_shims/crypto_declassify.h`.\r\n\r\nParticularly on the latter file, asking @dstebila as to whether we really need this -- and whether the addition of the SPDX line is appropriate (wasn't there): Shall this be done upstream before https://github.com/PQClean/PQClean/pull/469 is merged?\r\n\r\nFinal question: This inadvertently also changes Falcon -- and there, the KATs. Why is this so? Is the McEliece branch in PQClean older than https://github.com/PQClean/PQClean/pull/476 ? One more reason to not merge this. But at least CI will show us which impact merging https://github.com/PQClean/PQClean/pull/469 would have on `liboqs`.\r\n\r\n* [Yes] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550491930","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1459#issuecomment-1550491930","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1459","id":1550491930,"node_id":"IC_kwDOA-eq3c5caqEa","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T23:43:15Z","updated_at":"2023-05-16T23:43:15Z","author_association":"MEMBER","body":"I'm closing this PR since Pravek will be creating a new one.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550491930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T23:43:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29115119859","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1450","id":1696503074,"node_id":"I_kwDOA-eq3c5lHpUi","number":1450,"title":"Last release fails to build after updating to gcc 13","user":{"login":"iyanmv","id":15230534,"node_id":"MDQ6VXNlcjE1MjMwNTM0","avatar_url":"https://avatars.githubusercontent.com/u/15230534?v=4","gravatar_id":"","url":"https://api.github.com/users/iyanmv","html_url":"https://github.com/iyanmv","followers_url":"https://api.github.com/users/iyanmv/followers","following_url":"https://api.github.com/users/iyanmv/following{/other_user}","gists_url":"https://api.github.com/users/iyanmv/gists{/gist_id}","starred_url":"https://api.github.com/users/iyanmv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iyanmv/subscriptions","organizations_url":"https://api.github.com/users/iyanmv/orgs","repos_url":"https://api.github.com/users/iyanmv/repos","events_url":"https://api.github.com/users/iyanmv/events{/privacy}","received_events_url":"https://api.github.com/users/iyanmv/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-05-04T18:31:16Z","updated_at":"2023-05-16T23:45:53Z","closed_at":"2023-05-16T23:45:52Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nAfter updating gcc to version 13.1.1 I cannot build the library anymore. Main branch is okay. On top of that, I still need to manually apply the fix for sha3. It's getting difficult to maintain a package for Arch Linux. Also, note that other distros are starting to use gcc 13 as well (Fedora 38, for example).\r\n\r\nIs there a plan for a new release?\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Check the versions I'm using in the logs below\r\n2. Try to compile\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Archlinux\r\n - OpenSSL version: 3.0.8\r\n - Compiler version used: gcc 13.1.1\r\n - Build variables used:\r\n```\r\nbuild() {\r\n    cmake -G Ninja -B build -S \"${pkgname}-${pkgver}\"\\\r\n        -DBUILD_SHARED_LIBS=ON \\\r\n        -DCMAKE_BUILD_TYPE=None \\\r\n        -DCMAKE_INSTALL_PREFIX=\"${pkgdir}/usr\" \\\r\n        -DOQS_BUILD_ONLY_LIB=OFF \\\r\n        -DOQS_DIST_BUILD=ON \\\r\n        -DOQS_USE_AES_OPENSSL=ON \\\r\n        -DOQS_USE_SHA2_OPENSSL=ON \\\r\n        -DOQS_USE_SHA3_OPENSSL=ON \\\r\n        -DOQS_OPT_TARGET=x86-64 \\\r\n        -DOQS_ENABLE_SIG_RAINBOW=OFF \\\r\n        -DOQS_ENABLE_SIG_PICNIC=OFF \\\r\n        -DOQS_ENABLE_KEM_SABER=OFF \\\r\n        -DOQS_ENABLE_KEM_NTRU=OFF \\\r\n        -Wno-dev\r\n    ninja -C build\r\n    ninja -C build gen_docs\r\n}\r\n```\r\n\r\n**Log**\r\n```\r\n==> Starting build()...\r\n-- The C compiler identification is GNU 13.1.1\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /usr/bin/cc - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /usr/lib/libcrypto.so (found suitable version \"3.0.8\", minimum required is \"1.1.1\")  \r\n-- Found Doxygen: /usr/bin/doxygen (found version \"1.9.6\") found components: doxygen missing components: dot\r\n-- Configuring done (0.2s)\r\n-- Generating done (0.1s)\r\n-- Build files have been written to: /build/liboqs/src/build\r\nninja: Entering directory `build'\r\n[1/1989] Building C object src/common/CMakeFiles/common.dir/pqclean_shims/fips202.c.o\r\n[2/1989] Building C object src/common/CMakeFiles/common.dir/pqclean_shims/fips202x4.c.o\r\n[3/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/error.c.o\r\n[4/1989] Building C object src/kem/bike/CMakeFiles/kem_bike.dir/kem_bike.c.o\r\n[5/1989] Building C object src/common/CMakeFiles/common.dir/aes/aes.c.o\r\n[6/1989] Building C object src/common/CMakeFiles/common.dir/pqclean_shims/nistseedexpander.c.o\r\n[7/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/aes_ctr_prf.c.o\r\n[8/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/decode_portable.c.o\r\n[9/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_inv.c.o\r\n[10/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_ksqr_portable.c.o\r\n[11/1989] Building C object src/CMakeFiles/oqs.dir/kem/kem.c.o\r\n[12/1989] Building C object src/CMakeFiles/oqs.dir/sig/sig.c.o\r\n[13/1989] Building C object src/common/CMakeFiles/common.dir/common.c.o\r\n[14/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul.c.o\r\n[15/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_base_portable.c.o\r\n[16/1989] Building C object src/common/CMakeFiles/common.dir/aes/aes128_ni.c.o\r\n[17/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/decode.c.o\r\n[18/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/utilities.c.o\r\n[19/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/sampling_portable.c.o\r\n[20/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_base_vpclmul.c.o\r\n[21/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/sampling.c.o\r\n[22/1989] Building C object src/common/CMakeFiles/common.dir/aes/aes256_ni.c.o\r\n[23/1989] Building C object src/common/CMakeFiles/common.dir/aes/aes_c.c.o\r\n[24/1989] Building C object src/common/CMakeFiles/common.dir/rand/rand_nist.c.o\r\n[25/1989] Building C object src/common/CMakeFiles/common.dir/sha2/sha2_ossl.c.o\r\n[26/1989] Building C object src/common/CMakeFiles/common.dir/sha3/ossl_sha3.c.o\r\n[27/1989] Building C object src/common/CMakeFiles/common.dir/sha3/ossl_sha3x4.c.o\r\n[28/1989] Building C object src/common/CMakeFiles/common.dir/rand/rand.c.o\r\n[29/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/kem.c.o\r\n[30/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/aes_ctr_prf.c.o\r\n[31/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/error.c.o\r\n[32/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_portable.c.o\r\n[33/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode.c.o\r\n[34/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul.c.o\r\n[35/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_inv.c.o\r\n[36/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_base_portable.c.o\r\n[37/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_ksqr_portable.c.o\r\n[38/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/sampling.c.o\r\n[39/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/sampling_portable.c.o\r\n[40/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/utilities.c.o\r\n[41/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_base_vpclmul.c.o\r\n[42/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/kem.c.o\r\n[43/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem640shake.c.o\r\n[44/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem640aes.c.o\r\n[45/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem976aes.c.o\r\n[46/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o \r\n/usr/bin/cc  -I/build/liboqs/src/build/include -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/liboqs/src=/usr/src/debug/liboqs -flto=auto -std=gnu11 -fPIC -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o -c /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c:6:\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake_params.h:28:39: error: conflicting types for ‘OQS_KEM_frodokem_640_shake_keypair’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_640_shake_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro ‘crypto_kem_keypair’\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c:4:\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:25:20: note: previous declaration of ‘OQS_KEM_frodokem_640_shake_keypair’ with type ‘OQS_STATUS(uint8_t *, uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *)’}\r\n   25 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_shake_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake_params.h:29:39: error: conflicting types for ‘OQS_KEM_frodokem_640_shake_encaps’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_640_shake_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro ‘crypto_kem_enc’\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:26:20: note: previous declaration of ‘OQS_KEM_frodokem_640_shake_encaps’ with type ‘OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)’}\r\n   26 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_shake_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake_params.h:30:39: error: conflicting types for ‘OQS_KEM_frodokem_640_shake_decaps’ due to enum/integer mismatch; have ‘int(unsigned char *, const unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_640_shake_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro ‘crypto_kem_dec’\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:27:20: note: previous declaration of ‘OQS_KEM_frodokem_640_shake_decaps’ with type ‘OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)’}\r\n   27 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_shake_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[47/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o \r\n/usr/bin/cc  -I/build/liboqs/src/build/include -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/liboqs/src=/usr/src/debug/liboqs -flto=auto -std=gnu11 -fPIC -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o -c /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes.c\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes.c:6:\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes_params.h:28:39: error: conflicting types for ‘OQS_KEM_frodokem_640_aes_keypair’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_640_aes_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro ‘crypto_kem_keypair’\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes.c:4:\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:14:20: note: previous declaration of ‘OQS_KEM_frodokem_640_aes_keypair’ with type ‘OQS_STATUS(uint8_t *, uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *)’}\r\n   14 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_aes_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes_params.h:29:39: error: conflicting types for ‘OQS_KEM_frodokem_640_aes_encaps’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_640_aes_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro ‘crypto_kem_enc’\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:15:20: note: previous declaration of ‘OQS_KEM_frodokem_640_aes_encaps’ with type ‘OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)’}\r\n   15 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_aes_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes_params.h:30:39: error: conflicting types for ‘OQS_KEM_frodokem_640_aes_decaps’ due to enum/integer mismatch; have ‘int(unsigned char *, const unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_640_aes_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro ‘crypto_kem_dec’\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:16:20: note: previous declaration of ‘OQS_KEM_frodokem_640_aes_decaps’ with type ‘OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)’}\r\n   16 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_aes_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[48/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o \r\n/usr/bin/cc  -I/build/liboqs/src/build/include -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/liboqs/src=/usr/src/debug/liboqs -flto=auto -std=gnu11 -fPIC -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o -c /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes.c\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes.c:6:\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes_params.h:28:39: error: conflicting types for ‘OQS_KEM_frodokem_976_aes_keypair’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_976_aes_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro ‘crypto_kem_keypair’\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes.c:4:\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:36:20: note: previous declaration of ‘OQS_KEM_frodokem_976_aes_keypair’ with type ‘OQS_STATUS(uint8_t *, uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *)’}\r\n   36 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_aes_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes_params.h:29:39: error: conflicting types for ‘OQS_KEM_frodokem_976_aes_encaps’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_976_aes_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro ‘crypto_kem_enc’\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:37:20: note: previous declaration of ‘OQS_KEM_frodokem_976_aes_encaps’ with type ‘OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)’}\r\n   37 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_aes_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes_params.h:30:39: error: conflicting types for ‘OQS_KEM_frodokem_976_aes_decaps’ due to enum/integer mismatch; have ‘int(unsigned char *, const unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_976_aes_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro ‘crypto_kem_dec’\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:38:20: note: previous declaration of ‘OQS_KEM_frodokem_976_aes_decaps’ with type ‘OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)’}\r\n   38 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_aes_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[49/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem976shake.c.o\r\n[50/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem1344aes.c.o\r\n[51/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o \r\n/usr/bin/cc  -I/build/liboqs/src/build/include -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/liboqs/src=/usr/src/debug/liboqs -flto=auto -std=gnu11 -fPIC -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o -c /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake.c\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake.c:6:\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake_params.h:28:39: error: conflicting types for ‘OQS_KEM_frodokem_976_shake_keypair’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_976_shake_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro ‘crypto_kem_keypair’\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake.c:4:\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:47:20: note: previous declaration of ‘OQS_KEM_frodokem_976_shake_keypair’ with type ‘OQS_STATUS(uint8_t *, uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *)’}\r\n   47 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_shake_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake_params.h:29:39: error: conflicting types for ‘OQS_KEM_frodokem_976_shake_encaps’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_976_shake_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro ‘crypto_kem_enc’\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:48:20: note: previous declaration of ‘OQS_KEM_frodokem_976_shake_encaps’ with type ‘OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)’}\r\n   48 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_shake_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake_params.h:30:39: error: conflicting types for ‘OQS_KEM_frodokem_976_shake_decaps’ due to enum/integer mismatch; have ‘int(unsigned char *, const unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_976_shake_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro ‘crypto_kem_dec’\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:49:20: note: previous declaration of ‘OQS_KEM_frodokem_976_shake_decaps’ with type ‘OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)’}\r\n   49 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_shake_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[52/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_ksqr_avx512.c.o\r\n[53/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_avx512.c.o\r\n[54/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/decode_avx512.c.o\r\n[55/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/sampling_avx2.c.o\r\n[56/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/sampling_avx512.c.o\r\n[57/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_portable.c.o\r\n[58/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_portable.c.o\r\n[59/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_ksqr_avx512.c.o\r\n[60/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx2.c.o\r\n[61/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_avx2.c.o\r\n[62/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_ksqr_avx2.c.o\r\n[63/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/decode_avx2.c.o\r\n[64/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o\r\n[65/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_base_pclmul.c.o\r\n[66/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/sampling_avx512.c.o\r\n[67/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_avx512.c.o\r\n[68/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/sampling_avx2.c.o\r\n[69/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_base_pclmul.c.o\r\n[70/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_avx2.c.o\r\n[71/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_ksqr_avx2.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/timeline","performed_via_github_app":null,"state_reason":"not_planned"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550493490","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1450#issuecomment-1550493490","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450","id":1550493490,"node_id":"IC_kwDOA-eq3c5caqcy","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-05-16T23:45:52Z","updated_at":"2023-05-16T23:45:52Z","author_association":"MEMBER","body":"Closing this PR since it's a duplicate of #1375 which was fixed in #1377 and will be available in the forthcoming liboqs 0.8.0 release.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550493490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-16T23:45:53Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
