{"id":"29116149815","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1468","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1468/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1468/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1468/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1468","id":1712942384,"node_id":"PR_kwDOA-eq3c5Qqf1C","number":1468,"title":"Extend test_hash to cover more input lengths","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-05-17T01:14:58Z","updated_at":"2023-05-17T01:15:43Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1468","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1468","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1468.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1468.patch","merged_at":null},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdd more test cases to the test_hash in hopes of catching the type of bugs that arose in #1420.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [No] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1468/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1468/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550551162","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1468#issuecomment-1550551162","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1468","id":1550551162,"node_id":"IC_kwDOA-eq3c5ca4h6","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-05-17T01:15:43Z","updated_at":"2023-05-17T01:15:43Z","author_association":"MEMBER","body":"@xvzcf What do you think? I didn't cover all the algorithms (AES, SHAKE) or all the incremental APIs (SHA3 incremental) so there's room for improvement here.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550551162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-17T01:15:44Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29119994984","type":"IssueCommentEvent","actor":{"id":17916609,"login":"paulidale","display_login":"paulidale","gravatar_id":"","url":"https://api.github.com/users/paulidale","avatar_url":"https://avatars.githubusercontent.com/u/17916609?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1463","id":1711318122,"node_id":"PR_kwDOA-eq3c5QlBBR","number":1463,"title":"relax OpenSSL initialization error handling","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-05-16T06:19:30Z","updated_at":"2023-05-17T06:17:58Z","closed_at":"2023-05-17T05:18:16Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1463","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1463","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1463.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1463.patch","merged_at":"2023-05-17T05:18:16Z"},"body":"Fixes #1462\r\n\r\n* [no] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [no] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550801277","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1463#issuecomment-1550801277","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1463","id":1550801277,"node_id":"IC_kwDOA-eq3c5cb1l9","user":{"login":"paulidale","id":17916609,"node_id":"MDQ6VXNlcjE3OTE2NjA5","avatar_url":"https://avatars.githubusercontent.com/u/17916609?v=4","gravatar_id":"","url":"https://api.github.com/users/paulidale","html_url":"https://github.com/paulidale","followers_url":"https://api.github.com/users/paulidale/followers","following_url":"https://api.github.com/users/paulidale/following{/other_user}","gists_url":"https://api.github.com/users/paulidale/gists{/gist_id}","starred_url":"https://api.github.com/users/paulidale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulidale/subscriptions","organizations_url":"https://api.github.com/users/paulidale/orgs","repos_url":"https://api.github.com/users/paulidale/repos","events_url":"https://api.github.com/users/paulidale/events{/privacy}","received_events_url":"https://api.github.com/users/paulidale/received_events","type":"User","site_admin":false},"created_at":"2023-05-17T06:17:57Z","updated_at":"2023-05-17T06:17:57Z","author_association":"NONE","body":"Nice solution.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1550801277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-17T06:17:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29125892670","type":"IssueCommentEvent","actor":{"id":7125407,"login":"t8m","display_login":"t8m","gravatar_id":"","url":"https://api.github.com/users/t8m","avatar_url":"https://avatars.githubusercontent.com/u/7125407?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-17T10:20:39Z","closed_at":"2023-05-17T05:18:17Z","author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1551131356","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1551131356","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1551131356,"node_id":"IC_kwDOA-eq3c5cdGLc","user":{"login":"t8m","id":7125407,"node_id":"MDQ6VXNlcjcxMjU0MDc=","avatar_url":"https://avatars.githubusercontent.com/u/7125407?v=4","gravatar_id":"","url":"https://api.github.com/users/t8m","html_url":"https://github.com/t8m","followers_url":"https://api.github.com/users/t8m/followers","following_url":"https://api.github.com/users/t8m/following{/other_user}","gists_url":"https://api.github.com/users/t8m/gists{/gist_id}","starred_url":"https://api.github.com/users/t8m/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/t8m/subscriptions","organizations_url":"https://api.github.com/users/t8m/orgs","repos_url":"https://api.github.com/users/t8m/repos","events_url":"https://api.github.com/users/t8m/events{/privacy}","received_events_url":"https://api.github.com/users/t8m/received_events","type":"User","site_admin":false},"created_at":"2023-05-17T10:20:39Z","updated_at":"2023-05-17T10:20:39Z","author_association":"NONE","body":"IMO #1463 is not a real fix. Fetch on first use would be a fix, however it would require locking or atomic pointer cmpxchg access.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1551131356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-17T10:20:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29127519167","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-17T11:28:47Z","closed_at":"2023-05-17T05:18:17Z","author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1551221551","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1551221551","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1551221551,"node_id":"IC_kwDOA-eq3c5cdcMv","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-17T11:28:47Z","updated_at":"2023-05-17T11:28:47Z","author_association":"MEMBER","body":"> IMO #1463 is not a real fix. Fetch on first use would be a fix, however it would require locking or atomic pointer cmpxchg access.\r\n\r\nCompletely agree. It's a workaround. Based on your feedback, searching for some portable locking solution, I just stumbled across [CRYPTO_THREAD_run_once](https://www.openssl.org/docs/manmaster/man3/CRYPTO_THREAD_run_once.html)... So would https://github.com/open-quantum-safe/liboqs/pull/1469 be a \"real\" solution, @t8m?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1551221551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-17T11:28:47Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29137691594","type":"IssueCommentEvent","actor":{"id":132921394,"login":"praveksharma","display_login":"praveksharma","gravatar_id":"","url":"https://api.github.com/users/praveksharma","avatar_url":"https://avatars.githubusercontent.com/u/132921394?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1470","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1470/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1470/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1470/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1470","id":1714316536,"node_id":"PR_kwDOA-eq3c5QvKpu","number":1470,"title":"Update Classic McEliece","user":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-05-17T17:08:41Z","updated_at":"2023-05-17T17:45:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1470","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1470","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1470.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1470.patch","merged_at":null},"body":"Fixes #1314 and takes into account discussion from #1459. \r\n\r\nChanges SPDX line for `src\\common\\pqclean_shims\\crypto_declassify.h` from MIT to CC0.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [Yes] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [No] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1470/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1551816949","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1470#issuecomment-1551816949","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1470","id":1551816949,"node_id":"IC_kwDOA-eq3c5cftj1","user":{"login":"praveksharma","id":132921394,"node_id":"U_kgDOB-w4Mg","avatar_url":"https://avatars.githubusercontent.com/u/132921394?v=4","gravatar_id":"","url":"https://api.github.com/users/praveksharma","html_url":"https://github.com/praveksharma","followers_url":"https://api.github.com/users/praveksharma/followers","following_url":"https://api.github.com/users/praveksharma/following{/other_user}","gists_url":"https://api.github.com/users/praveksharma/gists{/gist_id}","starred_url":"https://api.github.com/users/praveksharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveksharma/subscriptions","organizations_url":"https://api.github.com/users/praveksharma/orgs","repos_url":"https://api.github.com/users/praveksharma/repos","events_url":"https://api.github.com/users/praveksharma/events{/privacy}","received_events_url":"https://api.github.com/users/praveksharma/received_events","type":"User","site_admin":false},"created_at":"2023-05-17T17:45:10Z","updated_at":"2023-05-17T17:45:10Z","author_association":"NONE","body":"@baentsch, I've made a new commit which removes the old vec/avx directories. ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1551816949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-17T17:45:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29137958578","type":"IssueCommentEvent","actor":{"id":698918,"login":"levitte","display_login":"levitte","gravatar_id":"","url":"https://api.github.com/users/levitte","avatar_url":"https://avatars.githubusercontent.com/u/698918?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/160","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/160/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/160/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/160/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/160","id":1711356624,"node_id":"I_kwDOE_A9l85mATrQ","number":160,"title":"Two oqsprovider instances cause test failure","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-05-16T06:52:53Z","updated_at":"2023-05-17T17:57:44Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"**Describe the bug**\r\nWhen activating two instances of oqsprovider tests fail. This is the OSX-independent follow-on to #132.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Activate two oqsprovider instances in openssl.cnf\r\n2. run tests (e.g., ./scripts/runtests.sh`)\r\n\r\n**Expected behavior**\r\nTests pass\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu 22\r\n - OpenSSL version: 3.2.0-dev, 3.1.0\r\n - Version: 0.5.0-dev\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/160/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1551831684","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/160#issuecomment-1551831684","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/160","id":1551831684,"node_id":"IC_kwDOE_A9l85cfxKE","user":{"login":"levitte","id":698918,"node_id":"MDQ6VXNlcjY5ODkxOA==","avatar_url":"https://avatars.githubusercontent.com/u/698918?v=4","gravatar_id":"","url":"https://api.github.com/users/levitte","html_url":"https://github.com/levitte","followers_url":"https://api.github.com/users/levitte/followers","following_url":"https://api.github.com/users/levitte/following{/other_user}","gists_url":"https://api.github.com/users/levitte/gists{/gist_id}","starred_url":"https://api.github.com/users/levitte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levitte/subscriptions","organizations_url":"https://api.github.com/users/levitte/orgs","repos_url":"https://api.github.com/users/levitte/repos","events_url":"https://api.github.com/users/levitte/events{/privacy}","received_events_url":"https://api.github.com/users/levitte/received_events","type":"User","site_admin":false},"created_at":"2023-05-17T17:57:44Z","updated_at":"2023-05-17T17:57:44Z","author_association":"NONE","body":"> 1. Activate two oqsprovider instances in openssl.cnf\r\n\r\nMy first reaction is...  Why?\r\n\r\nBut come to think of it, we do allow this...  we even allow multiple loads of exactly the same provider (same file), and as far as I can imagine, it shouldn't make a difference if there were two instances of the same actual provider, occupying different memory spaces.\r\n\r\nHowever....  what I'm thinking now is that there may be scenarios where, because they share the same properties to be queried when fetching, some cipher methods may come from one of those two provider instances, and some may come from the other, and an export/import dance of key material needs being transferred from one to the other, and as I recall, there were elements of the OQS keys that were kept strictly internal to the OQS provider, which would mean that the receiving end would end up with an incomplete \"private\" key, and funny things may start happening.\r\n\r\nI'm guessing *wildly*, mind you.  `libcrypto`'s internal list of loaded providers doesn't actually change, and queries for operation implementations should always happen in the same order, so of the two OQS providers, the same one should always be found first and queried first, so all successful fetches should always come from the same OQS provider...  I think (unless someone has added a randomizer in that process when I wasn't looking).\r\n\r\nThat is, unless the OQS provider is doing something funny that gets disrupted when there are two of them in memory...\r\n\r\nMy curiosity is picked!  I'll see when I can find some (non-work) time for a deeper dive...","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1551831684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-17T17:57:44Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29138680588","type":"IssueCommentEvent","actor":{"id":698918,"login":"levitte","display_login":"levitte","gravatar_id":"","url":"https://api.github.com/users/levitte","avatar_url":"https://avatars.githubusercontent.com/u/698918?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/162","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/162/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/162/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/162/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/162","id":1714437834,"node_id":"I_kwDOE_A9l85mMD7K","number":162,"title":"Use libcrypto's ERR_raise() directly isn't recommended","user":{"login":"levitte","id":698918,"node_id":"MDQ6VXNlcjY5ODkxOA==","avatar_url":"https://avatars.githubusercontent.com/u/698918?v=4","gravatar_id":"","url":"https://api.github.com/users/levitte","html_url":"https://github.com/levitte","followers_url":"https://api.github.com/users/levitte/followers","following_url":"https://api.github.com/users/levitte/following{/other_user}","gists_url":"https://api.github.com/users/levitte/gists{/gist_id}","starred_url":"https://api.github.com/users/levitte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levitte/subscriptions","organizations_url":"https://api.github.com/users/levitte/orgs","repos_url":"https://api.github.com/users/levitte/repos","events_url":"https://api.github.com/users/levitte/events{/privacy}","received_events_url":"https://api.github.com/users/levitte/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-05-17T18:27:30Z","updated_at":"2023-05-17T18:30:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\n\r\nI was looking around at the source, in this case [`oqsprov/oqsprov.c`](https://github.com/open-quantum-safe/oqs-provider/blob/main/oqsprov/oqsprov.c), which I noticed these sorts of calls:\r\n\r\nhttps://github.com/open-quantum-safe/oqs-provider/blob/4dec0fe04f4e9814775026a657e40045fdf075d3/oqsprov/oqsprov.c#L523\r\n\r\nThat's really not recommended.  Consider if there are two providers doing this, having each their own series of reason codes, but both using `ERR_LIB_USER`...  that'll lead to some confusion.\r\n\r\nThe recommended way is to make your own error reporting routines, based on the upcalls `OSSL_FUNC_CORE_NEW_ERROR`, `OSSL_FUNC_CORE_SET_ERROR_DEBUG` and `OSSL_FUNC_CORE_VSET_ERROR`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/162/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1551874049","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/162#issuecomment-1551874049","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/162","id":1551874049,"node_id":"IC_kwDOE_A9l85cf7gB","user":{"login":"levitte","id":698918,"node_id":"MDQ6VXNlcjY5ODkxOA==","avatar_url":"https://avatars.githubusercontent.com/u/698918?v=4","gravatar_id":"","url":"https://api.github.com/users/levitte","html_url":"https://github.com/levitte","followers_url":"https://api.github.com/users/levitte/followers","following_url":"https://api.github.com/users/levitte/following{/other_user}","gists_url":"https://api.github.com/users/levitte/gists{/gist_id}","starred_url":"https://api.github.com/users/levitte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levitte/subscriptions","organizations_url":"https://api.github.com/users/levitte/orgs","repos_url":"https://api.github.com/users/levitte/repos","events_url":"https://api.github.com/users/levitte/events{/privacy}","received_events_url":"https://api.github.com/users/levitte/received_events","type":"User","site_admin":false},"created_at":"2023-05-17T18:30:58Z","updated_at":"2023-05-17T18:30:58Z","author_association":"NONE","body":"I do understand that the recommended way may be daunting...  I have written a provider error small library that may be useful, though, as part of [libprov](https://github.com/provider-corner/libprov).  The files of interest in this case are https://github.com/provider-corner/libprov/blob/main/err.c and https://github.com/provider-corner/libprov/blob/main/include/prov/err.h.  If you want to see a usage example, have a look at the [vigenere toy](https://github.com/provider-corner/vigenere)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1551874049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-17T18:30:58Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29142619265","type":"IssueCommentEvent","actor":{"id":17916609,"login":"paulidale","display_login":"paulidale","gravatar_id":"","url":"https://api.github.com/users/paulidale","avatar_url":"https://avatars.githubusercontent.com/u/17916609?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462","id":1711303883,"node_id":"I_kwDOA-eq3c5mAGzL","number":1462,"title":"OpenSSL3 strict error checking causes downstream problems","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2023-05-16T06:07:48Z","updated_at":"2023-05-17T22:05:14Z","closed_at":"2023-05-17T05:18:17Z","author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1454 introduced strict error checking e.g., here: https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#L17 \r\n\r\nUnder specific preconditions (not activating `default` provider before `oqsprovider`) this causes https://github.com/open-quantum-safe/oqs-provider/issues/159.\r\n\r\nCompletely disregarding errors (as in the original code version https://github.com/open-quantum-safe/liboqs/pull/1431) seems suboptimal, too as it would lead to a \"surprising\" performance degradation in `liboqs` (depending on which provider is listed first), right @beldmit ?\r\n\r\nAny suggestions how to resolve this quagmire _very_ welcome. Without better proposals, I tend to change [oqs_fetch_ossl_objects](https://github.com/open-quantum-safe/liboqs/blob/24c7f4f07896252fe82a042633cf1d9e893153e4/src/common/ossl_helpers.c#LL14C6-L14C28) to collect error messages and just output a warning if any have been encountered -- but not exit.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1552148558","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1462#issuecomment-1552148558","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1462","id":1552148558,"node_id":"IC_kwDOA-eq3c5cg-hO","user":{"login":"paulidale","id":17916609,"node_id":"MDQ6VXNlcjE3OTE2NjA5","avatar_url":"https://avatars.githubusercontent.com/u/17916609?v=4","gravatar_id":"","url":"https://api.github.com/users/paulidale","html_url":"https://github.com/paulidale","followers_url":"https://api.github.com/users/paulidale/followers","following_url":"https://api.github.com/users/paulidale/following{/other_user}","gists_url":"https://api.github.com/users/paulidale/gists{/gist_id}","starred_url":"https://api.github.com/users/paulidale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulidale/subscriptions","organizations_url":"https://api.github.com/users/paulidale/orgs","repos_url":"https://api.github.com/users/paulidale/repos","events_url":"https://api.github.com/users/paulidale/events{/privacy}","received_events_url":"https://api.github.com/users/paulidale/received_events","type":"User","site_admin":false},"created_at":"2023-05-17T22:05:13Z","updated_at":"2023-05-17T22:05:13Z","author_association":"NONE","body":"Yes, that's a real solution.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1552148558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-17T22:05:14Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
