{"id":"28907524390","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/93","id":1694483480,"node_id":"I_kwDOETYnOM5k_8QY","number":93,"title":"Add P-521 kex and sig","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-05-03T17:16:24Z","updated_at":"2023-05-08T04:37:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It would be useful to add the P-521 curve as a standalone choice for KEX and auth in TLS (currently, only P-256 and P-384 options are available). This is for performance testing in the NCCoE project, to compare with the L5 CNSA 2.0 suite (Kyber1024/Dilithium5).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1537733964","html_url":"https://github.com/open-quantum-safe/profiling/issues/93#issuecomment-1537733964","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","id":1537733964,"node_id":"IC_kwDOETYnOM5bp_VM","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-08T04:37:56Z","updated_at":"2023-05-08T04:37:56Z","author_association":"MEMBER","body":"> only combine a KEX and a sig with a matching security level\r\n\r\nGood idea! This also reduces runtime a lot. Shall be enabled via https://github.com/open-quantum-safe/oqs-provider/pull/156.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1537733964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-08T04:37:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"28907649380","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1450","id":1696503074,"node_id":"I_kwDOA-eq3c5lHpUi","number":1450,"title":"Last release fails to build after updating to gcc 13","user":{"login":"iyanmv","id":15230534,"node_id":"MDQ6VXNlcjE1MjMwNTM0","avatar_url":"https://avatars.githubusercontent.com/u/15230534?v=4","gravatar_id":"","url":"https://api.github.com/users/iyanmv","html_url":"https://github.com/iyanmv","followers_url":"https://api.github.com/users/iyanmv/followers","following_url":"https://api.github.com/users/iyanmv/following{/other_user}","gists_url":"https://api.github.com/users/iyanmv/gists{/gist_id}","starred_url":"https://api.github.com/users/iyanmv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iyanmv/subscriptions","organizations_url":"https://api.github.com/users/iyanmv/orgs","repos_url":"https://api.github.com/users/iyanmv/repos","events_url":"https://api.github.com/users/iyanmv/events{/privacy}","received_events_url":"https://api.github.com/users/iyanmv/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-05-04T18:31:16Z","updated_at":"2023-05-08T04:49:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nAfter updating gcc to version 13.1.1 I cannot build the library anymore. Main branch is okay. On top of that, I still need to manually apply the fix for sha3. It's getting difficult to maintain a package for Arch Linux. Also, note that other distros are starting to use gcc 13 as well (Fedora 38, for example).\r\n\r\nIs there a plan for a new release?\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Check the versions I'm using in the logs below\r\n2. Try to compile\r\n\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Archlinux\r\n - OpenSSL version: 3.0.8\r\n - Compiler version used: gcc 13.1.1\r\n - Build variables used:\r\n```\r\nbuild() {\r\n    cmake -G Ninja -B build -S \"${pkgname}-${pkgver}\"\\\r\n        -DBUILD_SHARED_LIBS=ON \\\r\n        -DCMAKE_BUILD_TYPE=None \\\r\n        -DCMAKE_INSTALL_PREFIX=\"${pkgdir}/usr\" \\\r\n        -DOQS_BUILD_ONLY_LIB=OFF \\\r\n        -DOQS_DIST_BUILD=ON \\\r\n        -DOQS_USE_AES_OPENSSL=ON \\\r\n        -DOQS_USE_SHA2_OPENSSL=ON \\\r\n        -DOQS_USE_SHA3_OPENSSL=ON \\\r\n        -DOQS_OPT_TARGET=x86-64 \\\r\n        -DOQS_ENABLE_SIG_RAINBOW=OFF \\\r\n        -DOQS_ENABLE_SIG_PICNIC=OFF \\\r\n        -DOQS_ENABLE_KEM_SABER=OFF \\\r\n        -DOQS_ENABLE_KEM_NTRU=OFF \\\r\n        -Wno-dev\r\n    ninja -C build\r\n    ninja -C build gen_docs\r\n}\r\n```\r\n\r\n**Log**\r\n```\r\n==> Starting build()...\r\n-- The C compiler identification is GNU 13.1.1\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /usr/bin/cc - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- Found OpenSSL: /usr/lib/libcrypto.so (found suitable version \"3.0.8\", minimum required is \"1.1.1\")  \r\n-- Found Doxygen: /usr/bin/doxygen (found version \"1.9.6\") found components: doxygen missing components: dot\r\n-- Configuring done (0.2s)\r\n-- Generating done (0.1s)\r\n-- Build files have been written to: /build/liboqs/src/build\r\nninja: Entering directory `build'\r\n[1/1989] Building C object src/common/CMakeFiles/common.dir/pqclean_shims/fips202.c.o\r\n[2/1989] Building C object src/common/CMakeFiles/common.dir/pqclean_shims/fips202x4.c.o\r\n[3/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/error.c.o\r\n[4/1989] Building C object src/kem/bike/CMakeFiles/kem_bike.dir/kem_bike.c.o\r\n[5/1989] Building C object src/common/CMakeFiles/common.dir/aes/aes.c.o\r\n[6/1989] Building C object src/common/CMakeFiles/common.dir/pqclean_shims/nistseedexpander.c.o\r\n[7/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/aes_ctr_prf.c.o\r\n[8/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/decode_portable.c.o\r\n[9/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_inv.c.o\r\n[10/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_ksqr_portable.c.o\r\n[11/1989] Building C object src/CMakeFiles/oqs.dir/kem/kem.c.o\r\n[12/1989] Building C object src/CMakeFiles/oqs.dir/sig/sig.c.o\r\n[13/1989] Building C object src/common/CMakeFiles/common.dir/common.c.o\r\n[14/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul.c.o\r\n[15/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_base_portable.c.o\r\n[16/1989] Building C object src/common/CMakeFiles/common.dir/aes/aes128_ni.c.o\r\n[17/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/decode.c.o\r\n[18/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/utilities.c.o\r\n[19/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/sampling_portable.c.o\r\n[20/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_base_vpclmul.c.o\r\n[21/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/sampling.c.o\r\n[22/1989] Building C object src/common/CMakeFiles/common.dir/aes/aes256_ni.c.o\r\n[23/1989] Building C object src/common/CMakeFiles/common.dir/aes/aes_c.c.o\r\n[24/1989] Building C object src/common/CMakeFiles/common.dir/rand/rand_nist.c.o\r\n[25/1989] Building C object src/common/CMakeFiles/common.dir/sha2/sha2_ossl.c.o\r\n[26/1989] Building C object src/common/CMakeFiles/common.dir/sha3/ossl_sha3.c.o\r\n[27/1989] Building C object src/common/CMakeFiles/common.dir/sha3/ossl_sha3x4.c.o\r\n[28/1989] Building C object src/common/CMakeFiles/common.dir/rand/rand.c.o\r\n[29/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/kem.c.o\r\n[30/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/aes_ctr_prf.c.o\r\n[31/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/error.c.o\r\n[32/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_portable.c.o\r\n[33/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode.c.o\r\n[34/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul.c.o\r\n[35/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_inv.c.o\r\n[36/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_base_portable.c.o\r\n[37/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_ksqr_portable.c.o\r\n[38/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/sampling.c.o\r\n[39/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/sampling_portable.c.o\r\n[40/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/utilities.c.o\r\n[41/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_base_vpclmul.c.o\r\n[42/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/kem.c.o\r\n[43/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem640shake.c.o\r\n[44/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem640aes.c.o\r\n[45/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem976aes.c.o\r\n[46/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o \r\n/usr/bin/cc  -I/build/liboqs/src/build/include -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/liboqs/src=/usr/src/debug/liboqs -flto=auto -std=gnu11 -fPIC -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640shake.c.o -c /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c:6:\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake_params.h:28:39: error: conflicting types for ‘OQS_KEM_frodokem_640_shake_keypair’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_640_shake_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro ‘crypto_kem_keypair’\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake.c:4:\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:25:20: note: previous declaration of ‘OQS_KEM_frodokem_640_shake_keypair’ with type ‘OQS_STATUS(uint8_t *, uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *)’}\r\n   25 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_shake_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake_params.h:29:39: error: conflicting types for ‘OQS_KEM_frodokem_640_shake_encaps’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_640_shake_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro ‘crypto_kem_enc’\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:26:20: note: previous declaration of ‘OQS_KEM_frodokem_640_shake_encaps’ with type ‘OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)’}\r\n   26 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_shake_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640shake_params.h:30:39: error: conflicting types for ‘OQS_KEM_frodokem_640_shake_decaps’ due to enum/integer mismatch; have ‘int(unsigned char *, const unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_640_shake_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro ‘crypto_kem_dec’\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:27:20: note: previous declaration of ‘OQS_KEM_frodokem_640_shake_decaps’ with type ‘OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)’}\r\n   27 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_shake_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[47/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o \r\n/usr/bin/cc  -I/build/liboqs/src/build/include -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/liboqs/src=/usr/src/debug/liboqs -flto=auto -std=gnu11 -fPIC -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo640aes.c.o -c /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes.c\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes.c:6:\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes_params.h:28:39: error: conflicting types for ‘OQS_KEM_frodokem_640_aes_keypair’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_640_aes_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro ‘crypto_kem_keypair’\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes.c:4:\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:14:20: note: previous declaration of ‘OQS_KEM_frodokem_640_aes_keypair’ with type ‘OQS_STATUS(uint8_t *, uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *)’}\r\n   14 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_aes_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes_params.h:29:39: error: conflicting types for ‘OQS_KEM_frodokem_640_aes_encaps’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_640_aes_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro ‘crypto_kem_enc’\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:15:20: note: previous declaration of ‘OQS_KEM_frodokem_640_aes_encaps’ with type ‘OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)’}\r\n   15 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_aes_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo640aes_params.h:30:39: error: conflicting types for ‘OQS_KEM_frodokem_640_aes_decaps’ due to enum/integer mismatch; have ‘int(unsigned char *, const unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_640_aes_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro ‘crypto_kem_dec’\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:16:20: note: previous declaration of ‘OQS_KEM_frodokem_640_aes_decaps’ with type ‘OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)’}\r\n   16 | OQS_API OQS_STATUS OQS_KEM_frodokem_640_aes_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[48/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o \r\n/usr/bin/cc  -I/build/liboqs/src/build/include -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/liboqs/src=/usr/src/debug/liboqs -flto=auto -std=gnu11 -fPIC -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976aes.c.o -c /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes.c\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes.c:6:\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes_params.h:28:39: error: conflicting types for ‘OQS_KEM_frodokem_976_aes_keypair’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_976_aes_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro ‘crypto_kem_keypair’\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes.c:4:\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:36:20: note: previous declaration of ‘OQS_KEM_frodokem_976_aes_keypair’ with type ‘OQS_STATUS(uint8_t *, uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *)’}\r\n   36 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_aes_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes_params.h:29:39: error: conflicting types for ‘OQS_KEM_frodokem_976_aes_encaps’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_976_aes_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro ‘crypto_kem_enc’\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:37:20: note: previous declaration of ‘OQS_KEM_frodokem_976_aes_encaps’ with type ‘OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)’}\r\n   37 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_aes_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976aes_params.h:30:39: error: conflicting types for ‘OQS_KEM_frodokem_976_aes_decaps’ due to enum/integer mismatch; have ‘int(unsigned char *, const unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_976_aes_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro ‘crypto_kem_dec’\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:38:20: note: previous declaration of ‘OQS_KEM_frodokem_976_aes_decaps’ with type ‘OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)’}\r\n   38 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_aes_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[49/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem976shake.c.o\r\n[50/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/kem_frodokem1344aes.c.o\r\n[51/1989] Building C object src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o\r\nFAILED: src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o \r\n/usr/bin/cc  -I/build/liboqs/src/build/include -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -g -ffile-prefix-map=/build/liboqs/src=/usr/src/debug/liboqs -flto=auto -std=gnu11 -fPIC -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic -Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdata-sections -ffunction-sections -Wl,--gc-sections -MD -MT src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o -MF src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o.d -o src/kem/frodokem/CMakeFiles/frodokem.dir/external/frodo976shake.c.o -c /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake.c\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake.c:6:\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake_params.h:28:39: error: conflicting types for ‘OQS_KEM_frodokem_976_shake_keypair’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   28 | #define crypto_kem_keypair            OQS_KEM_frodokem_976_shake_keypair\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:9:5: note: in expansion of macro ‘crypto_kem_keypair’\r\n    9 | int crypto_kem_keypair(unsigned char* pk, unsigned char* sk)\r\n      |     ^~~~~~~~~~~~~~~~~~\r\nIn file included from /build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake.c:4:\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:47:20: note: previous declaration of ‘OQS_KEM_frodokem_976_shake_keypair’ with type ‘OQS_STATUS(uint8_t *, uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *)’}\r\n   47 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_shake_keypair(uint8_t *public_key, uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake_params.h:29:39: error: conflicting types for ‘OQS_KEM_frodokem_976_shake_encaps’ due to enum/integer mismatch; have ‘int(unsigned char *, unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   29 | #define crypto_kem_enc                OQS_KEM_frodokem_976_shake_encaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:66:5: note: in expansion of macro ‘crypto_kem_enc’\r\n   66 | int crypto_kem_enc(unsigned char *ct, unsigned char *ss, const unsigned char *pk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:48:20: note: previous declaration of ‘OQS_KEM_frodokem_976_shake_encaps’ with type ‘OQS_STATUS(uint8_t *, uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, unsigned char *, const unsigned char *)’}\r\n   48 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_shake_encaps(uint8_t *ciphertext, uint8_t *shared_secret, const uint8_t *public_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/frodo976shake_params.h:30:39: error: conflicting types for ‘OQS_KEM_frodokem_976_shake_decaps’ due to enum/integer mismatch; have ‘int(unsigned char *, const unsigned char *, const unsigned char *)’ [-Werror=enum-int-mismatch]\r\n   30 | #define crypto_kem_dec                OQS_KEM_frodokem_976_shake_decaps\r\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/build/liboqs/src/liboqs-0.7.2/src/kem/frodokem/external/kem.c:135:5: note: in expansion of macro ‘crypto_kem_dec’\r\n  135 | int crypto_kem_dec(unsigned char *ss, const unsigned char *ct, const unsigned char *sk)\r\n      |     ^~~~~~~~~~~~~~\r\n/build/liboqs/src/build/include/oqs/kem_frodokem.h:49:20: note: previous declaration of ‘OQS_KEM_frodokem_976_shake_decaps’ with type ‘OQS_STATUS(uint8_t *, const uint8_t *, const uint8_t *)’ {aka ‘OQS_STATUS(unsigned char *, const unsigned char *, const unsigned char *)’}\r\n   49 | OQS_API OQS_STATUS OQS_KEM_frodokem_976_shake_decaps(uint8_t *shared_secret, const uint8_t *ciphertext, const uint8_t *secret_key);\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1: all warnings being treated as errors\r\n[52/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_ksqr_avx512.c.o\r\n[53/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_avx512.c.o\r\n[54/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/decode_avx512.c.o\r\n[55/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/sampling_avx2.c.o\r\n[56/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/sampling_avx512.c.o\r\n[57/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_portable.c.o\r\n[58/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_portable.c.o\r\n[59/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_ksqr_avx512.c.o\r\n[60/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx2.c.o\r\n[61/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_avx2.c.o\r\n[62/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_ksqr_avx2.c.o\r\n[63/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/decode_avx2.c.o\r\n[64/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/decode_avx512.c.o\r\n[65/1989] Building C object src/kem/bike/CMakeFiles/bike_l1.dir/additional_r3/gf2x_mul_base_pclmul.c.o\r\n[66/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/sampling_avx512.c.o\r\n[67/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_avx512.c.o\r\n[68/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/sampling_avx2.c.o\r\n[69/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_base_pclmul.c.o\r\n[70/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_mul_avx2.c.o\r\n[71/1989] Building C object src/kem/bike/CMakeFiles/bike_l3.dir/additional_r3/gf2x_ksqr_avx2.c.o\r\nninja: build stopped: subcommand failed.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1537739284","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1450#issuecomment-1537739284","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1450","id":1537739284,"node_id":"IC_kwDOA-eq3c5bqAoU","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-08T04:49:42Z","updated_at":"2023-05-08T04:49:42Z","author_association":"MEMBER","body":"> Is there a plan for a new release?\r\n\r\nYes. We wanted to get this out last month. Sole issue remaining for [milestone 0.8.0](https://github.com/open-quantum-safe/liboqs/milestone/18) has a PR that needs fixing.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1537739284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-08T04:49:42Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"28907658756","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1435","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1435/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1435/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1435/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1435","id":1669961574,"node_id":"PR_kwDOA-eq3c5Oahyh","number":1435,"title":"Generate and install pkgconfig file","user":{"login":"tranzystorek-io","id":5671049,"node_id":"MDQ6VXNlcjU2NzEwNDk=","avatar_url":"https://avatars.githubusercontent.com/u/5671049?v=4","gravatar_id":"","url":"https://api.github.com/users/tranzystorek-io","html_url":"https://github.com/tranzystorek-io","followers_url":"https://api.github.com/users/tranzystorek-io/followers","following_url":"https://api.github.com/users/tranzystorek-io/following{/other_user}","gists_url":"https://api.github.com/users/tranzystorek-io/gists{/gist_id}","starred_url":"https://api.github.com/users/tranzystorek-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tranzystorek-io/subscriptions","organizations_url":"https://api.github.com/users/tranzystorek-io/orgs","repos_url":"https://api.github.com/users/tranzystorek-io/repos","events_url":"https://api.github.com/users/tranzystorek-io/events{/privacy}","received_events_url":"https://api.github.com/users/tranzystorek-io/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-04-16T13:00:11Z","updated_at":"2023-05-08T04:50:32Z","closed_at":"2023-04-24T12:25:42Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1435","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1435","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1435.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1435.patch","merged_at":"2023-04-24T12:25:42Z"},"body":"<!-- Please give a brief explanation of the purpose of this pull request. -->\r\nAdds a basic pkgconfig file generation. The main motivation for this is to enable linking a system-provided liboqs library in liboqs-rust.\r\n\r\nI have done a simple manual test by creating a Void Linux package template for liboqs, installing it and checking that pkg-config detects its presence.\r\n\r\nI am not proficient in pkgconfig, but I tried to follow the style found in some existing C libraries.\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\nCloses #1434 \r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1435/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1537739713","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1435#issuecomment-1537739713","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1435","id":1537739713,"node_id":"IC_kwDOA-eq3c5bqAvB","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-08T04:50:32Z","updated_at":"2023-05-08T04:50:32Z","author_association":"MEMBER","body":"@wucke13 [oqsprovider](https://github.com/open-quantum-safe/oqs-provider) is also waiting for such release. But then again, there's only a single issue requiring resolution for [0.8.0 milestone](https://github.com/open-quantum-safe/liboqs/milestone/18)... Further eyes welcome to help resolve this.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1537739713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-08T04:50:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"28914791806","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1449","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1449/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1449/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1449/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1449","id":1692921235,"node_id":"PR_kwDOA-eq3c5PnOnM","number":1449,"title":"src/common/pqclean_shims/compat.h: Fix polyfill version check sense","user":{"login":"distorted-mdw","id":10420519,"node_id":"MDQ6VXNlcjEwNDIwNTE5","avatar_url":"https://avatars.githubusercontent.com/u/10420519?v=4","gravatar_id":"","url":"https://api.github.com/users/distorted-mdw","html_url":"https://github.com/distorted-mdw","followers_url":"https://api.github.com/users/distorted-mdw/followers","following_url":"https://api.github.com/users/distorted-mdw/following{/other_user}","gists_url":"https://api.github.com/users/distorted-mdw/gists{/gist_id}","starred_url":"https://api.github.com/users/distorted-mdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/distorted-mdw/subscriptions","organizations_url":"https://api.github.com/users/distorted-mdw/orgs","repos_url":"https://api.github.com/users/distorted-mdw/repos","events_url":"https://api.github.com/users/distorted-mdw/events{/privacy}","received_events_url":"https://api.github.com/users/distorted-mdw/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-05-02T18:43:01Z","updated_at":"2023-05-08T10:41:22Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1449","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1449","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1449.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1449.patch","merged_at":null},"body":"We need to define the types if GCC is too /old/.\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1449/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1538156527","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1449#issuecomment-1538156527","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1449","id":1538156527,"node_id":"IC_kwDOA-eq3c5brmfv","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-08T10:41:21Z","updated_at":"2023-05-08T10:41:21Z","author_association":"MEMBER","body":"As discussed above, this PR is becoming superfluous when #1451 is merged and will be closed then.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1538156527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-08T10:41:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"28916856365","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/93","id":1694483480,"node_id":"I_kwDOETYnOM5k_8QY","number":93,"title":"Add P-521 kex and sig","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-05-03T17:16:24Z","updated_at":"2023-05-08T12:17:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It would be useful to add the P-521 curve as a standalone choice for KEX and auth in TLS (currently, only P-256 and P-384 options are available). This is for performance testing in the NCCoE project, to compare with the L5 CNSA 2.0 suite (Kyber1024/Dilithium5).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1538266400","html_url":"https://github.com/open-quantum-safe/profiling/issues/93#issuecomment-1538266400","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","id":1538266400,"node_id":"IC_kwDOETYnOM5bsBUg","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2023-05-08T12:17:46Z","updated_at":"2023-05-08T12:17:46Z","author_association":"NONE","body":"> > It looks like currently we have these KEX:\r\n> > PQ: Kyber\r\n> \r\n> The limitation to Kyber was done as per your request. Shall we change/extend this again?\r\n\r\nNo, I was just stating the current situation. I'm happy to stick with the selected NIST PQ alg for now.\r\n\r\n> Please consider doing a PR for these files that suits your purposes. FWIW, you can always easily test `openssl` invocations using `docker run -it openquantumsafe/oqs-ossl3 sh`.\r\n\r\nSounds good.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1538266400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-08T12:17:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"28918456923","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/93","id":1694483480,"node_id":"I_kwDOETYnOM5k_8QY","number":93,"title":"Add P-521 kex and sig","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2023-05-03T17:16:24Z","updated_at":"2023-05-08T13:20:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It would be useful to add the P-521 curve as a standalone choice for KEX and auth in TLS (currently, only P-256 and P-384 options are available). This is for performance testing in the NCCoE project, to compare with the L5 CNSA 2.0 suite (Kyber1024/Dilithium5).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1538352100","html_url":"https://github.com/open-quantum-safe/profiling/issues/93#issuecomment-1538352100","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","id":1538352100,"node_id":"IC_kwDOETYnOM5bsWPk","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-08T13:20:38Z","updated_at":"2023-05-08T13:20:38Z","author_association":"MEMBER","body":"> Sounds good.\r\n\r\nYou may want to wait a bit for that as I intend to prepare things a bit better (by doing loops along the 3 NIST levels) -- for this, https://github.com/open-quantum-safe/oqs-provider/pull/156 needs to land -- and for proper execution, https://github.com/openssl/openssl/pull/20898 also needs to land. If you need this quicker, a manual list is probably the only way forward.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1538352100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-08T13:20:39Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"28919401334","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/93","id":1694483480,"node_id":"I_kwDOETYnOM5k_8QY","number":93,"title":"Add P-521 kex and sig","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2023-05-03T17:16:24Z","updated_at":"2023-05-08T13:57:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It would be useful to add the P-521 curve as a standalone choice for KEX and auth in TLS (currently, only P-256 and P-384 options are available). This is for performance testing in the NCCoE project, to compare with the L5 CNSA 2.0 suite (Kyber1024/Dilithium5).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1538404271","html_url":"https://github.com/open-quantum-safe/profiling/issues/93#issuecomment-1538404271","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","id":1538404271,"node_id":"IC_kwDOETYnOM5bsi-v","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2023-05-08T13:57:27Z","updated_at":"2023-05-08T13:57:27Z","author_association":"NONE","body":"> If you need this quicker, a manual list is probably the only way forward.\r\n\r\nNo rush. Thanks for the update.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1538404271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-08T13:57:28Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
