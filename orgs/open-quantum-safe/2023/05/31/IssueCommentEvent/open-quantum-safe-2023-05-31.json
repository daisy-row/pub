{"id":"29418966501","type":"IssueCommentEvent","actor":{"id":8843219,"login":"dstebila","display_login":"dstebila","gravatar_id":"","url":"https://api.github.com/users/dstebila","avatar_url":"https://avatars.githubusercontent.com/u/8843219?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1483","id":1727813623,"node_id":"I_kwDOA-eq3c5m_Ff3","number":1483,"title":"40 tests fail on ARM32 (armv7hf): AssertionError: Got unexpected return code -4","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2023-05-26T15:13:38Z","updated_at":"2023-05-31T01:06:18Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nI try to build `0.8.0-rc1` for ALT Linux and found that 40 tests failed on armv7hf arch.\r\n```\r\n[00:00:48] + timeout 222 /usr/bin/ninja -j32 -C build run_tests\r\n[00:00:48] ninja: Entering directory `build'\r\n[00:00:49] [0/1] cd /usr/src/RPM/BUILD/liboqs-0.8.0.rc1 && /usr/bin/cmake -E env OQS_BUILD_DIR=/usr/src/RPM/BUILD/liboqs-0.8.0.rc1/build python3 -m pytest --verbose --numprocesses=auto --ignore=scripts/copy_from_upstream/repos\r\n[00:00:55] ============================= test session starts ==============================\r\n[00:00:55] platform linux -- Python 3.10.8, pytest-7.3.1, pluggy-1.0.0 -- /usr/bin/python3\r\n[00:00:55] cachedir: .pytest_cache\r\n[00:00:55] rootdir: /usr/src/RPM/BUILD/liboqs-0.8.0.rc1\r\n[00:00:55] plugins: xdist-3.3.1\r\n[00:00:55] created: 32/32 workers\r\n[00:00:55] 32 workers [402 items]\r\n...\r\n[00:01:30] =================================== FAILURES ===================================\r\n[00:01:30] ______________________ test_kem[Classic-McEliece-348864] _______________________\r\n[00:01:30] [gw26] linux -- Python 3.10.8 /usr/bin/python3\r\n[00:01:30] \r\n[00:01:30] kem_name = 'Classic-McEliece-348864'\r\n[00:01:30] \r\n[00:01:30]     @helpers.filtered_test\r\n[00:01:30]     @pytest.mark.parametrize('kem_name', helpers.available_kems_by_name())\r\n[00:01:30]     def test_kem(kem_name):\r\n[00:01:30]         kats = helpers.get_kats(\"kem\")\r\n[00:01:30]         if not(helpers.is_kem_enabled_by_name(kem_name)): pytest.skip('Not enabled')\r\n[00:01:30] >       helpers.run_subprocess( [helpers.path_to_executable('speed_kem'), kem_name, \"-f\"] )\r\n[00:01:30] \r\n[00:01:30] tests/test_speed.py:14: \r\n[00:01:30] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[00:01:30] \r\n[00:01:30] command = ['/usr/src/RPM/BUILD/liboqs-0.8.0.rc1/build/tests/speed_kem', 'Classic-McEliece-348864', '-f']\r\n[00:01:30] working_dir = '.'\r\n[00:01:30] env = {'G_BROKEN_FILENAMES': '1', 'HISTFILESIZE': '9999', 'HISTSIZE': '999', 'HOME': '/usr/src', ...}\r\n[00:01:30] expected_returncode = 0, input = None, ignore_returncode = False\r\n[00:01:30] \r\n[00:01:30]     def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n[00:01:30]         \"\"\"\r\n[00:01:30]         Helper function to run a shell command and report success/failure\r\n[00:01:30]         depending on the exit status of the shell command.\r\n[00:01:30]         \"\"\"\r\n[00:01:30]         env_ = os.environ.copy()\r\n[00:01:30]         if env is not None:\r\n[00:01:30]             env_.update(env)\r\n[00:01:30]         env = env_\r\n[00:01:30]     \r\n[00:01:30]         # Note we need to capture stdout/stderr from the subprocess,\r\n[00:01:30]         # then print it, which pytest will then capture and\r\n[00:01:30]         # buffer appropriately\r\n[00:01:30]         print(working_dir + \" > \" + \" \".join(command))\r\n[00:01:30]     \r\n[00:01:30]         result = subprocess.run(\r\n[00:01:30]                 command,\r\n[00:01:30]                 input=input,\r\n[00:01:30]                 stdout=subprocess.PIPE,\r\n[00:01:30]                 stderr=subprocess.STDOUT,\r\n[00:01:30]                 cwd=working_dir,\r\n[00:01:30]                 env=env,\r\n[00:01:30]             )\r\n[00:01:30]     \r\n[00:01:30]         if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n[00:01:30]             print(result.stdout.decode('utf-8'))\r\n[00:01:30] >           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\n[00:01:30] E           AssertionError: Got unexpected return code -4\r\n[00:01:30] \r\n[00:01:30] tests/helpers.py:42: AssertionError\r\n[00:01:30] ----------------------------- Captured stdout call -----------------------------\r\n[00:01:30] . > /usr/src/RPM/BUILD/liboqs-0.8.0.rc1/build/tests/speed_kem Classic-McEliece-348864 -f\r\n[00:01:30] \r\n...\r\n...\r\n[00:01:30] =========================== short test summary info ============================\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-348864] - AssertionErro...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-348864f] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-460896f] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-6960119] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-460896] - AssertionErro...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-6688128f] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-6960119f] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-8192128] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[HQC-192] - AssertionError: Got unexpecte...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[HQC-128] - AssertionError: Got unexpecte...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-8192128f] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Kyber512] - AssertionError: Got unexpect...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[HQC-256] - AssertionError: Got unexpecte...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Kyber768] - AssertionError: Got unexpect...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[sntrup761] - AssertionError: Got unexpec...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-640-AES] - AssertionError: Got ...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-640-SHAKE] - AssertionError: Go...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-976-AES] - AssertionError: Got ...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-1344-AES] - AssertionError: Got...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Dilithium3] - AssertionError: Got unexpe...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-1344-SHAKE] - AssertionError: G...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-976-SHAKE] - AssertionError: Go...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Dilithium5] - AssertionError: Got unexpe...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Falcon-512] - AssertionError: Got unexpe...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Dilithium2] - AssertionError: Got unexpe...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Falcon-1024] - AssertionError: Got unexp...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-128s-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-128f-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-192f-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-192s-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-256f-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-256s-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-128f-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-128s-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-192f-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-256f-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-256s-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-6688128] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Kyber1024] - AssertionError: Got unexpec...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-192s-simple] - AssertionE...\r\n[00:01:30] ================= 40 failed, 218 passed, 144 skipped in 40.35s =================\r\n```\r\n**Environment (please complete the following information):**\r\n - OS: `ALT Linux`\r\n - OpenSSL version `1.1.1t`\r\n - Compiler version used `gcc 12.2.1`\r\n - Build variables used `-DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic`\r\n - liboqs version `0.8.0.rc1`\r\n\r\nFull build log is temporary available there https://git.altlinux.org/tasks/321944/build/100/armh/log\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1569343823","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1483#issuecomment-1569343823","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483","id":1569343823,"node_id":"IC_kwDOA-eq3c5diklP","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"created_at":"2023-05-31T01:06:17Z","updated_at":"2023-05-31T01:06:17Z","author_association":"MEMBER","body":"I've created #1485 as an attempt to fix it.  \r\n\r\nBut I wonder if it's actually a different problem -- it's not that the instructions aren't supported, but that they aren't available to user-space programs by default.  It's my understanding this is a problem on ARMv8 (https://github.com/mupq/pqax#enable-access-to-performance-counters) but it might also be a problem on ARMv7 (https://neocontra.blogspot.com/2013/05/user-mode-performance-counters-for.html).  The workaround on ARMv8 is to install a kernel module (see my first link) to turn on the Performance Monitor Unit (PMU) which then makes the required instructions available to user-space programs.  In our benchmarking code we have a configure-time option that lets you decide whether to use those or not (but still depends on you having the kernel module enabled.)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1569343823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-31T01:06:18Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29425121121","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/140","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/140/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/140/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/140/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/140","id":1653982616,"node_id":"PR_kwDOE_A9l85Nlzlk","number":140,"title":"OSX path fixes","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-04-04T14:15:29Z","updated_at":"2023-05-31T07:59:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/pulls/140","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/140","diff_url":"https://github.com/open-quantum-safe/oqs-provider/pull/140.diff","patch_url":"https://github.com/open-quantum-safe/oqs-provider/pull/140.patch","merged_at":null},"body":"Fixes [more OSX path errors](https://github.com/open-quantum-safe/oqs-provider/issues/132#issuecomment-1495877053). Thanks @mouse07410 for \"staying on\" this.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/140/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1569686437","html_url":"https://github.com/open-quantum-safe/oqs-provider/pull/140#issuecomment-1569686437","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/140","id":1569686437,"node_id":"IC_kwDOE_A9l85dj4Ol","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-31T07:59:56Z","updated_at":"2023-05-31T07:59:56Z","author_association":"MEMBER","body":"> the fact that it insists on LD_LIBRARY_PATH being set (and exits if it's empty).\r\n\r\nThanks to @mouse07410 suggestion these \"nanny instructions\" have now been removed: If (DY)LD_LIBRARY_PATH is not set in the component tests, testing will not stop anymore. In turn, if (DY)LD_LIBRARY_PATH are set when starting testing, those settings will not be changed and any failures are due to the user :)\r\n\r\nThis PR also excludes testing for \"OpenSSL 3.0.1\" as it is unable to properly register new signature algorithms (after loading `oqsprovider`).\r\n\r\n@dstebila @bhess Please check and approve as I'd like to finally tag a release now.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1569686437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-31T07:59:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29425261007","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/171","id":1724303930,"node_id":"I_kwDOE_A9l85mxso6","number":171,"title":"MacOS: fails to find liboqs","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2023-05-24T15:51:30Z","updated_at":"2023-05-31T08:05:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nTests should - but do not - look in `/opt/local/lib` for libraries like `liboqs.dylib`.\r\n\r\n```text\r\nLD_LIBRARY_PATH=/Users/ur20980/src/oqs-provider/.local/lib64\r\nOPENSSL_APP=/opt/local/libexec/openssl3/bin/openssl\r\nOPENSSL_CONF=/opt/local/libexec/openssl3/etc/openssl/openssl.cnf\r\nOPENSSL_MODULES=/opt/local/libexec/openssl3/lib/ossl-modules\r\nVersion information:\r\nOpenSSL 3.1.0 14 Mar 2023 (Library: OpenSSL 3.1.0 14 Mar 2023)\r\nlist: unable to load provider oqsprovider\r\nHint: use -provider-path option or OPENSSL_MODULES environment variable.\r\n40664950F87F0000:error:12800067:DSO support routines:dlfcn_load:could not load the shared library:crypto/dso/dso_dlfcn.c:118:filename(_build/lib/oqsprovider.dylib): dlopen(_build/lib/oqsprovider.dylib, 0x0002): Library not loaded: @rpath/liboqs.3.dylib\r\n  Referenced from: <DE45930A-2ABF-3032-BFF3-19F96D0064A6> /Users/ur20980/src/oqs-provider/_build/lib/oqsprovider.0.5.0-dev.dylib\r\n  Reason: tried: '/usr/local/lib/liboqs.3.dylib' (no such file), '/usr/lib/liboqs.3.dylib' (no such file, not in dyld cache)\r\n40664950F87F0000:error:12800067:DSO support routines:DSO_load:could not load the shared library:crypto/dso/dso_lib.c:152:\r\n40664950F87F0000:error:07880025:common libcrypto routines:provider_init:reason(524325):crypto/provider_core.c:904:name=oqsprovider\r\nBaseline openssl invocation failed. Exiting test.\r\n```\r\n\r\n`LD_LIBRARY_PATH` is not an answer, because (a) MacOS uses `DYLD_LIBRARY_PATH` and ignores `LD_LIBRARY_PATH`, and (b) setting that env var would limit where the loader searches for missing libraries, i.e., we'd risk that it would now find what's in `$DYLD_LIBRARY_PATH` but stops finding what's not there.\r\n\r\n**To Reproduce**\r\nSee above.\r\n\r\n**Expected behavior**\r\nTests passing, with all the relevant libraries located correctly.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.4\r\n - OpenSSL version: 3.2.0-dev and 3.1.0\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1569694922","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/171#issuecomment-1569694922","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171","id":1569694922,"node_id":"IC_kwDOE_A9l85dj6TK","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-31T08:05:01Z","updated_at":"2023-05-31T08:05:01Z","author_association":"MEMBER","body":"> my bigger concern is that DYLD_LIBRARY_PATH does not seem to be inherited by the scripts/runtests.sh\r\n\r\nI'm not sure I understand what is meant by \"inherited by\"?\r\n\r\nBut whatever, I think I now found a resolution: By passing to the `cmake` invocation for `oqsprovider` the environment variable `liboqs_DIR` one can direct it to properly create a reference to wherever `liboqs` has been placed: https://github.com/open-quantum-safe/oqs-provider/blob/2ba86da572e9ad55d3f23765f8c784036413606f/.circleci/config.yml#LL140C1-L140C22. This does not work when using `-DCMAKE_PREFIX_PATH` (but then again, this is logical as only the former is meant to locate external libraries while the latter defines the install location -- my mistake was to place `liboqs` and `openssl` into the same place which caused the problem to be hidden in the original install scripts). After adapting this in the CI instructions, everything works as desired, regardless where (a shared) `liboqs` has been installed (both positively and negatively tested on an M1 OSX box). \r\n\r\nThe reason why things fail for you most likely have to do with the way you build `liboqs`: Your script explicitly passes \"CMAKE_C_FLAGS\" but no matching instructions for the linker. The approach of using `cmake` mechanisms by way of directing `oqsprovider`s `cmake` to the install location of `liboqs` using the `liboqs_DIR` environment variable directive seems to resolve this, both for include/compile as well as linking instructions.\r\n\r\nThanks for  making me learn quite a bit about OSX, shared libs and installs and `cmake`: This definitely improved how things can be (separately) deployed -- and now also tested -- it just was tedious to do this so \"remotely\"...\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1569694922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-31T08:05:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29425369121","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/168","id":1718872873,"node_id":"I_kwDOE_A9l85mc-sp","number":168,"title":"Bug when stopping provider on OSX","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2023-05-09T17:48:04Z","updated_at":"2023-05-31T08:09:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nOn a newly-prepared platform , I'm getting a ton of errors trying to run test-suite:\r\n```text\r\n.  .  .\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256f-simple] ___________________________________\r\n[gw11] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256f-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256f-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256f-simple -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-192f-robust] ___________________________________\r\n[gw4] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-192f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-192f-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-192f-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256s-simple] ___________________________________\r\n[gw2] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256s-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-simple -f\r\n\r\n___________________________________ test_sig[SPHINCS+-SHA256-128f-robust] ____________________________________\r\n[gw9] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHA256-128f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       output = helpers.run_subprocess(\r\n            [helpers.path_to_executable('kat_sig'), sig_name],\r\n        )\r\n\r\ntests/test_kat.py:29: \r\n.  .  .\r\n```\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone, build optimized version, as per README.\r\n2. Go to `build` subdirectory.\r\n3. `ninja run_tests`\r\n4. See error\r\n\r\n**Expected behavior**\r\nTests passing or being skipped, test-scripts not crashing.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.3.1 (a)\r\n - OpenSSL version: 3.2.0-dev\r\n - Compiler version used: Apple Clang \r\n - Build variables used:\r\n ```\r\nOPT=\"-DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release\"\r\nenv RUN_TESTS_PARALLEL_UPPER=FALSE cmake -GNinja .. -DOQS_USE_OPENSSL=ON ${OPT} -DCMAKE_INSTALL_PREFIX=\"${HOME}/openssl-3\"\r\n```\r\n - liboqs version: current main\r\n\r\n**Additional context**\r\nI hope you can point me at where/what in Python environment seems missing - maybe an older version of some module, or such...?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/timeline","performed_via_github_app":null,"state_reason":"reopened"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1569701753","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/168#issuecomment-1569701753","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168","id":1569701753,"node_id":"IC_kwDOE_A9l85dj795","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-31T08:09:01Z","updated_at":"2023-05-31T08:09:01Z","author_association":"MEMBER","body":"As I just chased another OpenSSL (only in 3.0.1 -- triggered by old CI packaging) bug for a few hours now, I tend to also consider this issue moot for `oqsprovider`. We may leave it open for the fun of it, but it won't stop me from finally doing a release for `oqsprovider`. Objections, anyone?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1569701753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-31T08:09:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29425401550","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/139","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/139/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/139/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/139/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/139","id":1651739589,"node_id":"I_kwDOE_A9l85ic4vF","number":139,"title":"Re-enable offline build","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-04-03T10:00:02Z","updated_at":"2023-05-31T08:10:14Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The qsc-encoder integration requires an online connection even when only running `make`. This disables the possibility to develop code when offline. \r\n\r\nIs this something easily remedied, @bhess? If not, would you mind I set USE_ENCODING_LIB=OFF by default?\r\n\r\nAlso, what happens in case of a release? Will all required code be included or will this online dependency be permeated into a ZIP file?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/139/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1569703769","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/139#issuecomment-1569703769","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/139","id":1569703769,"node_id":"IC_kwDOE_A9l85dj8dZ","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-05-31T08:10:14Z","updated_at":"2023-05-31T08:10:14Z","author_association":"MEMBER","body":"Fixed by #131","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1569703769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-31T08:10:15Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29430461493","type":"IssueCommentEvent","actor":{"id":5923577,"login":"mouse07410","display_login":"mouse07410","gravatar_id":"","url":"https://api.github.com/users/mouse07410","avatar_url":"https://avatars.githubusercontent.com/u/5923577?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/168","id":1718872873,"node_id":"I_kwDOE_A9l85mc-sp","number":168,"title":"Bug when stopping provider on OSX","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2023-05-09T17:48:04Z","updated_at":"2023-05-31T11:21:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nOn a newly-prepared platform , I'm getting a ton of errors trying to run test-suite:\r\n```text\r\n.  .  .\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256f-simple] ___________________________________\r\n[gw11] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256f-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256f-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256f-simple -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-192f-robust] ___________________________________\r\n[gw4] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-192f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-192f-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-192f-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256s-simple] ___________________________________\r\n[gw2] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256s-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-simple -f\r\n\r\n___________________________________ test_sig[SPHINCS+-SHA256-128f-robust] ____________________________________\r\n[gw9] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHA256-128f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       output = helpers.run_subprocess(\r\n            [helpers.path_to_executable('kat_sig'), sig_name],\r\n        )\r\n\r\ntests/test_kat.py:29: \r\n.  .  .\r\n```\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone, build optimized version, as per README.\r\n2. Go to `build` subdirectory.\r\n3. `ninja run_tests`\r\n4. See error\r\n\r\n**Expected behavior**\r\nTests passing or being skipped, test-scripts not crashing.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.3.1 (a)\r\n - OpenSSL version: 3.2.0-dev\r\n - Compiler version used: Apple Clang \r\n - Build variables used:\r\n ```\r\nOPT=\"-DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release\"\r\nenv RUN_TESTS_PARALLEL_UPPER=FALSE cmake -GNinja .. -DOQS_USE_OPENSSL=ON ${OPT} -DCMAKE_INSTALL_PREFIX=\"${HOME}/openssl-3\"\r\n```\r\n - liboqs version: current main\r\n\r\n**Additional context**\r\nI hope you can point me at where/what in Python environment seems missing - maybe an older version of some module, or such...?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/timeline","performed_via_github_app":null,"state_reason":"reopened"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1570005592","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/168#issuecomment-1570005592","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168","id":1570005592,"node_id":"IC_kwDOE_A9l85dlGJY","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"created_at":"2023-05-31T11:21:57Z","updated_at":"2023-05-31T11:21:57Z","author_association":"NONE","body":"> We may leave it open for the fun of it, but it won't stop me from finally doing a release for oqsprovider. Objections, anyone?\r\n\r\nNo objections - let's release.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1570005592/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-31T11:21:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29438403235","type":"IssueCommentEvent","actor":{"id":5923577,"login":"mouse07410","display_login":"mouse07410","gravatar_id":"","url":"https://api.github.com/users/mouse07410","avatar_url":"https://avatars.githubusercontent.com/u/5923577?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/171","id":1724303930,"node_id":"I_kwDOE_A9l85mxso6","number":171,"title":"MacOS: fails to find liboqs","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2023-05-24T15:51:30Z","updated_at":"2023-05-31T15:54:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nTests should - but do not - look in `/opt/local/lib` for libraries like `liboqs.dylib`.\r\n\r\n```text\r\nLD_LIBRARY_PATH=/Users/ur20980/src/oqs-provider/.local/lib64\r\nOPENSSL_APP=/opt/local/libexec/openssl3/bin/openssl\r\nOPENSSL_CONF=/opt/local/libexec/openssl3/etc/openssl/openssl.cnf\r\nOPENSSL_MODULES=/opt/local/libexec/openssl3/lib/ossl-modules\r\nVersion information:\r\nOpenSSL 3.1.0 14 Mar 2023 (Library: OpenSSL 3.1.0 14 Mar 2023)\r\nlist: unable to load provider oqsprovider\r\nHint: use -provider-path option or OPENSSL_MODULES environment variable.\r\n40664950F87F0000:error:12800067:DSO support routines:dlfcn_load:could not load the shared library:crypto/dso/dso_dlfcn.c:118:filename(_build/lib/oqsprovider.dylib): dlopen(_build/lib/oqsprovider.dylib, 0x0002): Library not loaded: @rpath/liboqs.3.dylib\r\n  Referenced from: <DE45930A-2ABF-3032-BFF3-19F96D0064A6> /Users/ur20980/src/oqs-provider/_build/lib/oqsprovider.0.5.0-dev.dylib\r\n  Reason: tried: '/usr/local/lib/liboqs.3.dylib' (no such file), '/usr/lib/liboqs.3.dylib' (no such file, not in dyld cache)\r\n40664950F87F0000:error:12800067:DSO support routines:DSO_load:could not load the shared library:crypto/dso/dso_lib.c:152:\r\n40664950F87F0000:error:07880025:common libcrypto routines:provider_init:reason(524325):crypto/provider_core.c:904:name=oqsprovider\r\nBaseline openssl invocation failed. Exiting test.\r\n```\r\n\r\n`LD_LIBRARY_PATH` is not an answer, because (a) MacOS uses `DYLD_LIBRARY_PATH` and ignores `LD_LIBRARY_PATH`, and (b) setting that env var would limit where the loader searches for missing libraries, i.e., we'd risk that it would now find what's in `$DYLD_LIBRARY_PATH` but stops finding what's not there.\r\n\r\n**To Reproduce**\r\nSee above.\r\n\r\n**Expected behavior**\r\nTests passing, with all the relevant libraries located correctly.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.4\r\n - OpenSSL version: 3.2.0-dev and 3.1.0\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1570498713","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/171#issuecomment-1570498713","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/171","id":1570498713,"node_id":"IC_kwDOE_A9l85dm-iZ","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"created_at":"2023-05-31T15:54:40Z","updated_at":"2023-05-31T15:54:40Z","author_association":"NONE","body":"> >  my bigger concern is that DYLD_LIBRARY_PATH does not seem to be inherited by the scripts/runtests.sh\r\n>\r\n>I'm not sure I understand what is meant by \"inherited by\"?\r\n\r\nI mean that in the following example\r\n```bash\r\nDYLD_LIBRARY_PATH=\"/opt/local/lib:/usr/local/lib\"\r\nscripts/runtests.sh\r\n```\r\nI expect that script `script/runtests.sh` here would know that var `DYLD_LIBRARY_PATH` has value `/opt/local/lib:/usr/local/lib`. While in fact,  `script/runtests.sh` shows no awareness whatsoever of `DYLD_LIBRARY_PATH` and considers it empty.\r\n\r\n> But whatever, I think I now found a resolution  .  .  .\r\n\r\nNot quite. Your \"solution\" in the CircleCI seems to be bound to HomeBrew - which I don't find acceptable (not to mention that I use Macports, and Brew is less secure). \r\n\r\n>   .  .  .  using the `liboqs_DIR` environment variable directive seems to resolve  .  .  .\r\n\r\nThat probably should help - though it depends on how it is used. For MacOS, the surest thing would be to prepend that value to `DYLD_LIBRARY_PATH`. \r\n\r\n> Thanks for making me learn quite a bit about OSX, shared libs and installs and `cmake`: This definitely improved how things can be (separately) deployed -- and now also tested -- it just was tedious to do this so \"remotely\"...\r\n\r\nAlways happy to oblige! :-)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1570498713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-31T15:54:41Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29445029350","type":"IssueCommentEvent","actor":{"id":36664211,"login":"vt-alt","display_login":"vt-alt","gravatar_id":"","url":"https://api.github.com/users/vt-alt","avatar_url":"https://avatars.githubusercontent.com/u/36664211?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1483","id":1727813623,"node_id":"I_kwDOA-eq3c5m_Ff3","number":1483,"title":"40 tests fail on ARM32 (armv7hf): AssertionError: Got unexpected return code -4","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2023-05-26T15:13:38Z","updated_at":"2023-05-31T20:49:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"**Describe the bug**\r\nI try to build `0.8.0-rc1` for ALT Linux and found that 40 tests failed on armv7hf arch.\r\n```\r\n[00:00:48] + timeout 222 /usr/bin/ninja -j32 -C build run_tests\r\n[00:00:48] ninja: Entering directory `build'\r\n[00:00:49] [0/1] cd /usr/src/RPM/BUILD/liboqs-0.8.0.rc1 && /usr/bin/cmake -E env OQS_BUILD_DIR=/usr/src/RPM/BUILD/liboqs-0.8.0.rc1/build python3 -m pytest --verbose --numprocesses=auto --ignore=scripts/copy_from_upstream/repos\r\n[00:00:55] ============================= test session starts ==============================\r\n[00:00:55] platform linux -- Python 3.10.8, pytest-7.3.1, pluggy-1.0.0 -- /usr/bin/python3\r\n[00:00:55] cachedir: .pytest_cache\r\n[00:00:55] rootdir: /usr/src/RPM/BUILD/liboqs-0.8.0.rc1\r\n[00:00:55] plugins: xdist-3.3.1\r\n[00:00:55] created: 32/32 workers\r\n[00:00:55] 32 workers [402 items]\r\n...\r\n[00:01:30] =================================== FAILURES ===================================\r\n[00:01:30] ______________________ test_kem[Classic-McEliece-348864] _______________________\r\n[00:01:30] [gw26] linux -- Python 3.10.8 /usr/bin/python3\r\n[00:01:30] \r\n[00:01:30] kem_name = 'Classic-McEliece-348864'\r\n[00:01:30] \r\n[00:01:30]     @helpers.filtered_test\r\n[00:01:30]     @pytest.mark.parametrize('kem_name', helpers.available_kems_by_name())\r\n[00:01:30]     def test_kem(kem_name):\r\n[00:01:30]         kats = helpers.get_kats(\"kem\")\r\n[00:01:30]         if not(helpers.is_kem_enabled_by_name(kem_name)): pytest.skip('Not enabled')\r\n[00:01:30] >       helpers.run_subprocess( [helpers.path_to_executable('speed_kem'), kem_name, \"-f\"] )\r\n[00:01:30] \r\n[00:01:30] tests/test_speed.py:14: \r\n[00:01:30] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[00:01:30] \r\n[00:01:30] command = ['/usr/src/RPM/BUILD/liboqs-0.8.0.rc1/build/tests/speed_kem', 'Classic-McEliece-348864', '-f']\r\n[00:01:30] working_dir = '.'\r\n[00:01:30] env = {'G_BROKEN_FILENAMES': '1', 'HISTFILESIZE': '9999', 'HISTSIZE': '999', 'HOME': '/usr/src', ...}\r\n[00:01:30] expected_returncode = 0, input = None, ignore_returncode = False\r\n[00:01:30] \r\n[00:01:30]     def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n[00:01:30]         \"\"\"\r\n[00:01:30]         Helper function to run a shell command and report success/failure\r\n[00:01:30]         depending on the exit status of the shell command.\r\n[00:01:30]         \"\"\"\r\n[00:01:30]         env_ = os.environ.copy()\r\n[00:01:30]         if env is not None:\r\n[00:01:30]             env_.update(env)\r\n[00:01:30]         env = env_\r\n[00:01:30]     \r\n[00:01:30]         # Note we need to capture stdout/stderr from the subprocess,\r\n[00:01:30]         # then print it, which pytest will then capture and\r\n[00:01:30]         # buffer appropriately\r\n[00:01:30]         print(working_dir + \" > \" + \" \".join(command))\r\n[00:01:30]     \r\n[00:01:30]         result = subprocess.run(\r\n[00:01:30]                 command,\r\n[00:01:30]                 input=input,\r\n[00:01:30]                 stdout=subprocess.PIPE,\r\n[00:01:30]                 stderr=subprocess.STDOUT,\r\n[00:01:30]                 cwd=working_dir,\r\n[00:01:30]                 env=env,\r\n[00:01:30]             )\r\n[00:01:30]     \r\n[00:01:30]         if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n[00:01:30]             print(result.stdout.decode('utf-8'))\r\n[00:01:30] >           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\n[00:01:30] E           AssertionError: Got unexpected return code -4\r\n[00:01:30] \r\n[00:01:30] tests/helpers.py:42: AssertionError\r\n[00:01:30] ----------------------------- Captured stdout call -----------------------------\r\n[00:01:30] . > /usr/src/RPM/BUILD/liboqs-0.8.0.rc1/build/tests/speed_kem Classic-McEliece-348864 -f\r\n[00:01:30] \r\n...\r\n...\r\n[00:01:30] =========================== short test summary info ============================\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-348864] - AssertionErro...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-348864f] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-460896f] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-6960119] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-460896] - AssertionErro...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-6688128f] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-6960119f] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-8192128] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[HQC-192] - AssertionError: Got unexpecte...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[HQC-128] - AssertionError: Got unexpecte...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-8192128f] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Kyber512] - AssertionError: Got unexpect...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[HQC-256] - AssertionError: Got unexpecte...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Kyber768] - AssertionError: Got unexpect...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[sntrup761] - AssertionError: Got unexpec...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-640-AES] - AssertionError: Got ...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-640-SHAKE] - AssertionError: Go...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-976-AES] - AssertionError: Got ...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-1344-AES] - AssertionError: Got...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Dilithium3] - AssertionError: Got unexpe...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-1344-SHAKE] - AssertionError: G...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[FrodoKEM-976-SHAKE] - AssertionError: Go...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Dilithium5] - AssertionError: Got unexpe...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Falcon-512] - AssertionError: Got unexpe...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Dilithium2] - AssertionError: Got unexpe...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[Falcon-1024] - AssertionError: Got unexp...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-128s-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-128f-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-192f-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-192s-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-256f-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHA2-256s-simple] - AssertionEr...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-128f-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-128s-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-192f-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-256f-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-256s-simple] - AssertionE...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Classic-McEliece-6688128] - AssertionErr...\r\n[00:01:30] FAILED tests/test_speed.py::test_kem[Kyber1024] - AssertionError: Got unexpec...\r\n[00:01:30] FAILED tests/test_speed.py::test_sig[SPHINCS+-SHAKE-192s-simple] - AssertionE...\r\n[00:01:30] ================= 40 failed, 218 passed, 144 skipped in 40.35s =================\r\n```\r\n**Environment (please complete the following information):**\r\n - OS: `ALT Linux`\r\n - OpenSSL version `1.1.1t`\r\n - Compiler version used `gcc 12.2.1`\r\n - Build variables used `-DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=ON -DOQS_OPT_TARGET=generic`\r\n - liboqs version `0.8.0.rc1`\r\n\r\nFull build log is temporary available there https://git.altlinux.org/tasks/321944/build/100/armh/log\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1570932898","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1483#issuecomment-1570932898","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1483","id":1570932898,"node_id":"IC_kwDOA-eq3c5dooii","user":{"login":"vt-alt","id":36664211,"node_id":"MDQ6VXNlcjM2NjY0MjEx","avatar_url":"https://avatars.githubusercontent.com/u/36664211?v=4","gravatar_id":"","url":"https://api.github.com/users/vt-alt","html_url":"https://github.com/vt-alt","followers_url":"https://api.github.com/users/vt-alt/followers","following_url":"https://api.github.com/users/vt-alt/following{/other_user}","gists_url":"https://api.github.com/users/vt-alt/gists{/gist_id}","starred_url":"https://api.github.com/users/vt-alt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vt-alt/subscriptions","organizations_url":"https://api.github.com/users/vt-alt/orgs","repos_url":"https://api.github.com/users/vt-alt/repos","events_url":"https://api.github.com/users/vt-alt/events{/privacy}","received_events_url":"https://api.github.com/users/vt-alt/received_events","type":"User","site_admin":false},"created_at":"2023-05-31T20:49:34Z","updated_at":"2023-05-31T20:49:34Z","author_association":"CONTRIBUTOR","body":"I think our infrastructure admins will not agree to install some 3rd party out-of-tree kernel module on build farm (not even all in-tree modules, due to security reasons) just to run some tests.\r\n\r\nAlso (I tried to run but) tests do not work in aarch32 KVM virtual machine.\r\n\r\nSo the best approach sounds like to have configure-time option. (And by default to disable this on all ARM32.)\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1570932898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-05-31T20:49:34Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
