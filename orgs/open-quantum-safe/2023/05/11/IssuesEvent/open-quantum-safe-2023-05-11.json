{"id":"28990412392","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/442","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/442/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/442/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/442/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/442","id":1705058538,"node_id":"I_kwDOA_fpb85loSDq","number":442,"title":"Build failure on platforms running OpenSSL3 by default","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-05-11T04:49:52Z","updated_at":"2023-05-11T04:49:52Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"After https://github.com/open-quantum-safe/liboqs/pull/1431 landed, `liboqs`gets built with OpenSSL3 symbols when OpenSSL3 is installed by default on the build platform. In consequence, these symbols cannot be found when building `oqs-openssl111` using that `liboqs` (as these symbols are not present in any OpenSSL111 fork).\r\n\r\n--> I'd now _strongly_ urge to declare this fork deprecated as the build becomes somewhat convoluted (or surprising):\r\n\r\n- (non-oqs) OpenSSL111 must be installed\r\n- liboqs must be built against that OpenSSL111and installed to oqs-openssl111\r\n- only then can a build of oqs-openssl111 succeed\r\n\r\nAlternatively, `liboqs` _must_ be built with `-DOQS_USE_OPENSSL=OFF` -- which I'd call at least \"surprising\" for a build of `oqs-openssl`.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/442/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-05-11T04:49:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29001692449","type":"IssuesEvent","actor":{"id":1076655,"login":"Utopiah","display_login":"Utopiah","gravatar_id":"","url":"https://api.github.com/users/Utopiah","avatar_url":"https://avatars.githubusercontent.com/u/1076655?"},"repo":{"id":218087071,"name":"open-quantum-safe/oqs-demos","url":"https://api.github.com/repos/open-quantum-safe/oqs-demos"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/200","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/200/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/200/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/200/events","html_url":"https://github.com/open-quantum-safe/oqs-demos/issues/200","id":1705780880,"node_id":"I_kwDODP--n85lrCaQ","number":200,"title":"Path to a NodeJS demo","user":{"login":"Utopiah","id":1076655,"node_id":"MDQ6VXNlcjEwNzY2NTU=","avatar_url":"https://avatars.githubusercontent.com/u/1076655?v=4","gravatar_id":"","url":"https://api.github.com/users/Utopiah","html_url":"https://github.com/Utopiah","followers_url":"https://api.github.com/users/Utopiah/followers","following_url":"https://api.github.com/users/Utopiah/following{/other_user}","gists_url":"https://api.github.com/users/Utopiah/gists{/gist_id}","starred_url":"https://api.github.com/users/Utopiah/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Utopiah/subscriptions","organizations_url":"https://api.github.com/users/Utopiah/orgs","repos_url":"https://api.github.com/users/Utopiah/repos","events_url":"https://api.github.com/users/Utopiah/events{/privacy}","received_events_url":"https://api.github.com/users/Utopiah/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-05-11T12:58:46Z","updated_at":"2023-05-11T12:58:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The servers provided, in particular reverse proxies like nginx, cover most Web services.\r\n\r\nStill numerous ones rely on NodeJS directly via popular framework like Express [itself allowing some customization](https://node-security.com/posts/express-https-server/#hardened-tls-configuration).\r\n\r\nMy understanding is that NodeJS ships with OpenSSL and defaults to it with [its cipher suite that be customized](https://nodejs.org/api/tls.html#modifying-the-default-tls-cipher-suite).\r\n\r\nConsequently I believe a demo could be made by\r\n\r\n1. compiling open-quantum-safe/openssl\r\n2. using a binary compatible NodeJS version and force to use the customized openssl via [LD_LIBRARY_PATH](http://man7.org/linux/man-pages/man8/ld.so.8.html) knowing the [related maintaining position](https://github.com/nodejs/node/blob/main/doc/contributing/maintaining/maintaining-openssl.md) and that numerous issues have been opened on the topic so to verify via `node -pe process.versions`\r\n3. build NodeJS dynamically linking oqs openssl (via e.g the [FIPS support example](https://github.com/nodejs/node/blob/main/BUILDING.md#fips-support-when-dynamically-linking-openssl) )\r\n4. run the Express demo limited to a specific cipher with e.g `node --tls-cipher-list='Kyber512' server.js` then open it with oqs chromium\r\n\r\nDoes this seem like a realistic path?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-demos/issues/200/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-05-11T12:58:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
