{"id":"26623096395","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/85","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/85/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/85/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/85/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/85","id":1538247817,"node_id":"I_kwDOETYnOM5br8yJ","number":85,"title":"Investigate x64 AWS failures","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"assignees":[{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2023-01-18T15:52:46Z","updated_at":"2023-01-24T12:45:05Z","closed_at":"2023-01-24T12:45:05Z","author_association":"MEMBER","active_lock_reason":null,"body":null,"reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/85/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/85/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-01-24T12:45:05Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26623247586","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/87","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/87/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/87/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/87/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/87","id":1554927897,"node_id":"I_kwDOETYnOM5crlEZ","number":87,"title":"Reference code running as fast as optimized code","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-01-24T12:51:22Z","updated_at":"2023-01-24T12:51:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/open-quantum-safe/liboqs/pull/1361 changed the default build library options to run optimized code. Thus, the designation \"-ref\" for \"reference implementation\" as being the `liboqs` default build option is no longer valid. This means, \"-ref\" must now be explicitly built with \"-DOQS_DIST_BUILD=OFF\".","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/87/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/87/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-01-24T12:51:22Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26628708130","type":"IssuesEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/32","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/32/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/32/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/32/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/32","id":1019631976,"node_id":"I_kwDOE_A9l848xllo","number":32,"title":"Interoperability with oqs-openssl?","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-10-07T05:29:51Z","updated_at":"2023-01-24T16:15:15Z","closed_at":"2023-01-24T16:15:14Z","author_association":"MEMBER","active_lock_reason":null,"body":"Unlike OpenSSL 1.1.1, [OpenSSL3.0 permits EVP keys that do not have both public and private key material](https://github.com/openssl/openssl/issues/16704). Therefore, supporting only \"half\" PK key pairs as EVP keys makes sense. This also allows for loading (and storing) \"true\" private EVP OQS keys now. This in turn in in contrast with the oqs-openssl [implementation of storing (persisting) public key material together with private key material](https://github.com/open-quantum-safe/openssl/blob/8c93484150cb30debce06db7289c563d97eaafdb/crypto/ec/oqs_meth.c#L1037-L1038).\r\n\r\nThis issue is about discussing whether we should (also) do this in oqs-provider, ensuring interoperability with oqs-openssl-generated (persistent) data or whether we want to be more efficient and only store private key material in oqs-provider EVP keys, but thus breaking interoperability between oqs-provider and oqs-openssl(1.1.1). \r\n\r\nThe question also will be how to match private and public keys via the provider: Simply comparing key material (as is possible now), doing actual sign/verify operations, or some \"hybrid\" (hashing) based approach. Example code currently [here](https://github.com/open-quantum-safe/oqs-provider/blob/12fc72cd21cf6735016aff58d5fa40ee6b4fb6b2/oqsprov/oqs_kmgmt.c#L101-L145).\r\n\r\nAlready extending the feature set is that oqs-provider supports more hybrid KEM mechanisms. But for full TLS signature operations oqs-openssl will remain more relevant until https://github.com/openssl/openssl/issues/10512 is resolved thus making interoperability between oqs-openssl and oqs-provider desirable for users (of most functionality and future-proof OpenSSL).\r\n\r\nThoughts welcome, @dstebila @christianpaquin ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/32/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/32/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-01-24T16:15:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26630951191","type":"IssuesEvent","actor":{"id":56026339,"login":"drouhana","display_login":"drouhana","gravatar_id":"","url":"https://api.github.com/users/drouhana","avatar_url":"https://avatars.githubusercontent.com/u/56026339?"},"repo":{"id":179335992,"name":"open-quantum-safe/boringssl","url":"https://api.github.com/repos/open-quantum-safe/boringssl"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82","repository_url":"https://api.github.com/repos/open-quantum-safe/boringssl","labels_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/comments","events_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/events","html_url":"https://github.com/open-quantum-safe/boringssl/issues/82","id":1283787744,"node_id":"I_kwDOCrBzOM5MhQvg","number":82,"title":"Porting BoringSSL-OQS Fork Into Envoy","user":{"login":"drouhana","id":56026339,"node_id":"MDQ6VXNlcjU2MDI2MzM5","avatar_url":"https://avatars.githubusercontent.com/u/56026339?v=4","gravatar_id":"","url":"https://api.github.com/users/drouhana","html_url":"https://github.com/drouhana","followers_url":"https://api.github.com/users/drouhana/followers","following_url":"https://api.github.com/users/drouhana/following{/other_user}","gists_url":"https://api.github.com/users/drouhana/gists{/gist_id}","starred_url":"https://api.github.com/users/drouhana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drouhana/subscriptions","organizations_url":"https://api.github.com/users/drouhana/orgs","repos_url":"https://api.github.com/users/drouhana/repos","events_url":"https://api.github.com/users/drouhana/events{/privacy}","received_events_url":"https://api.github.com/users/drouhana/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-06-24T13:57:28Z","updated_at":"2023-01-24T17:47:30Z","closed_at":"2023-01-24T17:47:30Z","author_association":"NONE","active_lock_reason":null,"body":"Hi everyone, firstly apologies if this is the wrong place to open a discussion on this.\r\n\r\n## What I'm Trying To Do\r\n\r\nI'm currently working on an open source implementation of a post-quantum enabled service mesh. This effort is in 3 parts:\r\n\r\n- Nginx-oqs (finished in march of this year)\r\n- Envoy (in progress)\r\n- Istio (contingent on completion of envoy)\r\n\r\nNginx was fairly straightforward to port the OpenSSL-OQS fork, but Envoy is giving me some trouble. Envoy is incompatible with OpenSSL (there is a [team](https://github.com/envoyproxy/envoy-openssl) working on fixing this currently), so I had to use the BoringSSL-OQS fork  \r\n  \r\n  \r\n## How I'm Doing it\r\n\r\nTo [update BoringSSL for envoy](https://github.com/envoyproxy/envoy/blob/11d1a0f002e1742c72b0c41e6e640f6420625371/bazel/repository_locations.bzl#L75), specifically the \"main-with-bazel\" branch must be used:\r\n\r\n![Screen Shot 2022-06-24 at 07 31 31](https://user-images.githubusercontent.com/56026339/175546317-c5fad7b1-ab35-4314-a938-ef6542e12bee.png)\r\n\r\nThe last updated Boringssl-OQS main-with-bazel was from 2019, so I [forked it](https://github.com/drouhana/boringssl/tree/master-with-bazel) and added the siphash.h file needed by Envoy.\r\n\r\nA few other modifications I needed to make in the [Envoy fork](https://github.com/drouhana/envoy-fork) I'm modifying:\r\n\r\n- Disable jwt-auth\r\n- Disable QUIC to side-step Quiche compatibility issues\r\n\r\nEnvoy successfully builds with my modifications\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175549746-efd0b7b1-e412-476e-b65e-72e9d19c054d.png)\r\n![image](https://user-images.githubusercontent.com/56026339/175549767-c2a2e67d-9da0-4936-9c3f-e060573becf0.png)\r\n\r\nHere are the commands I used to generate the self-signed CA cert and the server cert as per the instructions on the OpenSSL-OQS page. I have tried them with all combinations of standard/OQS/hybrid for both the CA cert and the server cert\r\n\r\n\r\n    /usr/local/openssl/apps/openssl req -x509 -new -newkey rsa:2048 -keyout root_CA.key -out root_CA.crt -nodes -subj \"/CN=oqstest CA\" -days 365 -config /usr/local/openssl/apps/openssl.cnf\r\n  \r\n    /usr/local/openssl/apps/openssl req -new -newkey rsa3072_dilithium2 -keyout serverkey.key -out servercsr.csr -nodes -subj \"/CN=oqstest server\" -config /usr/local/openssl/apps/openssl.cnf\r\n   \r\n    /usr/local/openssl/apps/openssl x509 -req -in servercsr.csr -out servercert.crt -CA root_CA.crt -CAkey root_CA.key -CAcreateserial -days 365  \r\n\r\n\r\n## How It's Working: Standard RSA\r\n\r\nI can confirm my build works by passing RSA certs and keys generated using the OQS-OpenSSL fork. The HTTPS server successfully performs the TLS handshake, and I am able to reach HTTP upstream.\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175548753-138d6dbe-2ae8-4a91-8319-99e9b4b9c8b3.png)\r\n\r\n\r\n## How It's Not Working 1: \"Cannot Load Certificate Chain\"\r\n\r\nIf I pass the (hybrid or OQS) server cert to Envoy, I get this error:\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175548131-5b90e05d-e5d1-4c70-bd53-ad5fc37dc99b.png)\r\n\r\nI have tracked it down to this portion of the Envoy source code:\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175549103-476f1386-8163-4122-acff-48a287353550.png)\r\n\r\nHere is a diagram of the functions and their locations in the Envoy and BoringSSL source code:\r\n\r\n![image](https://user-images.githubusercontent.com/56026339/175549228-3ebb0ffb-365a-4eb0-8cd6-307984d1a67d.png)\r\n\r\n\r\n## How It's Not Working 2: \"Unsupported Algorithm\"\r\n\r\nIf I pass the (RSA) root CA cert to Envoy with the (hybrid or OQS) key, I am faced with this error instead\r\n\r\n![Screenshot_f](https://user-images.githubusercontent.com/56026339/175549342-ee7caf71-95fe-4fcb-9227-6b4343dc16c5.png)\r\n\r\n## Questions\r\n\r\nIf anyone is curious and wants to reproduce this, the instructions are on [this repo](https://github.com/Post-Quantum-Mesh/envoy-oqs) I have set up.\r\n\r\nAt this point, I feel like there may be something catastrophically important I'm missing about either BoringSSL-OQS, Envoy, or just software development in general.\r\n\r\nI would love any and all feedback/advice/thoughts/criticism about why this may be happening, and what I can do to fix this.\r\n\r\nSpecifically, as the last BoringSSL-OQS update to the main-with-bazel branch was in 2019, I would love to help update that if possible","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/boringssl/issues/82/timeline","performed_via_github_app":null,"state_reason":"completed"}},"public":true,"created_at":"2023-01-24T17:47:31Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
