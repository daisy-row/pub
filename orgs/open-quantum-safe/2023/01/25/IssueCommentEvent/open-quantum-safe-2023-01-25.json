{"id":"26644908241","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":66578799,"name":"open-quantum-safe/openssl","url":"https://api.github.com/repos/open-quantum-safe/openssl"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388","repository_url":"https://api.github.com/repos/open-quantum-safe/openssl","labels_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/comments","events_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/events","html_url":"https://github.com/open-quantum-safe/openssl/issues/388","id":1336491721,"node_id":"I_kwDOA_fpb85PqT7J","number":388,"title":"Hybrid key exchange with x25519","user":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"labels":[{"id":431027944,"node_id":"MDU6TGFiZWw0MzEwMjc5NDQ=","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/question","name":"question","color":"cc317c","default":true,"description":"Further information is requested"},{"id":1135734043,"node_id":"MDU6TGFiZWwxMTM1NzM0MDQz","url":"https://api.github.com/repos/open-quantum-safe/openssl/labels/OpenSSL-111","name":"OpenSSL-111","color":"c918c0","default":false,"description":"Changes specific to OQS-OpenSSL_1_1_1-stable branch"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2022-08-11T21:07:25Z","updated_at":"2023-01-25T09:13:21Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Do we have support for hybrid key exchange with x25519?  Looking at https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/oqs-template/generate.yml#L75, for example, we list a NID for x25519+kyber512 in the configuration file, but then searching the generated code in the `ssl` directory or in https://github.com/open-quantum-safe/openssl/blob/OQS-OpenSSL_1_1_1-stable/qsc.h, I don't see any reference to x25519 with Kyber or the specific NID in question.  @baentsch any idea?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1403300186","html_url":"https://github.com/open-quantum-safe/openssl/issues/388#issuecomment-1403300186","issue_url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/388","id":1403300186,"node_id":"IC_kwDOA_fpb85TpKla","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-01-25T09:13:21Z","updated_at":"2023-01-25T09:13:21Z","author_association":"MEMBER","body":"@pixitha Just looked at this issue again. Can you provide a rationale for this? Who would benefit from this? Implementing this with oqs-openssl111 would require way too much work as per the above. Using [oqs-provider](https://github.com/open-quantum-safe/oqs-provider) it would be possible -- but only if disabling the more logical hybrid KEMs using the [CLOUDFLARE define](https://github.com/open-quantum-safe/oqs-provider/pull/78) : This works but is undocumented as it is so far outside a \"standards approach\" that I don't exactly feel comfortable standing it up as a test server.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/openssl/issues/comments/1403300186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-01-25T09:13:21Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26645323726","type":"IssueCommentEvent","actor":{"id":16102047,"login":"jameshoweee","display_login":"jameshoweee","gravatar_id":"","url":"https://api.github.com/users/jameshoweee","avatar_url":"https://avatars.githubusercontent.com/u/16102047?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1367","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1367/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1367/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1367/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1367","id":1555343031,"node_id":"PR_kwDOA-eq3c5Icehc","number":1367,"title":"Update README.md","user":{"login":"jameshoweee","id":16102047,"node_id":"MDQ6VXNlcjE2MTAyMDQ3","avatar_url":"https://avatars.githubusercontent.com/u/16102047?v=4","gravatar_id":"","url":"https://api.github.com/users/jameshoweee","html_url":"https://github.com/jameshoweee","followers_url":"https://api.github.com/users/jameshoweee/followers","following_url":"https://api.github.com/users/jameshoweee/following{/other_user}","gists_url":"https://api.github.com/users/jameshoweee/gists{/gist_id}","starred_url":"https://api.github.com/users/jameshoweee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jameshoweee/subscriptions","organizations_url":"https://api.github.com/users/jameshoweee/orgs","repos_url":"https://api.github.com/users/jameshoweee/repos","events_url":"https://api.github.com/users/jameshoweee/events{/privacy}","received_events_url":"https://api.github.com/users/jameshoweee/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-01-24T17:03:42Z","updated_at":"2023-01-25T09:31:46Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/1367","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1367","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/1367.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/1367.patch","merged_at":null},"body":"In order to install liboqs-python I needed to install this package in order to run setup.py on my Mac M1\r\n\r\n<!-- Please give a brief explanation of the purpose of this pull request. -->\r\n\r\n<!-- Does this PR resolve any issue?  If so, please reference it using automatic-closing keywords like \"Fixes #123.\" -->\r\n\r\n<!-- Please answer the following questions to help manage version and changes across projects. -->\r\n\r\n* [ ] Does this PR change the input/output behaviour of a cryptographic algorithm (i.e., does it change known answer test values)?  (If so, a version bump will be required from *x.y.z* to *x.(y+1).0*.)\r\n* [ ] Does this PR change the the list of algorithms available -- either adding, removing, or renaming? Does this PR otherwise change an API? (If so, PRs in [oqs-provider](https://github.com/open-quantum-safe/oqs-provider), [OQS-OpenSSL](https://github.com/open-quantum-safe/openssl), [OQS-BoringSSL](https://github.com/open-quantum-safe/boringssl), and [OQS-OpenSSH](https://github.com/open-quantum-safe/openssh) will also need to be ready for review and merge by the time this is merged.)\r\n\r\n<!-- Once your pull request is ready for review and passing continuous integration tests, please convert from a draft PR to a normal PR, and request a review from one of the OQS core team members. -->\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1367/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1403324966","html_url":"https://github.com/open-quantum-safe/liboqs/pull/1367#issuecomment-1403324966","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1367","id":1403324966,"node_id":"IC_kwDOA-eq3c5TpQom","user":{"login":"jameshoweee","id":16102047,"node_id":"MDQ6VXNlcjE2MTAyMDQ3","avatar_url":"https://avatars.githubusercontent.com/u/16102047?v=4","gravatar_id":"","url":"https://api.github.com/users/jameshoweee","html_url":"https://github.com/jameshoweee","followers_url":"https://api.github.com/users/jameshoweee/followers","following_url":"https://api.github.com/users/jameshoweee/following{/other_user}","gists_url":"https://api.github.com/users/jameshoweee/gists{/gist_id}","starred_url":"https://api.github.com/users/jameshoweee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jameshoweee/subscriptions","organizations_url":"https://api.github.com/users/jameshoweee/orgs","repos_url":"https://api.github.com/users/jameshoweee/repos","events_url":"https://api.github.com/users/jameshoweee/events{/privacy}","received_events_url":"https://api.github.com/users/jameshoweee/received_events","type":"User","site_admin":false},"created_at":"2023-01-25T09:31:46Z","updated_at":"2023-01-25T09:31:46Z","author_association":"NONE","body":"I agree but the python installation instructions link to this repo for the installing ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1403324966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-01-25T09:31:46Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"26658566846","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/86","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/86/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/86/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/86/events","html_url":"https://github.com/open-quantum-safe/profiling/pull/86","id":1552119577,"node_id":"PR_kwDOETYnOM5IRtI8","number":86,"title":"hybrid KEM handshaking added","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-01-22T13:29:40Z","updated_at":"2023-01-25T18:56:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/pulls/86","html_url":"https://github.com/open-quantum-safe/profiling/pull/86","diff_url":"https://github.com/open-quantum-safe/profiling/pull/86.diff","patch_url":"https://github.com/open-quantum-safe/profiling/pull/86.patch","merged_at":null},"body":"Fixes #83 \r\nFixes #87\r\n\r\nHOWEVER, please note that I did as discussed in https://github.com/open-quantum-safe/profiling/issues/83#issuecomment-1345546025. ~The consequence of which is that all Sphincs+ tests are gone because oqs-openssl111 only activates \"robust\" variants~.\r\n\r\nSo before declaring this Ready for Review, @christianpaquin here's the question: Do we want to (also/alternatively) enable \"simple\" Sphincs+ variants in oqs-openssl111 instead? Upstream or only in profiling? Or shall we keep the \"robust\" variants as before (knowing they won't be standardized)?\r\n\r\nEdit/Add: Option 1 (changing sphincs+ std algs) implemented in https://github.com/open-quantum-safe/openssl/pull/425. If that is merged, I'll complete this PR suitably.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/86/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/86/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1404087658","html_url":"https://github.com/open-quantum-safe/profiling/pull/86#issuecomment-1404087658","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/86","id":1404087658,"node_id":"IC_kwDOETYnOM5TsK1q","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2023-01-25T18:56:15Z","updated_at":"2023-01-25T18:56:15Z","author_association":"NONE","body":"Regarding Sphincs+, I'm happy with whatever makes the test simpler or save resources, with a bias on preferring the NIST preferred option. I think the priority should by KEM-based hybrid, so happy to get this merged in, with the option of tweaking the hybrid sigs later.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1404087658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-01-25T18:56:16Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
