{"id":"29559343804","type":"IssuesEvent","actor":{"id":65674651,"login":"mabarger","display_login":"mabarger","gravatar_id":"","url":"https://api.github.com/users/mabarger","avatar_url":"https://avatars.githubusercontent.com/u/65674651?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1490","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1490/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1490/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1490/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1490","id":1743620584,"node_id":"I_kwDOA-eq3c5n7Yno","number":1490,"title":"Add option to exclude the compilation of OQS_randombytes_system() when a custom algorithm is specified","user":{"login":"mabarger","id":65674651,"node_id":"MDQ6VXNlcjY1Njc0NjUx","avatar_url":"https://avatars.githubusercontent.com/u/65674651?v=4","gravatar_id":"","url":"https://api.github.com/users/mabarger","html_url":"https://github.com/mabarger","followers_url":"https://api.github.com/users/mabarger/followers","following_url":"https://api.github.com/users/mabarger/following{/other_user}","gists_url":"https://api.github.com/users/mabarger/gists{/gist_id}","starred_url":"https://api.github.com/users/mabarger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mabarger/subscriptions","organizations_url":"https://api.github.com/users/mabarger/orgs","repos_url":"https://api.github.com/users/mabarger/repos","events_url":"https://api.github.com/users/mabarger/events{/privacy}","received_events_url":"https://api.github.com/users/mabarger/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-06-06T10:58:59Z","updated_at":"2023-06-06T10:58:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Compiling `liboqs` for systems without a (full) standard library (e.g. for embedded systems) causes problems at the moment, as `liboqs` uses multiple library functions (e.g. `fopen`), which might not be available on these systems.\r\n\r\nSome of these calls are located in the function(s) `OQS_randombytes_system()` in [rand.c](https://github.com/open-quantum-safe/liboqs/blob/main/src/common/rand/rand.c) and will also be compiled  when providing a custom randombytes algorithm with `OQS_randombytes_custom_algorithm()`. Unless I am missing something the compilation of `OQS_randombytes_system()` is not necessary when a custom algorithm is provided and removing them from the compilation process could ease future use and integration.\r\n\r\nI propose adding a new configuration option, which will enable/disable compilation of these functions by wrapping them in a preprocessor macro similar to this:\r\n\r\n```C\r\n@@ -35,7 +35,11 @@ void OQS_randombytes_openssl(uint8_t *random_array, size_t bytes_to_read);\r\n // Use OpenSSL's RAND_bytes as the default PRNG\r\n static void (*oqs_randombytes_algorithm)(uint8_t *, size_t) = &OQS_randombytes_openssl;\r\n #else\r\n+#if !defined(OQS_NO_STDLIB)\r\n static void (*oqs_randombytes_algorithm)(uint8_t *, size_t) = &OQS_randombytes_system;\r\n+#else\r\n+static void (*oqs_randombytes_algorithm)(uint8_t *, size_t) = NULL;\r\n+#endif\r\n #endif\r\n OQS_API OQS_STATUS OQS_randombytes_switch_algorithm(const char *algorithm) {\r\n        if (0 == strcasecmp(OQS_RAND_alg_system, algorithm)) {\r\n@@ -64,6 +68,7 @@ OQS_API void OQS_randombytes(uint8_t *random_array, size_t bytes_to_read) {\r\n        oqs_randombytes_algorithm(random_array, bytes_to_read);\r\n }\r\n \r\n+#if !defined(OQS_NO_STDLIB)\r\n #if !defined(_WIN32)\r\n #if defined(OQS_HAVE_GETENTROPY)\r\n void OQS_randombytes_system(uint8_t *random_array, size_t bytes_to_read) {\r\n@@ -120,6 +125,7 @@ void OQS_randombytes_system(uint8_t *random_array, size_t bytes_to_read) {\r\n        CryptReleaseContext(hCryptProv, 0);\r\n }\r\n #endif\r\n+#endif\r\n \r\n #ifdef OQS_USE_OPENSSL\r\n #define OQS_RAND_POLL_RETRY 3 // in case failure to get randomness is a temporary problem, allow some repeats\r\n```\r\n\r\nThis could also be extended to other library calls to improve the usability of `liboqs` in different settings.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1490/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-06-06T10:59:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29573513059","type":"IssuesEvent","actor":{"id":285829,"login":"stv0g","display_login":"stv0g","gravatar_id":"","url":"https://api.github.com/users/stv0g","avatar_url":"https://avatars.githubusercontent.com/u/285829?"},"repo":{"id":215630242,"name":"open-quantum-safe/liboqs-go","url":"https://api.github.com/repos/open-quantum-safe/liboqs-go"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/events","html_url":"https://github.com/open-quantum-safe/liboqs-go/issues/25","id":1744539786,"node_id":"I_kwDODNpBos5n-5CK","number":25,"title":"Link liboqs statically","user":{"login":"stv0g","id":285829,"node_id":"MDQ6VXNlcjI4NTgyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/285829?v=4","gravatar_id":"","url":"https://api.github.com/users/stv0g","html_url":"https://github.com/stv0g","followers_url":"https://api.github.com/users/stv0g/followers","following_url":"https://api.github.com/users/stv0g/following{/other_user}","gists_url":"https://api.github.com/users/stv0g/gists{/gist_id}","starred_url":"https://api.github.com/users/stv0g/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stv0g/subscriptions","organizations_url":"https://api.github.com/users/stv0g/orgs","repos_url":"https://api.github.com/users/stv0g/repos","events_url":"https://api.github.com/users/stv0g/events{/privacy}","received_events_url":"https://api.github.com/users/stv0g/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-06-06T20:21:52Z","updated_at":"2023-06-06T20:21:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Does liboqs-go support static linking against liboqs?\r\n\r\nI would like to build a statically linked Go executable without external depdendencies..","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-go/issues/25/timeline","performed_via_github_app":null,"state_reason":null}},"public":true,"created_at":"2023-06-06T20:21:52Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
