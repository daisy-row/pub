{"id":"30053822553","type":"IssueCommentEvent","actor":{"id":30979983,"login":"Muzosh","display_login":"Muzosh","gravatar_id":"","url":"https://api.github.com/users/Muzosh","avatar_url":"https://avatars.githubusercontent.com/u/30979983?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/194","id":1769543757,"node_id":"I_kwDOE_A9l85peRhN","number":194,"title":"Implement KEM en-/decoders","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-06-22T12:06:33Z","updated_at":"2023-06-28T04:25:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In #123, PKCS#8 encoders for Dilithium, Falcon and Sphincs+ were added.\r\nHowever, the initial message also links draft for Kyber. Why was it not included in the PR (I can't see any mention of Kyber in Files changed)?\r\n\r\nIn https://github.com/open-quantum-safe/oqs-provider/issues/84#issuecomment-1296125057, @baentsch mentions that KEM algorithms do not need to have encoder/decoder functions. What if I want to use openssl to generate Kyber1024 keypair? I didn't find a way to do it, even in raw form.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1610690486","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/194#issuecomment-1610690486","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194","id":1610690486,"node_id":"IC_kwDOE_A9l85gAS-2","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"created_at":"2023-06-28T04:25:23Z","updated_at":"2023-06-28T04:25:23Z","author_association":"NONE","body":"@baentsch you mentioned CMS with KEM as an example. I'm actually working on a PQ version of something very similar: [CDOC](https://www.id.ee/en/article/bdoc-cdoc-and-asice-digidoc-file-formats-4/). In the reference implementation of [CDOC2](https://github.com/open-eid/cdoc2-java-ref-impl) (new version that I'm trying to make quantum-safe), they are currently using ECDH and RSA for creating Content Encryption Key for recipients. Therefore KEM encoders might come in handy to serialize Kyber and other PQ-KEM public keys in different key distribution systems.\r\n\r\nI have other ways on how to generate and store Kyber keys myself for now, so there is no rush. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1610690486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-28T04:25:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30053888472","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/194","id":1769543757,"node_id":"I_kwDOE_A9l85peRhN","number":194,"title":"Implement KEM en-/decoders","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-06-22T12:06:33Z","updated_at":"2023-06-28T04:30:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In #123, PKCS#8 encoders for Dilithium, Falcon and Sphincs+ were added.\r\nHowever, the initial message also links draft for Kyber. Why was it not included in the PR (I can't see any mention of Kyber in Files changed)?\r\n\r\nIn https://github.com/open-quantum-safe/oqs-provider/issues/84#issuecomment-1296125057, @baentsch mentions that KEM algorithms do not need to have encoder/decoder functions. What if I want to use openssl to generate Kyber1024 keypair? I didn't find a way to do it, even in raw form.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1610701519","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/194#issuecomment-1610701519","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194","id":1610701519,"node_id":"IC_kwDOE_A9l85gAVrP","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-06-28T04:30:57Z","updated_at":"2023-06-28T04:30:57Z","author_association":"MEMBER","body":"Thanks for letting us know.\r\n\r\n> KEM encoders might come in handy to serialize Kyber and other PQ-KEM public keys\r\n\r\nAgreed.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1610701519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-28T04:30:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30053906744","type":"IssueCommentEvent","actor":{"id":30979983,"login":"Muzosh","display_login":"Muzosh","gravatar_id":"","url":"https://api.github.com/users/Muzosh","avatar_url":"https://avatars.githubusercontent.com/u/30979983?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/194","id":1769543757,"node_id":"I_kwDOE_A9l85peRhN","number":194,"title":"Implement KEM en-/decoders","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-06-22T12:06:33Z","updated_at":"2023-06-28T04:32:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"In #123, PKCS#8 encoders for Dilithium, Falcon and Sphincs+ were added.\r\nHowever, the initial message also links draft for Kyber. Why was it not included in the PR (I can't see any mention of Kyber in Files changed)?\r\n\r\nIn https://github.com/open-quantum-safe/oqs-provider/issues/84#issuecomment-1296125057, @baentsch mentions that KEM algorithms do not need to have encoder/decoder functions. What if I want to use openssl to generate Kyber1024 keypair? I didn't find a way to do it, even in raw form.\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1610702841","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/194#issuecomment-1610702841","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/194","id":1610702841,"node_id":"IC_kwDOE_A9l85gAV_5","user":{"login":"Muzosh","id":30979983,"node_id":"MDQ6VXNlcjMwOTc5OTgz","avatar_url":"https://avatars.githubusercontent.com/u/30979983?v=4","gravatar_id":"","url":"https://api.github.com/users/Muzosh","html_url":"https://github.com/Muzosh","followers_url":"https://api.github.com/users/Muzosh/followers","following_url":"https://api.github.com/users/Muzosh/following{/other_user}","gists_url":"https://api.github.com/users/Muzosh/gists{/gist_id}","starred_url":"https://api.github.com/users/Muzosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Muzosh/subscriptions","organizations_url":"https://api.github.com/users/Muzosh/orgs","repos_url":"https://api.github.com/users/Muzosh/repos","events_url":"https://api.github.com/users/Muzosh/events{/privacy}","received_events_url":"https://api.github.com/users/Muzosh/received_events","type":"User","site_admin":false},"created_at":"2023-06-28T04:32:36Z","updated_at":"2023-06-28T04:32:36Z","author_association":"NONE","body":"> I have other ways on how to generate and store Kyber keys myself for now, so there is no rush.\r\n\r\nMeaning that I can wait for more use cases from others, so it becomes more relevant and worth.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1610702841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-28T04:32:37Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30059295196","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1371","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1371/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1371/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1371/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1371","id":1560857473,"node_id":"I_kwDOA-eq3c5dCMuB","number":1371,"title":"some error when installing liboqs in windows Using MSYS2 and Mingw","user":{"login":"k-Artin","id":120385775,"node_id":"U_kgDOByzw7w","avatar_url":"https://avatars.githubusercontent.com/u/120385775?v=4","gravatar_id":"","url":"https://api.github.com/users/k-Artin","html_url":"https://github.com/k-Artin","followers_url":"https://api.github.com/users/k-Artin/followers","following_url":"https://api.github.com/users/k-Artin/following{/other_user}","gists_url":"https://api.github.com/users/k-Artin/gists{/gist_id}","starred_url":"https://api.github.com/users/k-Artin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k-Artin/subscriptions","organizations_url":"https://api.github.com/users/k-Artin/orgs","repos_url":"https://api.github.com/users/k-Artin/repos","events_url":"https://api.github.com/users/k-Artin/events{/privacy}","received_events_url":"https://api.github.com/users/k-Artin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":22,"created_at":"2023-01-28T13:26:20Z","updated_at":"2023-06-28T09:11:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Discussed in https://github.com/orgs/open-quantum-safe/discussions/1370\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **k-Artin** January 28, 2023</sup>\r\nhello \r\nI am getting the following errors when I install liboqs on windows with mingw32.\r\n\r\n$ ninja -j 4\r\n[1118/1132] Building C object tests/CMakeFiles/speed_kem.dir/speed_kem.c.obj\r\nFAILED: tests/CMakeFiles/speed_kem.dir/speed_kem.c.obj\r\nC:\\msys64\\mingw32\\bin\\cc.exe -DOQS_COMPILE_OPTIONS=\\\"[-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prot\r\notypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-f\r\nfunction-sections;-Wl,--gc-sections;-Wno-maybe-uninitialized;-Wbad-function-cast;-Wno-unknown-pragma\r\ns;-Wno-unused-parameter]\\\" -D__USE_MINGW_ANSI_STDIO=1 -IC:/msys64/home/liboqs/liboqs-main/_build/in\r\nclude -IC:/msys64/home/liboqs/liboqs-main/src -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic\r\n-Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdat\r\na-sections -ffunction-sections -Wl,--gc-sections -Wno-maybe-uninitialized -Wbad-function-cast -Wno-u\r\nnknown-pragmas -Wno-unused-parameter -std=gnu11 -MD -MT tests/CMakeFiles/speed_kem.dir/speed_kem.c.o\r\nbj -MF tests\\CMakeFiles\\speed_kem.dir\\speed_kem.c.obj.d -o tests/CMakeFiles/speed_kem.dir/speed_kem.\r\nc.obj -c C:/msys64/home/liboqs/liboqs-main/tests/speed_kem.c\r\nIn file included from C:/msys64/home/liboqs/liboqs-main/tests/speed_kem.c:17:\r\nC:/msys64/home/liboqs/liboqs-main/tests/ds_benchmark.h: In function '_bench_rdtsc':\r\nC:/msys64/home/liboqs/liboqs-main/tests/ds_benchmark.h:125:16: error: implicit declaration of funct\r\nion '__rdtsc' [-Werror=implicit-function-declaration]\r\n  125 |         **return __rdtsc();**\r\n      |                ^~~~~~~\r\ncc1.exe: all warnings being treated as errors\r\n[1121/1132] Building C object tests/CMakeFiles/speed_sig.dir/speed_sig.c.obj\r\nFAILED: tests/CMakeFiles/speed_sig.dir/speed_sig.c.obj\r\nC:\\msys64\\mingw32\\bin\\cc.exe -DOQS_COMPILE_OPTIONS=\\\"[-Werror;-Wall;-Wextra;-Wpedantic;-Wstrict-prot\r\notypes;-Wshadow;-Wformat=2;-Wfloat-equal;-Wwrite-strings;-O3;-fomit-frame-pointer;-fdata-sections;-f\r\nfunction-sections;-Wl,--gc-sections;-Wno-maybe-uninitialized;-Wbad-function-cast;-Wno-unknown-pragma\r\ns;-Wno-unused-parameter]\\\" -D__USE_MINGW_ANSI_STDIO=1 -IC:/msys64/home/liboqs/liboqs-main/_build/in\r\nclude -IC:/msys64/home/liboqs/liboqs-main/src -fvisibility=hidden -Werror -Wall -Wextra -Wpedantic\r\n-Wstrict-prototypes -Wshadow -Wformat=2 -Wfloat-equal -Wwrite-strings -O3 -fomit-frame-pointer -fdat\r\na-sections -ffunction-sections -Wl,--gc-sections -Wno-maybe-uninitialized -Wbad-function-cast -Wno-u\r\nnknown-pragmas -Wno-unused-parameter -std=gnu11 -MD -MT tests/CMakeFiles/speed_sig.dir/speed_sig.c.o\r\nbj -MF tests\\CMakeFiles\\speed_sig.dir\\speed_sig.c.obj.d -o tests/CMakeFiles/speed_sig.dir/speed_sig.\r\nc.obj -c C:/msys64/home/liboqs/liboqs-main/tests/speed_sig.c\r\nIn file included from C:/msys64/home/liboqs/liboqs-main/tests/speed_sig.c:17:\r\nC:/msys64/home/liboqs/liboqs-main/tests/ds_benchmark.h: In function '_bench_rdtsc':\r\nC:/msys64/home/liboqs/liboqs-main/tests/ds_benchmark.h:125:16: error: implicit declaration of funct\r\nion '__rdtsc' [-Werror=implicit-function-declaration]\r\n  125 |         **return __rdtsc();**\r\n      |                ^~~~~~~\r\ncc1.exe: all warnings being treated as errors\r\nninja: build stopped: subcommand failed.\r\n\r\nwhat i see is that the mingw32 can not find the **__rdtsc()** function.\r\ni am searching in the internet and find the library **intrin.h**  which has this function.\r\ni think this library is missing in the **ds_benchmark.h**.\r\nThank you in advance!</div>","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1371/reactions","total_count":1,"+1":0,"-1":1,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1371/timeline","performed_via_github_app":null,"state_reason":"reopened"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1611050748","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1371#issuecomment-1611050748","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1371","id":1611050748,"node_id":"IC_kwDOA-eq3c5gBq78","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-06-28T09:11:01Z","updated_at":"2023-06-28T09:11:01Z","author_association":"MEMBER","body":"Can we consider this resolved by now (on 0.8.0/current main)?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1611050748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-28T09:11:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30059333754","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1038","id":932296798,"node_id":"MDU6SXNzdWU5MzIyOTY3OTg=","number":1038,"title":"SPHINCS+ memcpy source and destination overlap - undefined behavior","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-06-29T07:12:04Z","updated_at":"2023-06-28T09:12:32Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"The SPHINCS+ implementations have cases of memcpy use where the source and destination overlap. According to the C standard and posix, memcpy behavior is undefined if memory regions overlap.\r\n\r\nDetected using valgrind on ppc64le/Ubuntu focal. Memcpy implementations vary, so it seems to be not detected with valgrind on x86_64.\r\n\r\nThe cause in `gen_chain`:\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/d9fb4e0e81ccd0a0972b38743404d982fe0a90c1/src/sig/sphincs/pqclean_sphincs-haraka-128f-robust_clean/wots.c#L37-L44\r\n\r\nUsed for example by `wots_gen_pk`, where src and dst are the same. The replicated code of all variants is affected:\r\n\r\nhttps://github.com/open-quantum-safe/liboqs/blob/d9fb4e0e81ccd0a0972b38743404d982fe0a90c1/src/sig/sphincs/pqclean_sphincs-haraka-128f-robust_clean/wots.c#L122-L123\r\n\r\nUsing memmove would be the safe alternative, or avoid memcpy if src and dst are the same.\r\n\r\nBelow is the valgrind log. It's part of a constant-time check, but the issues detected are because of overlapping memory.\r\n[ppc64le.txt](https://github.com/open-quantum-safe/liboqs/files/6731356/ppc64le.txt)","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1611052720","html_url":"https://github.com/open-quantum-safe/liboqs/issues/1038#issuecomment-1611052720","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/1038","id":1611052720,"node_id":"IC_kwDOA-eq3c5gBraw","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-06-28T09:12:31Z","updated_at":"2023-06-28T09:12:31Z","author_association":"MEMBER","body":"Is this still an issue with the new Sphincs+ code or can this be closed by now?","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/1611052720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-28T09:12:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"30072108062","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":288761656,"name":"open-quantum-safe/profiling","url":"https://api.github.com/repos/open-quantum-safe/profiling"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","repository_url":"https://api.github.com/repos/open-quantum-safe/profiling","labels_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/comments","events_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/events","html_url":"https://github.com/open-quantum-safe/profiling/issues/93","id":1694483480,"node_id":"I_kwDOETYnOM5k_8QY","number":93,"title":"Add P-521 kex and sig","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2023-05-03T17:16:24Z","updated_at":"2023-06-28T17:30:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"It would be useful to add the P-521 curve as a standalone choice for KEX and auth in TLS (currently, only P-256 and P-384 options are available). This is for performance testing in the NCCoE project, to compare with the L5 CNSA 2.0 suite (Kyber1024/Dilithium5).","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1611818545","html_url":"https://github.com/open-quantum-safe/profiling/issues/93#issuecomment-1611818545","issue_url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/93","id":1611818545,"node_id":"IC_kwDOETYnOM5gEmYx","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2023-06-28T17:30:59Z","updated_at":"2023-06-28T17:30:59Z","author_association":"NONE","body":"Following up on our conversation on today's call, it'd be great if we support the following (echoing my May 5th comment):\r\n* only combine a KEX and a sig with a matching security level\r\n* add ECDSA P-521 (ecdsasecp521r1?) at level 5\r\n* remove the RSA hybrid and classical sigs\r\n\r\nThis in in support of the NCCoE project, where we are testing the Kyber hybrid algs with classical auth, and the CNSA Kyber/Dilithium level 5 suite.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/profiling/issues/comments/1611818545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-28T17:30:59Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
