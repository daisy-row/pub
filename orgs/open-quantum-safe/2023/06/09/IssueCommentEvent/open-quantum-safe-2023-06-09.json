{"id":"29635998971","type":"IssueCommentEvent","actor":{"id":22588226,"login":"xv-pete-m","display_login":"xv-pete-m","gravatar_id":"","url":"https://api.github.com/users/xv-pete-m","avatar_url":"https://avatars.githubusercontent.com/u/22588226?"},"repo":{"id":252143304,"name":"open-quantum-safe/liboqs-rust","url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/213","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/213/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/213/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/213/events","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/213","id":1748271067,"node_id":"I_kwDODwdmyM5oNH_b","number":213,"title":"Updated liboqs-sys create on crates.io","user":{"login":"xv-pete-m","id":22588226,"node_id":"MDQ6VXNlcjIyNTg4MjI2","avatar_url":"https://avatars.githubusercontent.com/u/22588226?v=4","gravatar_id":"","url":"https://api.github.com/users/xv-pete-m","html_url":"https://github.com/xv-pete-m","followers_url":"https://api.github.com/users/xv-pete-m/followers","following_url":"https://api.github.com/users/xv-pete-m/following{/other_user}","gists_url":"https://api.github.com/users/xv-pete-m/gists{/gist_id}","starred_url":"https://api.github.com/users/xv-pete-m/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xv-pete-m/subscriptions","organizations_url":"https://api.github.com/users/xv-pete-m/orgs","repos_url":"https://api.github.com/users/xv-pete-m/repos","events_url":"https://api.github.com/users/xv-pete-m/events{/privacy}","received_events_url":"https://api.github.com/users/xv-pete-m/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-06-08T02:39:26Z","updated_at":"2023-06-09T03:07:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi guys,\r\n\r\nI've got a crate that depends on the new version of `liboqs-sys` being published. I'm not sure what the usual publish cadence is for Rust, but I'm super excited to see it üòä \r\n\r\nThanks in advance!","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/213/timeline","performed_via_github_app":null,"state_reason":"reopened"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/1583891528","html_url":"https://github.com/open-quantum-safe/liboqs-rust/issues/213#issuecomment-1583891528","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/213","id":1583891528,"node_id":"IC_kwDODwdmyM5eaERI","user":{"login":"xv-pete-m","id":22588226,"node_id":"MDQ6VXNlcjIyNTg4MjI2","avatar_url":"https://avatars.githubusercontent.com/u/22588226?v=4","gravatar_id":"","url":"https://api.github.com/users/xv-pete-m","html_url":"https://github.com/xv-pete-m","followers_url":"https://api.github.com/users/xv-pete-m/followers","following_url":"https://api.github.com/users/xv-pete-m/following{/other_user}","gists_url":"https://api.github.com/users/xv-pete-m/gists{/gist_id}","starred_url":"https://api.github.com/users/xv-pete-m/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xv-pete-m/subscriptions","organizations_url":"https://api.github.com/users/xv-pete-m/orgs","repos_url":"https://api.github.com/users/xv-pete-m/repos","events_url":"https://api.github.com/users/xv-pete-m/events{/privacy}","received_events_url":"https://api.github.com/users/xv-pete-m/received_events","type":"User","site_admin":false},"created_at":"2023-06-09T03:07:16Z","updated_at":"2023-06-09T03:07:16Z","author_association":"NONE","body":"Sorry guys, thanks for taking the time to move it to the right place üôè ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-rust/issues/comments/1583891528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-09T03:07:17Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29637494477","type":"IssueCommentEvent","actor":{"id":57787676,"login":"baentsch","display_login":"baentsch","gravatar_id":"","url":"https://api.github.com/users/baentsch","avatar_url":"https://avatars.githubusercontent.com/u/57787676?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/93","id":1486065575,"node_id":"I_kwDOE_A9l85Yk4-n","number":93,"title":"Deploy test server","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"assignees":[{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2022-12-09T05:47:16Z","updated_at":"2023-06-09T05:18:59Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Either replacing or amending test.openquantumsafe.org with an instance running oqs-provider to also test integrations and OpenSSL3. Would also allow implementing https://github.com/open-quantum-safe/openssl/issues/388#issuecomment-1342703151","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1583990403","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/93#issuecomment-1583990403","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93","id":1583990403,"node_id":"IC_kwDOE_A9l85eacaD","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"created_at":"2023-06-09T05:18:59Z","updated_at":"2023-06-09T05:18:59Z","author_association":"MEMBER","body":"@bhess: Release is tagged. Will mark final if you can close this issue after correct testing.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1583990403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-09T05:19:00Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29653056834","type":"IssueCommentEvent","actor":{"id":5923577,"login":"mouse07410","display_login":"mouse07410","gravatar_id":"","url":"https://api.github.com/users/mouse07410","avatar_url":"https://avatars.githubusercontent.com/u/5923577?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/168","id":1718872873,"node_id":"I_kwDOE_A9l85mc-sp","number":168,"title":"Bug when stopping provider on OSX","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2023-05-09T17:48:04Z","updated_at":"2023-06-09T17:19:24Z","closed_at":"2023-06-09T17:19:23Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nOn a newly-prepared platform , I'm getting a ton of errors trying to run test-suite:\r\n```text\r\n.  .  .\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256f-simple] ___________________________________\r\n[gw11] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256f-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256f-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256f-simple -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-192f-robust] ___________________________________\r\n[gw4] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-192f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-192f-robust', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-192f-robust -f\r\n\r\n__________________________________ test_sig[SPHINCS+-SHAKE256-256s-simple] ___________________________________\r\n[gw2] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHAKE256-256s-simple'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       helpers.run_subprocess( [helpers.path_to_executable('speed_sig'), sig_name, \"-f\"])\r\n\r\ntests/test_speed.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncommand = ['/Users/ur20980/src/liboqs/build/tests/speed_sig', 'SPHINCS+-SHAKE256-256s-simple', '-f']\r\nworking_dir = '.'\r\nenv = {'ANT_OPTS': '-Dhttp.proxyHost=llproxy.llan.ll.mit.edu -Dhttp.proxyPort=8080', 'AS': 'yasm -m amd64 -f macho64 -p gas -X gnu ', 'AS_INTEGRATED_ASSEMBLER': '1', 'BASH_SILENCE_DEPRECATION_WARNING': '1', ...}\r\nexpected_returncode = 0, input = None, ignore_returncode = False\r\n\r\n    def run_subprocess(command, working_dir='.', env=None, expected_returncode=0, input=None, ignore_returncode=False):\r\n        \"\"\"\r\n        Helper function to run a shell command and report success/failure\r\n        depending on the exit status of the shell command.\r\n        \"\"\"\r\n        env_ = os.environ.copy()\r\n        if env is not None:\r\n            env_.update(env)\r\n        env = env_\r\n    \r\n        # Note we need to capture stdout/stderr from the subprocess,\r\n        # then print it, which pytest will then capture and\r\n        # buffer appropriately\r\n        print(working_dir + \" > \" + \" \".join(command))\r\n    \r\n        result = subprocess.run(\r\n                command,\r\n                input=input,\r\n                stdout=subprocess.PIPE,\r\n                stderr=subprocess.STDOUT,\r\n                cwd=working_dir,\r\n                env=env,\r\n            )\r\n    \r\n        if not(ignore_returncode) and (result.returncode != expected_returncode):\r\n            print(result.stdout.decode('utf-8'))\r\n>           assert False, \"Got unexpected return code {}\".format(result.returncode)\r\nE           AssertionError: Got unexpected return code -4\r\n\r\ntests/helpers.py:42: AssertionError\r\n-------------------------------------------- Captured stdout call --------------------------------------------\r\n. > /Users/ur20980/src/liboqs/build/tests/speed_sig SPHINCS+-SHAKE256-256s-simple -f\r\n\r\n___________________________________ test_sig[SPHINCS+-SHA256-128f-robust] ____________________________________\r\n[gw9] darwin -- Python 3.11.3 /opt/local/bin/python3\r\n\r\nsig_name = 'SPHINCS+-SHA256-128f-robust'\r\n\r\n    @helpers.filtered_test\r\n    @pytest.mark.parametrize('sig_name', helpers.available_sigs_by_name())\r\n    def test_sig(sig_name):\r\n        kats = helpers.get_kats(\"sig\")\r\n        if not(helpers.is_sig_enabled_by_name(sig_name)): pytest.skip('Not enabled')\r\n>       output = helpers.run_subprocess(\r\n            [helpers.path_to_executable('kat_sig'), sig_name],\r\n        )\r\n\r\ntests/test_kat.py:29: \r\n.  .  .\r\n```\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone, build optimized version, as per README.\r\n2. Go to `build` subdirectory.\r\n3. `ninja run_tests`\r\n4. See error\r\n\r\n**Expected behavior**\r\nTests passing or being skipped, test-scripts not crashing.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOS Ventura 13.3.1 (a)\r\n - OpenSSL version: 3.2.0-dev\r\n - Compiler version used: Apple Clang \r\n - Build variables used:\r\n ```\r\nOPT=\"-DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release\"\r\nenv RUN_TESTS_PARALLEL_UPPER=FALSE cmake -GNinja .. -DOQS_USE_OPENSSL=ON ${OPT} -DCMAKE_INSTALL_PREFIX=\"${HOME}/openssl-3\"\r\n```\r\n - liboqs version: current main\r\n\r\n**Additional context**\r\nI hope you can point me at where/what in Python environment seems missing - maybe an older version of some module, or such...?\r\n","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168/timeline","performed_via_github_app":null,"state_reason":"completed"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1584909734","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/168#issuecomment-1584909734","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/168","id":1584909734,"node_id":"IC_kwDOE_A9l85ed82m","user":{"login":"mouse07410","id":5923577,"node_id":"MDQ6VXNlcjU5MjM1Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/5923577?v=4","gravatar_id":"","url":"https://api.github.com/users/mouse07410","html_url":"https://github.com/mouse07410","followers_url":"https://api.github.com/users/mouse07410/followers","following_url":"https://api.github.com/users/mouse07410/following{/other_user}","gists_url":"https://api.github.com/users/mouse07410/gists{/gist_id}","starred_url":"https://api.github.com/users/mouse07410/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse07410/subscriptions","organizations_url":"https://api.github.com/users/mouse07410/orgs","repos_url":"https://api.github.com/users/mouse07410/repos","events_url":"https://api.github.com/users/mouse07410/events{/privacy}","received_events_url":"https://api.github.com/users/mouse07410/received_events","type":"User","site_admin":false},"created_at":"2023-06-09T17:19:23Z","updated_at":"2023-06-09T17:19:23Z","author_association":"NONE","body":"As far as I can see, current master runs and passes tests on my MacOS Ventura, both Intel and M2 platforms. Using OpenSSL-3.1.1 and 3.2.0-dev.\r\n\r\nThus, let me close this for now - might re-open if hit with the same problem again. ;-)\r\nThanks! ","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1584909734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-09T17:19:24Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"29658562598","type":"IssueCommentEvent","actor":{"id":149199,"login":"bhess","display_login":"bhess","gravatar_id":"","url":"https://api.github.com/users/bhess","avatar_url":"https://avatars.githubusercontent.com/u/149199?"},"repo":{"id":334511511,"name":"open-quantum-safe/oqs-provider","url":"https://api.github.com/repos/open-quantum-safe/oqs-provider"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93","repository_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider","labels_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/comments","events_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/events","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/93","id":1486065575,"node_id":"I_kwDOE_A9l85Yk4-n","number":93,"title":"Deploy test server","user":{"login":"baentsch","id":57787676,"node_id":"MDQ6VXNlcjU3Nzg3Njc2","avatar_url":"https://avatars.githubusercontent.com/u/57787676?v=4","gravatar_id":"","url":"https://api.github.com/users/baentsch","html_url":"https://github.com/baentsch","followers_url":"https://api.github.com/users/baentsch/followers","following_url":"https://api.github.com/users/baentsch/following{/other_user}","gists_url":"https://api.github.com/users/baentsch/gists{/gist_id}","starred_url":"https://api.github.com/users/baentsch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baentsch/subscriptions","organizations_url":"https://api.github.com/users/baentsch/orgs","repos_url":"https://api.github.com/users/baentsch/repos","events_url":"https://api.github.com/users/baentsch/events{/privacy}","received_events_url":"https://api.github.com/users/baentsch/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"assignees":[{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2022-12-09T05:47:16Z","updated_at":"2023-06-09T23:37:32Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"Either replacing or amending test.openquantumsafe.org with an instance running oqs-provider to also test integrations and OpenSSL3. Would also allow implementing https://github.com/open-quantum-safe/openssl/issues/388#issuecomment-1342703151","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93/timeline","performed_via_github_app":null,"state_reason":null},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1585279893","html_url":"https://github.com/open-quantum-safe/oqs-provider/issues/93#issuecomment-1585279893","issue_url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/93","id":1585279893,"node_id":"IC_kwDOE_A9l85efXOV","user":{"login":"bhess","id":149199,"node_id":"MDQ6VXNlcjE0OTE5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/149199?v=4","gravatar_id":"","url":"https://api.github.com/users/bhess","html_url":"https://github.com/bhess","followers_url":"https://api.github.com/users/bhess/followers","following_url":"https://api.github.com/users/bhess/following{/other_user}","gists_url":"https://api.github.com/users/bhess/gists{/gist_id}","starred_url":"https://api.github.com/users/bhess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhess/subscriptions","organizations_url":"https://api.github.com/users/bhess/orgs","repos_url":"https://api.github.com/users/bhess/repos","events_url":"https://api.github.com/users/bhess/events{/privacy}","received_events_url":"https://api.github.com/users/bhess/received_events","type":"User","site_admin":false},"created_at":"2023-06-09T23:37:32Z","updated_at":"2023-06-09T23:37:32Z","author_association":"MEMBER","body":"https://test.openquantumsafe.org is updated with liboqs 0.8.0 and oqs-provider 0.5.0, which includes generating the config using `openssl list`.\r\n\r\nAfter a run with https://github.com/open-quantum-safe/oqs-demos/blob/bhe-nginx-serverupd/nginx/fulltest-provider/testrun.sh and the oqsprovider/curl image, all tests except the new `x25519_kyber768` and `p256_kyber768` hybrids pass. It looks like curl in the image doesn't support them yet. I also built a local version of the curl docker image, there everything works fine.","reactions":{"url":"https://api.github.com/repos/open-quantum-safe/oqs-provider/issues/comments/1585279893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}},"public":true,"created_at":"2023-06-09T23:37:32Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
