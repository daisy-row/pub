{"id":"7942714034","type":"IssueCommentEvent","actor":{"id":1757585,"login":"manvari","display_login":"manvari","gravatar_id":"","url":"https://api.github.com/users/manvari","avatar_url":"https://avatars.githubusercontent.com/u/1757585?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/297","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/297/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/297/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/297/events","html_url":"https://github.com/open-quantum-safe/liboqs/issues/297","id":335894883,"node_id":"MDU6SXNzdWUzMzU4OTQ4ODM=","number":297,"title":"Non-fixed key sizes for signature schemes","user":{"login":"manvari","id":1757585,"node_id":"MDQ6VXNlcjE3NTc1ODU=","avatar_url":"https://avatars2.githubusercontent.com/u/1757585?v=4","gravatar_id":"","url":"https://api.github.com/users/manvari","html_url":"https://github.com/manvari","followers_url":"https://api.github.com/users/manvari/followers","following_url":"https://api.github.com/users/manvari/following{/other_user}","gists_url":"https://api.github.com/users/manvari/gists{/gist_id}","starred_url":"https://api.github.com/users/manvari/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manvari/subscriptions","organizations_url":"https://api.github.com/users/manvari/orgs","repos_url":"https://api.github.com/users/manvari/repos","events_url":"https://api.github.com/users/manvari/events{/privacy}","received_events_url":"https://api.github.com/users/manvari/received_events","type":"User","site_admin":false},"labels":[{"id":857992368,"node_id":"MDU6TGFiZWw4NTc5OTIzNjg=","url":"https://api.github.com/repos/open-quantum-safe/liboqs/labels/nist-branch","name":"nist-branch","color":"ea855d","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/3","html_url":"https://github.com/open-quantum-safe/liboqs/milestone/3","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/milestones/3/labels","id":3372405,"node_id":"MDk6TWlsZXN0b25lMzM3MjQwNQ==","number":3,"title":"2018-07 nist-branch snapshot","description":"","creator":{"login":"dstebila","id":8843219,"node_id":"MDQ6VXNlcjg4NDMyMTk=","avatar_url":"https://avatars0.githubusercontent.com/u/8843219?v=4","gravatar_id":"","url":"https://api.github.com/users/dstebila","html_url":"https://github.com/dstebila","followers_url":"https://api.github.com/users/dstebila/followers","following_url":"https://api.github.com/users/dstebila/following{/other_user}","gists_url":"https://api.github.com/users/dstebila/gists{/gist_id}","starred_url":"https://api.github.com/users/dstebila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dstebila/subscriptions","organizations_url":"https://api.github.com/users/dstebila/orgs","repos_url":"https://api.github.com/users/dstebila/repos","events_url":"https://api.github.com/users/dstebila/events{/privacy}","received_events_url":"https://api.github.com/users/dstebila/received_events","type":"User","site_admin":false},"open_issues":4,"closed_issues":0,"state":"open","created_at":"2018-05-24T12:31:04Z","updated_at":"2018-07-09T18:09:44Z","due_on":"2018-07-20T07:00:00Z","closed_at":null},"comments":3,"created_at":"2018-06-26T16:16:12Z","updated_at":"2018-07-10T09:53:57Z","closed_at":null,"author_association":"NONE","body":"In `sig/sig.h`, the `OQS_SIG` structure expects fixed sizes for public and private keys (`priv_key_len` and `pub_key_len`). These sizes are to be set when an instance of the signature algorithm is created via a call to `OQS_new`, and are then used to allocate sufficient memory for keys before calling the algorithm's keygen method. However, some QS signature schemes have varying key sizes (e.g. NIST candidate [Falcon](https://falcon-sign.info/), which features optional compression for private keys).\r\n\r\nConsidering this, it could be better to let the algorithm's keygen method modify the key size fields appropriately. This would also require adding a `max_key_len` field to `OQS_SIG` so as to enable the caller to allocate memory before the keygen method is called."},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/403767347","html_url":"https://github.com/open-quantum-safe/liboqs/issues/297#issuecomment-403767347","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/297","id":403767347,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzc2NzM0Nw==","user":{"login":"manvari","id":1757585,"node_id":"MDQ6VXNlcjE3NTc1ODU=","avatar_url":"https://avatars2.githubusercontent.com/u/1757585?v=4","gravatar_id":"","url":"https://api.github.com/users/manvari","html_url":"https://github.com/manvari","followers_url":"https://api.github.com/users/manvari/followers","following_url":"https://api.github.com/users/manvari/following{/other_user}","gists_url":"https://api.github.com/users/manvari/gists{/gist_id}","starred_url":"https://api.github.com/users/manvari/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manvari/subscriptions","organizations_url":"https://api.github.com/users/manvari/orgs","repos_url":"https://api.github.com/users/manvari/repos","events_url":"https://api.github.com/users/manvari/events{/privacy}","received_events_url":"https://api.github.com/users/manvari/received_events","type":"User","site_admin":false},"created_at":"2018-07-10T09:53:57Z","updated_at":"2018-07-10T09:53:57Z","author_association":"NONE","body":"@dstebila I have mixed feelings about this one!\r\n\r\nThe signature API changes introduced by @christianpaquin in #298 help OQS stick to the NIST API. This definitely is the way to go, considering all NIST submissions conform to this API. This makes integrating these submissions into OQS very easy; only a thin wrapper, with no superfluous parameters added, is required.\r\n\r\nOn the other hand, by fully adhering to the NIST API, we get to miss out on some of the optimizations that submission authors may have made. In the case of this issue, that would be forgoing shorter public/private keys even though the underlying algorithm may offer them. I have two possible solutions in mind:\r\n\r\n1. Add a `void *options` argument to the algorithm's `keypair` function in `OQS_SIG`, where the data to pass is defined in the algorithm's OQS integration (`src/sig/sig_{algname}.h`, presumably).\\[\\*\\] Then, a first call to the `keypair` with `public_key` and `secret_key` set to `NULL` along with a valid `options` argument would modify `options` to indicate actual key sizes. A second call with the modified `options` argument and non-`NULL` values for `public_key` and `secret_key` will then generate the keypair.<br>\r\n  This method is transparent w.r.t. the NIST API, since the caller will already have allocated sufficient memory before the second call to `keypair`. Then, for this second call, all the `keypair` wrapper has to do is calling the submission's `crypto_keypair` implementation.<br>\r\n  Thinking about it, we could also add similar `options` for both `sign` and `sign_open` wrappers if the algorithm uses extra data for signature generation/verification (compared to the NIST API).<br>\r\n    \\[\\*\\] For example, a structure named `oqs_{algname}_keypair_extradata` containing fields `int compress_privkey` and `int compress_pubkey` if the algorithm supports compressing both private and public keys.\r\n\r\n2. Reintroduce a `void *ctx` field in `OQS_SIG`: this would also allow instantiating an algorithm with extra data, but we'd have to work around the NIST API to make sure we can still respect the prototypes of its signature-related functions.\r\n\r\n**Note**: because all submissions had to respect the NIST API, I suppose some of them either had to work around it cleverly, or disable options/optimizations, or both. An interesting example of this is given in the [Falcon specs](https://falcon-sign.info/falcon.pdf), ยง3.11.6. Hopefully, interfacing the NIST API with libOQS' can help rectify things."}},"public":true,"created_at":"2018-07-10T09:53:57Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"7944622431","type":"IssueCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":65514205,"name":"open-quantum-safe/liboqs","url":"https://api.github.com/repos/open-quantum-safe/liboqs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/298","repository_url":"https://api.github.com/repos/open-quantum-safe/liboqs","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/298/labels{/name}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/298/comments","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/298/events","html_url":"https://github.com/open-quantum-safe/liboqs/pull/298","id":338024645,"node_id":"MDExOlB1bGxSZXF1ZXN0MTk5MDYwNDUz","number":298,"title":"Adding sig to nist-branch","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2018-07-03T19:20:38Z","updated_at":"2018-07-10T15:32:12Z","closed_at":null,"author_association":"COLLABORATOR","pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/pulls/298","html_url":"https://github.com/open-quantum-safe/liboqs/pull/298","diff_url":"https://github.com/open-quantum-safe/liboqs/pull/298.diff","patch_url":"https://github.com/open-quantum-safe/liboqs/pull/298.patch"},"body":"Added sig API with Picnic as first scheme"},"comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/comments/403866088","html_url":"https://github.com/open-quantum-safe/liboqs/pull/298#issuecomment-403866088","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs/issues/298","id":403866088,"node_id":"MDEyOklzc3VlQ29tbWVudDQwMzg2NjA4OA==","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"created_at":"2018-07-10T15:32:12Z","updated_at":"2018-07-10T15:32:12Z","author_association":"COLLABORATOR","body":"@dstebila, I disabled picnic and made qtesla the new default, in order to pass merge this PR. Picnic is still available and works on Linux. I'll fix the macOS build in a different PR, in order not to block further progress on sig API."}},"public":true,"created_at":"2018-07-10T15:32:13Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
