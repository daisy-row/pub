{"id":"8804689362","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244007578","pull_request_review_id":187910673,"id":244007578,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAwNzU3OA==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *","path":"oqswrap.py","position":8,"original_position":8,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Ok","created_at":"2018-12-26T15:09:01Z","updated_at":"2018-12-26T15:09:01Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244007578","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244007578"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244007578"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243667538},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T15:09:01Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T15:09:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"8804722263","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244009103","pull_request_review_id":187912282,"id":244009103,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAwOTEwMw==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *\n+# platform.system to learn the OS\n+from platform import system","path":"oqswrap.py","position":10,"original_position":10,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Ok","created_at":"2018-12-26T15:20:08Z","updated_at":"2018-12-26T15:20:08Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244009103","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244009103"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244009103"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243668155},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T15:20:08Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T15:20:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"8804831389","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244013990","pull_request_review_id":187918314,"id":244013990,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAxMzk5MA==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *\n+# platform.system to learn the OS\n+from platform import system\n+\n+# expected return value from native OQS functions\n+_OQS_SUCCESS = 0\n+\n+# load native OQS library\n+if system() == 'Windows':\n+        liboqs = windll.LoadLibrary('oqs')\n+else:\n+    try:\n+        # try to load a local library first\n+        liboqs = cdll.LoadLibrary('./liboqs.so')\n+    except OSError:\n+        # no local liboqs, try to load the system one\n+        liboqs = cdll.LoadLibrary('liboqs.so')\n+\n+class MechanismNotSupportedError(Exception):\n+    \"\"\"Exception raised when an algorithm is not supported by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported by OQS'\n+    \n+class MechanismNotEnabledError(MechanismNotSupportedError):\n+    \"\"\"Exception raised when an algorithm is not supported but not enabled by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported but not enabled by OQS'\n+\n+############################################\n+# KEM\n+############################################\n+\n+# The native KEM structure returned by OQS\n+class OQS_KEM(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"ind_cca\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_ciphertext\", c_size_t),\n+        (\"length_shared_secret\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"encaps_cb\", c_void_p),\n+        (\"decaps_cb\", c_void_p)\n+    ]\n+liboqs.OQS_KEM_new.restype = POINTER(OQS_KEM)\n+\n+liboqs.OQS_KEM_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled KEMs\n+_max_number_KEMs = liboqs.OQS_KEM_alg_count()\n+_supported_KEMs = []","path":"oqswrap.py","position":73,"original_position":73,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Ok","created_at":"2018-12-26T15:56:02Z","updated_at":"2018-12-26T15:56:02Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244013990","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244013990"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244013990"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243670528},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T15:56:02Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T15:56:02Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"8804846691","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244014658","pull_request_review_id":187919136,"id":244014658,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAxNDY1OA==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *\n+# platform.system to learn the OS\n+from platform import system\n+\n+# expected return value from native OQS functions\n+_OQS_SUCCESS = 0\n+\n+# load native OQS library\n+if system() == 'Windows':\n+        liboqs = windll.LoadLibrary('oqs')\n+else:\n+    try:\n+        # try to load a local library first\n+        liboqs = cdll.LoadLibrary('./liboqs.so')\n+    except OSError:\n+        # no local liboqs, try to load the system one\n+        liboqs = cdll.LoadLibrary('liboqs.so')\n+\n+class MechanismNotSupportedError(Exception):\n+    \"\"\"Exception raised when an algorithm is not supported by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported by OQS'\n+    \n+class MechanismNotEnabledError(MechanismNotSupportedError):\n+    \"\"\"Exception raised when an algorithm is not supported but not enabled by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported but not enabled by OQS'\n+\n+############################################\n+# KEM\n+############################################\n+\n+# The native KEM structure returned by OQS\n+class OQS_KEM(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"ind_cca\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_ciphertext\", c_size_t),\n+        (\"length_shared_secret\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"encaps_cb\", c_void_p),\n+        (\"decaps_cb\", c_void_p)\n+    ]\n+liboqs.OQS_KEM_new.restype = POINTER(OQS_KEM)\n+\n+liboqs.OQS_KEM_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled KEMs\n+_max_number_KEMs = liboqs.OQS_KEM_alg_count()\n+_supported_KEMs = []\n+_enabled_KEMs = []\n+for i in range(0, _max_number_KEMs):\n+    algid =  liboqs.OQS_KEM_alg_identifier(i)\n+    algid_string = algid.decode()\n+    _supported_KEMs.append(algid_string)\n+    # check if alg is enabled\n+    is_supported = True\n+    try:\n+        kem = liboqs.OQS_KEM_new( create_string_buffer(algid) )\n+        kem.contents # triggers ValueError if init failed # TODO: must be a better way\n+        liboqs.OQS_KEM_free(kem)\n+    except ValueError:\n+        is_supported = False\n+    if (is_supported):\n+        _enabled_KEMs.append(algid_string)\n+    \n+def get_enabled_KEM_mechanisms():\n+    \"\"\"Returns the list of enabled KEM mechanisms.\"\"\"\n+    return _enabled_KEMs\n+\n+def print_enabled_KEM_mechanisms():\n+    \"\"\"Prints the list of enabled KEM mechanisms.\"\"\"\n+    print('Enabled KEM mechanisms:', ', '.join(_enabled_KEMs))\n+\n+class encap_data:\n+    \"\"\"Encodes data returned by KeyEncapsulation.encap_secret.\n+    \n+    Attributes:\n+        ciphertext -- the ciphertext to send\n+        shared_secret -- the generated shared secret\n+    \"\"\"\n+\n+    def __init__(self, ciphertext, shared_secret):\n+        self.ciphertext = ciphertext\n+        self.shared_secret = shared_secret\n+\n+class KeyEncapsulation:\n+    \"\"\"An OQS key encapsulation object.\n+    \n+    Attributes:\n+        alg_name -- a KEM mechanism algorithm name. Enabled KEM mechanisms can be obtained with get_enabled_KEM_mechanisms\n+        secret_key -- the optional secret key, if previously generated by generate_keypair\n+    \"\"\"\n+\n+    def __init__(self, alg_name, secret_key = None):\n+        self.alg_name = alg_name\n+        if alg_name not in _enabled_KEMs:\n+            # perhaps it's a supported but not enabled alg\n+            if alg_name in _supported_KEMs:\n+                raise MechanismNotEnabledError(alg_name)\n+            else:\n+                raise MechanismNotSupportedError(alg_name)\n+        self._kem = liboqs.OQS_KEM_new( create_string_buffer(alg_name.encode()) )\n+        self.details = {\n+            'name' : self._kem.contents.method_name.decode(),\n+            'version' : self._kem.contents.alg_version.decode(),\n+            'claimed_nist_level' : int(self._kem.contents.claimed_nist_level),\n+            'is_ind_cca' : bool(self._kem.contents.ind_cca),\n+            'length_public_key' : int(self._kem.contents.length_public_key),\n+            'length_secret_key' : int(self._kem.contents.length_secret_key),\n+            'length_ciphertext' : int(self._kem.contents.length_ciphertext),\n+            'length_shared_secret' : int(self._kem.contents.length_shared_secret) }\n+        if secret_key != None:\n+            self.secret_key = create_string_buffer(secret_key, self._kem.contents.length_secret_key)\n+\n+    def generate_keypair(self):\n+        \"\"\"Generates a new keypair and returns the public key.\n+\n+        If needed, the secret key can be obtained by calling export_secret_key.\n+        \"\"\"\n+        public_key = create_string_buffer(self._kem.contents.length_public_key)\n+        self.secret_key = create_string_buffer(self._kem.contents.length_secret_key)\n+        _rv = liboqs.OQS_KEM_keypair(self._kem, byref(public_key), byref(self.secret_key))\n+        if _rv == _OQS_SUCCESS:","path":"oqswrap.py","position":147,"original_position":147,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Ok (done here and elsewhere)","created_at":"2018-12-26T16:00:56Z","updated_at":"2018-12-26T16:00:56Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244014658","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244014658"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244014658"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243673158},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T16:00:56Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T16:00:56Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"8804847542","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244014683","pull_request_review_id":187919164,"id":244014683,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAxNDY4Mw==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *\n+# platform.system to learn the OS\n+from platform import system\n+\n+# expected return value from native OQS functions\n+_OQS_SUCCESS = 0\n+\n+# load native OQS library\n+if system() == 'Windows':\n+        liboqs = windll.LoadLibrary('oqs')\n+else:\n+    try:\n+        # try to load a local library first\n+        liboqs = cdll.LoadLibrary('./liboqs.so')\n+    except OSError:\n+        # no local liboqs, try to load the system one\n+        liboqs = cdll.LoadLibrary('liboqs.so')\n+\n+class MechanismNotSupportedError(Exception):\n+    \"\"\"Exception raised when an algorithm is not supported by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported by OQS'\n+    \n+class MechanismNotEnabledError(MechanismNotSupportedError):\n+    \"\"\"Exception raised when an algorithm is not supported but not enabled by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported but not enabled by OQS'\n+\n+############################################\n+# KEM\n+############################################\n+\n+# The native KEM structure returned by OQS\n+class OQS_KEM(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"ind_cca\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_ciphertext\", c_size_t),\n+        (\"length_shared_secret\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"encaps_cb\", c_void_p),\n+        (\"decaps_cb\", c_void_p)\n+    ]\n+liboqs.OQS_KEM_new.restype = POINTER(OQS_KEM)\n+\n+liboqs.OQS_KEM_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled KEMs\n+_max_number_KEMs = liboqs.OQS_KEM_alg_count()\n+_supported_KEMs = []\n+_enabled_KEMs = []\n+for i in range(0, _max_number_KEMs):\n+    algid =  liboqs.OQS_KEM_alg_identifier(i)\n+    algid_string = algid.decode()\n+    _supported_KEMs.append(algid_string)\n+    # check if alg is enabled\n+    is_supported = True\n+    try:\n+        kem = liboqs.OQS_KEM_new( create_string_buffer(algid) )\n+        kem.contents # triggers ValueError if init failed # TODO: must be a better way\n+        liboqs.OQS_KEM_free(kem)\n+    except ValueError:\n+        is_supported = False\n+    if (is_supported):\n+        _enabled_KEMs.append(algid_string)\n+    \n+def get_enabled_KEM_mechanisms():\n+    \"\"\"Returns the list of enabled KEM mechanisms.\"\"\"\n+    return _enabled_KEMs\n+\n+def print_enabled_KEM_mechanisms():\n+    \"\"\"Prints the list of enabled KEM mechanisms.\"\"\"\n+    print('Enabled KEM mechanisms:', ', '.join(_enabled_KEMs))\n+\n+class encap_data:\n+    \"\"\"Encodes data returned by KeyEncapsulation.encap_secret.\n+    \n+    Attributes:\n+        ciphertext -- the ciphertext to send\n+        shared_secret -- the generated shared secret\n+    \"\"\"\n+\n+    def __init__(self, ciphertext, shared_secret):\n+        self.ciphertext = ciphertext\n+        self.shared_secret = shared_secret\n+\n+class KeyEncapsulation:\n+    \"\"\"An OQS key encapsulation object.\n+    \n+    Attributes:\n+        alg_name -- a KEM mechanism algorithm name. Enabled KEM mechanisms can be obtained with get_enabled_KEM_mechanisms\n+        secret_key -- the optional secret key, if previously generated by generate_keypair\n+    \"\"\"\n+\n+    def __init__(self, alg_name, secret_key = None):\n+        self.alg_name = alg_name\n+        if alg_name not in _enabled_KEMs:\n+            # perhaps it's a supported but not enabled alg\n+            if alg_name in _supported_KEMs:\n+                raise MechanismNotEnabledError(alg_name)\n+            else:\n+                raise MechanismNotSupportedError(alg_name)\n+        self._kem = liboqs.OQS_KEM_new( create_string_buffer(alg_name.encode()) )\n+        self.details = {\n+            'name' : self._kem.contents.method_name.decode(),\n+            'version' : self._kem.contents.alg_version.decode(),\n+            'claimed_nist_level' : int(self._kem.contents.claimed_nist_level),\n+            'is_ind_cca' : bool(self._kem.contents.ind_cca),\n+            'length_public_key' : int(self._kem.contents.length_public_key),\n+            'length_secret_key' : int(self._kem.contents.length_secret_key),\n+            'length_ciphertext' : int(self._kem.contents.length_ciphertext),\n+            'length_shared_secret' : int(self._kem.contents.length_shared_secret) }\n+        if secret_key != None:\n+            self.secret_key = create_string_buffer(secret_key, self._kem.contents.length_secret_key)\n+\n+    def generate_keypair(self):\n+        \"\"\"Generates a new keypair and returns the public key.\n+\n+        If needed, the secret key can be obtained by calling export_secret_key.\n+        \"\"\"\n+        public_key = create_string_buffer(self._kem.contents.length_public_key)\n+        self.secret_key = create_string_buffer(self._kem.contents.length_secret_key)\n+        _rv = liboqs.OQS_KEM_keypair(self._kem, byref(public_key), byref(self.secret_key))\n+        if _rv == _OQS_SUCCESS:\n+            return bytes(public_key)\n+        else:\n+            return 0\n+\n+    def export_secret_key(self):\n+        \"\"\"Exports the secret key.\"\"\"\n+        return bytes(self.secret_key)\n+\n+    def encap_secret(self, public_key):\n+        \"\"\"Generates and encapsulates a secret using the provided public key.\n+\n+        Attribute:\n+            public_key -- the peer's public key.\n+        \"\"\"\n+        my_public_key = create_string_buffer(public_key, self._kem.contents.length_public_key)\n+        ciphertext = create_string_buffer(self._kem.contents.length_ciphertext)\n+        shared_secret = create_string_buffer(self._kem.contents.length_shared_secret)\n+        _rv = liboqs.OQS_KEM_encaps(self._kem, byref(ciphertext), byref(shared_secret), my_public_key)\n+        if _rv == _OQS_SUCCESS:\n+            return encap_data(bytes(ciphertext), bytes(shared_secret))\n+        else:\n+            return 0\n+\n+    def decap_secret(self, ciphertext):\n+        \"\"\"Decapsulates the ciphertext and returns the secret.\n+\n+        Attribute:\n+            ciphertext -- the ciphertext received from the peer.\n+        \"\"\"\n+        my_ciphertext = create_string_buffer(ciphertext, self._kem.contents.length_ciphertext)\n+        shared_secret = create_string_buffer(self._kem.contents.length_shared_secret)\n+        _rv = liboqs.OQS_KEM_decaps(self._kem, byref(shared_secret), my_ciphertext, self.secret_key);\n+        if _rv == _OQS_SUCCESS:\n+            return bytes(shared_secret)\n+        else:\n+            return 0\n+\n+    def free(self):\n+        \"\"\"Releases the native resources.\"\"\"\n+        liboqs.OQS_KEM_free(self._kem)\n+\n+    def __repr__(self):\n+        return \"Key encapsulation mechanism: \" + self._kem.contents.method_name.decode()\n+\n+############################################\n+# Signatures\n+############################################\n+\n+# The native signature structure returned by OQS\n+class OQS_SIG(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"euf_cma\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_signature\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"sign_cb\", c_void_p),\n+        (\"verify_cb\", c_void_p)\n+    ]\n+\n+liboqs.OQS_SIG_new.restype = POINTER(OQS_SIG)\n+\n+liboqs.OQS_SIG_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled signature mechanisms\n+_max_number_sigs = liboqs.OQS_SIG_alg_count()\n+_supported_sigs = []\n+_enabled_sigs = []\n+for i in range(0, _max_number_sigs):","path":"oqswrap.py","position":219,"original_position":219,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Yep","created_at":"2018-12-26T16:01:11Z","updated_at":"2018-12-26T16:01:11Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244014683","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244014683"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244014683"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243673511},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T16:01:11Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T16:01:11Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"8804851145","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244014834","pull_request_review_id":187919353,"id":244014834,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAxNDgzNA==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *\n+# platform.system to learn the OS\n+from platform import system\n+\n+# expected return value from native OQS functions\n+_OQS_SUCCESS = 0\n+\n+# load native OQS library\n+if system() == 'Windows':\n+        liboqs = windll.LoadLibrary('oqs')\n+else:\n+    try:\n+        # try to load a local library first\n+        liboqs = cdll.LoadLibrary('./liboqs.so')\n+    except OSError:\n+        # no local liboqs, try to load the system one\n+        liboqs = cdll.LoadLibrary('liboqs.so')\n+\n+class MechanismNotSupportedError(Exception):\n+    \"\"\"Exception raised when an algorithm is not supported by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported by OQS'\n+    \n+class MechanismNotEnabledError(MechanismNotSupportedError):\n+    \"\"\"Exception raised when an algorithm is not supported but not enabled by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported but not enabled by OQS'\n+\n+############################################\n+# KEM\n+############################################\n+\n+# The native KEM structure returned by OQS\n+class OQS_KEM(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"ind_cca\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_ciphertext\", c_size_t),\n+        (\"length_shared_secret\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"encaps_cb\", c_void_p),\n+        (\"decaps_cb\", c_void_p)\n+    ]\n+liboqs.OQS_KEM_new.restype = POINTER(OQS_KEM)\n+\n+liboqs.OQS_KEM_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled KEMs\n+_max_number_KEMs = liboqs.OQS_KEM_alg_count()\n+_supported_KEMs = []\n+_enabled_KEMs = []\n+for i in range(0, _max_number_KEMs):\n+    algid =  liboqs.OQS_KEM_alg_identifier(i)\n+    algid_string = algid.decode()\n+    _supported_KEMs.append(algid_string)\n+    # check if alg is enabled\n+    is_supported = True\n+    try:\n+        kem = liboqs.OQS_KEM_new( create_string_buffer(algid) )\n+        kem.contents # triggers ValueError if init failed # TODO: must be a better way\n+        liboqs.OQS_KEM_free(kem)\n+    except ValueError:\n+        is_supported = False\n+    if (is_supported):\n+        _enabled_KEMs.append(algid_string)\n+    \n+def get_enabled_KEM_mechanisms():\n+    \"\"\"Returns the list of enabled KEM mechanisms.\"\"\"\n+    return _enabled_KEMs\n+\n+def print_enabled_KEM_mechanisms():\n+    \"\"\"Prints the list of enabled KEM mechanisms.\"\"\"\n+    print('Enabled KEM mechanisms:', ', '.join(_enabled_KEMs))\n+\n+class encap_data:\n+    \"\"\"Encodes data returned by KeyEncapsulation.encap_secret.\n+    \n+    Attributes:\n+        ciphertext -- the ciphertext to send\n+        shared_secret -- the generated shared secret\n+    \"\"\"\n+\n+    def __init__(self, ciphertext, shared_secret):\n+        self.ciphertext = ciphertext\n+        self.shared_secret = shared_secret\n+\n+class KeyEncapsulation:\n+    \"\"\"An OQS key encapsulation object.\n+    \n+    Attributes:\n+        alg_name -- a KEM mechanism algorithm name. Enabled KEM mechanisms can be obtained with get_enabled_KEM_mechanisms\n+        secret_key -- the optional secret key, if previously generated by generate_keypair\n+    \"\"\"\n+\n+    def __init__(self, alg_name, secret_key = None):\n+        self.alg_name = alg_name\n+        if alg_name not in _enabled_KEMs:\n+            # perhaps it's a supported but not enabled alg\n+            if alg_name in _supported_KEMs:\n+                raise MechanismNotEnabledError(alg_name)\n+            else:\n+                raise MechanismNotSupportedError(alg_name)\n+        self._kem = liboqs.OQS_KEM_new( create_string_buffer(alg_name.encode()) )\n+        self.details = {\n+            'name' : self._kem.contents.method_name.decode(),\n+            'version' : self._kem.contents.alg_version.decode(),\n+            'claimed_nist_level' : int(self._kem.contents.claimed_nist_level),\n+            'is_ind_cca' : bool(self._kem.contents.ind_cca),\n+            'length_public_key' : int(self._kem.contents.length_public_key),\n+            'length_secret_key' : int(self._kem.contents.length_secret_key),\n+            'length_ciphertext' : int(self._kem.contents.length_ciphertext),\n+            'length_shared_secret' : int(self._kem.contents.length_shared_secret) }\n+        if secret_key != None:\n+            self.secret_key = create_string_buffer(secret_key, self._kem.contents.length_secret_key)\n+\n+    def generate_keypair(self):\n+        \"\"\"Generates a new keypair and returns the public key.\n+\n+        If needed, the secret key can be obtained by calling export_secret_key.\n+        \"\"\"\n+        public_key = create_string_buffer(self._kem.contents.length_public_key)\n+        self.secret_key = create_string_buffer(self._kem.contents.length_secret_key)\n+        _rv = liboqs.OQS_KEM_keypair(self._kem, byref(public_key), byref(self.secret_key))\n+        if _rv == _OQS_SUCCESS:\n+            return bytes(public_key)\n+        else:\n+            return 0\n+\n+    def export_secret_key(self):\n+        \"\"\"Exports the secret key.\"\"\"\n+        return bytes(self.secret_key)\n+\n+    def encap_secret(self, public_key):\n+        \"\"\"Generates and encapsulates a secret using the provided public key.\n+\n+        Attribute:\n+            public_key -- the peer's public key.\n+        \"\"\"\n+        my_public_key = create_string_buffer(public_key, self._kem.contents.length_public_key)\n+        ciphertext = create_string_buffer(self._kem.contents.length_ciphertext)\n+        shared_secret = create_string_buffer(self._kem.contents.length_shared_secret)\n+        _rv = liboqs.OQS_KEM_encaps(self._kem, byref(ciphertext), byref(shared_secret), my_public_key)\n+        if _rv == _OQS_SUCCESS:\n+            return encap_data(bytes(ciphertext), bytes(shared_secret))\n+        else:\n+            return 0\n+\n+    def decap_secret(self, ciphertext):\n+        \"\"\"Decapsulates the ciphertext and returns the secret.\n+\n+        Attribute:\n+            ciphertext -- the ciphertext received from the peer.\n+        \"\"\"\n+        my_ciphertext = create_string_buffer(ciphertext, self._kem.contents.length_ciphertext)\n+        shared_secret = create_string_buffer(self._kem.contents.length_shared_secret)\n+        _rv = liboqs.OQS_KEM_decaps(self._kem, byref(shared_secret), my_ciphertext, self.secret_key);\n+        if _rv == _OQS_SUCCESS:\n+            return bytes(shared_secret)\n+        else:\n+            return 0\n+\n+    def free(self):\n+        \"\"\"Releases the native resources.\"\"\"\n+        liboqs.OQS_KEM_free(self._kem)\n+\n+    def __repr__(self):\n+        return \"Key encapsulation mechanism: \" + self._kem.contents.method_name.decode()\n+\n+############################################\n+# Signatures\n+############################################\n+\n+# The native signature structure returned by OQS\n+class OQS_SIG(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"euf_cma\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_signature\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"sign_cb\", c_void_p),\n+        (\"verify_cb\", c_void_p)\n+    ]\n+\n+liboqs.OQS_SIG_new.restype = POINTER(OQS_SIG)\n+\n+liboqs.OQS_SIG_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled signature mechanisms\n+_max_number_sigs = liboqs.OQS_SIG_alg_count()\n+_supported_sigs = []\n+_enabled_sigs = []\n+for i in range(0, _max_number_sigs):\n+    algid =  liboqs.OQS_SIG_alg_identifier(i)\n+    algid_string = algid.decode()\n+    _supported_sigs.append(algid_string)\n+    # check if alg is enabled\n+    is_supported = True\n+    try:\n+        sig = liboqs.OQS_SIG_new( create_string_buffer(algid) )\n+        sig.contents # triggers ValueError if init failed # TODO: must be a better way\n+        liboqs.OQS_SIG_free(sig)\n+    except ValueError:\n+        is_supported = False\n+    if (is_supported):\n+        _enabled_sigs.append(algid_string)\n+\n+def get_enabled_sig_mechanisms():\n+    \"\"\"Returns the list of enabled signature mechanisms.\"\"\"\n+    return _enabled_KEMs","path":"oqswrap.py","position":236,"original_position":236,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Good catch; we need those unit tests now :)","created_at":"2018-12-26T16:02:26Z","updated_at":"2018-12-26T16:02:27Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244014834","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244014834"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244014834"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243673649},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T16:02:27Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T16:02:26Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"8804854530","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244014988","pull_request_review_id":187919531,"id":244014988,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAxNDk4OA==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *\n+# platform.system to learn the OS\n+from platform import system\n+\n+# expected return value from native OQS functions\n+_OQS_SUCCESS = 0\n+\n+# load native OQS library\n+if system() == 'Windows':\n+        liboqs = windll.LoadLibrary('oqs')\n+else:\n+    try:\n+        # try to load a local library first\n+        liboqs = cdll.LoadLibrary('./liboqs.so')\n+    except OSError:\n+        # no local liboqs, try to load the system one\n+        liboqs = cdll.LoadLibrary('liboqs.so')\n+\n+class MechanismNotSupportedError(Exception):\n+    \"\"\"Exception raised when an algorithm is not supported by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported by OQS'\n+    \n+class MechanismNotEnabledError(MechanismNotSupportedError):\n+    \"\"\"Exception raised when an algorithm is not supported but not enabled by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported but not enabled by OQS'\n+\n+############################################\n+# KEM\n+############################################\n+\n+# The native KEM structure returned by OQS\n+class OQS_KEM(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"ind_cca\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_ciphertext\", c_size_t),\n+        (\"length_shared_secret\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"encaps_cb\", c_void_p),\n+        (\"decaps_cb\", c_void_p)\n+    ]\n+liboqs.OQS_KEM_new.restype = POINTER(OQS_KEM)\n+\n+liboqs.OQS_KEM_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled KEMs\n+_max_number_KEMs = liboqs.OQS_KEM_alg_count()\n+_supported_KEMs = []\n+_enabled_KEMs = []\n+for i in range(0, _max_number_KEMs):\n+    algid =  liboqs.OQS_KEM_alg_identifier(i)\n+    algid_string = algid.decode()\n+    _supported_KEMs.append(algid_string)\n+    # check if alg is enabled\n+    is_supported = True\n+    try:\n+        kem = liboqs.OQS_KEM_new( create_string_buffer(algid) )\n+        kem.contents # triggers ValueError if init failed # TODO: must be a better way\n+        liboqs.OQS_KEM_free(kem)\n+    except ValueError:\n+        is_supported = False\n+    if (is_supported):\n+        _enabled_KEMs.append(algid_string)\n+    \n+def get_enabled_KEM_mechanisms():\n+    \"\"\"Returns the list of enabled KEM mechanisms.\"\"\"\n+    return _enabled_KEMs\n+\n+def print_enabled_KEM_mechanisms():\n+    \"\"\"Prints the list of enabled KEM mechanisms.\"\"\"\n+    print('Enabled KEM mechanisms:', ', '.join(_enabled_KEMs))\n+\n+class encap_data:\n+    \"\"\"Encodes data returned by KeyEncapsulation.encap_secret.\n+    \n+    Attributes:\n+        ciphertext -- the ciphertext to send\n+        shared_secret -- the generated shared secret\n+    \"\"\"\n+\n+    def __init__(self, ciphertext, shared_secret):\n+        self.ciphertext = ciphertext\n+        self.shared_secret = shared_secret\n+\n+class KeyEncapsulation:\n+    \"\"\"An OQS key encapsulation object.\n+    \n+    Attributes:\n+        alg_name -- a KEM mechanism algorithm name. Enabled KEM mechanisms can be obtained with get_enabled_KEM_mechanisms\n+        secret_key -- the optional secret key, if previously generated by generate_keypair\n+    \"\"\"\n+\n+    def __init__(self, alg_name, secret_key = None):\n+        self.alg_name = alg_name\n+        if alg_name not in _enabled_KEMs:\n+            # perhaps it's a supported but not enabled alg\n+            if alg_name in _supported_KEMs:\n+                raise MechanismNotEnabledError(alg_name)\n+            else:\n+                raise MechanismNotSupportedError(alg_name)\n+        self._kem = liboqs.OQS_KEM_new( create_string_buffer(alg_name.encode()) )\n+        self.details = {\n+            'name' : self._kem.contents.method_name.decode(),\n+            'version' : self._kem.contents.alg_version.decode(),\n+            'claimed_nist_level' : int(self._kem.contents.claimed_nist_level),\n+            'is_ind_cca' : bool(self._kem.contents.ind_cca),\n+            'length_public_key' : int(self._kem.contents.length_public_key),\n+            'length_secret_key' : int(self._kem.contents.length_secret_key),\n+            'length_ciphertext' : int(self._kem.contents.length_ciphertext),\n+            'length_shared_secret' : int(self._kem.contents.length_shared_secret) }\n+        if secret_key != None:\n+            self.secret_key = create_string_buffer(secret_key, self._kem.contents.length_secret_key)\n+\n+    def generate_keypair(self):\n+        \"\"\"Generates a new keypair and returns the public key.\n+\n+        If needed, the secret key can be obtained by calling export_secret_key.\n+        \"\"\"\n+        public_key = create_string_buffer(self._kem.contents.length_public_key)\n+        self.secret_key = create_string_buffer(self._kem.contents.length_secret_key)\n+        _rv = liboqs.OQS_KEM_keypair(self._kem, byref(public_key), byref(self.secret_key))\n+        if _rv == _OQS_SUCCESS:\n+            return bytes(public_key)\n+        else:\n+            return 0\n+\n+    def export_secret_key(self):\n+        \"\"\"Exports the secret key.\"\"\"\n+        return bytes(self.secret_key)\n+\n+    def encap_secret(self, public_key):\n+        \"\"\"Generates and encapsulates a secret using the provided public key.\n+\n+        Attribute:\n+            public_key -- the peer's public key.\n+        \"\"\"\n+        my_public_key = create_string_buffer(public_key, self._kem.contents.length_public_key)\n+        ciphertext = create_string_buffer(self._kem.contents.length_ciphertext)\n+        shared_secret = create_string_buffer(self._kem.contents.length_shared_secret)\n+        _rv = liboqs.OQS_KEM_encaps(self._kem, byref(ciphertext), byref(shared_secret), my_public_key)\n+        if _rv == _OQS_SUCCESS:\n+            return encap_data(bytes(ciphertext), bytes(shared_secret))\n+        else:\n+            return 0\n+\n+    def decap_secret(self, ciphertext):\n+        \"\"\"Decapsulates the ciphertext and returns the secret.\n+\n+        Attribute:\n+            ciphertext -- the ciphertext received from the peer.\n+        \"\"\"\n+        my_ciphertext = create_string_buffer(ciphertext, self._kem.contents.length_ciphertext)\n+        shared_secret = create_string_buffer(self._kem.contents.length_shared_secret)\n+        _rv = liboqs.OQS_KEM_decaps(self._kem, byref(shared_secret), my_ciphertext, self.secret_key);","path":"oqswrap.py","position":179,"original_position":179,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Old habits die hard :)","created_at":"2018-12-26T16:03:35Z","updated_at":"2018-12-26T16:03:35Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244014988","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244014988"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244014988"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243676901},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T16:03:35Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T16:03:35Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"8804873885","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244015681","pull_request_review_id":187920353,"id":244015681,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAxNTY4MQ==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *\n+# platform.system to learn the OS\n+from platform import system\n+\n+# expected return value from native OQS functions\n+_OQS_SUCCESS = 0\n+\n+# load native OQS library\n+if system() == 'Windows':\n+        liboqs = windll.LoadLibrary('oqs')\n+else:\n+    try:\n+        # try to load a local library first\n+        liboqs = cdll.LoadLibrary('./liboqs.so')\n+    except OSError:\n+        # no local liboqs, try to load the system one\n+        liboqs = cdll.LoadLibrary('liboqs.so')\n+\n+class MechanismNotSupportedError(Exception):\n+    \"\"\"Exception raised when an algorithm is not supported by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported by OQS'\n+    \n+class MechanismNotEnabledError(MechanismNotSupportedError):\n+    \"\"\"Exception raised when an algorithm is not supported but not enabled by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported but not enabled by OQS'\n+\n+############################################\n+# KEM\n+############################################\n+\n+# The native KEM structure returned by OQS\n+class OQS_KEM(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"ind_cca\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_ciphertext\", c_size_t),\n+        (\"length_shared_secret\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"encaps_cb\", c_void_p),\n+        (\"decaps_cb\", c_void_p)\n+    ]\n+liboqs.OQS_KEM_new.restype = POINTER(OQS_KEM)\n+\n+liboqs.OQS_KEM_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled KEMs\n+_max_number_KEMs = liboqs.OQS_KEM_alg_count()\n+_supported_KEMs = []\n+_enabled_KEMs = []\n+for i in range(0, _max_number_KEMs):\n+    algid =  liboqs.OQS_KEM_alg_identifier(i)\n+    algid_string = algid.decode()\n+    _supported_KEMs.append(algid_string)\n+    # check if alg is enabled\n+    is_supported = True\n+    try:\n+        kem = liboqs.OQS_KEM_new( create_string_buffer(algid) )\n+        kem.contents # triggers ValueError if init failed # TODO: must be a better way\n+        liboqs.OQS_KEM_free(kem)\n+    except ValueError:\n+        is_supported = False\n+    if (is_supported):\n+        _enabled_KEMs.append(algid_string)\n+    \n+def get_enabled_KEM_mechanisms():\n+    \"\"\"Returns the list of enabled KEM mechanisms.\"\"\"\n+    return _enabled_KEMs\n+\n+def print_enabled_KEM_mechanisms():\n+    \"\"\"Prints the list of enabled KEM mechanisms.\"\"\"\n+    print('Enabled KEM mechanisms:', ', '.join(_enabled_KEMs))\n+\n+class encap_data:","path":"oqswrap.py","position":98,"original_position":98,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"I wasn't sure how to best return multiple values; I've seen various options proposed. I've considered a NamedTuple but wanted to avoid importing more packages. I'm happy to switch if it's a better Python style","created_at":"2018-12-26T16:09:08Z","updated_at":"2018-12-26T16:09:08Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244015681","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244015681"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244015681"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243671372},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T16:09:08Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T16:09:08Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"8804875859","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244015735","pull_request_review_id":187920424,"id":244015735,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAxNTczNQ==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *\n+# platform.system to learn the OS\n+from platform import system\n+\n+# expected return value from native OQS functions\n+_OQS_SUCCESS = 0\n+\n+# load native OQS library\n+if system() == 'Windows':\n+        liboqs = windll.LoadLibrary('oqs')\n+else:\n+    try:\n+        # try to load a local library first\n+        liboqs = cdll.LoadLibrary('./liboqs.so')\n+    except OSError:\n+        # no local liboqs, try to load the system one\n+        liboqs = cdll.LoadLibrary('liboqs.so')\n+\n+class MechanismNotSupportedError(Exception):\n+    \"\"\"Exception raised when an algorithm is not supported by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported by OQS'\n+    \n+class MechanismNotEnabledError(MechanismNotSupportedError):\n+    \"\"\"Exception raised when an algorithm is not supported but not enabled by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported but not enabled by OQS'\n+\n+############################################\n+# KEM\n+############################################\n+\n+# The native KEM structure returned by OQS\n+class OQS_KEM(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"ind_cca\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_ciphertext\", c_size_t),\n+        (\"length_shared_secret\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"encaps_cb\", c_void_p),\n+        (\"decaps_cb\", c_void_p)\n+    ]\n+liboqs.OQS_KEM_new.restype = POINTER(OQS_KEM)\n+\n+liboqs.OQS_KEM_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled KEMs\n+_max_number_KEMs = liboqs.OQS_KEM_alg_count()\n+_supported_KEMs = []\n+_enabled_KEMs = []\n+for i in range(0, _max_number_KEMs):\n+    algid =  liboqs.OQS_KEM_alg_identifier(i)\n+    algid_string = algid.decode()\n+    _supported_KEMs.append(algid_string)\n+    # check if alg is enabled\n+    is_supported = True\n+    try:\n+        kem = liboqs.OQS_KEM_new( create_string_buffer(algid) )\n+        kem.contents # triggers ValueError if init failed # TODO: must be a better way\n+        liboqs.OQS_KEM_free(kem)\n+    except ValueError:\n+        is_supported = False\n+    if (is_supported):\n+        _enabled_KEMs.append(algid_string)\n+    \n+def get_enabled_KEM_mechanisms():\n+    \"\"\"Returns the list of enabled KEM mechanisms.\"\"\"\n+    return _enabled_KEMs\n+\n+def print_enabled_KEM_mechanisms():\n+    \"\"\"Prints the list of enabled KEM mechanisms.\"\"\"\n+    print('Enabled KEM mechanisms:', ', '.join(_enabled_KEMs))\n+\n+class encap_data:\n+    \"\"\"Encodes data returned by KeyEncapsulation.encap_secret.\n+    \n+    Attributes:\n+        ciphertext -- the ciphertext to send\n+        shared_secret -- the generated shared secret\n+    \"\"\"\n+\n+    def __init__(self, ciphertext, shared_secret):\n+        self.ciphertext = ciphertext\n+        self.shared_secret = shared_secret\n+\n+class KeyEncapsulation:\n+    \"\"\"An OQS key encapsulation object.\n+    \n+    Attributes:\n+        alg_name -- a KEM mechanism algorithm name. Enabled KEM mechanisms can be obtained with get_enabled_KEM_mechanisms\n+        secret_key -- the optional secret key, if previously generated by generate_keypair\n+    \"\"\"\n+\n+    def __init__(self, alg_name, secret_key = None):\n+        self.alg_name = alg_name\n+        if alg_name not in _enabled_KEMs:\n+            # perhaps it's a supported but not enabled alg\n+            if alg_name in _supported_KEMs:\n+                raise MechanismNotEnabledError(alg_name)\n+            else:\n+                raise MechanismNotSupportedError(alg_name)\n+        self._kem = liboqs.OQS_KEM_new( create_string_buffer(alg_name.encode()) )\n+        self.details = {\n+            'name' : self._kem.contents.method_name.decode(),\n+            'version' : self._kem.contents.alg_version.decode(),\n+            'claimed_nist_level' : int(self._kem.contents.claimed_nist_level),\n+            'is_ind_cca' : bool(self._kem.contents.ind_cca),\n+            'length_public_key' : int(self._kem.contents.length_public_key),\n+            'length_secret_key' : int(self._kem.contents.length_secret_key),\n+            'length_ciphertext' : int(self._kem.contents.length_ciphertext),\n+            'length_shared_secret' : int(self._kem.contents.length_shared_secret) }\n+        if secret_key != None:","path":"oqswrap.py","position":136,"original_position":136,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Ok","created_at":"2018-12-26T16:09:43Z","updated_at":"2018-12-26T16:09:43Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244015735","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244015735"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244015735"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243672231},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T16:09:43Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T16:09:43Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
{"id":"8804876980","type":"PullRequestReviewCommentEvent","actor":{"id":16247285,"login":"christianpaquin","display_login":"christianpaquin","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","avatar_url":"https://avatars.githubusercontent.com/u/16247285?"},"repo":{"id":162497174,"name":"open-quantum-safe/liboqs-python","url":"https://api.github.com/repos/open-quantum-safe/liboqs-python"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244015768","pull_request_review_id":187920466,"id":244015768,"node_id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDAxNTc2OA==","diff_hunk":"@@ -0,0 +1,327 @@\n+# Open Quantum Safe (OQS) Python Module\n+# TODOs:\n+# * should we implement stricter arg checking, or simply document the functions\n+#   (see https://www.python.org/dev/peps/pep-0484/, https://www.python.org/dev/peps/pep-3107/)\n+# * add unit test\n+\n+# import ctypes to call native\n+from ctypes import *\n+# platform.system to learn the OS\n+from platform import system\n+\n+# expected return value from native OQS functions\n+_OQS_SUCCESS = 0\n+\n+# load native OQS library\n+if system() == 'Windows':\n+        liboqs = windll.LoadLibrary('oqs')\n+else:\n+    try:\n+        # try to load a local library first\n+        liboqs = cdll.LoadLibrary('./liboqs.so')\n+    except OSError:\n+        # no local liboqs, try to load the system one\n+        liboqs = cdll.LoadLibrary('liboqs.so')\n+\n+class MechanismNotSupportedError(Exception):\n+    \"\"\"Exception raised when an algorithm is not supported by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported by OQS'\n+    \n+class MechanismNotEnabledError(MechanismNotSupportedError):\n+    \"\"\"Exception raised when an algorithm is not supported but not enabled by OQS.\n+\n+    Attribute:\n+        alg_name -- the requested algorithm name\n+    \"\"\"\n+\n+    def __init__(self, alg_name):\n+        self.alg_name = alg_name\n+        self.message = alg_name + ' is not supported but not enabled by OQS'\n+\n+############################################\n+# KEM\n+############################################\n+\n+# The native KEM structure returned by OQS\n+class OQS_KEM(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"ind_cca\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_ciphertext\", c_size_t),\n+        (\"length_shared_secret\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"encaps_cb\", c_void_p),\n+        (\"decaps_cb\", c_void_p)\n+    ]\n+liboqs.OQS_KEM_new.restype = POINTER(OQS_KEM)\n+\n+liboqs.OQS_KEM_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled KEMs\n+_max_number_KEMs = liboqs.OQS_KEM_alg_count()\n+_supported_KEMs = []\n+_enabled_KEMs = []\n+for i in range(0, _max_number_KEMs):\n+    algid =  liboqs.OQS_KEM_alg_identifier(i)\n+    algid_string = algid.decode()\n+    _supported_KEMs.append(algid_string)\n+    # check if alg is enabled\n+    is_supported = True\n+    try:\n+        kem = liboqs.OQS_KEM_new( create_string_buffer(algid) )\n+        kem.contents # triggers ValueError if init failed # TODO: must be a better way\n+        liboqs.OQS_KEM_free(kem)\n+    except ValueError:\n+        is_supported = False\n+    if (is_supported):\n+        _enabled_KEMs.append(algid_string)\n+    \n+def get_enabled_KEM_mechanisms():\n+    \"\"\"Returns the list of enabled KEM mechanisms.\"\"\"\n+    return _enabled_KEMs\n+\n+def print_enabled_KEM_mechanisms():\n+    \"\"\"Prints the list of enabled KEM mechanisms.\"\"\"\n+    print('Enabled KEM mechanisms:', ', '.join(_enabled_KEMs))\n+\n+class encap_data:\n+    \"\"\"Encodes data returned by KeyEncapsulation.encap_secret.\n+    \n+    Attributes:\n+        ciphertext -- the ciphertext to send\n+        shared_secret -- the generated shared secret\n+    \"\"\"\n+\n+    def __init__(self, ciphertext, shared_secret):\n+        self.ciphertext = ciphertext\n+        self.shared_secret = shared_secret\n+\n+class KeyEncapsulation:\n+    \"\"\"An OQS key encapsulation object.\n+    \n+    Attributes:\n+        alg_name -- a KEM mechanism algorithm name. Enabled KEM mechanisms can be obtained with get_enabled_KEM_mechanisms\n+        secret_key -- the optional secret key, if previously generated by generate_keypair\n+    \"\"\"\n+\n+    def __init__(self, alg_name, secret_key = None):\n+        self.alg_name = alg_name\n+        if alg_name not in _enabled_KEMs:\n+            # perhaps it's a supported but not enabled alg\n+            if alg_name in _supported_KEMs:\n+                raise MechanismNotEnabledError(alg_name)\n+            else:\n+                raise MechanismNotSupportedError(alg_name)\n+        self._kem = liboqs.OQS_KEM_new( create_string_buffer(alg_name.encode()) )\n+        self.details = {\n+            'name' : self._kem.contents.method_name.decode(),\n+            'version' : self._kem.contents.alg_version.decode(),\n+            'claimed_nist_level' : int(self._kem.contents.claimed_nist_level),\n+            'is_ind_cca' : bool(self._kem.contents.ind_cca),\n+            'length_public_key' : int(self._kem.contents.length_public_key),\n+            'length_secret_key' : int(self._kem.contents.length_secret_key),\n+            'length_ciphertext' : int(self._kem.contents.length_ciphertext),\n+            'length_shared_secret' : int(self._kem.contents.length_shared_secret) }\n+        if secret_key != None:\n+            self.secret_key = create_string_buffer(secret_key, self._kem.contents.length_secret_key)\n+\n+    def generate_keypair(self):\n+        \"\"\"Generates a new keypair and returns the public key.\n+\n+        If needed, the secret key can be obtained by calling export_secret_key.\n+        \"\"\"\n+        public_key = create_string_buffer(self._kem.contents.length_public_key)\n+        self.secret_key = create_string_buffer(self._kem.contents.length_secret_key)\n+        _rv = liboqs.OQS_KEM_keypair(self._kem, byref(public_key), byref(self.secret_key))\n+        if _rv == _OQS_SUCCESS:\n+            return bytes(public_key)\n+        else:\n+            return 0\n+\n+    def export_secret_key(self):\n+        \"\"\"Exports the secret key.\"\"\"\n+        return bytes(self.secret_key)\n+\n+    def encap_secret(self, public_key):\n+        \"\"\"Generates and encapsulates a secret using the provided public key.\n+\n+        Attribute:\n+            public_key -- the peer's public key.\n+        \"\"\"\n+        my_public_key = create_string_buffer(public_key, self._kem.contents.length_public_key)\n+        ciphertext = create_string_buffer(self._kem.contents.length_ciphertext)\n+        shared_secret = create_string_buffer(self._kem.contents.length_shared_secret)\n+        _rv = liboqs.OQS_KEM_encaps(self._kem, byref(ciphertext), byref(shared_secret), my_public_key)\n+        if _rv == _OQS_SUCCESS:\n+            return encap_data(bytes(ciphertext), bytes(shared_secret))\n+        else:\n+            return 0\n+\n+    def decap_secret(self, ciphertext):\n+        \"\"\"Decapsulates the ciphertext and returns the secret.\n+\n+        Attribute:\n+            ciphertext -- the ciphertext received from the peer.\n+        \"\"\"\n+        my_ciphertext = create_string_buffer(ciphertext, self._kem.contents.length_ciphertext)\n+        shared_secret = create_string_buffer(self._kem.contents.length_shared_secret)\n+        _rv = liboqs.OQS_KEM_decaps(self._kem, byref(shared_secret), my_ciphertext, self.secret_key);\n+        if _rv == _OQS_SUCCESS:\n+            return bytes(shared_secret)\n+        else:\n+            return 0\n+\n+    def free(self):\n+        \"\"\"Releases the native resources.\"\"\"\n+        liboqs.OQS_KEM_free(self._kem)\n+\n+    def __repr__(self):\n+        return \"Key encapsulation mechanism: \" + self._kem.contents.method_name.decode()\n+\n+############################################\n+# Signatures\n+############################################\n+\n+# The native signature structure returned by OQS\n+class OQS_SIG(Structure):\n+    _fields_ = [\n+        (\"method_name\", c_char_p),\n+        (\"alg_version\", c_char_p),\n+        (\"claimed_nist_level\", c_ubyte),\n+        (\"euf_cma\", c_ubyte),\n+        (\"length_public_key\", c_size_t),\n+        (\"length_secret_key\", c_size_t),\n+        (\"length_signature\", c_size_t),\n+        (\"keypair_cb\", c_void_p),\n+        (\"sign_cb\", c_void_p),\n+        (\"verify_cb\", c_void_p)\n+    ]\n+\n+liboqs.OQS_SIG_new.restype = POINTER(OQS_SIG)\n+\n+liboqs.OQS_SIG_alg_identifier.restype = c_char_p\n+\n+# populate the list of enabled signature mechanisms\n+_max_number_sigs = liboqs.OQS_SIG_alg_count()\n+_supported_sigs = []\n+_enabled_sigs = []\n+for i in range(0, _max_number_sigs):\n+    algid =  liboqs.OQS_SIG_alg_identifier(i)\n+    algid_string = algid.decode()\n+    _supported_sigs.append(algid_string)\n+    # check if alg is enabled\n+    is_supported = True\n+    try:\n+        sig = liboqs.OQS_SIG_new( create_string_buffer(algid) )\n+        sig.contents # triggers ValueError if init failed # TODO: must be a better way\n+        liboqs.OQS_SIG_free(sig)\n+    except ValueError:\n+        is_supported = False\n+    if (is_supported):\n+        _enabled_sigs.append(algid_string)\n+\n+def get_enabled_sig_mechanisms():\n+    \"\"\"Returns the list of enabled signature mechanisms.\"\"\"\n+    return _enabled_KEMs\n+\n+def print_enabled_sig_mechanisms():\n+    \"\"\"Prints the list of enabled signature mechanisms.\"\"\"\n+    print('Enabled signature mechanisms:', ', '.join(_enabled_sigs))\n+    \n+class Signature:\n+    \"\"\"An OQS signature object.\n+\n+    Attributes:\n+        alg_name -- a signature mechanism algorithm name. Enabled signature mechanisms can be obtained with get_enabled_KEM_mechanisms\n+        secret_key -- the optional secret key, if previously generated by generate_keypair\n+    \"\"\"\n+\n+    def __init__(self, alg_name, secret_key = None):\n+        if alg_name not in _enabled_sigs:\n+            # perhaps it's a supported but not enabled alg\n+            if alg_name in _supported_sigs:\n+                raise MechanismNotEnabledError(alg_name)\n+            else:\n+                raise MechanismNotSupportedError(alg_name)\n+\n+        self._sig = liboqs.OQS_SIG_new( create_string_buffer(alg_name.encode()) )\n+        self.details = {\n+            'name' : self._sig.contents.method_name.decode(),\n+            'version' : self._sig.contents.alg_version.decode(),\n+            'claimed_nist_level' : int(self._sig.contents.claimed_nist_level),\n+            'is_euf_cma' : bool(self._sig.contents.euf_cma),\n+            'length_public_key' : int(self._sig.contents.length_public_key),\n+            'length_secret_key' : int(self._sig.contents.length_secret_key),\n+            'length_signature' : int(self._sig.contents.length_signature) }\n+        if secret_key != None:","path":"oqswrap.py","position":267,"original_position":267,"commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","original_commit_id":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Ok","created_at":"2018-12-26T16:10:01Z","updated_at":"2018-12-26T16:10:01Z","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244015768","pull_request_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","author_association":"NONE","_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments/244015768"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1#discussion_r244015768"},"pull_request":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"}},"in_reply_to_id":243674867},"pull_request":{"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1","id":240239439,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQwMjM5NDM5","html_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1","diff_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.diff","patch_url":"https://github.com/open-quantum-safe/liboqs-python/pull/1.patch","issue_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1","number":1,"state":"open","locked":false,"title":"Initial commit of Python wrapper.","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"body":"Contains my proposed Python wrapper. @truth-quark, I'd appreciate your feedback.","created_at":"2018-12-20T17:01:31Z","updated_at":"2018-12-26T16:10:01Z","closed_at":null,"merged_at":null,"merge_commit_sha":"ec8047dc55069f39a1a1e46d911cae1ac11b68de","assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits","review_comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments","review_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4","head":{"label":"christianpaquin:cp-initial-commit","ref":"cp-initial-commit","sha":"36360ce573b9329a4a58946fa641b36ce42f65d4","user":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"repo":{"id":162606349,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI2MDYzNDk=","name":"liboqs-python","full_name":"christianpaquin/liboqs-python","private":false,"owner":{"login":"christianpaquin","id":16247285,"node_id":"MDQ6VXNlcjE2MjQ3Mjg1","avatar_url":"https://avatars0.githubusercontent.com/u/16247285?v=4","gravatar_id":"","url":"https://api.github.com/users/christianpaquin","html_url":"https://github.com/christianpaquin","followers_url":"https://api.github.com/users/christianpaquin/followers","following_url":"https://api.github.com/users/christianpaquin/following{/other_user}","gists_url":"https://api.github.com/users/christianpaquin/gists{/gist_id}","starred_url":"https://api.github.com/users/christianpaquin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christianpaquin/subscriptions","organizations_url":"https://api.github.com/users/christianpaquin/orgs","repos_url":"https://api.github.com/users/christianpaquin/repos","events_url":"https://api.github.com/users/christianpaquin/events{/privacy}","received_events_url":"https://api.github.com/users/christianpaquin/received_events","type":"User","site_admin":false},"html_url":"https://github.com/christianpaquin/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":true,"url":"https://api.github.com/repos/christianpaquin/liboqs-python","forks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/forks","keys_url":"https://api.github.com/repos/christianpaquin/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/christianpaquin/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/christianpaquin/liboqs-python/teams","hooks_url":"https://api.github.com/repos/christianpaquin/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/christianpaquin/liboqs-python/events","assignees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/christianpaquin/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/tags","blobs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/christianpaquin/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/christianpaquin/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/christianpaquin/liboqs-python/subscription","commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/christianpaquin/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/christianpaquin/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/christianpaquin/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/christianpaquin/liboqs-python/merges","archive_url":"https://api.github.com/repos/christianpaquin/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/christianpaquin/liboqs-python/downloads","issues_url":"https://api.github.com/repos/christianpaquin/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/christianpaquin/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/christianpaquin/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/christianpaquin/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/christianpaquin/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/christianpaquin/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/christianpaquin/liboqs-python/deployments","created_at":"2018-12-20T16:44:39Z","updated_at":"2018-12-20T16:44:41Z","pushed_at":"2018-12-20T17:00:12Z","git_url":"git://github.com/christianpaquin/liboqs-python.git","ssh_url":"git@github.com:christianpaquin/liboqs-python.git","clone_url":"https://github.com/christianpaquin/liboqs-python.git","svn_url":"https://github.com/christianpaquin/liboqs-python","homepage":null,"size":5,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"open-quantum-safe:master","ref":"master","sha":"fe06838c978a6424cfc05bd1734ee49560ae77dd","user":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"repo":{"id":162497174,"node_id":"MDEwOlJlcG9zaXRvcnkxNjI0OTcxNzQ=","name":"liboqs-python","full_name":"open-quantum-safe/liboqs-python","private":false,"owner":{"login":"open-quantum-safe","id":20689385,"node_id":"MDEyOk9yZ2FuaXphdGlvbjIwNjg5Mzg1","avatar_url":"https://avatars3.githubusercontent.com/u/20689385?v=4","gravatar_id":"","url":"https://api.github.com/users/open-quantum-safe","html_url":"https://github.com/open-quantum-safe","followers_url":"https://api.github.com/users/open-quantum-safe/followers","following_url":"https://api.github.com/users/open-quantum-safe/following{/other_user}","gists_url":"https://api.github.com/users/open-quantum-safe/gists{/gist_id}","starred_url":"https://api.github.com/users/open-quantum-safe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/open-quantum-safe/subscriptions","organizations_url":"https://api.github.com/users/open-quantum-safe/orgs","repos_url":"https://api.github.com/users/open-quantum-safe/repos","events_url":"https://api.github.com/users/open-quantum-safe/events{/privacy}","received_events_url":"https://api.github.com/users/open-quantum-safe/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/open-quantum-safe/liboqs-python","description":"[work in progress] Python 3 bindings for liboqs","fork":false,"url":"https://api.github.com/repos/open-quantum-safe/liboqs-python","forks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/forks","keys_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/keys{/key_id}","collaborators_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/teams","hooks_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/hooks","issue_events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/events{/number}","events_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/events","assignees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/assignees{/user}","branches_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/branches{/branch}","tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/tags","blobs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/refs{/sha}","trees_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/trees{/sha}","statuses_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/{sha}","languages_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/languages","stargazers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/stargazers","contributors_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contributors","subscribers_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscribers","subscription_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/subscription","commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/commits{/sha}","git_commits_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/git/commits{/sha}","comments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/comments{/number}","issue_comment_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/comments{/number}","contents_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/contents/{+path}","compare_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/compare/{base}...{head}","merges_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/merges","archive_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/downloads","issues_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues{/number}","pulls_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls{/number}","milestones_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/milestones{/number}","notifications_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/labels{/name}","releases_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/releases{/id}","deployments_url":"https://api.github.com/repos/open-quantum-safe/liboqs-python/deployments","created_at":"2018-12-19T22:23:51Z","updated_at":"2018-12-19T22:27:40Z","pushed_at":"2018-12-20T17:01:32Z","git_url":"git://github.com/open-quantum-safe/liboqs-python.git","ssh_url":"git@github.com:open-quantum-safe/liboqs-python.git","clone_url":"https://github.com/open-quantum-safe/liboqs-python.git","svn_url":"https://github.com/open-quantum-safe/liboqs-python","homepage":null,"size":1,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":1,"mirror_url":null,"archived":false,"open_issues_count":1,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"forks":1,"open_issues":1,"watchers":0,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1"},"html":{"href":"https://github.com/open-quantum-safe/liboqs-python/pull/1"},"issue":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1"},"comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/issues/1/comments"},"review_comments":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/comments"},"review_comment":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/pulls/1/commits"},"statuses":{"href":"https://api.github.com/repos/open-quantum-safe/liboqs-python/statuses/36360ce573b9329a4a58946fa641b36ce42f65d4"}},"author_association":"NONE"}},"public":true,"created_at":"2018-12-26T16:10:01Z","org":{"id":20689385,"login":"open-quantum-safe","gravatar_id":"","url":"https://api.github.com/orgs/open-quantum-safe","avatar_url":"https://avatars.githubusercontent.com/u/20689385?"}}
